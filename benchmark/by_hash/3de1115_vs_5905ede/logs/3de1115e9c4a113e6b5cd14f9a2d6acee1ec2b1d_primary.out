cset: moving following pidspec: 6166
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.310708042 seconds)
loading group "string"... done (took 0.7844073 seconds)
loading group "linalg"... done (took 8.463053663 seconds)
loading group "parallel"... done (took 0.15733387 seconds)
loading group "find"... done (took 2.698459036 seconds)
loading group "tuple"... done (took 2.07399314 seconds)
loading group "dates"... done (took 1.340932596 seconds)
loading group "micro"... done (took 0.205478986 seconds)
loading group "io"... done (took 1.11615215 seconds)
loading group "scalar"... done (took 41.374562479 seconds)
loading group "sparse"... done (took 12.85397164 seconds)
loading group "broadcast"... done (took 1.053318631 seconds)
loading group "union"... done (took 16.423579064 seconds)
loading group "simd"... done (took 5.396930718 seconds)
loading group "random"... done (took 10.090594003 seconds)
loading group "problem"... done (took 1.884810685 seconds)
loading group "array"... done (took 29.024347377 seconds)
loading group "misc"... done (took 2.065528968 seconds)
loading group "sort"... done (took 3.774559779 seconds)
loading group "collection"... done (took 20.499615329 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519607488 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130819969 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144078375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128223736 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.159593312 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127645569 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132973127 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091342154 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.044454898 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157767096 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121470727 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445984485 seconds)
done (took 5.463255549 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.56232327 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092480593 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083606327 seconds)
  done (took 1.287608604 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.089976396 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.078175222 seconds)
    (3/3) benchmarking "different"...
    done (took 0.079699555 seconds)
  done (took 1.341462975 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.071325343 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132921601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072539439 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073610943 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072699654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073111474 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072764735 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072734061 seconds)
  done (took 1.666662175 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077629136 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072590917 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072072988 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07393977 seconds)
  done (took 1.391884511 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.070372207 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.069239019 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.070187533 seconds)
    (4/4) benchmarking "different"...
    done (took 0.070776629 seconds)
  done (took 1.375608072 seconds)
done (took 8.802313524 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810172716 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219537312 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197695427 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.430195564 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.144497478 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190216925 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.718017188 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.410040113 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210478879 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102582399 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121764133 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.361328552 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132248353 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.713823242 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086143776 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103957366 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.154980514 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.561778766 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079388893 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091423 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104319799 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139791609 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.094155643 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083176893 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.159613048 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075559344 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155370923 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09168201 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.073738283 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.229144952 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.182379426 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.733234165 seconds)
  done (took 11.094542711 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107249238 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.107922671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074838008 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13207427 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105967914 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076910114 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082060723 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073681289 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097281192 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.137315988 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0994288 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.116291166 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072677448 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.075842761 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090107876 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205888857 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087949735 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088769964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074894967 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084736611 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115057643 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085704414 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087122597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087360808 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136477545 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.177260626 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10464609 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105106176 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074353756 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089087381 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121565934 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13627038 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073240258 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072385458 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133619004 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101742648 seconds)
  done (took 4.827932267 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.128039089 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159282081 seconds)
    (2/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097262044 seconds)
    (3/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148919799 seconds)
    (4/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070939851 seconds)
    (5/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.119842854 seconds)
    (6/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.072588373 seconds)
    (7/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09034021 seconds)
    (8/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246892528 seconds)
    (9/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.400852092 seconds)
    (10/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097654756 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.64288381 seconds)
    (12/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.127251243 seconds)
    (13/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124610094 seconds)
    (14/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111985628 seconds)
    (15/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077201655 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075546961 seconds)
    (17/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074463151 seconds)
    (18/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.578078325 seconds)
    (19/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107293782 seconds)
    (20/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125076165 seconds)
    (21/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091132443 seconds)
    (22/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078182332 seconds)
    (23/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077271457 seconds)
    (24/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.071309061 seconds)
    (25/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078460365 seconds)
    (26/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06971745 seconds)
    (27/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075212896 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094413756 seconds)
    (29/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082494255 seconds)
    (30/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103066479 seconds)
    (31/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.692855824 seconds)
    (32/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.137141023 seconds)
    (33/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.094110848 seconds)
    (34/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074596563 seconds)
    (35/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977620058 seconds)
    (36/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.175732016 seconds)
    (37/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074880816 seconds)
    (38/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113622865 seconds)
    (39/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175662461 seconds)
    (40/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102505908 seconds)
    (41/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15097879 seconds)
    (42/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074144896 seconds)
    (43/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070086577 seconds)
    (44/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.309160699 seconds)
    (45/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072518944 seconds)
    (46/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078900028 seconds)
    (47/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.583471316 seconds)
    (48/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074162113 seconds)
    (49/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09247427 seconds)
    (50/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117218239 seconds)
    (51/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130168042 seconds)
    (52/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07217989 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07157283 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180816753 seconds)
    (55/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074777608 seconds)
    (56/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070905469 seconds)
    (57/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090953925 seconds)
    (58/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.31971731 seconds)
    (59/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160747595 seconds)
    (60/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073503818 seconds)
    (61/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.311431054 seconds)
    (62/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101580756 seconds)
    (63/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078289881 seconds)
    (64/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071554508 seconds)
    (65/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.221453917 seconds)
    (66/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125842125 seconds)
    (67/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074601868 seconds)
    (68/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074131922 seconds)
    (69/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075939073 seconds)
    (70/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074924441 seconds)
    (71/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.733837459 seconds)
    (72/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072628875 seconds)
    (73/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.308668769 seconds)
    (74/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073065602 seconds)
    (75/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081764659 seconds)
    (76/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076865415 seconds)
    (77/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078270976 seconds)
    (78/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085599008 seconds)
    (79/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086565941 seconds)
    (80/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070704718 seconds)
    (81/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099853738 seconds)
    (82/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074085574 seconds)
    (83/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080752466 seconds)
    (84/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073763562 seconds)
    (85/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072292433 seconds)
    (86/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073183037 seconds)
    (87/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.06989328 seconds)
    (88/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100036124 seconds)
    (89/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404794107 seconds)
    (90/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073077626 seconds)
    (91/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078267155 seconds)
    (92/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070809614 seconds)
    (93/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101279363 seconds)
    (94/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109532756 seconds)
    (95/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07349782 seconds)
    (96/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072949609 seconds)
    (97/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.218754531 seconds)
    (98/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081830829 seconds)
    (99/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07462894 seconds)
    (100/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076504334 seconds)
    (101/118) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12846226 seconds)
    (102/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078461032 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120960737 seconds)
    (104/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075484286 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086087925 seconds)
    (106/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10275289 seconds)
    (107/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074968754 seconds)
    (108/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109196312 seconds)
    (109/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088468623 seconds)
    (110/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077997344 seconds)
    (111/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.482897515 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070724082 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079190682 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072518644 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074308044 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073626379 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.165298349 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085498534 seconds)
  done (took 25.188267882 seconds)
done (took 43.334602361 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.229966653 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090604251 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091088015 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09114909 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090853704 seconds)
  done (took 1.731858896 seconds)
done (took 2.906033248 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 0.139650562 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109798351 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07069833 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107494655 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071159058 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 0.109216962 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 0.075886772 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 0.10844078 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 0.076428988 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105593339 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 0.112288621 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071288544 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 0.116021758 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105520934 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 0.075881064 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106658937 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 0.107534919 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 0.076273484 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 0.075709139 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086337092 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 0.076483686 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107967773 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 0.107503678 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 0.075981358 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 0.075722808 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 0.076206736 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 0.075645923 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070998046 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 0.076033461 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 0.076467298 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 0.075988278 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105698902 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 0.075944593 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 0.075591945 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 0.076007373 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 0.075722188 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070765624 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 0.075549589 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 0.075919769 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 0.07563309 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 0.075846798 seconds)
  done (took 4.769208782 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089848784 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089965828 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075618333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088575461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06886634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088239093 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087383702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095371282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087772617 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079153294 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068978862 seconds)
  done (took 2.091158561 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090177615 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09022759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075650067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088021272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06878042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091255454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08753516 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093374208 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088551254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080220501 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069274042 seconds)
  done (took 2.082852624 seconds)
done (took 10.098807777 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.107458428 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.082361352 seconds)
  done (took 1.336208415 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.549628964 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.698793479 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.0832996 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108174803 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.204298616 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116610712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240419456 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090413514 seconds)
  done (took 8.42616972 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101608482 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088168673 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075593861 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076593535 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076504985 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076773517 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077317036 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076926789 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076229725 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075280964 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075532381 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076917426 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077038097 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07633531 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075748028 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07581864 seconds)
  done (took 2.502418567 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.226429291 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103139785 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07994473 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081363581 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079120374 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078722689 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081289229 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080548807 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077372299 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079146734 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082690243 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080053751 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079459169 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070342306 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081540348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082973982 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078091352 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081199873 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081586726 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081838301 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081878588 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070146607 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079965006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081189241 seconds)
  done (took 3.348014733 seconds)
done (took 16.77572064 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.124147076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08447358 seconds)
  done (took 1.364026091 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087073043 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086641542 seconds)
  done (took 1.340630494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084921567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068419261 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091304091 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081065325 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069670928 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069316012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088952839 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069424647 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069433295 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069856089 seconds)
  done (took 1.930275889 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072065845 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079703435 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075372826 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.073260162 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077310596 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071073851 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077447752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072372123 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080495902 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070138111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074688969 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090461108 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074678881 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092137684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075470443 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074262932 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076385614 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073255796 seconds)
  done (took 2.550279871 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068351915 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069997753 seconds)
  done (took 1.313711241 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071840338 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069750463 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072258828 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072255015 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069495009 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.068615574 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069392072 seconds)
  done (took 1.666253692 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419628049 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127251113 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.345251399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076730051 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086426127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270955836 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070392063 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07551535 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075785657 seconds)
  done (took 2.759130036 seconds)
done (took 14.102431659 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087530209 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09302985 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104637753 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.432181463 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099942444 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075214938 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.12026452 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189985862 seconds)
done (took 2.38821496 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219910887 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.863588789 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.497326236 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218264723 seconds)
  done (took 2.752377066 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360055686 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087575345 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083645331 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073662272 seconds)
  done (took 1.791935024 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073594167 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076344372 seconds)
  done (took 1.335326196 seconds)
done (took 7.284425004 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069817641 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096847763 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070107199 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071147545 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070715602 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071041613 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071181387 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070829799 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070702261 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070663086 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071050235 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070330439 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.070795149 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071162736 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071567192 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070987514 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071114127 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071160085 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070990751 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070896108 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070976595 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070564489 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070736866 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070865135 seconds)
  done (took 2.944842084 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08902594 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073425249 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074829957 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074698271 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075441594 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075092416 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074650325 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073111045 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074946007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07308777 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075675628 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075487939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072969874 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075259056 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073112167 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075777476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075045513 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074034532 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073306366 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075169015 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074894431 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073165414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074972329 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074813994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075499548 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075527137 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073379867 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073397992 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07500979 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07519974 seconds)
  done (took 3.440562798 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075133774 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067152137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067340263 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076336974 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067505905 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068307269 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067076595 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067513638 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068381524 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067914842 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068279402 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06716019 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067389617 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069564202 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068180847 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071593821 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085944923 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066959715 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067207283 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067917993 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071684242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067303203 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067525838 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067040288 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067580855 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067053925 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067060959 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067353349 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068198662 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067273659 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071434427 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071852084 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067493028 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072376855 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071933917 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066979397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071971275 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067334818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068077868 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067244784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066652398 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067050958 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067072136 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076588054 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068267745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068217927 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067457352 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068348875 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067544604 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06933274 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067236868 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066885544 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06900412 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06843168 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072397502 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066933143 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067845196 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066689195 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068115903 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067451021 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066813557 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067125785 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070673392 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068286956 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085371498 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076748314 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066662614 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06906812 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068845013 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070591431 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068888845 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082988544 seconds)
  done (took 6.187456251 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092849416 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094318542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072973394 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072714078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06842406 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067955341 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0773413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068609747 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073340104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088188516 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068005328 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073049604 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072722694 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072338304 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068353907 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073636152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077099151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068810751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078149622 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072708037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06942008 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077231515 seconds)
  done (took 2.849928794 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155937832 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073868514 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113484902 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078847903 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07678828 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079128413 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074267942 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073933172 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07410717 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074537012 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074617408 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074481486 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076782734 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075321519 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074679597 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074490455 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074203065 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074878694 seconds)
  done (took 2.66845046 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.085441629 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073806995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09364291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073674931 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0736233 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073259958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078234264 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079206105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072889317 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.074343833 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078886172 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073810902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073428674 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073578875 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073574942 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073943406 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073159347 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073794765 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079152053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077698199 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078031022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07912509 seconds)
  done (took 2.880567868 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085817414 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072899823 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089213278 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074437598 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067924224 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068102121 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074575023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073363623 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074190475 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072413614 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073400075 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068298861 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076240974 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07414264 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075603534 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07267068 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07239314 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072739187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072749148 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067896519 seconds)
  done (took 2.674838877 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090738607 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071190969 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071529905 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077836981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070939288 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071358065 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077882654 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07129721 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071421707 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093471538 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071248644 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071025792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078048497 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0759466 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071601633 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077795753 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078120344 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078001569 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071486668 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071423997 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092781259 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071599036 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078220491 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071661817 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07129825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071218873 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071298143 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075380758 seconds)
  done (took 3.312661125 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071997268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071013212 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071456044 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071623911 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071656103 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071121601 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071525924 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070699515 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070905936 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071263337 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071414944 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071492767 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070652097 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070985641 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071273855 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071641925 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070933714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071355042 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071509441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071576981 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071064779 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070792325 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070670056 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070982122 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070924542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070319181 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071027923 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071474262 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070452933 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071331155 seconds)
  done (took 3.336572779 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083637902 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07996299 seconds)
  done (took 1.366380236 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070365575 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085374657 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067709604 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07991257 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077054726 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071815219 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078213427 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077466035 seconds)
  done (took 1.803013889 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.092825112 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081998198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070399957 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082852468 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081820177 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.092003286 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135957427 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07035022 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080831276 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071157699 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.089404238 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072430616 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081198554 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078376033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080596635 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084695938 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068013589 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07510128 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070881073 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068199987 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071194104 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084390236 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080237001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068031549 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076222731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098953882 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087093369 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069897014 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077619698 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.08366034 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080733364 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06709999 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069905575 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070205564 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067993129 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081575276 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089746851 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077438583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083718353 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07113503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080210204 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067996084 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07896602 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.082162425 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086750899 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070334455 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070387384 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067856807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071185109 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076280817 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068923786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074663069 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067755815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082338064 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078264904 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085949447 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069072993 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076105551 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076934807 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077277947 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082194531 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076325012 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079916298 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069115145 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08616015 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.081199822 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08264337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067742517 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066812982 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068401304 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084950994 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099687181 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079899786 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070243922 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071013349 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067809088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077488656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070612477 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079286489 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.081442474 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069728812 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075494461 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082664754 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074775597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076392877 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076761827 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068283874 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073900354 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070710372 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090752769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068787618 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06825226 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071360898 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086044751 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077753321 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0692634 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070905636 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08219273 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066824409 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069919044 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070670613 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076233043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083455417 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074388533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074835294 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083711007 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080162726 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076194814 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.076830572 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066490936 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069966393 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072057027 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081716352 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066732994 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078316048 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073624356 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069663904 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0806638 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067806759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069470975 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08226067 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.081128802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067552675 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065925555 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07592902 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068791263 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071773357 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083344139 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067872566 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067034191 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067193917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077034472 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068543475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077828147 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072680707 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076821676 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066475212 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06699847 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072379105 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081507619 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072875071 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074801578 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07915181 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075121893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070122579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082128883 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.211425222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074513845 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.082398706 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.077397713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069482238 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074054218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.078602211 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069631424 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078965065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073219606 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077999125 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070978003 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069031855 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076279901 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070984159 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072989718 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076150828 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069386893 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.086214844 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.077154831 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067975364 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067913384 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077821494 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071717193 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069429253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072955167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077247345 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070707118 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068670958 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069766026 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077015278 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078250647 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073655511 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071662916 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.080481343 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088673798 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070543953 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078918723 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070484748 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070705461 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070809245 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08527129 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081420944 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074300222 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077240156 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067277667 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080079999 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082383726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073075903 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067988908 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072934197 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074356452 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083562466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074807895 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071355938 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069376245 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077101251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074192339 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.077763796 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070688276 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073105125 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075864552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069339428 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077017238 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07130878 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085413802 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078109827 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.069122543 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073328947 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06897231 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082012157 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068194466 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.072034404 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072827588 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070826323 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069379185 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.077926626 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067867087 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082817737 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084364454 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075585238 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073005685 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070082753 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08318443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076277732 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079082305 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077665766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080217061 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085891482 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072408009 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077517802 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085831208 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070311716 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067574207 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079882156 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068420614 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068849507 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069312069 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068907809 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078115017 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077400712 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081053817 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066762659 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077130445 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069063839 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072514133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068031529 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079025089 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077357564 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075095142 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082459374 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070783657 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069921233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077486067 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069355714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071052015 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070619381 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077509913 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070137393 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075763456 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072245686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075610733 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071788303 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067605799 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075608491 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069269383 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074806662 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07837329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068597602 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075002237 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075591795 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068920551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075349749 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072405129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071633453 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076194374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074649124 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074220962 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.075851946 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067031212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080746666 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068212032 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081644613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.075196487 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066327715 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073679063 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075884147 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073538265 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069396145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069609609 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075095921 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068470224 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07610167 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.22070751 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.073146524 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088707705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082858828 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078289958 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.078331684 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.076601079 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.077386248 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073138763 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075580708 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071125747 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075765259 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069873379 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078910034 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.077140522 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.075607095 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077308591 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071496012 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076253344 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070869588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067709855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073194111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.074210816 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069790845 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086703257 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070546144 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073204458 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069762311 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071152395 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069842608 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066944246 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077507313 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078179856 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070480054 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081120895 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.073105726 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.076259494 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086496539 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067483582 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068612384 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068040996 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071667664 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083446244 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070457786 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084495881 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075645304 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072582532 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067851399 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070460094 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068806486 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06789479 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068301023 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080996123 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073272559 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069634596 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070883742 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.078189233 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071473525 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084516699 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069867047 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.076212659 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07130984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068053132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073653447 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072886109 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077703346 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071138175 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072065675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068219239 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069908649 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075323829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076528719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070089463 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076455135 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083142267 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069915097 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077286085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073101309 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068524542 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077916941 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069913901 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070284798 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072647984 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078194456 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078721966 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071411052 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084773997 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069688007 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076167081 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070300298 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068571313 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069564338 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070389734 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070464908 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072846951 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070958522 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083515043 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068049607 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076461888 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075564215 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074286609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080534153 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070533272 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077169014 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076110385 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07221581 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076839934 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084129979 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07434057 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077983529 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071010055 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.076121321 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080709372 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072675576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.082457216 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.076742524 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070934382 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076435601 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071582439 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070378711 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070074381 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069467219 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080302498 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07030746 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.072014934 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.072369027 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067563058 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074212877 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071430975 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082699052 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07616178 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07648351 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06774585 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06694072 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069829941 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070240121 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075377768 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075999501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078548583 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076063165 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073237709 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068142196 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083416979 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078802814 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076847523 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070471314 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076827112 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069232955 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07670853 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073997112 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074005574 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070176373 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.078289337 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075386157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071551843 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079935795 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.220649698 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073176975 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078594226 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078061364 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076674557 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070019541 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072086951 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.078263415 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080439974 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.078282583 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070787959 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086894734 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.071883298 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075756512 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072586154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069443454 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079581996 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068714992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07692044 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070798315 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070937494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068505561 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073034546 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07281339 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077688283 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072991978 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068308701 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086475288 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.086130893 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076754424 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069764595 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069684739 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068212647 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068271387 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073432303 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071457348 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076609343 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085637424 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072824184 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072321539 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06866857 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070378637 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078298386 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.078665457 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067459418 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068735275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07338496 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076261816 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.082586282 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06860364 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070201077 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078819111 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.078510924 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069002632 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073583604 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068276991 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078902002 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08842396 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0715285 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078319155 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.082334939 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084815177 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071285032 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069152939 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071867111 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077426446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.076369189 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071485388 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07195521 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092026835 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078150315 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072997114 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069765995 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07819199 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07361838 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085494974 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072510438 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071581952 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079337609 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.077555565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078532336 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081139306 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082217076 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077420672 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07745604 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07002848 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075502339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06966283 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073962554 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071068667 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070728477 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074834403 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077488542 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073538754 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08712378 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.085845021 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073247898 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067913037 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073613559 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073176822 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068955722 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071279701 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06896127 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069275244 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069170002 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069707626 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07655385 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08050596 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.075026832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07135723 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070104775 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.068343271 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.079912497 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.077276666 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077328392 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067847133 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070540953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071950303 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07899343 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073571377 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072339673 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07740539 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076274404 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075961376 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068848062 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099753098 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069016968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07608611 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072349049 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069813764 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070164097 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077044221 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072844752 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070165055 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076962582 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070672018 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067357647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066490707 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.078542018 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067513715 seconds)
  done (took 46.256101575 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113408082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070286245 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068890043 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069002084 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078629947 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070238155 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068600529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069645666 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069682571 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071766792 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068755821 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068854131 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076678435 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084399384 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079634323 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073608142 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069191212 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070277905 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06956835 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070261204 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077046436 seconds)
  done (took 2.901854131 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077818194 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084685536 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081418862 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086715171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078966712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07456984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08180351 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074025136 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082192069 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079779124 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082493701 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074436544 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079548498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079939428 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079691095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074247527 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085672256 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078770503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073802685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082242416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074206179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083015438 seconds)
  done (took 3.047128248 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072050811 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069898918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.076647466 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067555052 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069272168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067695763 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072614978 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068703449 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072614272 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072799016 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073102205 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073089273 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.076390605 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067766456 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072872209 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067782394 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115518677 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073203458 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071499655 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071717913 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068810182 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.077730295 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068446089 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069372077 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072755839 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072773681 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070726503 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068054838 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069759933 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072786294 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069780946 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068019522 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.077502129 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.075754718 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072427888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072098797 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069200453 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069956094 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068518206 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068604121 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.075952571 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068550203 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07020591 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07652597 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068410945 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068836678 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.076198913 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069839933 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068845972 seconds)
  done (took 4.838709461 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081958909 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1185243 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074956314 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098387654 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083356011 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075835869 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074407102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100057524 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069940506 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070770109 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085137111 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08515108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071953821 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074366687 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076833364 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072427484 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07272785 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071191089 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075254901 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072536081 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075377478 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076825251 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083991814 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08414854 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073008808 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070856857 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071697931 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073687879 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084296953 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076193444 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073859662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074942586 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084140049 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077697191 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071143274 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071709517 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084941553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072373253 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071858196 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070070013 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071670824 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073767914 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076758187 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085560992 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072905124 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077345745 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072419503 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069830679 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083775063 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071878788 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07703098 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085261641 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073264756 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072667417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073974107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08417584 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072287709 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070415976 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072523932 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084238618 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070165541 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084603445 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071298107 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076118183 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085011639 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077397851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072899049 seconds)
  done (took 6.683791676 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080655182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102160905 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086149728 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086716151 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080536729 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080952485 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081704843 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080137157 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080531524 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084480198 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080623824 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1236628 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.076154847 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082287382 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080119072 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080704402 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08058925 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080294463 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080522946 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080433058 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080280708 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086457819 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080194391 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086597779 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08351098 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076256605 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080005067 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079960367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086684578 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07977956 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084445956 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080746502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080138791 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087548962 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083291064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080408637 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069389515 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079834752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08068616 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08040409 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075948389 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086873615 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080281067 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.076016515 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080329272 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080152208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087236342 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083584268 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08186726 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083947615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080791146 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086619578 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079873797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080044814 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086730405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089189355 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086211043 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08651922 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079800591 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086597693 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086364119 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089252954 seconds)
  done (took 6.481776003 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086061409 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076856844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089169674 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068428437 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068088321 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079031405 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068523119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068886465 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07705691 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077100261 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079444644 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079293641 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082234714 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079823272 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079817186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082085785 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079110805 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079262206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078321841 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078942458 seconds)
  done (took 2.890914989 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.084056543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087992744 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07542296 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078568846 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074109688 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078944265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074122091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074438797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074917153 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095094836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080646163 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080540796 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074749988 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078969513 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080450536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078993488 seconds)
  done (took 2.592945373 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076550717 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07682018 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085017959 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070132595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07353518 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068918085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069972786 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068084094 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069177941 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083357658 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069628552 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081677908 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071117541 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0685835 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069359297 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076700491 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069711357 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070146426 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069524466 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083426571 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077070277 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071044041 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073975473 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069871963 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075511498 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077819906 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071965168 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073666483 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069749931 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070152935 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075966035 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077015498 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06965553 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070645482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068761602 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069487469 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069800006 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070052118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07586543 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069676666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068685846 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075160777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069812708 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070875417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069443589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070787089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068976454 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075837239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069799657 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075728506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069533505 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072103613 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07045484 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077996793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072739037 seconds)
  done (took 5.316839213 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086811656 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074221261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068455357 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067867696 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073677898 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074882208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07404758 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073965388 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074984623 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068604525 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075041947 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073553674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075065174 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074778079 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074922612 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07476949 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068456449 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074541626 seconds)
  done (took 2.663732452 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080173596 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073664881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07822524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073885127 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073161933 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072698625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068427296 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068877597 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068986088 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074109483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073452683 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073571388 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068824205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076334455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073597129 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073517638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073083412 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068553542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073421714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068699434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073629874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068518088 seconds)
  done (took 2.923054842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.104136883 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090918035 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.151038813 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.087426213 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.095315739 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079273117 seconds)
  done (took 1.93655887 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101728866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106211757 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073356815 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073180991 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079445745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076794142 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077073418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077542412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082114382 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082542364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077573652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082443889 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082299756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084691137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080028251 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080389167 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077855391 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077402993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075321118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087418269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07772425 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082029954 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077967827 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077581908 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077508256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084054318 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082567036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08266976 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07774296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082083077 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080181762 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077888493 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082935013 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082695511 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074038797 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082308615 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07786189 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087729946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080283112 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085908737 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074306291 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079956761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082691099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081553026 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082410076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07784983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082658827 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077533489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078607126 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089039704 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080015038 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083805516 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079779763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082394654 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081860877 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088823158 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082302876 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084383127 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079750474 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082397425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084060771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079534915 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08359507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081922566 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079589646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084194556 seconds)
  done (took 6.699266003 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113414686 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074962504 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077924748 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082483167 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083751117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078252576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078333337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078683888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077931121 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075366879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114539764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078702443 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084958239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084698964 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078505758 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079810561 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078155445 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084350772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075182393 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089089671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078464058 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084461555 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084283015 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084432276 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082999097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079837685 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078111218 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077898606 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077624259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077819911 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081733506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077778245 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084268837 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074548264 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084017568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077762504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077680288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081716784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07778484 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080069227 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084033662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087546051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078143499 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077482988 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082454957 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077982818 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07818787 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075017038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077541066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074815107 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082627455 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082832938 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082321251 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08393236 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077647293 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077666162 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078229072 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077721151 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077409293 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07971931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084384377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077467032 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088359149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077532002 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077498114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083749151 seconds)
  done (took 6.701269595 seconds)
done (took 136.584685978 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.392318015 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.255544692 seconds)
  done (took 1.955955549 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.081629914 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.113176808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.090667173 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183606277 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.077324907 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.133010743 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123295956 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.089715913 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.079963358 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079056586 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.078627589 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.080981442 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.201988603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.077048165 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.078610591 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08132467 seconds)
  done (took 2.986324536 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113963696 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180738078 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.117249714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.076489898 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113219999 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084570175 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.075939267 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090445938 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.083553813 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.077974604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084802255 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083230745 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.078058348 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.082542112 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083487115 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.084447114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.078106242 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08445067 seconds)
  done (took 3.010550835 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112619749 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.109152928 seconds)
  done (took 1.565662831 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175433017 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.114127986 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15665596 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.37011645 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167046674 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149061855 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.153186286 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146286826 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.124938792 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142005745 seconds)
  done (took 3.041344471 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114288659 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193236799 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313601101 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.130406483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.083434833 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115504122 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.132123222 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089393521 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.091821836 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.091686731 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.091689495 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086525255 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112190722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.084647123 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.083147005 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086068309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114782092 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081825728 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0845968 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.085831684 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11546915 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.077623521 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.084063472 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081918391 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.088899237 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.088971337 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.078188095 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.076750691 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.086415776 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082999369 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087179007 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112442619 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.088392031 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.11418259 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081205274 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11626422 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.086044316 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.083758442 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082610197 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.083869156 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.087944797 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.087651161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.085749877 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.085982915 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.078041047 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.086255123 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.078456477 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.076518261 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.088087904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078363483 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.088058796 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08675641 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.113996605 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.078007921 seconds)
  done (took 6.617971021 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11871971 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112604258 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078072524 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.122202375 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113270543 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078390351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.114449157 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107887765 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.117423241 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078287329 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076840074 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077869439 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086994394 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.090622198 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.125920997 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114354856 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080556489 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078249099 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.117288247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.116531593 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077138698 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110216764 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106588121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.116824803 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076152268 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.078395193 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0768748 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077935479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084004583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08529277 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077261718 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086900407 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.096076926 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085362644 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07559483 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075842487 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076401481 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085836557 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085926098 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085992995 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084528983 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075746464 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075752335 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076870195 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076856778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075714881 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084892511 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086169788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085096698 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075902078 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077595347 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.079690794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076734877 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085612435 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08380427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.087022847 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086536268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075851985 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075754716 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079322462 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.089064336 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086016898 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085875064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077273297 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085967942 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076509004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088535637 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092317869 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076176496 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077187242 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07575215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075801453 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076829597 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083209424 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084832202 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077276708 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076185207 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075719934 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086001749 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084037528 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076290228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083425614 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074985734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075962485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077071867 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077288648 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083549438 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08520471 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077591614 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076370047 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075912463 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075950705 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075212643 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083826679 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08587985 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.085413609 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084580446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076997745 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.085324745 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084211413 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076846125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083782089 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075532042 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077404969 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076755805 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083908558 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083150419 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084675788 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075569685 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075132515 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082275065 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085468369 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075258395 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082450857 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08485772 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082965061 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074828842 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08562769 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075868778 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08488985 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073229946 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084799455 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075860691 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08356257 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075606951 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074272641 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075065451 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083426487 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.214391652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078198447 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078673198 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07821404 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.086362032 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088473514 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079720349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085613467 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085659427 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078385585 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085101125 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076819346 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085806056 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077133717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077687782 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076115821 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088177522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077772215 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076169522 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076499501 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086974155 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077408473 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087092166 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085110509 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075964753 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.091457318 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084935998 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0827115 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08746691 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078134069 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07667293 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07637671 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076705843 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083735844 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086365519 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078739572 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076181124 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084033907 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086919571 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076150928 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084109625 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085211586 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084691236 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077663382 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077250867 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08852187 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.088046105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.085109998 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.085440188 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086018554 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.077211301 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08496339 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08524859 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076805043 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09131247 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077974062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089721122 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.086351357 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083890651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085588243 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.087107939 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.087529527 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087819077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.090978392 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07687568 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076672185 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085529041 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076757774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076879834 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.084612889 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.078039549 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.078047214 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.090565999 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074936795 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.331477812 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076130031 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085888254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075640756 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077800152 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090060759 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077360686 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07729874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085120038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076312482 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083828484 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08813098 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083981543 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076800291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077276766 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085533175 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086505904 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076520706 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076400201 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077516027 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083816485 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083935626 seconds)
  done (took 20.418725041 seconds)
done (took 40.947243167 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222529124 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169310483 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203904626 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125440966 seconds)
  done (took 2.165753055 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116599327 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107348596 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096025051 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072237124 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102339042 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073271981 seconds)
  done (took 1.945840627 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312026846 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216603305 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194676169 seconds)
  done (took 2.098828965 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.222421219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202504987 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.489683429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.301600171 seconds)
  done (took 2.693195299 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150910868 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090323935 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072444237 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090577668 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131905383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158854986 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101168927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126596361 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083592434 seconds)
  done (took 2.443556156 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158694712 seconds)
done (took 12.902376717 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.213890514 seconds)
    (2/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.274313966 seconds)
    (3/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18481489 seconds)
    (4/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.135776182 seconds)
    (5/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107855653 seconds)
    (6/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.27029357 seconds)
    (7/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080731834 seconds)
    (8/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.270861029 seconds)
    (9/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.188267735 seconds)
    (10/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076032595 seconds)
    (11/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19659231 seconds)
    (12/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.078619261 seconds)
    (13/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145148745 seconds)
    (14/341) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.238465627 seconds)
    (15/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167528296 seconds)
    (16/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.08459121 seconds)
    (17/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.260417838 seconds)
    (18/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.157359914 seconds)
    (19/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101243231 seconds)
    (20/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08241837 seconds)
    (21/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092450979 seconds)
    (22/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.101190941 seconds)
    (23/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.105939211 seconds)
    (24/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.086834716 seconds)
    (25/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.082755595 seconds)
    (26/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.206873533 seconds)
    (27/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.244280322 seconds)
    (28/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.188048647 seconds)
    (29/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.183876129 seconds)
    (30/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109262997 seconds)
    (31/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.239118172 seconds)
    (32/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208546094 seconds)
    (33/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08232195 seconds)
    (34/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.082275193 seconds)
    (35/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096493574 seconds)
    (36/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.160474436 seconds)
    (37/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074731219 seconds)
    (38/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.163977523 seconds)
    (39/341) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127280755 seconds)
    (40/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.135507558 seconds)
    (41/341) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115667972 seconds)
    (42/341) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081744617 seconds)
    (43/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.186399868 seconds)
    (44/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071884202 seconds)
    (45/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.211330134 seconds)
    (46/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.084084769 seconds)
    (47/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082023684 seconds)
    (48/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.073333441 seconds)
    (49/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.079356381 seconds)
    (50/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137748521 seconds)
    (51/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145532258 seconds)
    (52/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076733761 seconds)
    (53/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075859033 seconds)
    (54/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.134927642 seconds)
    (55/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207601579 seconds)
    (56/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.07525536 seconds)
    (57/341) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091553365 seconds)
    (58/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072905452 seconds)
    (59/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081025772 seconds)
    (60/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.079263855 seconds)
    (61/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071405872 seconds)
    (62/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072425424 seconds)
    (63/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.242073013 seconds)
    (64/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.229681454 seconds)
    (65/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095707022 seconds)
    (66/341) benchmarking ("sort", Bool, false)...
    done (took 0.146333006 seconds)
    (67/341) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.113156988 seconds)
    (68/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.186470568 seconds)
    (69/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087674022 seconds)
    (70/341) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.215143505 seconds)
    (71/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100610097 seconds)
    (72/341) benchmarking ("sort", Int64, false)...
    done (took 0.073794572 seconds)
    (73/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07608604 seconds)
    (74/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098481314 seconds)
    (75/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091817268 seconds)
    (76/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076607814 seconds)
    (77/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080302764 seconds)
    (78/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.125077493 seconds)
    (79/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.228306165 seconds)
    (80/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074718739 seconds)
    (81/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143418609 seconds)
    (82/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081291879 seconds)
    (83/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17600392 seconds)
    (84/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080465108 seconds)
    (85/341) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073278294 seconds)
    (86/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071147153 seconds)
    (87/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136354071 seconds)
    (88/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205772398 seconds)
    (89/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107303561 seconds)
    (90/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072440022 seconds)
    (91/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071861119 seconds)
    (92/341) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14999147 seconds)
    (93/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.351810267 seconds)
    (94/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.139454507 seconds)
    (95/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075622449 seconds)
    (96/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086415716 seconds)
    (97/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07815404 seconds)
    (98/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.1495318 seconds)
    (99/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.100384703 seconds)
    (100/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08592554 seconds)
    (101/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.177204607 seconds)
    (102/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.138109735 seconds)
    (103/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.074164317 seconds)
    (104/341) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083188953 seconds)
    (105/341) benchmarking ("collect", "filter", Complex{Float64}, true)...
    done (took 0.17613397 seconds)
    (106/341) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074712852 seconds)
    (107/341) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098191643 seconds)
    (108/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088156033 seconds)
    (109/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.082938193 seconds)
    (110/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.075988547 seconds)
    (111/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087766536 seconds)
    (112/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09977406 seconds)
    (113/341) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089690274 seconds)
    (114/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.081852718 seconds)
    (115/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.247944459 seconds)
    (116/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096534585 seconds)
    (117/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184650382 seconds)
    (118/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0750179 seconds)
    (119/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154776034 seconds)
    (120/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.190521869 seconds)
    (121/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.2078332 seconds)
    (122/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084947977 seconds)
    (123/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080097927 seconds)
    (124/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087919277 seconds)
    (125/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082059769 seconds)
    (126/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078645154 seconds)
    (127/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.078151544 seconds)
    (128/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095657766 seconds)
    (129/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.074521883 seconds)
    (130/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193927597 seconds)
    (131/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.163822624 seconds)
    (132/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.073670242 seconds)
    (133/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073588684 seconds)
    (134/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073280348 seconds)
    (135/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13283308 seconds)
    (136/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082322558 seconds)
    (137/341) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189861718 seconds)
    (138/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084484136 seconds)
    (139/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.08271119 seconds)
    (140/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073311505 seconds)
    (141/341) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.183673328 seconds)
    (142/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082385732 seconds)
    (143/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072649092 seconds)
    (144/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094206738 seconds)
    (145/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073820892 seconds)
    (146/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.137820582 seconds)
    (147/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127696341 seconds)
    (148/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.072815436 seconds)
    (149/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.164350379 seconds)
    (150/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.087197184 seconds)
    (151/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.083156733 seconds)
    (152/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099813305 seconds)
    (153/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085483732 seconds)
    (154/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07353669 seconds)
    (155/341) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.073517758 seconds)
    (156/341) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072134789 seconds)
    (157/341) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100578219 seconds)
    (158/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081163716 seconds)
    (159/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080933534 seconds)
    (160/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086324371 seconds)
    (161/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074723103 seconds)
    (162/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.073832944 seconds)
    (163/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072451096 seconds)
    (164/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08108025 seconds)
    (165/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1817425 seconds)
    (166/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10240281 seconds)
    (167/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121402959 seconds)
    (168/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074068996 seconds)
    (169/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143021459 seconds)
    (170/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076414369 seconds)
    (171/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081454955 seconds)
    (172/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101871927 seconds)
    (173/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.071710838 seconds)
    (174/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075141593 seconds)
    (175/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.078380528 seconds)
    (176/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.136919633 seconds)
    (177/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094020983 seconds)
    (178/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189953642 seconds)
    (179/341) benchmarking ("collect", "all", Complex{Float64}, false)...
    done (took 0.092481053 seconds)
    (180/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094070313 seconds)
    (181/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.073539846 seconds)
    (182/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191357559 seconds)
    (183/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.130607381 seconds)
    (184/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074598211 seconds)
    (185/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073515408 seconds)
    (186/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149984031 seconds)
    (187/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094674882 seconds)
    (188/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.134896561 seconds)
    (189/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073438002 seconds)
    (190/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096128631 seconds)
    (191/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083232628 seconds)
    (192/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.175333999 seconds)
    (193/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.088036198 seconds)
    (194/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081968266 seconds)
    (195/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.085667936 seconds)
    (196/341) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080103736 seconds)
    (197/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134563964 seconds)
    (198/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.129286968 seconds)
    (199/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.092163309 seconds)
    (200/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.158853686 seconds)
    (201/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.110038626 seconds)
    (202/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07192751 seconds)
    (203/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073399013 seconds)
    (204/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072806345 seconds)
    (205/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139202185 seconds)
    (206/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.103042547 seconds)
    (207/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188610381 seconds)
    (208/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073431967 seconds)
    (209/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.086046539 seconds)
    (210/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072227956 seconds)
    (211/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.073109559 seconds)
    (212/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074761361 seconds)
    (213/341) benchmarking ("sort", BigInt, false)...
    done (took 0.200122255 seconds)
    (214/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079857715 seconds)
    (215/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07439643 seconds)
    (216/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081384326 seconds)
    (217/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.244919446 seconds)
    (218/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089003493 seconds)
    (219/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.199395533 seconds)
    (220/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076038979 seconds)
    (221/341) benchmarking ("sort", Float32, false)...
    done (took 0.146445993 seconds)
    (222/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.082672964 seconds)
    (223/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075225679 seconds)
    (224/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097949205 seconds)
    (225/341) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086208848 seconds)
    (226/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076860245 seconds)
    (227/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088404373 seconds)
    (228/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.094949649 seconds)
    (229/341) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149815122 seconds)
    (230/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.083284367 seconds)
    (231/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074209144 seconds)
    (232/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130473669 seconds)
    (233/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074819029 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.084803741 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093771456 seconds)
    (236/341) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078800714 seconds)
    (237/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076717778 seconds)
    (238/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191334145 seconds)
    (239/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147408656 seconds)
    (240/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.088038273 seconds)
    (241/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184969259 seconds)
    (242/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.138140321 seconds)
    (243/341) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078593987 seconds)
    (244/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074433614 seconds)
    (245/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.081923192 seconds)
    (246/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183764178 seconds)
    (247/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.079592545 seconds)
    (248/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083412972 seconds)
    (249/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080409276 seconds)
    (250/341) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09748455 seconds)
    (251/341) benchmarking ("collect", "all", Complex{Float64}, true)...
    done (took 0.080505075 seconds)
    (252/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075409027 seconds)
    (253/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073814927 seconds)
    (254/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07629473 seconds)
    (255/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086697159 seconds)
    (256/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073028914 seconds)
    (257/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.076706159 seconds)
    (258/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073902393 seconds)
    (259/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074934778 seconds)
    (260/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134427578 seconds)
    (261/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098150688 seconds)
    (262/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080270794 seconds)
    (263/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080420464 seconds)
    (264/341) benchmarking ("collect", "filter", Complex{Float64}, false)...
    done (took 0.076533064 seconds)
    (265/341) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086511588 seconds)
    (266/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073258164 seconds)
    (267/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.105412961 seconds)
    (268/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087200008 seconds)
    (269/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.074515066 seconds)
    (270/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093723078 seconds)
    (271/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.076917245 seconds)
    (272/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.101802501 seconds)
    (273/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072144253 seconds)
    (274/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.097504612 seconds)
    (275/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.093007998 seconds)
    (276/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073432198 seconds)
    (277/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.07902118 seconds)
    (278/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.074736579 seconds)
    (279/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194738766 seconds)
    (280/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188500603 seconds)
    (281/341) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07394452 seconds)
    (282/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07337141 seconds)
    (283/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.160613585 seconds)
    (284/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072783859 seconds)
    (285/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133381672 seconds)
    (286/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074996073 seconds)
    (287/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074178188 seconds)
    (288/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077313788 seconds)
    (289/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.079244408 seconds)
    (290/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.087006912 seconds)
    (291/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117859046 seconds)
    (292/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080037836 seconds)
    (293/341) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081965396 seconds)
    (294/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.078723754 seconds)
    (295/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076105381 seconds)
    (296/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.083735726 seconds)
    (297/341) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074271611 seconds)
    (298/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074514222 seconds)
    (299/341) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07427188 seconds)
    (300/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074073594 seconds)
    (301/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.08057268 seconds)
    (302/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.093068079 seconds)
    (303/341) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142565978 seconds)
    (304/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080126638 seconds)
    (305/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073319415 seconds)
    (306/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.074329778 seconds)
    (307/341) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074868863 seconds)
    (308/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074724373 seconds)
    (309/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.078900125 seconds)
    (310/341) benchmarking ("sort", Int8, false)...
    done (took 0.13783163 seconds)
    (311/341) benchmarking ("sort", Float64, false)...
    done (took 0.140944131 seconds)
    (312/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.099286535 seconds)
    (313/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091386806 seconds)
    (314/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07393717 seconds)
    (315/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075945324 seconds)
    (316/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072755726 seconds)
    (317/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.074497773 seconds)
    (318/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073874514 seconds)
    (319/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.075579175 seconds)
    (320/341) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074134065 seconds)
    (321/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.078226779 seconds)
    (322/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.082851201 seconds)
    (323/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073805758 seconds)
    (324/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084517875 seconds)
    (325/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073942198 seconds)
    (326/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074454151 seconds)
    (327/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.073786342 seconds)
    (328/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072108635 seconds)
    (329/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079812301 seconds)
    (330/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.077586678 seconds)
    (331/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074036026 seconds)
    (332/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081573452 seconds)
    (333/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075764068 seconds)
    (334/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.078991952 seconds)
    (335/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072856488 seconds)
    (336/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.08065118 seconds)
    (337/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.073534486 seconds)
    (338/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.080514322 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072142922 seconds)
    (340/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.075678476 seconds)
    (341/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074363776 seconds)
  done (took 38.841068466 seconds)
done (took 40.236522638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094603228 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10770161 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080966692 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10187164 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08911673 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105210308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081603718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086662994 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089057954 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087933794 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086646193 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.080494305 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082548871 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082665174 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081454057 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106516617 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087973823 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081594538 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082271959 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073601644 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082177273 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073582655 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072864751 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.080143798 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085531041 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.081453809 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083436071 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083400402 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073455359 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073799663 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078893197 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082265162 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073572612 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086287628 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082391116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081746609 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08314114 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.086040937 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073993041 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.074001495 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08326219 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073296145 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081777224 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080088007 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079268716 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080727392 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081943168 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086357677 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109788911 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.079304297 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.084220628 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08506108 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0858 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079953485 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078916189 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082392082 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.080190083 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106809054 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082564155 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.079049681 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.084179953 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.083213162 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080172767 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081900539 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.08197488 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084390465 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.086267176 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080024198 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.084165323 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080539175 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073168042 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.082340566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078620853 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074029191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084639922 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08684964 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072469058 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077901288 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081470404 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082705612 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073039367 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.079089925 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072836439 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078345852 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.078817751 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.080180466 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078560807 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080833908 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072545154 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081922088 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.081000546 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081199951 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072637689 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.086438984 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073250326 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07960617 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073236119 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073574215 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072613034 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078585701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073265036 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.078669151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082682233 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072115482 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077702801 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086666644 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073295756 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080351007 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.073065239 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.07292186 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084566574 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.084676099 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073620045 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.078576711 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072424083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078597031 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072710893 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072690889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.073175484 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07274568 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078075837 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072929916 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.077982534 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078264264 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.085538136 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072388405 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077845265 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.078136174 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072947527 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079812291 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073284242 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072590803 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071932061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08699156 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.078077355 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07233381 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078105458 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077813999 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080703113 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07187147 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081351528 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078317625 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076721382 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079174003 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071809876 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0841425 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077775849 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.077229083 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071365449 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072174195 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071340403 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071510551 seconds)
done (took 13.74176541 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.079559699 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.126936079 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102107552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10191405 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091080924 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.0743453 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08203786 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100516533 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075475966 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104074729 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096819224 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.096625614 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117582409 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.073416982 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074218886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075033584 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075426733 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086768914 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103401138 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.097556505 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115788395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07464065 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095062337 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095871319 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091637885 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096314133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074900617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075050571 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076346452 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098059702 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.100639007 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07714829 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.075160143 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098916013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09346071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088660832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074995013 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083948881 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.075107722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074216143 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07540719 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095926552 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083161997 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083845757 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075472959 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082123638 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07556136 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091670739 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094704143 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083309316 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090508836 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100937675 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.078223165 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091032311 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.073253386 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090146566 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08403846 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074376827 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074979258 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079705773 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074479836 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.076739451 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086198404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084299806 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07923408 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089798912 seconds)
  done (took 7.18055774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.094320118 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.10260277 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091417001 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091906607 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073447009 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074071533 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074390765 seconds)
  done (took 2.094722678 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075092476 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094932409 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.098028215 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.098304511 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08885831 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.099255969 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081745617 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074637827 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104872893 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073544196 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094866264 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10565407 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078675561 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08701803 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100029987 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07465374 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099629446 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074554314 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075477564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099629302 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079817382 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10273492 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.086900352 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074584254 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087799692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074678299 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107928724 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082043268 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075392764 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075259468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075149627 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102921054 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087217083 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.086792803 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075607926 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089376296 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088472951 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.078683146 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085944267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.087112672 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087958732 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075267103 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073273037 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.075746195 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.077296729 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.086502593 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07324656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075987016 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075499436 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093957694 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073256806 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087619146 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.078436955 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.081283121 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.080416644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080030299 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08302177 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075887617 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093890811 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075571941 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09242625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092066428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088694437 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091756503 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074720997 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087690609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087746808 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075099498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076701203 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075891668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091810773 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.077732407 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07596661 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.086707899 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074246632 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.100213491 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.100783451 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074281614 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088622115 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075617526 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075502991 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08644485 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.099665022 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080542012 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075225272 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079172987 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076768123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.077471225 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073597048 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079053362 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.075671546 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.079589318 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075019981 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077988809 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078035313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091546543 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073879521 seconds)
  done (took 9.606234703 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.078333464 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075697936 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076954578 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0758706 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075720901 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.075537129 seconds)
  done (took 1.981513353 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100228754 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075989759 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088995348 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075306465 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11202246 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091862093 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091757015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08555934 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089368706 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086848148 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091707652 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.094935124 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.097080956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078112413 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091730691 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076292829 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092083761 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080354044 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08657837 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078618167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089528046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.078518258 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078641324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.096822214 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080146142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076535627 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086118907 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.090582088 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08722478 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086014179 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077663564 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080084796 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.083714339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085343342 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092212742 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.083531345 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075506105 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082858782 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07907481 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079495211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094482565 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07803881 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078019501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081825811 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085378716 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.083470947 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082112418 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084596204 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091431091 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082069522 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082121531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076280843 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079161495 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081964187 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.083727938 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085761831 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082525368 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091832938 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077861965 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.083972754 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075189238 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079423411 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085462641 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07915195 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08332703 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082475822 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.083789946 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078121291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078070646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075764759 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082133901 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075380351 seconds)
  done (took 7.549687855 seconds)
done (took 29.92182841 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.527566692 seconds)
  done (took 1.996490952 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.810372151 seconds)
  done (took 2.307958907 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.65735826 seconds)
  done (took 8.158795173 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420020978 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.487150153 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.779248416 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142776555 seconds)
  done (took 3.359950068 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.733974277 seconds)
  done (took 2.241444918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.252098223 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.240584295 seconds)
  done (took 2.012873701 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373847585 seconds)
  done (took 1.871754439 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106895189 seconds)
  done (took 2.616579245 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.253712133 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173072071 seconds)
  done (took 1.931972933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473701391 seconds)
  done (took 1.980072468 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.285450682 seconds)
  done (took 5.790881375 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239152186 seconds)
  done (took 1.785351815 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246732611 seconds)
  done (took 1.757277731 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.809293897 seconds)
  done (took 3.316446098 seconds)
done (took 42.647980032 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093226083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.094300609 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.094845677 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.089570701 seconds)
  done (took 1.855790459 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083863016 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078616673 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082746685 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078121146 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082316152 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078211901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080939773 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08123015 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078034314 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0790665 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078287639 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078503374 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081585326 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.080038496 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076912182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081876827 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.082245745 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078876465 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081953862 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078908568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076730091 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081449516 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081730029 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077941782 seconds)
  done (took 3.432102414 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08773453 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080791623 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083665506 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079788509 seconds)
  done (took 1.853030765 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085952044 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096605457 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08567436 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085676106 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097559613 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09271409 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074899391 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074700532 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075835929 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084896168 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074271132 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10140166 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.095313067 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08544876 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088433281 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071430593 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073287511 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093552351 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.085732654 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086482643 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076442307 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085571805 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.074440116 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.095904425 seconds)
  done (took 3.558928241 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095201946 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.073732663 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.094662825 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.100304446 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.102081584 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073810403 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093450826 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.102634317 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139458905 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.074056565 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079451279 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073582078 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.113827044 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074160305 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.094696155 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11870033 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.122797179 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077704992 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107955901 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.075036194 seconds)
  done (took 3.410302157 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092676353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077087246 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.077975336 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073121147 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083976344 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081641463 seconds)
  done (took 2.012516896 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.077590442 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075920441 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074342049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074350285 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079999525 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074662299 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073657656 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075435447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075611271 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075060271 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074419168 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074157916 seconds)
  done (took 2.426681916 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208526606 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.079476056 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07878152 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074543124 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.080022711 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074076081 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090321584 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07676527 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.103410849 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074435114 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074407028 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077580323 seconds)
  done (took 2.615075249 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20231193 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 0.102745988 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082246414 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23367173 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154935062 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110816888 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.163445023 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.103246124 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119106681 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12154109 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115115963 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.165301788 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.149722424 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106048243 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 0.095678534 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1625515 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168495243 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112302953 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137921649 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09546033 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.129613189 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153331832 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165985291 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108435793 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.146404856 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164657476 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.163464988 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131491719 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105374643 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109574544 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121680753 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152089241 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144558774 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085155742 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079017379 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166856745 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131043647 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.132415482 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150241055 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113060539 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097830495 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174804493 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.095003415 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.151147581 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164686519 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 0.076453118 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138566866 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 0.106136328 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148116995 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.100462688 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.147895973 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088291655 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.127724555 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.24827766 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14083366 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.130868114 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206162971 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097010211 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.095880847 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167848696 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1128835 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086739288 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13492167 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121008631 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12591365 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11064669 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096578327 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.148741635 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182203519 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147670501 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140960751 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092256219 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126006967 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114401532 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119073851 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123801181 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181213668 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161523969 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13150832 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077794247 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115858523 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153690627 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136769268 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113916096 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 0.147093388 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127289991 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095462469 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133531217 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159764096 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126799654 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140084955 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.132259899 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092445636 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.140898838 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.12080592 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 0.130347328 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123153475 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139427765 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12739616 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.14801237 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16908435 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124651394 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077498889 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122938898 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101901739 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084421013 seconds)
    (107/608) benchmarking "5d"...
    done (took 0.149967277 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080414906 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171527116 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.295673211 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10528692 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.130675066 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135417245 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115384419 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113728831 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158546063 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.109787229 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142264188 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109589264 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092641881 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10802588 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124218115 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14524503 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093331535 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113252716 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119092673 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085146507 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 0.08813033 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1370549 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080678743 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124661086 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 0.097005193 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10222341 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124170644 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132096124 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086614939 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128412235 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108485515 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108428418 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131786194 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160960913 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093863433 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086820689 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168488982 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12652119 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108947313 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145658575 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 0.106869254 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 0.078606608 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127887635 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160740495 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102964038 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147440902 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17388708 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095877276 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162333694 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.093090693 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107798397 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089775765 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.111179359 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126211546 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120115396 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 0.130595267 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08632691 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 0.117077191 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121979634 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.1278085 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16163034 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079633422 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.095477186 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099681155 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133682963 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085870086 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085219224 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107212551 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26454308 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 0.103491987 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10412381 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10242049 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109164152 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138968754 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126913552 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11005472 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132915986 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102582019 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163888967 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.140930607 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093524135 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.160340548 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108567335 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109440372 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.078113426 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135600846 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.097557772 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15615851 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084792168 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159638304 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126008477 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121701603 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123339401 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0897521 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140192947 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085323906 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.093826491 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143116963 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07884245 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118832071 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.110355691 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.131453181 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114236444 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 0.07895789 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119248782 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154227235 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132417441 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12492586 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132420963 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138711085 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 0.08414199 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132091733 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111932087 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.09380813 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095470496 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118249248 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133477775 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.108677699 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.128811709 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078493807 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.128638955 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087902914 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108580937 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097265514 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099586866 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089029462 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.152964867 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13993563 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122882059 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115085315 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.103534309 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117946884 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.08679076 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100326815 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 0.128913224 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.309201101 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.085924135 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128259655 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.126345465 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.189343886 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101026318 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155582423 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152719429 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135218245 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106104881 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137134133 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.079727563 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08051328 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094270436 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.107644047 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126031707 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 0.103571115 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.128415531 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089217638 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089707589 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116632088 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151151654 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128157736 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137679143 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128688972 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121037429 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160228357 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.178242642 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.122566845 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07863465 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146298183 seconds)
    (274/608) benchmarking "4d"...
    done (took 0.125798103 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 0.11686166 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.15193281 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125241854 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.092116602 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.110620066 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097086778 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104222431 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14410953 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108734639 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18130388 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.102803662 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 0.079433726 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118060611 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127325628 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.163483382 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.156586087 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159051501 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107394794 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085286071 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109525394 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134737173 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106945967 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 0.090171581 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.122021953 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14275422 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10343692 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091579474 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111458236 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083331609 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102681096 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127381049 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280375559 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139559473 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.093278098 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.106701172 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117943211 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13796402 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084685543 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116561164 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127138113 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125539923 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090095262 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121626454 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166688191 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102059394 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120066799 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151706322 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.09604998 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.107495339 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085180616 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.144932905 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170887199 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145092894 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090407068 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111328727 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125661088 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129743767 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.137026813 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 0.079974446 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12214745 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140663777 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109875216 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139984287 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116397666 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091136166 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 0.107094996 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092512027 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.125411934 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.144436823 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100822142 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.120993319 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109305418 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122330859 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.120270211 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109450104 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.149855947 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162593824 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10163215 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131135214 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107983268 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115899322 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122169924 seconds)
    (357/608) benchmarking "3d"...
    done (took 0.105422218 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 0.101749799 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101070601 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.111234313 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174172367 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121177853 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1660535 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10438591 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.123137602 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141893577 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156857354 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080726295 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24513302 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.088092563 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.095217187 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141368289 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090956062 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134066982 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 0.133533791 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120926745 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12645094 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138376019 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.100949274 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117978973 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101874294 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114472003 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.077165236 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135457481 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128414933 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.088860914 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101984912 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109084354 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159538014 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.12711906 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124854623 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08501731 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117911816 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122129112 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109896768 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174388539 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088565949 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11503097 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083504934 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086403601 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130370673 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152314689 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.136300279 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.13100765 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088945778 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.10392278 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.110385061 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125726011 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115656852 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130116163 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103186813 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116921508 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135365394 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147979124 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129315576 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.099256815 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120584556 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131246095 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155375802 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 0.080806649 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10860548 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.1362123 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.106379431 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172159887 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150833157 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159345341 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093344077 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117709699 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117377498 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111627708 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137659628 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088468055 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.30469625 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161286463 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088275859 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.128050329 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135474879 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 0.134370125 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.156930448 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105467367 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095460012 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129814482 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117333787 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093955723 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145712213 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12057594 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.134124593 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088945563 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 0.096852281 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087096504 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11517768 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122426207 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107547918 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080819345 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.102797623 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147391371 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080191301 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138865903 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17115493 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086803837 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.113024314 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111437697 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102593586 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088667242 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107263194 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107110475 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092001217 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 0.099962906 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106258062 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.136820068 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169643614 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093307703 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148096129 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134748421 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114929104 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.129985219 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109542957 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13834687 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 0.64752894 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085168777 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152824294 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119765585 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17491386 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103584574 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121360495 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114517412 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121297934 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141980635 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105428514 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 0.142813182 seconds)
    (491/608) benchmarking "6d"...
    done (took 0.185694074 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.122765553 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290173896 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.120719313 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.12925293 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086962077 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107437888 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109003709 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095238844 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111780575 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117511657 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116590949 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100306843 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121684177 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124500441 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.139285544 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08889202 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102570238 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155879929 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.109465188 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118465585 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149778365 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139594965 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0905913 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122419861 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.118341531 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142103679 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086408712 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122699556 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152387841 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111003289 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106768933 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.088907209 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106708812 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174193474 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079311885 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159157902 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124812392 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116115013 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117789581 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115555929 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133858503 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.102923488 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108536946 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126036714 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.093600622 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 0.111096731 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11865887 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 0.087962261 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 0.081036769 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.126019099 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.091802993 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110524754 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084963557 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114385929 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115322565 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103617411 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089202176 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101135826 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.105764585 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100742257 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150626557 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 0.096660636 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103050363 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077685003 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118289423 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325374453 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147179426 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090850031 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122271723 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112658525 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122922621 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124963754 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.137011884 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118263046 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08748753 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086460561 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087005062 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.106867055 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.136666713 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 0.078693062 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.134955144 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.124554401 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130396871 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118448707 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124730427 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113914889 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16015834 seconds)
    (579/608) benchmarking "2d"...
    done (took 0.089930264 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.087173371 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.123303861 seconds)
    (582/608) benchmarking "7d"...
    done (took 0.235510636 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102459083 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111030155 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096434753 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.086310882 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.129663356 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 0.081652843 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 0.081198724 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102547509 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101041308 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10965073 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1171653 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174230401 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101496175 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.100233779 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098289925 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080448866 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089123488 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129438278 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115372348 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122010898 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.130037721 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109713258 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.107699623 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.107966467 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088535008 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108728355 seconds)
  done (took 76.339067692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113215268 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085891871 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.371905982 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.167792311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142302871 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294331226 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.172372068 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24757411 seconds)
  done (took 3.263865228 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07695399 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104484368 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.113671388 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091539823 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075496725 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07639578 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.242046735 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.090027913 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075014992 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100185567 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086091933 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077441116 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436314691 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074173253 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075669483 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086244851 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075965093 seconds)
  done (took 3.624839323 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407237117 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612183793 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.356289631 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084407114 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.184110948 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098553434 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.815073942 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.147639539 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.087947009 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537517838 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.387011414 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.140597752 seconds)
  done (took 19.505567144 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.091684794 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083940381 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.099444783 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.098664819 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086103898 seconds)
  done (took 2.210013159 seconds)
done (took 127.645219926 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.090258808 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.457520411 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.077793692 seconds)
  done (took 2.204576748 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.100309099 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.097996253 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.097292514 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.095706284 seconds)
  done (took 2.048214355 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.083308498 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084717362 seconds)
  done (took 1.813794451 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.240413344 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.187759981 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.106887101 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092091677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.089104687 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.089157373 seconds)
  done (took 1.922724847 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081244111 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080342707 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081371562 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081574369 seconds)
  done (took 1.969660656 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076444427 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074559979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.076599107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080532083 seconds)
  done (took 1.953351426 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.097982985 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.098446488 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.129348096 seconds)
  done (took 1.971561397 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09472591 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.092879548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087791232 seconds)
  done (took 1.923196915 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111554215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.102994619 seconds)
  done (took 1.861521175 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090525224 seconds)
  done (took 1.73655385 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099879521 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110164543 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.142764268 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.125354746 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14987721 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.125288394 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092882937 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093771061 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.087212213 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09429811 seconds)
  done (took 2.766529948 seconds)
done (took 24.439127168 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.091739075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387298248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369060642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101095632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.679296362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36566452 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021049093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102683111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154150371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077566485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096238017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.658614156 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014877264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339534016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002444166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339737559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.661471206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076740559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076356903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077555926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006997409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077206481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07751009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077671722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.661146424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.38572575 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079722076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.340634322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077966281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.083290586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.368869518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.079662555 seconds)
  done (took 16.628078179 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080143041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.133604882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081539643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094678778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.079652882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078544486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.080100774 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077788504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132864834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077806919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.098366426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076533323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.081763362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078579564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.099859076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077786726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.080299225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078247488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077858801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079201631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.098964902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077640668 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079304131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079258538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078892684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.092417681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.080006871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078243202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.079280684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.082927584 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.084403507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.080285567 seconds)
  done (took 4.397007848 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127488599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137364144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082538881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117837326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1220595 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07925077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.158865627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103500493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140197845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078194238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097531245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077323352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114005748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.079887295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.101407027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078648546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.081999366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078676875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07791623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079409252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.100070814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.078074555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079278084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079068359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.079729532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.093986428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.080359345 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078028397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078483369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.083210695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.084803923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.080242611 seconds)
  done (took 4.672107409 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079338749 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081074352 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089672062 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090141651 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075811359 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07797547 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078996843 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075903159 seconds)
  done (took 2.316572732 seconds)
done (took 29.672350171 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087394929 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076017401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079330484 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.096066748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.08247904 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087236062 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0731163 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082669512 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079747148 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079791891 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081641146 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075235568 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07793147 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073291029 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.08102991 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074316324 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0896271 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078842794 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08898872 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.089342173 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077899524 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080830193 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08375531 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08986246 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.090595589 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.090747078 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084582132 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081139418 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076027425 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078875112 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079489355 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089253404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090507596 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.091405681 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076090728 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075397462 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080042364 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.077994972 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.091575145 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085020358 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077111348 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085369488 seconds)
  done (took 5.097762618 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095203457 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098541646 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.09157763 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.088694056 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100041269 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.091171333 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095921163 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086354693 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.086690987 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09546313 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082505773 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.090521422 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.087221196 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.08130407 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.085855819 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.083034237 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088392157 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082136496 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.085975913 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086731025 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096935305 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.080800551 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.096919706 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.088442047 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083649108 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.089669329 seconds)
  done (took 3.99680008 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082531519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093871609 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.101317967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155636624 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121227211 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.088979638 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.089672085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101079419 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10592836 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.076466234 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.081120446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102632698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102135702 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082525525 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07692312 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092906448 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092804518 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.078277177 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.083249654 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106862479 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.098584624 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094104605 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103962778 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.094446385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075907986 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078833412 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.081137177 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.09745388 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079059502 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.088985604 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.080071227 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080914069 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078006916 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08781853 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.079109005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075707423 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.102394188 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088101412 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.089397285 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076918225 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.086521965 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077328266 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.102841088 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.139126336 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075745164 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080795972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080561205 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.088651607 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075287585 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104884118 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088373569 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075840034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076658053 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075082845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07515824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078767989 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077795796 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.079423376 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.086266437 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.083996317 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098734716 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081430172 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094309416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075666169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.086372072 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075580797 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.077134523 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074968302 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10570293 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077755609 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.122872913 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076725743 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074285096 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.087460759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.087050749 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082307067 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075419598 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094707015 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088381939 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079950347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08548063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079567929 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079652856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107199632 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07592555 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075873454 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074514864 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079864791 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079493987 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076999065 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088850854 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075313131 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079957613 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.095091246 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.076301267 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077315575 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079981378 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078698001 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075332515 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087594472 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080059538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077384091 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086320482 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076657907 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079869855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.089923495 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.083226327 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074871676 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078642028 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080530726 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.077443871 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077249352 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.080064508 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.078179032 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083769324 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082697942 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.082792822 seconds)
  done (took 11.749900537 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.178422721 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168565382 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079382307 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.160158952 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085428606 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.0902223 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.16290679 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104384126 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.077253328 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077624362 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.080107758 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119968209 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115283493 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129327256 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.090401376 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07751094 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.100912397 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.124243918 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.16610418 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.160171324 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.100908027 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08542234 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079627449 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078534334 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078686326 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086849066 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.098275512 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086077036 seconds)
  done (took 4.762983508 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086420565 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112934084 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080869676 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.099945299 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096354923 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076922119 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078888451 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078341183 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.092962533 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085875979 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076995275 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082794005 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081077929 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079737781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077285474 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083582562 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084028453 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075725021 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080918625 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082553272 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087389653 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102693987 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080569703 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076265047 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079365787 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076093175 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08518098 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089363854 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076697436 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114442891 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.075010271 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081501876 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.092041681 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077157381 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076485518 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076685794 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076555605 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07683297 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078073475 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074952003 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075465882 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080158126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075284161 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084990691 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.090268315 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078192319 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078544156 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079291824 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07954808 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.074504674 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079697601 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079100316 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079310514 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084190415 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080907218 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.080079053 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077592836 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105522115 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082583215 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075921286 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.075582378 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.075738811 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079252803 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.086335612 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.091889621 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078832526 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075079438 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.077041611 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.089790197 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.089981934 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0758199 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081701843 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074354551 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07839554 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079641871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078813765 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077696601 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075254699 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076455681 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076480951 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077454901 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076817418 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075390528 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.080041516 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074440711 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074947483 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076818793 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078084417 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084994374 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075492503 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081970732 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077297163 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075158294 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080113359 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082234327 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079831553 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.092754099 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088839822 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076862719 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074909388 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.091165197 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080301243 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075981302 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083564161 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.08195928 seconds)
  done (took 10.260945072 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100833016 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076407191 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093499964 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.101335493 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086512248 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082628658 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087424097 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076027052 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093924739 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.081267244 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08444578 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075177741 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087757704 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086358138 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077125956 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087911205 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079857875 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.094545145 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.09171935 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075255351 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085579727 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089253699 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088765993 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091583422 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.090919675 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.092450632 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088437401 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086539908 seconds)
  done (took 4.153706208 seconds)
done (took 41.682759373 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.740212525 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.916638189 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.736892718 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.95413801 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.793384042 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.790959734 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.806330865 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735726235 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.930601174 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.774612892 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.091775976 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.262365999 seconds)
done (took 65.205637659 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.785511389 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.917637378 seconds)
    (2/2) benchmarking "String"...
    done (took 1.972846488 seconds)
  done (took 5.612881653 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 6.747008281 seconds)
    (2/3) benchmarking "different length"...
    done (took 6.749230722 seconds)
    (3/3) benchmarking "different"...
    done (took 2.151749761 seconds)
  done (took 17.318469566 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.020758489 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.421182862 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.966318163 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737444091 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.74067072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.992868785 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.534776074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.185771516 seconds)
  done (took 30.253682269 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.981222092 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.960434569 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.438714109 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.477642793 seconds)
  done (took 15.578713067 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.353159267 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.085531577 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.085496405 seconds)
    (4/4) benchmarking "different"...
    done (took 2.147839397 seconds)
  done (took 10.408309361 seconds)
done (took 90.744079095 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.762639002 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.79404009 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.742042065 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.736891298 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.829231377 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.76494213 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.794177341 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.838829662 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.736253422 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.739733523 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.739460938 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.176109698 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.74526128 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.770373602 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.738315331 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.743976251 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.796526512 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.389846286 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.895895815 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.75076475 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.749722583 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.98021832 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.741018014 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.756931294 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.746275791 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.737940595 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193363387 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.742805769 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.360048375 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.74293204 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773818616 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.006312639 seconds)
  done (took 202.689205346 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.744499887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.857290331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.931284449 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.774886434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.283993644 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.934504825 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.89889878 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.327810796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.747285418 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.763382596 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.995289899 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.745743378 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.016502192 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.741609445 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.739438083 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.792525927 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.998757618 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.032833081 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.742033605 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.947018422 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.771183661 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.883624899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.826253823 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.978376595 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.751960043 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.846572528 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.769449122 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.758007392 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.92277838 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.988045156 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.775795774 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.788464808 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.946970933 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.597857778 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.756124826 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.773517404 seconds)
  done (took 169.829150068 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.922064483 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.746613921 seconds)
    (2/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.743819163 seconds)
    (3/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744421945 seconds)
    (4/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750685293 seconds)
    (5/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.743607456 seconds)
    (6/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.866445382 seconds)
    (7/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866542779 seconds)
    (8/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.432618474 seconds)
    (9/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.249623089 seconds)
    (10/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.747511422 seconds)
    (11/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.800145944 seconds)
    (12/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.746508753 seconds)
    (13/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546454485 seconds)
    (14/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.744433742 seconds)
    (15/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810909785 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.758553065 seconds)
    (17/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743346221 seconds)
    (18/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.762481839 seconds)
    (19/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.771678603 seconds)
    (20/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744616549 seconds)
    (21/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746831687 seconds)
    (22/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866520196 seconds)
    (23/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.759370666 seconds)
    (24/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.741216795 seconds)
    (25/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752912486 seconds)
    (26/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74313805 seconds)
    (27/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751393128 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.134691547 seconds)
    (29/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742481741 seconds)
    (30/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.746414787 seconds)
    (31/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.874079423 seconds)
    (32/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.746239035 seconds)
    (33/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.743947853 seconds)
    (34/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752729299 seconds)
    (35/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.992376864 seconds)
    (36/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.745590168 seconds)
    (37/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747348075 seconds)
    (38/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588823121 seconds)
    (39/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.992230538 seconds)
    (40/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826081076 seconds)
    (41/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744990407 seconds)
    (42/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750265127 seconds)
    (43/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.748822855 seconds)
    (44/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.967842186 seconds)
    (45/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.743317883 seconds)
    (46/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748013029 seconds)
    (47/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.747353048 seconds)
    (48/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.750453872 seconds)
    (49/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.749055168 seconds)
    (50/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868403733 seconds)
    (51/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.748950181 seconds)
    (52/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.87068862 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.748829322 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.250987259 seconds)
    (55/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744327833 seconds)
    (56/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.746501706 seconds)
    (57/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750323002 seconds)
    (58/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.516242075 seconds)
    (59/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.407985295 seconds)
    (60/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.748499358 seconds)
    (61/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.749192811 seconds)
    (62/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.747503476 seconds)
    (63/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74820033 seconds)
    (64/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.752582271 seconds)
    (65/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.156670576 seconds)
    (66/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.140301988 seconds)
    (67/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.748456899 seconds)
    (68/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.748532533 seconds)
    (69/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761916097 seconds)
    (70/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.747433677 seconds)
    (71/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.801850683 seconds)
    (72/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745221039 seconds)
    (73/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.147703596 seconds)
    (74/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.754123899 seconds)
    (75/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.872880143 seconds)
    (76/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93829759 seconds)
    (77/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749772508 seconds)
    (78/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813368064 seconds)
    (79/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839508027 seconds)
    (80/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740332545 seconds)
    (81/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.748194383 seconds)
    (82/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.745550195 seconds)
    (83/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.749883072 seconds)
    (84/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.747077715 seconds)
    (85/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.826052244 seconds)
    (86/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.74239393 seconds)
    (87/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.745318795 seconds)
    (88/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.939413667 seconds)
    (89/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754182497 seconds)
    (90/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.747291458 seconds)
    (91/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802920836 seconds)
    (92/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.816370137 seconds)
    (93/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.744474988 seconds)
    (94/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594733837 seconds)
    (95/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.743545372 seconds)
    (96/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.744341382 seconds)
    (97/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.05584642 seconds)
    (98/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806222631 seconds)
    (99/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741032313 seconds)
    (100/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747157316 seconds)
    (101/118) benchmarking ("log", "Hermitian", 256)...
    done (took 3.881295082 seconds)
    (102/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867957261 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.504414064 seconds)
    (104/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749831399 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.17431476 seconds)
    (106/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.927783558 seconds)
    (107/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752830059 seconds)
    (108/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883264391 seconds)
    (109/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.747491023 seconds)
    (110/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822205633 seconds)
    (111/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75605281 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.747261861 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776799803 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743207124 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.753331763 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.7501803 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.746063018 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.116732363 seconds)
  done (took 406.313715898 seconds)
done (took 782.497456345 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.375941477 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.345204408 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.43354326 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.34865914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.323445657 seconds)
  done (took 13.510025288 seconds)
done (took 15.192175469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 1.809318503 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.832749282 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754324519 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.819897627 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.764472752 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 1.762386736 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 1.77055956 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 1.799089916 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 1.78152871 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.83291792 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 1.761651762 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.749681121 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 1.808731256 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.824878965 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 1.762176581 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.801316741 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 1.761746487 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 1.786422673 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 1.791074768 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.763813627 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 1.777876853 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.794529952 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 1.771553493 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 1.791158098 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 1.790767606 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 1.787799179 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 1.761166966 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.74954954 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 1.74795371 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 1.821306246 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 1.772621278 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.780070077 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 1.758911732 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 1.79310483 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 1.753790331 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 1.749786698 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748322306 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 1.798626329 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 1.757040184 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 1.762251035 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 1.750335504 seconds)
  done (took 74.64145432 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.982732238 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.96666638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798853035 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.964466459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773893206 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98066809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891820462 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.874247412 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873779829 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.74332047 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740943016 seconds)
  done (took 22.266658451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.975094385 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.975289036 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.806711374 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973596906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778669928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969671852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.889960719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.881119321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870841813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744374776 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.74098011 seconds)
  done (took 22.280721408 seconds)
done (took 120.875816919 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.129408114 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.764541832 seconds)
  done (took 5.568219285 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.760202428 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.908834447 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.737103914 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.736616493 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.738430043 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.742252683 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.744095228 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.73851172 seconds)
  done (took 15.780178491 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.735916736 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.737532172 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.735399665 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.73889024 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.736149404 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.735450414 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.741749691 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739114093 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.74394806 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.737071549 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.736093017 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.736053824 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.735863161 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.736676606 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.740647218 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.734428356 seconds)
  done (took 29.476463363 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.737621696 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.735187481 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735809507 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.739520857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.735516267 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.734395608 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.737103667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.734710951 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.734440668 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.742583558 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.738743999 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.739834893 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.740411657 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.739367181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.743370663 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.739264123 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737501321 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.738805915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.743589003 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.737633076 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.743552017 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.73708819 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.739724102 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.739507555 seconds)
  done (took 43.40191525 seconds)
done (took 95.899677099 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.978466264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.319478376 seconds)
  done (took 7.971427805 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.741440771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.739570289 seconds)
  done (took 5.223014731 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.737041717 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741840049 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.740503547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.738338621 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.740106342 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.743904502 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.738576471 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.736306415 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.741503833 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.741045816 seconds)
  done (took 19.069360355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.739708689 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.739849523 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.74098857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.734395128 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.736593867 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.737967718 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.741725686 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.740938914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.738493264 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.73886104 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.741274441 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.740455187 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.739924379 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.739017749 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.739691925 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.742341051 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.742698584 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.737789824 seconds)
  done (took 32.987029566 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.740268628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.73763584 seconds)
  done (took 5.151542181 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.742820718 seconds)
    (2/7) benchmarking "second"...
    done (took 1.7364204 seconds)
    (3/7) benchmarking "month"...
    done (took 1.73708962 seconds)
    (4/7) benchmarking "year"...
    done (took 1.740097337 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.742246894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.738773011 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.737733503 seconds)
  done (took 13.850229923 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.739081081 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.889355809 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.950444316 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.392039985 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.737822372 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.739160962 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.647630486 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.735650188 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.740542573 seconds)
  done (took 19.243386217 seconds)
done (took 105.166560504 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.593235212 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.734138239 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.984763851 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.806626915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.753042382 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.072456273 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.738129468 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.000798664 seconds)
done (took 42.354039523 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.792320197 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.480309568 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.479870557 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.879311587 seconds)
  done (took 15.508069892 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.731739321 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.040031271 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.749668296 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.535387118 seconds)
  done (took 21.729616547 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.097219742 seconds)
    (2/2) benchmarking "read"...
    done (took 2.074521117 seconds)
  done (took 5.841628854 seconds)
done (took 51.542169373 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7351431 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.731779997 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.732741717 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.73663973 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.733007513 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.7321822 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.73223213 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.73383346 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.735303562 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.732609046 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.732998292 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.734302267 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.732952409 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735409474 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733646612 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735102803 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735337629 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.732719626 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734205056 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73319297 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.733746999 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734463656 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.735615838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.735138842 seconds)
  done (took 43.281419163 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.734540259 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.732002531 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.73389958 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.734642455 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.732087026 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.734088638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.734150574 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.733685723 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.732910479 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.732569954 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735435645 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.732556725 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.7341013 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.736387521 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736223145 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.733801233 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.736245292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733742062 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734133463 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735597006 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.735199411 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732790622 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.735668005 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738237861 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.735763659 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736965073 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.73708143 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.736268953 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735768375 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.734599256 seconds)
  done (took 53.711627 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.740708085 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.746312033 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.734635652 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.734879436 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.733708157 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.736300945 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.737233492 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.736173366 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.733487499 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.737107283 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.737381263 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.736640895 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.737835996 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.736938458 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.735828431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.739272676 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.737276588 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.735352465 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.736172163 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.737676983 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.73761992 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.737583929 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.736611589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.738535319 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.737536042 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.739247919 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.737028384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.736914369 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.737064289 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.738079307 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.736045553 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.737850407 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.739904041 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.736702944 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.738130585 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.737320399 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.740316317 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.747710178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.737522988 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.734938825 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.738012386 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.738446503 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.736957235 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.739684945 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.740305174 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.739015124 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.740455721 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.738743342 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.737899717 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.738124838 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.740444823 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.740192844 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.737280877 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.73805378 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.740742039 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.738160617 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.737074306 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.738782799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.738896094 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.737499396 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.740184268 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.740203779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.742020368 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.738503606 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.743141131 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.738622564 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.742652725 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.738312249 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.740097764 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.742204711 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.739342282 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.741728084 seconds)
  done (took 126.835093844 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.738117666 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.741312858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.738437898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.739910586 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741438149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.740939887 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.740582039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738979488 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740992258 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.742928056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740520716 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.741953425 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7403967 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740647918 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742008091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74030675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.740877814 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740204299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.741320586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.741197093 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740698511 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.74199589 seconds)
  done (took 39.968463532 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743157359 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742751889 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.740154935 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740986131 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.743257383 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74100567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.743165322 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741433474 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739589962 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740110172 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742096053 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74156164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741615356 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743921564 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741171849 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74163672 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741814249 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740122086 seconds)
  done (took 33.0244184 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.74128926 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.74299065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.740671426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.742439625 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.743968719 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744793038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742474239 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74518517 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.742720692 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745106918 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.743407826 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744087585 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.742892841 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743484392 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742382187 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.74343793 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.744304609 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743074445 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744467315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742394625 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.744828573 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743321698 seconds)
  done (took 40.032248024 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743893938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744820734 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.742535314 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.742830552 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744103919 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.743320866 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.744474841 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.746288035 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.742745923 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.740884417 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743940929 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.744124089 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.747341783 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.746344228 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.744378307 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743780251 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744651557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.741898898 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744745929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.744143863 seconds)
  done (took 36.558015447 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744741626 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744219162 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.747346704 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745769649 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744085521 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.744546964 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743604355 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.746322846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746173006 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.743237319 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744353556 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.745042675 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746158662 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744900292 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744972975 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745131787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745084312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742300789 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745886371 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745758978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.747110128 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746918567 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744641758 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747600956 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.74751815 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744771262 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746156173 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746749627 seconds)
  done (took 50.548654088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748682905 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744143048 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.748781026 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.746944513 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.747195303 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.748969201 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.749263532 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.745109377 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748826168 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745626565 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.746861445 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.747159676 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74735113 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.748616218 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.749009787 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.746720546 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748632206 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.747058627 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746007744 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746655024 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.74847429 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746587122 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.747556105 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748447006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74747724 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.747835241 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748126444 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750256404 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748707109 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746631316 seconds)
  done (took 54.107427341 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.766214261 seconds)
    (2/2) benchmarking "in"...
    done (took 1.769428044 seconds)
  done (took 5.216872987 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.749003455 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748176546 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.749596466 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746671423 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749539663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.747756508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749427675 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750758769 seconds)
  done (took 15.675240071 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.752069417 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.74743681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.750786873 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.746859346 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.74919389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.750154967 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758728288 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.749905297 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.752746341 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.750309327 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.758953825 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.761280121 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.751265041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752790882 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.749883807 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753856987 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.748408494 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.74997828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.748472851 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.749518711 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747993917 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755651786 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755656567 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.749840846 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.751400465 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.764346822 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.756671993 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.75056967 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752477051 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.757106529 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.752098368 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.752190692 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.751001629 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.753033285 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.748874266 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.750294102 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763039878 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755122428 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.758512879 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751512468 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752594076 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.750664508 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.753738469 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.756772897 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755152063 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.751528195 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.752925397 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.753567114 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.754277301 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.755332754 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.762696062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752821564 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75271991 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758443383 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.754947613 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763411387 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.75172716 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.760156003 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.762258764 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.766184423 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.765114198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.765236471 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756525474 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.755339264 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764085782 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.785974293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763266049 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.755838056 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.754414923 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.754087708 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.761709492 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769388809 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.766303949 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.755377169 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753330952 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.75211719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75480565 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754835866 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761218438 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.757883552 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.754465348 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754365052 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765067299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783283699 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.756118036 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.753389841 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.754557261 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.756807204 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.756513306 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76552728 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.751153685 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.754311125 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.754938565 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.755289851 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.755180165 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.751121418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.75551008 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757464156 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.75573168 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.755328299 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756082047 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76178518 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.767458441 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754183732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754272147 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.764837146 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.755833741 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757436309 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.763522955 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.758339844 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754315591 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.758328861 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.764449408 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.755711491 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75940498 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.765703064 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.756518277 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.761723306 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.755673168 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.756402123 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.765652616 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.790156892 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.757617069 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.75672053 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.762523441 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.771709516 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758444381 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.761351822 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.758305395 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.757721932 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.755810444 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760923563 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.760073836 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.759824742 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758649982 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761202694 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.75712593 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.758548072 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.759604068 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.759141748 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.761044474 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.760930037 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.761103028 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.761965623 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.758446578 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.761365805 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.768415964 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.75613838 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.761401453 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.758221893 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.757231847 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.758965091 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.759990014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.76109432 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.759158388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759478209 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.759078612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.759841611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75804536 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.755809 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759229773 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.757315446 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764270158 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.757885697 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.765339582 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.757795384 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.758820796 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.758805272 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.758133524 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.759874917 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.758606351 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.760161832 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.764723243 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.768296674 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.761936541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.760258019 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.763738291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761520295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760436526 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758231183 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.763146293 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.770171595 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.76090436 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.769812556 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.761064969 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758284382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.759749215 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.7601655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.76475106 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761310136 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.765933232 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.770321202 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773930492 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771742075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.761503948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.765683551 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.761170595 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.765295273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.767991388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.759388981 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.760436464 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763129732 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761450178 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762256031 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.764428636 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.761797744 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.761304886 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.763385554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.762139581 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.763105908 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.760831217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.76337327 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763484493 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.760218634 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762638122 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763186502 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.760845707 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.762904956 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.760320092 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.763539041 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.763384311 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.761618053 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.768182131 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.76520013 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764279779 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.765915726 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.762795465 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.763609031 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.762356425 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766082451 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.764257519 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770223444 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.762416764 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.765622343 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771242013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.762498759 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.764126048 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.766416198 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.764001951 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.762523303 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.768154442 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.774098365 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.762925937 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.763581456 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.764707478 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764628871 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.764785772 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.770625632 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.763365017 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.764515451 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.76531693 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.76702076 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.76592694 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.766694019 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.7663401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.763676533 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.764672742 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765014412 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.762710637 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767249126 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.764027127 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766194365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.764749892 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767959732 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.773866874 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.769787878 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.764429102 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.767509599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.766302588 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.769925185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.767366364 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.7668423 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.768369261 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778537099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.774062516 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775255286 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.767825259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.765612279 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77245351 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.766397084 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.768269348 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766265342 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768876354 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.766457048 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.766372964 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.762643231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768961539 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.763678434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765962995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.765887576 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.771351032 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.763585206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.765017895 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.765310034 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.763714576 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.765364084 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.767007397 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.763993729 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.769304025 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766440882 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.764740914 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.769528538 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.772675099 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76515865 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.769130797 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.76724132 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.766148626 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.767139817 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.76858019 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.766417627 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.769060661 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.775990835 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.772716744 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.778466493 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.767481896 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778932524 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.765347122 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.770890522 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.774521433 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.763414832 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.764643781 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.767959875 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.76856228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775113094 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.765646193 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.768069445 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.773620933 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768770975 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.767547952 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.76610911 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.766515159 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.768903799 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.765950783 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779949032 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.766324942 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.773347919 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772001745 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.764747088 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.767797151 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.766749956 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.768045416 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.772615322 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.768086347 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.77245861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.769205366 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.766374469 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.767918418 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.766154718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.765408415 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.767692017 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.766596688 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779107411 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.766017125 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774795762 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.766212074 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777568881 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767059253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777115037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.765826718 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.771909293 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.769959269 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.769924825 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.7717455 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.771269371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.772719959 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.770045461 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.771013128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.770546884 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.770956599 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.772298758 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.771318282 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.770634341 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.772766208 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783324854 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798152383 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.770499188 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.775160268 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.767810483 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.772352291 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.77533554 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.770024019 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.769027053 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.775506546 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784449759 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77742784 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.771815253 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.771771041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773635133 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771320885 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.771039658 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.772717338 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.769370144 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.770571256 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.77267511 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.773631196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7730558 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.771313305 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.770989366 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776438605 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.772846718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.784400436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.77297296 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.773991417 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774241353 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.771385063 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.770220003 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.773698352 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.773936723 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773473169 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773510129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.77332369 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780346131 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.783681 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.775111128 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.772122594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.773053302 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.773613801 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.77766647 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773286101 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.773363406 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77372136 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.774428684 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.773700516 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.777578713 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.773969911 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.773606631 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.774498636 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772261691 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776145194 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.779888246 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77611329 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.775277062 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.773324771 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775652575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.772757372 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.77710312 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.784377286 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.77613863 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.786822405 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.781132168 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.780570834 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.776027489 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780111556 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.783913158 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.775474333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.77687409 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.775780609 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.775292235 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.77678199 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.781001505 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774972039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.78371246 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.774417966 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.776867398 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784841323 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.77803159 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775811049 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.778150383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.780430535 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.776522151 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.773018214 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.774208673 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.77522428 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784399227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.77783477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771489956 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776499933 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774961798 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.777477117 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78079409 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774760247 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.777958569 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.772997189 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.776357994 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775151101 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774248221 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.774532769 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.776862887 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.778856516 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.778349309 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787137521 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.774197497 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.777453152 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.776216814 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.777692683 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77741484 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774795498 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.775450705 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.775082756 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.776788415 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775864749 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77950333 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.781842151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.778076401 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.776353391 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.781105802 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776877683 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780897552 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.790727677 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.785286455 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.776872011 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.775070484 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.778385247 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.781167845 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776213893 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.778819782 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777110268 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.78092788 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.775194761 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776171754 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.77544372 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.781814109 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795991423 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.777202321 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776992186 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.779423963 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784276885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.777163347 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776715767 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.776694461 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.781445478 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.782065328 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.787105406 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.777488602 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789018727 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778186102 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.781058807 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.783825059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.783177589 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.790419834 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.785244334 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779116393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.778471194 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.78501732 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.800463463 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775033809 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789843161 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815647648 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.780956234 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.781551253 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.781260918 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778541459 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.778268996 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.782447312 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.779885586 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.781239212 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777164236 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.779197787 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.782946893 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787877382 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.781601753 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.780069794 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.776431439 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.779975614 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.780801852 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.779648709 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.779849908 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.781875641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.781595199 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.778246566 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.780254977 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783515569 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792419501 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.795245696 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.779729862 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.257727029 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.782887701 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.786770527 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.787852297 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793988436 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.790801199 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.781726408 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.78311839 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.783984558 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781950893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.780627976 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.783393648 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.78279613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.782742125 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.781091699 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.795362973 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790383768 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.787979797 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.782238691 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78079603 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.781024256 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784846766 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783153394 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781943416 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.784277266 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.783290703 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790599308 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.780699247 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.781144844 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.786329634 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.793573396 seconds)
  done (took 1056.387559018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784618648 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781647183 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781664486 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782411707 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778515038 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778379804 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780474291 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782850898 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782241165 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780078671 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783439192 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785190177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785856871 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784814974 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781409284 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782762509 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784748803 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781646281 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783668146 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78302183 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784225712 seconds)
  done (took 39.14916444 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.783704116 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.782575654 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784925542 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786870719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78442154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.785210268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.7820049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783235632 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784412826 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783600019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.784977283 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782973215 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.785153199 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.782875073 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781835345 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783826611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784087218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785074468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.785782324 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.785174381 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783601018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.784433146 seconds)
  done (took 40.967800958 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.783523679 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.785806362 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.785842409 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.782488972 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.784885968 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.785186679 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.785057021 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.785322465 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.783754196 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.787468022 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.784608301 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.787510375 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.794634428 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793267277 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.788320863 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.784729178 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.930613446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.784536493 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.785155537 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.784718648 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.785389836 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.792953401 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.783421802 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.784723072 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.786135467 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.785435571 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.785211343 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.784181974 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.785153352 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.787902853 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.791805064 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.78411552 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.786570324 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.787030215 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.786263168 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.785666986 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.788784578 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.787495683 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.783046193 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.783841733 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.797353811 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.811244724 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.785922672 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.792463475 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.784274707 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.783367036 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.789316133 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.795545876 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.784160861 seconds)
  done (took 89.433004765 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.786109277 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.786307309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786836544 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.788000421 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.785276379 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.786589953 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.784257582 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786410403 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.785131191 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.78558282 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.785078629 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.789166663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.784334158 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.785879515 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.783763071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.782880125 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786768507 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788011072 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.785354702 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.785911773 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.782084988 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.787737874 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.786521443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.788249271 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79002575 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792224039 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.790805953 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.791894392 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.788454687 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.793329289 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.791993782 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.792167651 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.79059822 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.789250978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.789716695 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.791274892 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.788109045 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.79028867 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.789444225 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.792805366 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790593542 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.788567614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.79034484 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.791344762 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.789784171 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.790281622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790616699 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.789785836 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.789400052 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.792089115 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.791811695 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.793165536 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791872251 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.792097093 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795009953 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.791633755 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.793554072 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.793464087 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.793743273 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.793270768 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.793745938 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79092231 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.795214251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.793414153 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.794931088 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.793224376 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792919085 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795719728 seconds)
  done (took 123.418281776 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795087661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.794328083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795363465 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794061544 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792843024 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.795088387 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793968781 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.796038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.794362939 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793641174 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.794920298 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.795149029 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.795449023 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.795314456 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.794532786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.792801157 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793659555 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794864672 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793927202 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792593753 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.79325554 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795089061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792437716 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.794498207 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.794841587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793987126 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.793854458 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794281425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79508259 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795664039 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794099878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.793922318 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.791942521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79689867 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.795723096 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.795862343 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79140159 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795525318 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.796472125 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797655503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.795313742 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790764329 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79543682 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.793251799 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791931117 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.796429039 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.797536826 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.791667443 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.792439691 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.791435733 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.794836267 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795029805 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795492054 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796075748 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79346497 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.793622836 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796591917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793857245 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79554463 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.793704236 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796327809 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.795037318 seconds)
  done (took 112.983789774 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797237889 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794962773 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.794815583 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.794574449 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793722427 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795979108 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795210312 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.795357242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796413913 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.794086015 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795361241 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797969066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79873826 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794311722 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79785776 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798260923 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797648492 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79913315 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794090407 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796163427 seconds)
  done (took 37.652895511 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.796685639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798553928 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.792017942 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.79891512 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.796927577 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796798848 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.795327216 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79526119 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799109419 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800423477 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795063936 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798014198 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797657224 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798641511 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.797035191 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.797593722 seconds)
  done (took 30.482637238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.799258225 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796742601 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.79845434 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.799459061 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.801150781 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.798963853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.798533547 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.799181439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.798999795 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.800055023 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.799783127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.798618026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.799023406 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.798976081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.800023836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.801553479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.798432168 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.798873362 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.802301107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.798642158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.80108766 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.801173617 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.797020918 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.79934007 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.800268743 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.799115185 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.799133779 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.799169401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.800211529 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.801050612 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.800734431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.799263656 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.801528113 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.800879399 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.802034106 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795849636 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.79994376 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.798891967 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.801609203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.797324453 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.799888673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.800833113 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.797154381 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.801427649 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.799466696 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.80155388 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.798572503 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.79865902 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.800315335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.80013726 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.800347017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.796668676 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.799758059 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.80204952 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.800005209 seconds)
  done (took 100.711360719 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800404597 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80314249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798673994 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.800468096 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.801462175 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.797390085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.801179105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.798911218 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800468727 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800291461 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798146791 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.80053022 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802375106 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801973898 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.80081022 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800702231 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800480836 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.802105268 seconds)
  done (took 34.142912043 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803261378 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803190163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.800001387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.801173161 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.80001513 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.802917139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802800428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.80088781 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802112989 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80107248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800015174 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.80195951 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801907314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.800339518 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80081202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799691553 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.801436286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802423307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801962496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799449782 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799966051 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801458505 seconds)
  done (took 41.363157504 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.803397666 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.801407411 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.815108778 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.829244061 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.824494425 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.844162626 seconds)
  done (took 12.651415566 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799951146 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803143349 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.801146159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801889922 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803327 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801992238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804485499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804094835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803549621 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803564927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799288935 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803752359 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802463067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80386975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803955795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801413126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80420335 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803638265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801241638 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802139487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803097666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805807769 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80303222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805397493 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802906631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800715649 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800529133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804662766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807126478 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804915809 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803933423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801388225 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801899521 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805084121 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802829736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802846598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805913719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804867556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803586574 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80371924 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.802573657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803580621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80400942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803958164 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805225601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804837595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802379302 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804176495 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804627471 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804865121 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807795165 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804431954 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80537309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804198374 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802006872 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805312736 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80494402 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805123432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806736573 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80721046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8064927 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803897073 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805360293 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80695797 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806039532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80567785 seconds)
  done (took 120.791591011 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807292292 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802604937 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802362086 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807068904 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806521227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803457317 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804432686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806061713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804523011 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803837767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802478229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801537454 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801827786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801045983 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805489032 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803015499 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804314534 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800090329 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804317851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804024236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806765134 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803617487 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80374723 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804718182 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804800014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805363078 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805660079 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808723165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805861602 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803570709 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802501734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805878993 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80489781 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803902516 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808070809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806524733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803973651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807215586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810662605 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808255314 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808588279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804724635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809402686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809488848 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808826714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809329613 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806929391 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806246859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806329368 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808608791 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810660663 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809030083 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807550928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803293367 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80673131 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806215829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805566898 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806566288 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807618748 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807431506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807636644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80826537 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807402892 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805401738 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80447223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80475946 seconds)
  done (took 120.919003884 seconds)
done (took 2461.681274412 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.854313673 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.925444405 seconds)
  done (took 15.521783853 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.975038882 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.926098679 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.807521542 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.816247265 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.801350393 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.817373247 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.804998958 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.806580332 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.804964573 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.806496658 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.806236034 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.990243603 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.808685935 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.802648941 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.806569981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.897789675 seconds)
  done (took 51.231510499 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.806052001 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.806062953 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.818589185 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.808095533 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.805604383 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.817855493 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.840200078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.811807935 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.841279557 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.818791213 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.878166053 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.818791106 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.80761751 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.858905548 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.819249806 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.820078028 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.899903835 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.887445379 seconds)
  done (took 34.704218827 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.88971061 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.824033063 seconds)
  done (took 10.459100459 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.828666513 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.822048171 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.824201816 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838923997 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.822425957 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.832026747 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.845129759 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.839673457 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.837998388 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.839110863 seconds)
  done (took 70.092311274 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.811797083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.814496936 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.812523441 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.807814216 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.807929707 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.810628631 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.808478399 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.812872207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.495810876 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.843436768 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816637309 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815505013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.807975001 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.813116176 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.807059428 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83017375 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.91960558 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.808374377 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.809552608 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.813093083 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809258201 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.884424953 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.824148246 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.813591222 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.838663135 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.502756002 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.819667194 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.814037154 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.922041892 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.804267261 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.810813702 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.994198781 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.811922194 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.26068995 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.078693952 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.814220606 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.81542766 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.814568811 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.805581683 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944347839 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.810110354 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.818156442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.798076296 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.055192284 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.895258014 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.853267485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.156529508 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.81534837 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.81074647 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.839756634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.814226905 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.815576082 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.822110989 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.325557056 seconds)
  done (took 129.624129404 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.808212004 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.153262667 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970259834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.813532938 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087504086 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014724082 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.810330201 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858387097 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815460932 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033834014 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063571941 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.913726536 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807925607 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.804675219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80921864 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805779984 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959643582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882039237 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.813257206 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.80480141 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836125064 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051354317 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931973251 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80891178 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.831402142 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020169206 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931733531 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909783135 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.601902319 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.805291908 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87015349 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.809784127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.812318672 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.808248644 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963713482 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.904226043 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892448913 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.810393644 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80809948 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.810026148 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.466383756 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008145082 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.904420439 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940899974 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061680721 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015793083 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593234577 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.807457079 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.543566362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975867042 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037013046 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.040683469 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.930026144 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.813907982 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.15710813 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.808168365 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.813337691 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059715177 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062547047 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903475342 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812232975 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.811396872 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.810327223 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0481086 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.812187384 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.904010529 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.813309457 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.80868947 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.905754947 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906574372 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054608109 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023680492 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839755444 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.154664127 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.318525458 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054695028 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872704163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059887022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.809388156 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.81066611 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885016016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.652457986 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058787184 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.05605767 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.053868493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843889367 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.521625819 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.808659975 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.036448588 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.031043814 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.067127499 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053425173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.048311719 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.163248247 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810468348 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.807119341 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.121672413 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930047722 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815374609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159067285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036089647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.339091386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840113717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112707001 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939401762 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810917208 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.44171398 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.809907459 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036204671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.84722061 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.810877238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813597517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.025312541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.808048327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811035947 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.482693339 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.869728509 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.811187677 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04077859 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810830298 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075465059 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810831406 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044050019 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.84265243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83755401 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.982586728 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.056923745 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.809392997 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05099704 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052938963 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.924838742 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036196865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.546994324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.810362781 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092376097 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.814346913 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.810229535 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.980565002 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816267008 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979656608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.811729893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104913288 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83173189 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040897532 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816577666 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.064795044 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.841784103 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861811914 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.816159962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.933477944 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812658474 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.64105745 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968454745 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.81693185 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81163693 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.378402475 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.812053434 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957074183 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.039918788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837142876 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88667068 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.474728932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.808336207 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891184845 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839775067 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.201473139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.815659087 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.064823051 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.814328187 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.812544582 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.811060115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.047849064 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.991725328 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.817311369 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.808937637 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.72284111 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.812266558 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812762407 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991837588 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.157124008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.810347611 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014408085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819592033 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939860683 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.815121219 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.894837733 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.154222364 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810674525 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.810015021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.812011076 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.813159363 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.813653774 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021209622 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.839288163 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.303724915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.951644882 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0887328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.126605975 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.060545257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.858069178 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.813625852 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066460391 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.818312114 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.87574746 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.817876359 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833658668 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040013705 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821946549 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079480773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091764912 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.660708307 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862675466 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.819757041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815075478 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.812497895 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962413812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903239192 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.819242373 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.816266067 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931227629 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943186345 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024134891 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.819886122 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.893157059 seconds)
  done (took 890.254021399 seconds)
done (took 1203.627933777 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.817119646 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.813767301 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.821173609 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815931553 seconds)
  done (took 29.014944529 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.821467977 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.822965939 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.817675942 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.819423206 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.819125629 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.818033124 seconds)
  done (took 12.667462811 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.830013756 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.813211638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818579982 seconds)
  done (took 21.21170535 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.88895207 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.235366376 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.94555194 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.257391831 seconds)
  done (took 10.077461583 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.817546179 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.819871922 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.818344203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819055066 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.820411533 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.819677823 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.81936035 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.819211959 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.82106113 seconds)
  done (took 18.12604765 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.419910286 seconds)
done (took 97.265283885 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", identity, Float32, false)...
    done (took 1.923545946 seconds)
    (2/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.231628897 seconds)
    (3/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.820671008 seconds)
    (4/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.724516899 seconds)
    (5/341) benchmarking ("perf_sum", Bool, false)...
    done (took 1.891387587 seconds)
    (6/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.841999243 seconds)
    (7/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143015551 seconds)
    (8/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.819415194 seconds)
    (9/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.970841401 seconds)
    (10/341) benchmarking ("perf_sum", Bool, true)...
    done (took 1.924895407 seconds)
    (11/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.027576974 seconds)
    (12/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.882458824 seconds)
    (13/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.821049002 seconds)
    (14/341) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.145289468 seconds)
    (15/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.816256052 seconds)
    (16/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.839247564 seconds)
    (17/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.125255877 seconds)
    (18/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.959780764 seconds)
    (19/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.108794771 seconds)
    (20/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.955543445 seconds)
    (21/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.908956282 seconds)
    (22/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.496835431 seconds)
    (23/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.036639619 seconds)
    (24/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.825334662 seconds)
    (25/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 5.324613558 seconds)
    (26/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.228709624 seconds)
    (27/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.146083841 seconds)
    (28/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.018367565 seconds)
    (29/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.140941749 seconds)
    (30/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.12474873 seconds)
    (31/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.293440506 seconds)
    (32/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.126628488 seconds)
    (33/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.799447927 seconds)
    (34/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.964809745 seconds)
    (35/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.120756569 seconds)
    (36/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.653840077 seconds)
    (37/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.825838481 seconds)
    (38/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 2.918305395 seconds)
    (39/341) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.76916329 seconds)
    (40/341) benchmarking ("map", identity, Int64, false)...
    done (took 1.925854786 seconds)
    (41/341) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.846948952 seconds)
    (42/341) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.849033669 seconds)
    (43/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.92329967 seconds)
    (44/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.905085746 seconds)
    (45/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.212861521 seconds)
    (46/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.838271616 seconds)
    (47/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.845829303 seconds)
    (48/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.009359416 seconds)
    (49/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.909523851 seconds)
    (50/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928761666 seconds)
    (51/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.819112448 seconds)
    (52/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.084337324 seconds)
    (53/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.879978226 seconds)
    (54/341) benchmarking ("map", identity, Bool, false)...
    done (took 1.894417128 seconds)
    (55/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.997144394 seconds)
    (56/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.193085547 seconds)
    (57/341) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.256358585 seconds)
    (58/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.07928166 seconds)
    (59/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.987424024 seconds)
    (60/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.956894799 seconds)
    (61/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.927496351 seconds)
    (62/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.058677242 seconds)
    (63/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.82410611 seconds)
    (64/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.281295872 seconds)
    (65/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.821495238 seconds)
    (66/341) benchmarking ("sort", Bool, false)...
    done (took 2.035862753 seconds)
    (67/341) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.738597514 seconds)
    (68/341) benchmarking ("map", abs, Int8, true)...
    done (took 1.984082372 seconds)
    (69/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.82943152 seconds)
    (70/341) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.250064692 seconds)
    (71/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.817542121 seconds)
    (72/341) benchmarking ("sort", Int64, false)...
    done (took 5.559378686 seconds)
    (73/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.690102492 seconds)
    (74/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.980924083 seconds)
    (75/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.583713472 seconds)
    (76/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.88416033 seconds)
    (77/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.067389457 seconds)
    (78/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.68183921 seconds)
    (79/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.276758326 seconds)
    (80/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.975262367 seconds)
    (81/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.855659954 seconds)
    (82/341) benchmarking ("perf_sum", Int64, true)...
    done (took 1.832742291 seconds)
    (83/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.079426018 seconds)
    (84/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.951670188 seconds)
    (85/341) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.590606337 seconds)
    (86/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.908578923 seconds)
    (87/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.919034671 seconds)
    (88/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.205581103 seconds)
    (89/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.213226928 seconds)
    (90/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.150449372 seconds)
    (91/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.997882149 seconds)
    (92/341) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.381591094 seconds)
    (93/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977577266 seconds)
    (94/341) benchmarking ("map", identity, Int8, false)...
    done (took 1.901936135 seconds)
    (95/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148894502 seconds)
    (96/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.842432494 seconds)
    (97/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.878327497 seconds)
    (98/341) benchmarking ("map", abs, Bool, true)...
    done (took 1.954212451 seconds)
    (99/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.840300616 seconds)
    (100/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.821301009 seconds)
    (101/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.110026085 seconds)
    (102/341) benchmarking ("map", identity, Float64, false)...
    done (took 1.927051617 seconds)
    (103/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.008268812 seconds)
    (104/341) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.916751512 seconds)
    (105/341) benchmarking ("collect", "filter", Complex{Float64}, true)...
    done (took 3.193869335 seconds)
    (106/341) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.058248216 seconds)
    (107/341) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.194170012 seconds)
    (108/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.380216413 seconds)
    (109/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.914511239 seconds)
    (110/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.021550726 seconds)
    (111/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.543565795 seconds)
    (112/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.474038757 seconds)
    (113/341) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.739879909 seconds)
    (114/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.833556682 seconds)
    (115/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.028125958 seconds)
    (116/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.941810452 seconds)
    (117/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.818937183 seconds)
    (118/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.8257285 seconds)
    (119/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.819709785 seconds)
    (120/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.201786433 seconds)
    (121/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25503248 seconds)
    (122/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.32159335 seconds)
    (123/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.829639235 seconds)
    (124/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.317309947 seconds)
    (125/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.98185027 seconds)
    (126/341) benchmarking ("perf_sum", Float32, false)...
    done (took 1.894591788 seconds)
    (127/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.524751632 seconds)
    (128/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.265782633 seconds)
    (129/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.814468538 seconds)
    (130/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.341426946 seconds)
    (131/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 2.859260858 seconds)
    (132/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.934293725 seconds)
    (133/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.711626686 seconds)
    (134/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.256128654 seconds)
    (135/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.654808116 seconds)
    (136/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.152057101 seconds)
    (137/341) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.285364215 seconds)
    (138/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.813266687 seconds)
    (139/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.916172728 seconds)
    (140/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.041335324 seconds)
    (141/341) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.704705857 seconds)
    (142/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.562359204 seconds)
    (143/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.098905617 seconds)
    (144/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.789944248 seconds)
    (145/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.150116153 seconds)
    (146/341) benchmarking ("map", abs, Float32, false)...
    done (took 1.91785179 seconds)
    (147/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.766953509 seconds)
    (148/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.284174152 seconds)
    (149/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.482107249 seconds)
    (150/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.020143073 seconds)
    (151/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.856073005 seconds)
    (152/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.639466534 seconds)
    (153/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.818713478 seconds)
    (154/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.890461599 seconds)
    (155/341) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.094544129 seconds)
    (156/341) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.21702577 seconds)
    (157/341) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.848919777 seconds)
    (158/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.063352735 seconds)
    (159/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.065571846 seconds)
    (160/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.495463058 seconds)
    (161/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.173889242 seconds)
    (162/341) benchmarking ("map", abs, Bool, false)...
    done (took 1.900333588 seconds)
    (163/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.507463376 seconds)
    (164/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.837465592 seconds)
    (165/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.895132995 seconds)
    (166/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.820830688 seconds)
    (167/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.026750218 seconds)
    (168/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.029230062 seconds)
    (169/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.844696334 seconds)
    (170/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.131017997 seconds)
    (171/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.903915397 seconds)
    (172/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.684465079 seconds)
    (173/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.84359564 seconds)
    (174/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.813239237 seconds)
    (175/341) benchmarking ("collect", "all", Float32, false)...
    done (took 3.392329069 seconds)
    (176/341) benchmarking ("map", abs, Float64, false)...
    done (took 1.938919443 seconds)
    (177/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.961598308 seconds)
    (178/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.97809684 seconds)
    (179/341) benchmarking ("collect", "all", Complex{Float64}, false)...
    done (took 2.026718461 seconds)
    (180/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.752799649 seconds)
    (181/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.828503236 seconds)
    (182/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.426909877 seconds)
    (183/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.817530899 seconds)
    (184/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.820786109 seconds)
    (185/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.914953427 seconds)
    (186/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.906363348 seconds)
    (187/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.885981972 seconds)
    (188/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.108283261 seconds)
    (189/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.503469249 seconds)
    (190/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.729272955 seconds)
    (191/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.823741655 seconds)
    (192/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.875360424 seconds)
    (193/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.150257922 seconds)
    (194/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.674860423 seconds)
    (195/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.217725329 seconds)
    (196/341) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.898152164 seconds)
    (197/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.918362961 seconds)
    (198/341) benchmarking ("sort", BigFloat, false)...
    done (took 6.814159322 seconds)
    (199/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.10221935 seconds)
    (200/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.882251574 seconds)
    (201/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.451972132 seconds)
    (202/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.130514491 seconds)
    (203/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.132268845 seconds)
    (204/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.299895865 seconds)
    (205/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.816531009 seconds)
    (206/341) benchmarking ("collect", "all", Int8, true)...
    done (took 1.991449078 seconds)
    (207/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.038066801 seconds)
    (208/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.224580128 seconds)
    (209/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.10219813 seconds)
    (210/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.818375413 seconds)
    (211/341) benchmarking ("map", abs, Int8, false)...
    done (took 1.974660889 seconds)
    (212/341) benchmarking ("map", abs, BigInt, false)...
    done (took 6.820934785 seconds)
    (213/341) benchmarking ("sort", BigInt, false)...
    done (took 8.482681702 seconds)
    (214/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.887110878 seconds)
    (215/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.042627403 seconds)
    (216/341) benchmarking ("perf_sum", Int8, true)...
    done (took 1.825856553 seconds)
    (217/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.035015553 seconds)
    (218/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.841601081 seconds)
    (219/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.8416298 seconds)
    (220/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.979470503 seconds)
    (221/341) benchmarking ("sort", Float32, false)...
    done (took 5.536254593 seconds)
    (222/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.06165835 seconds)
    (223/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.159971674 seconds)
    (224/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.956622717 seconds)
    (225/341) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.951774614 seconds)
    (226/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.03443598 seconds)
    (227/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.823922909 seconds)
    (228/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.157747778 seconds)
    (229/341) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.957826309 seconds)
    (230/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.844187622 seconds)
    (231/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.819832731 seconds)
    (232/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.872116911 seconds)
    (233/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.050231643 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.536665346 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.020451304 seconds)
    (236/341) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.945113601 seconds)
    (237/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.81840657 seconds)
    (238/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.908661816 seconds)
    (239/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.820255936 seconds)
    (240/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.092077793 seconds)
    (241/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.965877711 seconds)
    (242/341) benchmarking ("map", abs, Int64, false)...
    done (took 1.950891317 seconds)
    (243/341) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.976201074 seconds)
    (244/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.930957036 seconds)
    (245/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.853453953 seconds)
    (246/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100750152 seconds)
    (247/341) benchmarking ("perf_sum", Float64, false)...
    done (took 1.907427626 seconds)
    (248/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.839392947 seconds)
    (249/341) benchmarking ("perf_sum", Int8, false)...
    done (took 1.828444527 seconds)
    (250/341) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.628993419 seconds)
    (251/341) benchmarking ("collect", "all", Complex{Float64}, true)...
    done (took 2.352639241 seconds)
    (252/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.825341824 seconds)
    (253/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.576237567 seconds)
    (254/341) benchmarking ("perf_sum", Float32, true)...
    done (took 1.933789151 seconds)
    (255/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.214965564 seconds)
    (256/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.07839973 seconds)
    (257/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.484035616 seconds)
    (258/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.022108307 seconds)
    (259/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.146336714 seconds)
    (260/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.955010581 seconds)
    (261/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.618820678 seconds)
    (262/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.837761677 seconds)
    (263/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.827138614 seconds)
    (264/341) benchmarking ("collect", "filter", Complex{Float64}, false)...
    done (took 2.872130327 seconds)
    (265/341) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.994352897 seconds)
    (266/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.952070338 seconds)
    (267/341) benchmarking ("collect", "all", Bool, true)...
    done (took 1.953537406 seconds)
    (268/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.319340147 seconds)
    (269/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.168272827 seconds)
    (270/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.751964775 seconds)
    (271/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 2.911500036 seconds)
    (272/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.855967398 seconds)
    (273/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.895564613 seconds)
    (274/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.763990972 seconds)
    (275/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.120027278 seconds)
    (276/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.936694252 seconds)
    (277/341) benchmarking ("collect", "all", Float64, false)...
    done (took 1.929783992 seconds)
    (278/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.021437772 seconds)
    (279/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.826737574 seconds)
    (280/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.819143824 seconds)
    (281/341) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.953356679 seconds)
    (282/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.21160035 seconds)
    (283/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 2.897986907 seconds)
    (284/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.835339059 seconds)
    (285/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.944862298 seconds)
    (286/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.24603139 seconds)
    (287/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.822511913 seconds)
    (288/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007632217 seconds)
    (289/341) benchmarking ("collect", "all", Int8, false)...
    done (took 1.901791077 seconds)
    (290/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.136243988 seconds)
    (291/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.944689251 seconds)
    (292/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.140946709 seconds)
    (293/341) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.848313216 seconds)
    (294/341) benchmarking ("collect", "all", Bool, false)...
    done (took 1.896669565 seconds)
    (295/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.912630727 seconds)
    (296/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.15230174 seconds)
    (297/341) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.94946883 seconds)
    (298/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.141829399 seconds)
    (299/341) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.725136582 seconds)
    (300/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.939370757 seconds)
    (301/341) benchmarking ("perf_sum", Int64, false)...
    done (took 1.842952131 seconds)
    (302/341) benchmarking ("collect", "all", Int64, false)...
    done (took 1.927935421 seconds)
    (303/341) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.951222593 seconds)
    (304/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.838664129 seconds)
    (305/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067461987 seconds)
    (306/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.06525505 seconds)
    (307/341) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.665995902 seconds)
    (308/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.250855075 seconds)
    (309/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.311014606 seconds)
    (310/341) benchmarking ("sort", Int8, false)...
    done (took 4.707351965 seconds)
    (311/341) benchmarking ("sort", Float64, false)...
    done (took 5.603203914 seconds)
    (312/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.446472119 seconds)
    (313/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.137231129 seconds)
    (314/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.025496201 seconds)
    (315/341) benchmarking ("perf_sum", Float64, true)...
    done (took 1.911476728 seconds)
    (316/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.154042726 seconds)
    (317/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.02113219 seconds)
    (318/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.110764019 seconds)
    (319/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 2.977211609 seconds)
    (320/341) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.603483814 seconds)
    (321/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.104215336 seconds)
    (322/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.628774278 seconds)
    (323/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.126363096 seconds)
    (324/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.354133719 seconds)
    (325/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.22687249 seconds)
    (326/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.979483933 seconds)
    (327/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.084928735 seconds)
    (328/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.917400371 seconds)
    (329/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.840639701 seconds)
    (330/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.826136167 seconds)
    (331/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.811365352 seconds)
    (332/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.928671324 seconds)
    (333/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.009039755 seconds)
    (334/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.445235481 seconds)
    (335/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.213443196 seconds)
    (336/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.839820505 seconds)
    (337/341) benchmarking ("map", identity, Bool, true)...
    done (took 1.944791543 seconds)
    (338/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.843255606 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.023172263 seconds)
    (340/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.873814512 seconds)
    (341/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.819982945 seconds)
  done (took 1082.310683016 seconds)
done (took 1084.156755822 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.83865939 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.832694846 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.816033076 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.837532758 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.929336177 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.862901129 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.829297409 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.81907105 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.866225448 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.866700656 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.81387232 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.859934212 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.816297784 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.816644738 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.817634524 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831876473 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.121198997 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.84602031 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.834443464 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.82899988 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.833547264 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.814623372 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.86580872 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.861404086 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.820920101 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.822354809 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.820836044 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.835832209 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.929460696 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.820264187 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.822295432 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.828959602 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.121498857 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.844952402 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.815932932 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.836690487 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.832325867 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.828468436 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.821561794 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.850283601 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.264988191 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.823438226 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.818110738 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.817728996 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.818422081 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.82430458 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.819819042 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.825483236 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8328672 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834409037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.257651972 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.839423938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.822693366 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.818124506 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.831297196 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.817474043 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.823242573 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836641857 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.837661859 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834918454 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.10932265 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.854798713 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.823355795 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.837483684 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.827513162 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.292758005 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.823902398 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.826004069 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.26633988 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.83268768 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.29300625 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.834816203 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.821815914 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.835439205 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.851754418 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.121838713 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.844846344 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.818765935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.828074874 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.81669683 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.832012444 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834214373 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.825680523 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.819863295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835904175 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.866180637 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.833383663 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.820133283 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.832283417 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.839847947 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.828780028 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.832580474 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.823947734 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.819361204 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.832787095 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.825171068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.824232259 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.824238007 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.825734404 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.833773697 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.264345106 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844482892 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.818688508 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.818191691 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.82054357 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.835225349 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.264604508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.828115754 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.844623659 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.871551766 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.82264232 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.112614618 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.852535439 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837934957 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.83316666 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.823229572 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.819991974 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111534105 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.289505393 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.843168695 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.822217402 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.819541255 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839388072 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.823641179 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.818840738 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.126706018 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.852037339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838083189 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.944755138 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.834771276 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.854097135 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.819168721 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.825322047 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.872438724 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839112603 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.855305641 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.825132541 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838822266 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.839814869 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.819516826 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.833398919 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.835256756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.822350943 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.830437355 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.820514406 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.871772864 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837486842 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839052461 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.845349004 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.945542817 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.821683806 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.112972963 seconds)
done (took 286.607445658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.899051584 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.819196114 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.913404141 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.821367434 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.909019139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.89394731 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.821259187 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.822175454 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.821797015 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.305567152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.821401304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.82721356 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.820210842 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.822546547 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.891646459 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.822026431 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.821450972 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.25166473 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.82273233 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.901750461 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.823234285 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.822577903 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.822106431 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.342228785 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.819393892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.822503008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.905766649 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.821831464 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.257907995 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.822370996 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.821350352 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.291824371 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.90673586 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.850047675 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.830180232 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.830415876 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.909270674 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.831272197 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.889771797 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889982171 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.92141823 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856167597 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.822814053 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.822300042 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.825722458 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.824504063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.823138266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.855473716 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.822525431 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.828537538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.255071625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.830976561 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.8287051 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.823608878 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.823924309 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.850835734 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.823807177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.824661502 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.903410369 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.824744483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.889919628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.310739788 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.307165847 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.82464089 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.823897975 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.824330697 seconds)
  done (took 182.071612566 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.890236135 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.900557071 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.889599429 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.828989435 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.872485861 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.890731203 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.839020581 seconds)
  done (took 14.871183515 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.831598736 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.824414476 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.875543037 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.876134892 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.823943027 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.97785248 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824314471 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.835450494 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.82920999 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.852072175 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.82560578 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824938084 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.831372108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.824538016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.875287378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.836880264 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.939944402 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.826547424 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.825009187 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.972794169 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829827571 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.83293669 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.851674202 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.836527355 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.826229101 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.832084617 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.389866299 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.826329811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.82631237 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.825107487 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825913057 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.866337731 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.825493711 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.824887135 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826244273 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942783323 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.825909245 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826119123 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.826210186 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.825097908 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.826454758 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.826611711 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.826405646 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.825781238 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.825916766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.849255367 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.826479038 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.826197177 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.826365779 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.82668534 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.852181397 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.82664291 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.8263648 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.831096552 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.868750459 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834330451 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.827211708 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.827084586 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.827274589 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826256052 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.974625962 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.877924608 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.827703962 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.877777632 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826922866 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.826884645 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.826781372 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.826616793 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921125004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.827787198 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879359686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.827365798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.985348989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.850541358 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.829214622 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.830445768 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.831405227 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.828333234 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.82503156 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.834350454 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.827905184 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.829462962 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.834609799 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832731905 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828267294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940739227 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.967643016 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.829038786 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.829907434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.835897387 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.828061548 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.871944303 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.828811336 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.827892678 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890660348 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.944362102 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.855701391 seconds)
  done (took 201.560570976 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.836176886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.835992736 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.830629575 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.844149553 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.83010569 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.8302361 seconds)
  done (took 12.771062048 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.832155797 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.832323268 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.830002645 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.829443108 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.829420546 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.829717766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.830130948 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830934135 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.832719644 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.829685471 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.829630869 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.839335957 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.829891462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.830334046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.829806286 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.829364882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.8298728 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829441549 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.830005197 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830162143 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.074865564 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.829735794 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830137009 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.841216157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.834107697 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.829990765 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843447819 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.830059769 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.830090474 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.837251639 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.833671212 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.830699999 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.842326907 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.8358596 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.834374095 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.84254427 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833547683 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.838738208 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829965814 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.83042305 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.839015318 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830621465 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.830224379 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.838869458 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.832394995 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.84530845 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.843726779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.843623335 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.831373488 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.838764428 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.839895221 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.830784323 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.831595819 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.839392601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.843771943 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.837127736 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.844137692 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.832068344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.830924416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.842091969 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.835296922 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.832564161 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.833046486 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.83556476 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838833622 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.841058663 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.843534051 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.836649374 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831834898 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.832260112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.841041824 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.831716885 seconds)
  done (took 135.093251571 seconds)
done (took 548.139660267 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.169173955 seconds)
  done (took 8.936464491 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.013109823 seconds)
  done (took 8.785853845 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.43844351 seconds)
  done (took 10.211591195 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.845694806 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.843216443 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.851752995 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.835787354 seconds)
  done (took 29.158652666 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.030674144 seconds)
  done (took 8.801395157 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.847110078 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.832944553 seconds)
  done (took 15.521216009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.949271879 seconds)
  done (took 8.720630141 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.87824828 seconds)
  done (took 8.666114736 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.842976291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.836593004 seconds)
  done (took 15.474030522 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.84038566 seconds)
  done (took 8.610980173 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.049260161 seconds)
  done (took 9.82386868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.842892106 seconds)
  done (took 8.648609406 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.872038686 seconds)
  done (took 8.643443314 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.110228739 seconds)
  done (took 9.880634067 seconds)
done (took 161.649526743 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.841617135 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.839949277 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.836327647 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.837666148 seconds)
  done (took 29.127950078 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.86859858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.869293165 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.87104653 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.879848086 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.871760515 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.871593895 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.861584336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.861050199 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.880082441 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.872019381 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.871761587 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.872118202 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.868516603 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.86285939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872688724 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.870827473 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.880440786 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.871090752 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.862553001 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.872375192 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.836835374 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88106623 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.872126763 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.837539798 seconds)
  done (took 46.611727562 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.02620006 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.908003647 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.99153241 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.888579243 seconds)
  done (took 9.586059311 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.888626053 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.890184499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.901475053 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.940379841 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.963154018 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.900486904 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.861614376 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.858867682 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.844673724 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.889476424 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.965698401 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.885208998 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.975216694 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.837587805 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.017714036 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.837745107 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.838393246 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.888555916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.940762165 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.954201367 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.838529833 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.889824515 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.895370623 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.889895176 seconds)
  done (took 47.366424963 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.839755817 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.846123213 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.846105951 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.838943928 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.840064829 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.839585827 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.847084028 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.840318068 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.861778829 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.841330489 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.839336376 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.839666011 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.845834937 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.840141484 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.840305644 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.853527687 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.854793674 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.840237464 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.843597883 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.847460725 seconds)
  done (took 38.659362248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.838616271 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.683410075 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.185244768 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.090918275 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.838151858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.841829825 seconds)
  done (took 31.252360574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.851026053 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.845252548 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.839161537 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.898251537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.984162495 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.84882898 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.840887941 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.850262182 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.884246192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.909157084 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.862493632 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.865489955 seconds)
  done (took 24.254059525 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.839327884 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.8420805 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.84246226 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.853711042 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.850590649 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.846570274 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.847254217 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.838634122 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.853517758 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.857941285 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.847721138 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.85145116 seconds)
  done (took 43.948687058 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917933591 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 6.356640201 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738917231 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282632186 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315201243 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36576702 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.884332951 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.303594073 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043389798 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.838781372 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925386573 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.840964777 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.841271695 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111465511 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 1.84547255 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.11755377 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017803067 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084032303 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.6372456 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875374406 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.301598774 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119972232 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053998137 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867875156 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.840829214 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541897172 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.253184327 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440432987 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887358951 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045377567 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.96295493 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.495897013 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868824529 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.795874312 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.10451516 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888983779 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844312312 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 2.13144407 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894922212 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841540445 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112962344 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961795808 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.147324559 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.871550005 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91188968 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 3.768095877 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846900364 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 2.120035778 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327671949 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.810782041 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.868097958 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.544157382 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.846675853 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.330979755 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.498898841 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.864580336 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.191047416 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93923771 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.147543862 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845296958 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84264365 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.769425699 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419432746 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966943744 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.845787021 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.543079842 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842575037 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.081635369 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021235422 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848587407 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.843344672 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.651236463 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544254471 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.109714884 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.843980582 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844322642 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404019633 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880439548 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45340556 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.810802543 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.946525933 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553096621 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207751022 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.989339667 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 2.887750517 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.848321839 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844684035 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770147272 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.495625412 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87774067 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967953261 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.877408133 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482759142 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.844788957 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.860215291 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 4.055869251 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233919866 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.199121326 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866619668 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.157049173 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114377863 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6909964 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.81065319 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060097 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.787788063 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772922814 seconds)
    (107/608) benchmarking "5d"...
    done (took 3.675659151 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771987505 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054482468 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.1572555 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846151982 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.448414787 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876592081 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927273672 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85009061 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859551799 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.369564113 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848056539 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058133313 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.739416696 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844927647 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.054376508 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056856733 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862729569 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931273207 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77217578 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.847268663 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 6.391104786 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110396987 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.048401049 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.191331755 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 1.896146091 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.302018262 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923708096 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84512944 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.897051455 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.838813983 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888906044 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108380404 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89811294 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884584003 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882287398 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.794322756 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090011356 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872428423 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.980053069 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.14106524 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 2.401760326 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 3.772393481 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.171406636 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981004907 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0659904 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909749895 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847179918 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846681645 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563095223 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.796703945 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352984696 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.064642875 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.860832824 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445318666 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889528845 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 6.84682196 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788998576 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 6.882701077 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.524532493 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.851632493 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.125791982 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.8974526 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.064341734 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061128653 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848753935 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157856517 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774063802 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972651797 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.821520799 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 6.424363657 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.079384704 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.497661918 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.913504359 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097589175 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.204536829 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.176544724 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892823696 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862878575 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941078195 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.868434931 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865761102 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.267699115 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.366446682 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130560415 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.851106712 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.850318414 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.357527385 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561454706 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.82508982 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853222745 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.852150357 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416938556 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114934429 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848644573 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856166501 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724451599 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.150527269 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910641736 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.860579559 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852460225 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.432227626 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.897718178 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.852475137 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 2.763260269 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.369540398 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39963605 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.853479829 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.54268792 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068705022 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853381857 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 1.855308912 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.502277861 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944263371 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.135081657 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.862583761 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112956457 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908362067 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.374380857 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.395199834 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.815479309 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.133445412 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.607754398 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851717209 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.551826965 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77865535 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.85103717 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.072588162 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854252048 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857518986 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.061654383 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.596862701 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116762804 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 3.946879573 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852177388 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 4.084914857 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.657686682 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.876055277 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857252646 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 1.855308158 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.852259914 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853905838 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.373465313 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893649673 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479672071 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895537827 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981166089 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.864363641 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779602357 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853951861 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.07293947 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854764715 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 2.138023131 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.019110365 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853371576 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.801818067 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904455162 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.517744408 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971094801 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106825481 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.27750554 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862205627 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.555484696 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.36751221 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.893915999 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.863024538 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.064842611 seconds)
    (274/608) benchmarking "4d"...
    done (took 2.970993639 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 6.863796176 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.19864576 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464401622 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.04636786 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.861645616 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85980438 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.858531312 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.573108895 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505813113 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416422863 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.424780788 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 2.258890943 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143390451 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155296652 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.025342303 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.362041423 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158475566 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.401233227 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.104812757 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939160528 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080641479 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376272447 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 1.866968409 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.446744888 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945282223 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942312534 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798138112 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868668654 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.504878789 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189945261 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863824781 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07059677 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136649435 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.069564444 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.476351703 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.072927736 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95986024 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059104952 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884098649 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854435689 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810774337 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.390479983 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871619939 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.184307624 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027581996 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937466068 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.069812046 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.42305487 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.856654455 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.805621607 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.855205993 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195153739 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894523534 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.5579476 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208697385 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.495761493 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.182135112 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 4.920034831 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 3.782830041 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951677425 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862857032 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295337053 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197805772 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262824973 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.9050083 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 2.263241853 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783417311 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.88360858 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.969752215 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862342859 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.8571622 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905758097 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.869686616 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.856888399 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.890072816 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.862888389 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.726848322 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.103248999 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862563188 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084116811 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.16042018 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142004489 seconds)
    (357/608) benchmarking "3d"...
    done (took 2.753598606 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 1.859210486 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857232809 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.991479988 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100787873 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.77402474 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940426136 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.344850109 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 2.214290065 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.408734887 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864584691 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78370297 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784723102 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.558474004 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.989984549 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864481019 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805838274 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066080408 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 4.178134147 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.653427627 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419761826 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094185869 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.754092818 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.961456681 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10517915 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121751038 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.918926858 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076611695 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.368144104 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.145029899 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874828107 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.956098602 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.082558376 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.951955489 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.472710434 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.072549275 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086310911 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405061183 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074895195 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316593346 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.828274339 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.859533474 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064909164 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.074285941 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.146487319 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002221082 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.413918197 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.898224318 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.568913645 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.860327296 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.952508953 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152881831 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914406997 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.140609087 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018138907 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.972651958 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866028991 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936952414 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863533315 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.865735005 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866288902 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869868386 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.1652232 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 2.370316912 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86168517 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.859441777 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.872980583 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936399057 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903736663 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.373623947 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.869732155 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123268634 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198258385 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180242283 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916282041 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860318961 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 4.124882355 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957754637 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788249858 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.861287713 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034938781 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 4.168001466 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 4.947246804 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398844647 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132345401 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.970841299 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.007055466 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882196049 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.085952572 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262908679 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.888901642 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110042288 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 6.985627951 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138684335 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.745836786 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737100292 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.908071295 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.079775138 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.320986661 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867405669 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.06606454 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07558404 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158667813 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420317057 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.86192246 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.237517369 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980315472 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134687851 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22297044 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863217883 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444879621 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 1.866569184 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.97107868 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.89454918 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200188299 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.89417455 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151619615 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086358739 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866601727 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.429689078 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898076314 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983395084 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 7.066981735 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.313540197 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.568915191 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12438891 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716110732 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866296599 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130858497 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179255307 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159930774 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939385958 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868574688 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 3.033679876 seconds)
    (491/608) benchmarking "6d"...
    done (took 3.56245358 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 2.182873792 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052048692 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.763926162 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.894081741 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.07916076 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863796103 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069845188 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.573715556 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.867525682 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130008906 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159614044 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.865142004 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.775899531 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871497537 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.900053917 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.868307898 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077355972 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076199472 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.157452986 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077053133 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86890802 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872626482 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.672274636 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132709547 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.917035567 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868552383 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791404643 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.866674727 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911233663 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093844355 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884490927 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.380216263 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.565600598 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140425446 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.768608881 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8831341 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479093979 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160945767 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178524704 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405525251 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0843346 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.019728219 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386942407 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866142616 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.820853795 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 1.869382614 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473107896 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 6.344484035 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 5.158410047 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.865963668 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.835080803 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.555198801 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.89864924 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.869671843 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872412447 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.12754026 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186815444 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138105265 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.943781218 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137297784 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598923541 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 6.978843972 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083301465 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.79354043 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237638524 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871469593 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794398418 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868359586 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.861359282 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.914726287 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877398937 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47314604 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 4.680804586 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.762882375 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.606746017 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420240736 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.870081429 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.877929406 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 4.156385515 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 3.877965571 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.301842719 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.90483608 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.158364555 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.561719743 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899945856 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885799966 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872700377 seconds)
    (579/608) benchmarking "2d"...
    done (took 2.561756263 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 3.911012944 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.869029125 seconds)
    (582/608) benchmarking "7d"...
    done (took 2.19510451 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112087822 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.610359839 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.89595999 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.870030036 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.152170108 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 2.275593517 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 4.821188058 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869376836 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788062893 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.055168812 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.077762976 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147062505 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.44469745 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901762251 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870903472 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.076562067 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072958051 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.194861492 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956651208 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.185627244 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.180368118 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929956036 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.901687224 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.887717686 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.80905412 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.578196279 seconds)
  done (took 2171.716088015 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.886138385 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.899257044 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.907464253 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.04071041 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900487881 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987181154 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.952885955 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894078683 seconds)
  done (took 57.273015851 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.869924149 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.87226194 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.943662282 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.870395107 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875425744 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.870858183 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.026051297 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.880884179 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.883877921 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.875436769 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.871184473 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.871312893 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.139389917 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.889913159 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.871821946 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.872179259 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.874036212 seconds)
  done (took 79.193348715 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87387319 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.104208607 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.912971829 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.870870995 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.636687122 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.877572907 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.947022805 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.896986762 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.879875782 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.922227 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.171806694 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.894875068 seconds)
  done (took 89.796215947 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.880077848 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.873821197 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.874968578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.874278616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.875278256 seconds)
  done (took 11.190978624 seconds)
done (took 2681.773595844 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.111156732 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.079117693 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.115110291 seconds)
  done (took 6.001468611 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.012928424 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.064198275 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.175861079 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.941126543 seconds)
  done (took 10.002282395 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.153505178 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.250643402 seconds)
  done (took 6.209980564 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.230757598 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.872837241 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.28171109 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.872804008 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.87659772 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.875731828 seconds)
  done (took 22.4360179 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.873006896 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.872625036 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.872129138 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.872388695 seconds)
  done (took 9.296574052 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.871042876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.607903451 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.875157968 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.884573325 seconds)
  done (took 21.045013468 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.087871155 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.876658555 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.637195777 seconds)
  done (took 9.407929212 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.546378635 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.330638338 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.501755661 seconds)
  done (took 9.18459287 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.994347592 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.947839521 seconds)
  done (took 7.748447127 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.033097883 seconds)
  done (took 3.839526798 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.702707961 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.180651243 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.380757121 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.432920251 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.506911799 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.126173662 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.18821533 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.11330035 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.309214558 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.31792209 seconds)
  done (took 25.064871242 seconds)
done (took 145.539125859 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.236817291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.905567584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.084353592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.242446784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.129172322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.087221936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.152395873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.231432753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.931191185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.910582741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.243042622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.131567787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.109354644 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900960104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.111082392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.90386565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.119002124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.262718901 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.925851118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.138814917 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.14883874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.893289268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.079027163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.916927161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.122414268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.036355309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.44147601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905486018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.073765205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.461098385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.037934053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.291158679 seconds)
  done (took 168.973503628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.87445068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873872208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.875797388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.874868167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.427349854 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.875105384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.876109897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.874441245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.310865404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.293352609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875336508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.410298051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87732965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874744359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876603517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.875206296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.453710798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874895622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.874678091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.875497918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.875878149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.24877486 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875985206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.286718306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.432800433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.876291569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875580305 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.875641437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876439949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.882284608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.875607982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.877156326 seconds)
  done (took 209.694495636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.875982106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876832557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.879190458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.876525141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.878477517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878995092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875458551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.875827581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.570815535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.562586603 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.876595558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.885169744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.892621302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877757685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894898148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877240827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.893661016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.877918931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.877194056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882291324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.884522135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.651106769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877893559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.693411421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.87756104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878820501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.877552614 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.886684492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876662924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.877393342 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87930612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87781839 seconds)
  done (took 220.936582233 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.122141794 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.878592812 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.87827877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.800210871 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.878932384 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.879727608 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.868181788 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.125740686 seconds)
  done (took 19.243777039 seconds)
done (took 620.665958325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.245376948 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.082442245 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.055782694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.903385075 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.142902859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.945886329 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.89793553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.961420798 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.70351198 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.970469841 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.547920248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.918777399 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.646050436 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.922912768 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.021387694 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.960402532 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.498929975 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.600009963 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.067445457 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.956897976 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.07963619 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.814474988 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.979006205 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.744594286 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.65873807 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.862009693 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.905055058 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.503435571 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.910403132 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.051497638 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.566727085 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.167221285 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.910984188 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.897424227 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953882148 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.929960607 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.094695643 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.912111345 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.023075907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.624563903 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.962247665 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.613930447 seconds)
  done (took 103.028267422 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.88950329 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.884654955 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.885297822 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.886114819 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.895753946 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.886511584 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.886381769 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.88640205 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.885351798 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.885857121 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.88601981 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.895664203 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.887184278 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.895460039 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.887243128 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.885823351 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.887148154 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89613023 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.88725094 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.886795815 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886438047 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.887159901 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.882364703 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.886511448 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.886975567 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.887646 seconds)
  done (took 50.910919194 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.882572852 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.049595942 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.123035965 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.89999673 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.883010296 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.88503556 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.89995265 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.886745241 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.885637655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.884574143 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.970367453 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891994851 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901296944 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.123117852 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.897777348 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.883239302 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.883915984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.883141628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.058216871 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.897889228 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.902594399 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.886816875 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.901513616 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.898239277 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.885428213 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884192478 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.886691777 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.327316719 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.892872664 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.971379416 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.92975203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.905299089 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.266431929 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.133397822 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.937023025 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.895607257 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.883858058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975195421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.890449278 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.88387771 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.90107648 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890437988 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.123275636 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.403664524 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.897002065 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.88401424 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.337946746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.982951574 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.927424384 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894521974 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128665224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.900124165 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.885706335 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.885755294 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.92210428 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.891159388 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.885050608 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195728072 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.896357007 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.902362663 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.891985613 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.88643896 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06280983 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.893128841 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.052020404 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.892661536 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.891195965 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.88618533 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.128293312 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899858852 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.420275438 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.897331007 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.885029597 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.973612061 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.059913935 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.363276279 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.897257874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.062745492 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280713089 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.908581443 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.895216952 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.315703164 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.912473861 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895710084 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.964905122 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.888513881 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.886046673 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.93080524 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.901163951 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.337093897 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.416393679 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.209298475 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.914749005 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.904400649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.886927313 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.193270015 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.897828685 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.886756197 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.120199464 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42382073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.899097227 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.893758877 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.395506216 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.899247826 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.905014995 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.898406106 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.13349816 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.901021275 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.931202864 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.88643355 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.894941796 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.889946513 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.905587498 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.895714713 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.887710788 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.389311433 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.991522516 seconds)
  done (took 233.976283985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.887752147 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.886476496 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.886895057 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.887875064 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.885861601 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.887890785 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.885678063 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.885930941 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.887669756 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.885754865 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.885463103 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.885697468 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.888237232 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.893634326 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.950141285 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.888548486 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.488482592 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.886736237 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.887061726 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.888273915 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.524396363 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.889662789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.887066421 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.887449163 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.888811942 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.887923613 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.88705307 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.945432107 seconds)
  done (took 168.032006659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.888699352 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999740141 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.907734075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.91567866 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.898577328 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.890509986 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.985162386 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.906439558 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.893550928 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.889251838 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.889365557 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.948117448 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.899071442 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.986144249 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.918837148 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.995877367 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991361393 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.896031669 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.889595017 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.889687118 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.917026232 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.90024664 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.948396308 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.010563408 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.905259562 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000630002 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.91015875 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.890998639 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.88912063 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.000579328 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.905795526 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.949837287 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.917193826 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.909263112 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.005551206 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.005421129 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.992228185 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.992860265 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.895923132 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.890332407 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.890664197 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891925441 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.002507168 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.904860047 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.892112412 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005945717 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.908846353 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.891089293 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.890903879 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.891120549 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.903786444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.908013653 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951819062 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.01691151 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.923027384 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.913756433 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.986956842 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.015064908 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.891850754 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.987317473 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.899081695 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004096048 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.911707134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.893012207 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.892640264 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.895950635 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.92112064 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.99467223 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.9943838 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.898795272 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.98794985 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.926535359 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.898919783 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.891957891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.892771999 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.003471025 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003516083 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.927069582 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.926015197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.923346048 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.900711001 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.89170771 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893638167 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.908516757 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.897481216 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.004651324 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.008120652 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.898742251 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.892817961 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.892579287 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.892806168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.91693133 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.010526428 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.924685769 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997345176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.957288881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.963611958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.904973007 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.906198395 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.896128812 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.954518354 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.904595371 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.904130705 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186034742 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.952566233 seconds)
  done (took 204.958415748 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.279587054 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.941271964 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.947077029 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.203061728 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.230948137 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.861482802 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.937296964 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.938772049 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.96262691 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.120978365 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.007455449 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.958321321 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.929334137 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.913235831 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.93741208 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.959633109 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.950913154 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28212494 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.145343093 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.087779763 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931605597 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.209346755 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.24035033 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.545202303 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.986531878 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.322272351 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.510631632 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.071016304 seconds)
  done (took 62.244154631 seconds)
done (took 824.960888788 seconds)
SAVING RESULT...
DONE!
