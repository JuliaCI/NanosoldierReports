cset: moving following pidspec: 2510160
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.312676996 seconds)
loading group "shootout"... done (took 0.790624883 seconds)
loading group "string"... done (took 0.220089831 seconds)
loading group "linalg"... done (took 3.193771815 seconds)
loading group "parallel"... done (took 0.021860434 seconds)
loading group "find"... done (took 1.164791436 seconds)
loading group "tuple"... done (took 0.70264825 seconds)
loading group "union"... done (took 3.076429818 seconds)
loading group "dates"... done (took 0.157796412 seconds)
loading group "micro"... done (took 0.058588115 seconds)
loading group "simd"... done (took 0.372078445 seconds)
loading group "io"... done (took 1.433772891 seconds)
loading group "random"... done (took 2.301849971 seconds)
loading group "problem"... done (took 1.158418497 seconds)
loading group "array"... done (took 4.345156299 seconds)
loading group "misc"... done (took 1.119152895 seconds)
loading group "scalar"... done (took 3.566996067 seconds)
loading group "sort"... done (took 0.312105707 seconds)
loading group "sparse"... done (took 3.528926407 seconds)
loading group "collection"... done (took 6.039219226 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480284638 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.073183908 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.253638073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072956155 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.271366974 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.083625575 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087311945 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.07331989 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.102208914 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158787363 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.220671069 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.365487737 seconds)
done (took 4.97219567 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.318588338 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032866809 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122954264 seconds)
  done (took 0.746771965 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.136059409 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015782397 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022974531 seconds)
  done (took 0.759670879 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020665985 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099421225 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021715993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022398476 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022266351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021782564 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021573358 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021583132 seconds)
  done (took 0.817679584 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029008643 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022653794 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020938516 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022411915 seconds)
  done (took 0.679684723 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023051528 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.092477816 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.02645449 seconds)
    (4/4) benchmarking "different"...
    done (took 0.026382336 seconds)
  done (took 0.749347948 seconds)
done (took 4.691424349 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.192716933 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.762432907 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.864865158 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.175034781 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.341255409 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.318193287 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.075881704 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226151871 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.145888442 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.034253476 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.179653158 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.03644765 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.506533901 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.552017806 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026750862 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.144687306 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.563959828 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038489371 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.068550966 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.157373265 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.035116748 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.038993478 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.04298443 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027565415 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.054470679 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.135383989 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.571662032 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.065585912 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.024290656 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.047510432 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027027061 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.028428551 seconds)
  done (took 9.134281481 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.157021287 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140535442 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.02377206 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.057723906 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.052628922 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025101522 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030343065 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023062514 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042316005 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.085922553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.04535407 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150355724 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021246718 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.02469943 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.13979545 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.112321572 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037500459 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036970268 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0225043 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.03643895 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.04765052 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034600493 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032210401 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031796003 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067128854 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.086583115 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.040876668 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.065448212 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022752024 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.033806444 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.053262348 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.06129431 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022981281 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.02154074 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.063503601 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.042984954 seconds)
  done (took 2.647064516 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.793481637 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.115457655 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.138225324 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.178795764 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066162606 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.049402646 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.172925089 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070929995 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.053864545 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024173718 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.191273099 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.637937779 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.1604228 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.29190548 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028538945 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.281152603 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.888682116 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.946170253 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.022888143 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023033525 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.128745027 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026050187 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.28648852 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0214617 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.129198706 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.573282661 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026289236 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024529965 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.050852344 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.136358144 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021026856 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.093083094 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.046320515 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025223025 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.407059138 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021806993 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019994465 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041064787 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051778651 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022109067 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.02310368 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.030727115 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021150127 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068818109 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032475077 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.49126286 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025510458 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.669083348 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.680536926 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.029083117 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026488401 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.059583088 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020231602 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023554861 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.539451162 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.092322587 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022874563 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.282106688 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025713485 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024378001 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.046449475 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.054965519 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023341118 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024684268 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026631137 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.040310971 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.966896055 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033254609 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.041650273 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022014781 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022930727 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021525328 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.387154839 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029631525 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.124423005 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020708358 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026471309 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022848977 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022413188 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.060692439 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.047923531 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.045485103 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029892267 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023583054 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022587273 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.492943823 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.939359444 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025128337 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02474687 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.340819589 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020794589 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023028973 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024474395 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.04375858 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023642384 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.02026246 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060866609 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.025181754 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.127014841 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.347487165 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.024970859 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.021533235 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.527364706 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024396435 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.052589008 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071652391 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022611804 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.055298333 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.0225265 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020072387 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026123372 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019951533 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.04433404 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021183841 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021601463 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021120051 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022090534 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.02352454 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.02246184 seconds)
  done (took 23.268704002 seconds)
done (took 37.429505521 seconds)
(4/20) benchmarking "parallel"...
done (took 0.762649165 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.204500586 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049393735 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019952125 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.154190028 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043349996 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.130075454 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.165621248 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.121999961 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.04430689 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.043956043 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.04403975 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.171839193 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.179179535 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.045309061 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.113673964 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.180035389 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.045264383 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020070726 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.044321478 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.044774992 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.044839844 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019997171 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.04400916 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.044904034 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.112559219 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.043650298 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019889776 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.113516499 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.045366439 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.114569873 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.04608168 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.045837297 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.046462454 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.115012756 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.047476504 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.115910588 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020233728 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.047486005 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.0478341 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.048842014 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.048067817 seconds)
  done (took 3.812509603 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.04700445 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039071191 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.054764357 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018401871 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028233009 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039026225 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018386695 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038602695 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.056391339 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039092755 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039059211 seconds)
  done (took 1.161705289 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.042118468 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039605447 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.047421661 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018327763 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029223751 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039443981 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018345239 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039094897 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.055416168 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039535254 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039634687 seconds)
  done (took 1.099183917 seconds)
done (took 6.744005905 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.147241362 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.117608575 seconds)
  done (took 0.945257223 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.57321986 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.201342162 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.124779402 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.239990075 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.118054369 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.149589654 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.680196157 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.152016727 seconds)
  done (took 6.975441314 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.076648446 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.139325142 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024254722 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022768299 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023041504 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.02291875 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.02462129 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023163282 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022450985 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025090856 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024782307 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022593374 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023436684 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024773871 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022718111 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.02289436 seconds)
  done (took 1.365156755 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028076225 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025575434 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026420931 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016922297 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027028283 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025603655 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026655867 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028177076 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026215764 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026527883 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024485075 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.02752649 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026248969 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025016862 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027527355 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017067802 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027541262 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026872178 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028941179 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027072003 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.02596106 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024442522 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027745865 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025787073 seconds)
  done (took 1.324759169 seconds)
done (took 11.301693622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135389632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.028816196 seconds)
  done (took 0.854448031 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.122567682 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121488944 seconds)
  done (took 0.944468929 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027714711 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016097398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.03079086 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023714837 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.01634604 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016061101 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.029811688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016267021 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016092427 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016183865 seconds)
  done (took 0.913528293 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019415247 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0224105 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020631764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019150807 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020556261 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017110878 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.01915507 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017222429 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022272472 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016421199 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019843124 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037832878 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019227853 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038264079 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019207202 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019732124 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021116197 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.018999041 seconds)
  done (took 1.092046494 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017993277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.01687569 seconds)
  done (took 0.740143964 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020417596 seconds)
    (2/7) benchmarking "second"...
    done (took 0.01700885 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018452153 seconds)
    (4/7) benchmarking "year"...
    done (took 0.01844462 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016617695 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016080871 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016573653 seconds)
  done (took 0.821668959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390515728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.091062365 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321062361 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024787086 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036465547 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.23939875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019978505 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023971052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023842233 seconds)
  done (took 1.872115783 seconds)
done (took 7.941964772 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045823148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.148542695 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145904753 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.434395078 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034043685 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022813876 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.056148031 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220000441 seconds)
done (took 1.822070547 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.282523912 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.275275246 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.185312719 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.021116045 seconds)
  done (took 2.19126541 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313557879 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.137195086 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031343921 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023262404 seconds)
  done (took 1.228467565 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022283644 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027832546 seconds)
  done (took 0.767772848 seconds)
done (took 5.191026183 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03044492 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.01687748 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.026030933 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018301462 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.017911541 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017596221 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017535079 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018327381 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016500999 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018259484 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01828651 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018303258 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017989869 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017982427 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017547608 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01830152 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016524919 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.01796009 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017990576 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.017930746 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016485551 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018296902 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017469987 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017924095 seconds)
  done (took 1.151377629 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.039424461 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022422031 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022294193 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022263493 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023386006 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022347772 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022421077 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022222626 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022461419 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021425988 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023459641 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023419506 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.021310109 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.023468061 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021398599 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.02344617 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022816547 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02233141 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021413161 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.023444434 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022365662 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02236002 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023486028 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022379916 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023410733 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.02329869 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021438751 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022333744 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022438816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023394716 seconds)
  done (took 1.412374293 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023390445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015244947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015497478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025782536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.01515173 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.0153181 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015709422 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015041768 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015344388 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016134992 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015617008 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015119338 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015873457 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015199674 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.01526807 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015736472 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020649138 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036212075 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015439661 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015281723 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020121438 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015415087 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015196281 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015291233 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015615962 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.01523019 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015046921 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015482252 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015169745 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015760432 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015140967 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019955996 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021452953 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015629073 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025732448 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020581036 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015630131 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019837464 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015994712 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015057403 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015041503 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015074993 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015247346 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015169053 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025956191 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015365912 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016233613 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015668955 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015362058 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.0150791 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015221546 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016626027 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021027912 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016255661 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015076724 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016230284 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015072263 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015716012 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015168963 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015097693 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015082948 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019371995 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016421274 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015748882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.03717863 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016345215 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025972056 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015270959 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015575041 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019527661 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015701752 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035413118 seconds)
  done (took 1.989396206 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028395663 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.024732353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034474893 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024740118 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018485258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016080529 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018857844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016084175 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024948531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019212758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016097468 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018837926 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024997633 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019232132 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017007192 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024902245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019205189 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.01849876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016056916 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019176536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017087593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018911914 seconds)
  done (took 1.179732931 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106245017 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022610203 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.068278415 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.021952237 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020647135 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.021723342 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022644392 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022538261 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022745288 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023780717 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023711795 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02274433 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020614251 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023636188 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023760005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023570502 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022696082 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023572648 seconds)
  done (took 1.256927486 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.039992699 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.02403357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.050299851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.023831764 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.024025091 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020668706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.027388726 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.026077551 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020537131 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.024150388 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.026065175 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020591303 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020600465 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024139722 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020551893 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.024213409 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020629815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02416656 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.026132148 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.027449626 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027478171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.02611111 seconds)
  done (took 1.29131403 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037191261 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021327333 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039730096 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023269743 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015582409 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015644665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0231599 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022136633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023140412 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.021194739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02223919 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015660356 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024059023 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022236239 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024224648 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022229803 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021259845 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022203016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021242916 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015683462 seconds)
  done (took 1.175507481 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125397625 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017692942 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017432103 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021466716 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017436596 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017381412 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021582099 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017408307 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017401488 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041747646 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017489112 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017443769 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021592045 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020066187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017456142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021582282 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0215142 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021803246 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017440667 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017512077 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.041887067 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.01748103 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021633493 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017430075 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.01738712 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017534358 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017485973 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020015142 seconds)
  done (took 1.400559866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.038575175 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015078978 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015126781 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.018766974 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.018872684 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.02467051 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.018903445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018809977 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014934323 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015251777 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017157749 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014941541 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014888831 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024105531 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.014930633 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017051335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02412176 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.018874717 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.026951647 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024679717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017070857 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024010419 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017105529 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015286424 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024859648 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017140043 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018886244 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.019623509 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017138628 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015271371 seconds)
  done (took 1.309151496 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029646693 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026437327 seconds)
  done (took 0.779753889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.02088041 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.035072717 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015071605 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.030033968 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.026699678 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019510956 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025358131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026826787 seconds)
  done (took 0.916703438 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.12396241 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.146333774 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.01721409 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017307797 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.12139136 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084418971 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.131515537 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028924161 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030805051 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020193013 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016961012 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132165648 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016583418 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030485886 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018028782 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.02667647 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024028877 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034881124 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029997863 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015632486 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029499095 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017151121 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016433186 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017269378 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017570255 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023560039 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032369999 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029266534 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024956674 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015021988 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035132384 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015754815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016403849 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025021606 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.122874361 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016130581 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053678806 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.01604628 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019791615 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015660524 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027752785 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036830899 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030337268 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033438847 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.01704723 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017450289 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015657468 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017371226 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020067947 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025054112 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015988444 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023517569 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.01565869 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017167251 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026548916 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016073029 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020129084 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025248383 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029804392 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026432486 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028683304 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031516172 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024813658 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023610187 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016628115 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036046152 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017439248 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029520156 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030986091 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016994082 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028565289 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015774016 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015172431 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015965453 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049918738 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017167079 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.01668518 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016066429 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016130286 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017138385 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025504571 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020188231 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023505967 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.01859366 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031745629 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025117169 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015834655 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022434323 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034108999 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020123855 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015955268 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032892446 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020122753 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015705451 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033803785 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026642365 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017323243 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016628767 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020075853 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029147698 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017150222 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015151322 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024656212 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017816687 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.124223263 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020788856 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024708934 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016168782 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026623234 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022219708 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017741986 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.01548273 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021242675 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017074866 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015524136 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025871842 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016418124 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031093183 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023462268 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031302619 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031716987 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027140772 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032484258 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016267518 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015491601 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034885203 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025776845 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017582267 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034613337 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016291891 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027008754 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.01639114 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017797764 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025826715 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015782804 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017954339 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016572029 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022125836 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017752293 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018041133 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022574402 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025228414 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028823634 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017543806 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025541869 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016773537 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032627855 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026380444 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021548677 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019631977 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017235822 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028675978 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023574543 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025707209 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016271341 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.01719028 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016454746 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027892831 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026094227 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018127559 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.025398082 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.02160555 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017202465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.01660376 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.01739752 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020556048 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019689413 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016989261 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024409836 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025355025 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.030676644 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.023353401 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.02576524 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015870282 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016345322 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018037815 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016216341 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021432124 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025741823 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03226055 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028269879 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038357061 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016673158 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026373105 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018001477 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033595454 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030099625 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017291672 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020785895 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015650533 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017993156 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025876391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027753286 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030450544 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031707801 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021578251 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021478595 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.01637424 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031904161 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016947541 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02517411 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025891628 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.022449532 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016477212 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018302552 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025747945 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021679216 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017569384 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.03275056 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023904445 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016496794 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031287115 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016896345 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027509501 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016511538 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020595617 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022294184 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018525793 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026272476 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032119868 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.01579043 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016965814 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032435706 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018334684 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018244179 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024790936 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032157827 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.02165246 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024531639 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02732039 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027475559 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021556535 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027102997 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017658694 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025965581 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019839227 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.02851343 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016650702 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0351623 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015815434 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.032074273 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017305677 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027916185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017058473 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026123221 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017410353 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.034152194 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018136738 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017481298 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028464382 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015823988 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025803635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016503428 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.022075209 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023686639 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.025986051 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018402919 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026161086 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018250412 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025714082 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021764112 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.025596797 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025830912 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021635737 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016493486 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024924306 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027635896 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.177165511 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017318447 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017008693 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016086269 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025127895 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017009978 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016603606 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024087103 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.021065896 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.022159741 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016896854 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017004207 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016878701 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024155672 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025079789 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033437412 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024412793 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023311781 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024843368 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015571307 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031132215 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.01557633 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023335972 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015013369 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021048866 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024697475 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015826886 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034192004 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.01677283 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0235019 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027114716 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024205611 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019891446 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033134353 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018008172 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024014484 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023477163 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020620835 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022673999 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016789105 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024091757 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024826431 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025837199 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016120937 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023196263 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024548005 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.0168423 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.02244003 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016744074 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024025601 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016873806 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015007863 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020665419 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026453917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020829188 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.02095777 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015737527 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.01483752 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015733429 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.021309491 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02061014 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024070058 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030834648 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014866658 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016116245 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.132190747 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020557397 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033509706 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025002048 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023640857 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020707584 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015024266 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016588349 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016768098 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015517475 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.017861403 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.014931959 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015251991 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025760018 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.016690353 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020368493 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015616309 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016503353 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025488207 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019169437 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.015934248 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022677683 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015461496 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021257566 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015117931 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.016834839 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020642435 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015391435 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019868144 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025781293 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.03184295 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022742558 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024521798 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016449572 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023549945 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030891707 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.022684966 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016411485 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024900961 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015335426 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034284692 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025080862 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024403477 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025258844 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016605509 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032695437 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020948535 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02568002 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031240238 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016689329 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.022879313 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015766066 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031477258 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.020914117 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015720413 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.02441762 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023793017 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022305293 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027327423 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016572969 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024355985 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020248436 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.02045848 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017281169 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017220476 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024632987 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032118987 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016602841 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.020618801 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.023829158 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024368003 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.020968167 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028100338 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024416085 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017173065 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017830915 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020395398 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016986417 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028270348 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016583064 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021248922 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021193604 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.01613698 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023411983 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032995043 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025596613 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025752002 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016171797 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015647443 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034329837 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020510475 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019378106 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024397129 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026192248 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028531057 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025654911 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.03339257 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016702335 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022690476 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028555711 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017133696 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016071654 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020450063 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.01772897 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.02543024 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026017779 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023811641 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017974484 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023531959 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029992676 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017573942 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021363783 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.021892101 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017036705 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026757533 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024258718 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024928846 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017630003 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016143356 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020049171 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025113022 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023960691 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025400427 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017300639 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024607218 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030381163 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023981926 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.01956156 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016234084 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019464905 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025574384 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.022314159 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016314235 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021520036 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020454829 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.024452561 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025829409 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.02136023 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016238924 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033642426 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024874166 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025417107 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017915174 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018027285 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016597656 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016263726 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027522886 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016255488 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017943369 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021512304 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018256874 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.034322748 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024756024 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032495584 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017258524 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.02138882 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016245775 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025931264 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021409282 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016410937 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026812642 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015826983 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031901519 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028185157 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.023238221 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016292131 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022052269 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025005204 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.03173254 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.02606004 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025313155 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.01960234 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02600288 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017926314 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027411995 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016344504 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015571727 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026444982 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024988505 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028764865 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016250297 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026438669 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018124205 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024696308 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.024967798 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017918578 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017993749 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017905479 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025884799 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021511731 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.02573178 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021656909 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033565706 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.01747541 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027765925 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025573039 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027686892 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030608582 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028901634 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.025246293 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016980636 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02414031 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.02524194 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.01764033 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.02187765 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.019874941 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039192153 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018149379 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.01812016 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031129696 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024608518 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016716874 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024293319 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021825306 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026949939 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017454952 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.027031555 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.022130353 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017413612 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021723984 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021718754 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015810668 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016410498 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016798097 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026394844 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021819619 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016659207 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036171977 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017991005 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.025611555 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027562235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023669457 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.018069077 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.01570965 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.017339744 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.030087244 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032331593 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020921985 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025152727 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.018246876 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.179323065 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015278413 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024496151 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.02376839 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024475235 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015613428 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01589288 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030870034 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031243151 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020920948 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032857987 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024631082 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016889594 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036974021 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024795904 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016411673 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026272645 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017250063 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015200414 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015076539 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016804547 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026840837 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.01551458 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017188019 seconds)
  done (took 15.330380799 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061082081 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016751941 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015524095 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015591284 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022024588 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016595462 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015565023 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016684824 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016633503 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017655576 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015631947 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015572723 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020569168 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029676083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022612348 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018820614 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015597767 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016563325 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.01556925 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01665252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02085469 seconds)
  done (took 1.193607804 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019967858 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019605905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018852734 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019115445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018500343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015788457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.01883337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015828472 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019319536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016121037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019290937 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015822332 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.01610459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016085942 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01609074 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017077692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019190483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018523043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015832394 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018887183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.01708455 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018861122 seconds)
  done (took 1.151067667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018345656 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016277078 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024244828 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015156115 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015081789 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017553768 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015104172 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.02000785 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019949443 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019946661 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024149336 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015887512 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015205825 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021328285 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015120843 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015855586 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.068956411 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015978886 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015995457 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.01532628 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017319769 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024358893 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015414795 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015501896 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020016527 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017706762 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.01530206 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017407131 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015754868 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020076797 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015919941 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015087159 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024185779 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023394797 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020025471 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019991445 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016425255 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015878361 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015283479 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015249505 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023563205 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016450846 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015489102 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016177855 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023987172 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015406147 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015107093 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024211471 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015145266 seconds)
  done (took 1.692051759 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027363137 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068877612 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023073175 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050883265 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027709745 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020108253 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.022183731 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053306257 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.01645428 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016771606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028331317 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.029011489 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017725115 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018771166 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.023095479 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017564254 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018098518 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016952663 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019672434 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017332151 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.019742693 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.02314145 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027612526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028649246 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018400017 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017022145 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017266102 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018686033 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028375122 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020077305 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.018751615 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.01919101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028046464 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024248559 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017285367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.01739989 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028519287 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.017813278 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017584196 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016285026 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017338145 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018650432 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023261135 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028691403 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017716795 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.024117601 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017639881 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015938836 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028485028 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017416161 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020464407 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029426638 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018608389 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017943741 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018928523 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028202937 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017798652 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016754258 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.01791283 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028673057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016344068 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018433812 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029305486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017342563 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020331767 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029455889 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024356166 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018559791 seconds)
  done (took 2.439920602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026886113 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.021974336 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025775137 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025906224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022087851 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022054385 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022055076 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022021945 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.02192638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024426118 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022051524 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131455617 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.019575528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.022676337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.022176342 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022167579 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022131947 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0220766 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022141496 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022043746 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022129056 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026223722 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.02214337 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026181278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.055830825 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019393959 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.02199444 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.02204739 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0263524 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.022025485 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028763014 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022220288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.022062287 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02636269 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.02876839 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.022097427 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015899799 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022072602 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.022270296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.02231667 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.01942991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.026767892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.022312743 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019446848 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022472546 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022415298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.026760114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029072001 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023142251 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02496523 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.022421641 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0267108 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022270179 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.023447241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028744966 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.06519009 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028859214 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.029012454 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024030227 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028803792 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028703105 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.037672945 seconds)
  done (took 2.438933532 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029595992 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020667856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025713469 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0153278 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015196699 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.02069296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015233037 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015255189 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020514091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020497129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021814096 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020693834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02230572 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021853732 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020676869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022230886 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020573259 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020627232 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020503191 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.020685262 seconds)
  done (took 1.198059982 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018947591 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020079895 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015832102 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019415594 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015948272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.019038285 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015918887 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015915876 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015964582 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01600252 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020041668 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020041559 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015906345 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021739898 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019088667 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019136699 seconds)
  done (took 1.055810645 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020144917 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024969642 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120888088 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016607155 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018325535 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015986715 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016660287 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.01529528 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017728867 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.031566578 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016256066 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018539784 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016739753 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015482007 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015987594 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018508922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017727669 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016323499 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016740688 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121489074 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.028314982 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017165915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018564338 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017193172 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018184566 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.027964737 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017521255 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018224628 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.015669413 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018531374 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018179774 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0261785 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.01820528 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.016719099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015494799 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016267983 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016705838 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018518587 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018487774 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016673737 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015277334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018215677 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016682937 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017002518 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017706962 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018502264 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017640631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.025478239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016518362 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018173963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.01667403 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017695603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016669047 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.023089768 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018051782 seconds)
  done (took 1.990163078 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035897994 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02193915 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015128523 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015062802 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021403465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022642018 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021638624 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.02215375 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022612296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015216584 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022796164 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021106725 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022724175 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021857277 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0227513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021787233 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015161048 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022564871 seconds)
  done (took 1.161853432 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.02370045 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020293315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020539973 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017020252 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017001407 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.02050408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015521201 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016717573 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016653566 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017037206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017054997 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016735061 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016646572 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.0167128 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020139382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01695469 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016624117 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015651975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.01704903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015452173 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020612237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015614358 seconds)
  done (took 1.15870084 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.18151752 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.142079291 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038789475 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033984238 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025595813 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051726394 seconds)
  done (took 1.242797551 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054486483 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024273767 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021783411 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.048637822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020752638 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019619854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019658976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019821186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022568117 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028226511 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019948419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022215459 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022586857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024221691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021302377 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020787972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020132133 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019872968 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021943932 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032381491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02001836 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022171661 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020104471 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019785299 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019990983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024165058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022697413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028247237 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019755426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022179848 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020780479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019992293 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022301537 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028200591 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021769867 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022631652 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019916276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032365177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020874236 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024156152 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021508922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02132978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022670942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022329793 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022301862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02026598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022619091 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020189122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020222736 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034888624 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021163805 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02435361 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021714963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022545289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022933249 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034879064 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028521121 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02459602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022588543 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030037898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026262453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022377254 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02629154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030427112 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023186839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02639711 seconds)
  done (took 2.367185769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029733398 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.050122803 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.019752996 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027979382 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023906778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019844739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019831358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019812768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019780169 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022364219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061937841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020113437 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023975163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024116404 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019979986 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019786284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019778488 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023965011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022307603 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034224473 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019992203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024066742 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023999234 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024046051 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028230278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020884728 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.01985746 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019838497 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019912316 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019877219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022421412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020000867 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023984437 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022237061 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023904534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020059354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019802946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022446813 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019917794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020923935 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024191051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031890561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.01994808 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020066513 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028611133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020095554 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020108575 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022611457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020120786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022540996 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028504921 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028584918 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028530271 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024583851 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020308826 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020272093 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020110304 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020086787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020375028 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022270426 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026093042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021147428 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037282863 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021443141 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021324364 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026379793 seconds)
  done (took 2.366511211 seconds)
done (took 51.361452226 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215433065 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176715056 seconds)
  done (took 1.150223515 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.132199612 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.129815699 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.159226429 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023984758 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081214102 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.173728772 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125896676 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026574176 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024328386 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025427424 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023886792 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025116331 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025209931 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023745036 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.085797204 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026391592 seconds)
  done (took 1.891662864 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088415399 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.273935205 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.066237557 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.02318844 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.074453915 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.032511101 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024163369 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.029193409 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.032449499 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023402455 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.0842652 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.044300197 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027319658 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.031856214 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024032182 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027135848 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.02913325 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.032443671 seconds)
  done (took 1.745820613 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.090054995 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.031957728 seconds)
  done (took 0.899960539 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.137265232 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.062337736 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.105404202 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331775083 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.094310602 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.285753568 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.099918823 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.095875145 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.068393635 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.093529699 seconds)
  done (took 2.146683022 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.060525221 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.055133387 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.278868119 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054419585 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034140577 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029028036 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030120739 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.02922184 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030757265 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029371305 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072457644 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028126302 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024596621 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.068093257 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046369398 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059253686 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023801299 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028800619 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032846654 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023704325 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.02769071 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.029038277 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134856901 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.028964078 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.047665196 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026893977 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028358143 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029492464 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029459143 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030088255 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.030195314 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.049629738 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.028840906 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037500888 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027828765 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.047052528 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024640156 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.046779959 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027021322 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024555143 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.026789016 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.030323641 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025139313 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029935126 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030984086 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029306676 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.029254183 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023724923 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030922203 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027296428 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024759366 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.027874167 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028003639 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.028616134 seconds)
  done (took 2.981096037 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.076450479 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066616385 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024145326 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074162765 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066165573 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024374255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079840154 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060856726 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077049857 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023751578 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023457833 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023488015 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030165642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.033990682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076239594 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069359563 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025343273 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024121806 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.06838576 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.06832369 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022931404 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078622004 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069200066 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.066970493 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022643451 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024056013 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022848915 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023445195 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029689239 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030475209 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023245077 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.03196428 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034094157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.02983451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022685921 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022946417 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022858124 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.030688379 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.031193304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030918491 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029072792 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022678163 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022848206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023411779 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.02383872 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022456741 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.030927746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030348355 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.030876493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023770781 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024088713 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023460771 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02399258 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.029806646 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028530707 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.029882217 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031817738 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023180165 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023103841 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024325909 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032419103 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.030551652 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030509554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024038917 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030591183 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023034541 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031483551 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.035739097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022992208 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.02354893 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023294347 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023213559 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023586484 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.028943588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029055788 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023713426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023580875 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022999176 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.030469756 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.02929949 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023076966 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.030226172 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022704967 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023311644 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023648323 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023865034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.031410171 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.030451434 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02376513 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023250978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023326818 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023325423 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022640133 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031327334 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031020817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.031512093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.032441253 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02422101 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.033065206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031799173 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024359803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.030679234 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023781971 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024165144 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024148393 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.030659279 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030439245 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.032091521 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023892222 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023479302 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.031603385 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033839896 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023673537 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.030366648 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032329805 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.030794306 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023186727 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033540278 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023829301 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032784648 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024108469 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032278362 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024132818 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031174967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024030874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023237175 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023833418 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.033544175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024414302 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023874155 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024204246 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023876752 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.03127072 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.034309912 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024540371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031614794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.031468861 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024386977 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032469531 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024061762 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.032650371 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024050004 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024322868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023226549 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035107286 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02377277 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024211516 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023873025 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032966151 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023751277 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.032990048 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030166201 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023235702 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033084167 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032573258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030340296 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.03328709 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024508108 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023987502 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023558861 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023854322 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032154428 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033780085 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024669662 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023857127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.030049138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.032744596 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023404926 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.030417959 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030332867 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.030830816 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024124016 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023972812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033847254 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034911356 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.031141488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.032939564 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032131214 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023862343 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.030749737 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033191278 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023899253 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037993226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023873536 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.034515412 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.033390435 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.030319882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03305762 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.034330393 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0328604 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033178765 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.035314508 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023503562 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023759184 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.03123455 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023834063 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.171448871 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028731479 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023821387 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023715291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.034428649 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023466356 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.030566006 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022804213 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029319431 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022628881 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023557745 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033548284 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023064467 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023545455 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.028498441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023055511 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028276094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.030989656 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028326405 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022911494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.02341068 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.03075506 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.029642866 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022934607 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022794123 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023405752 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.029713179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029166122 seconds)
  done (took 7.71342184 seconds)
done (took 19.317241062 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.131842506 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.07046799 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.125546485 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.076708307 seconds)
  done (took 1.177183762 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.055867784 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019780391 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.136157608 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.146611151 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019957835 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.129558232 seconds)
  done (took 1.300479457 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.241341864 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.144062381 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.145176052 seconds)
  done (took 1.326316331 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.149339713 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.282944169 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.560947368 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.142284774 seconds)
  done (took 1.938059149 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.163582343 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.154831957 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.029969136 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170971249 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.036642982 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016205615 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.09741497 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017152795 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.048489951 seconds)
  done (took 1.592256844 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.089971974 seconds)
done (took 8.217593014 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.223292704 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.132360954 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033508945 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028068468 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.122842633 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.125879844 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.144253984 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030314637 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.134652038 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.301574946 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.181301391 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.04887768 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.148045243 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.041532914 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.256892135 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030962843 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029779656 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024839367 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.136658786 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.13127278 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.240566541 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028313771 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.097028918 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030633236 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.099868055 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.078875812 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.186229429 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.305886965 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.266037585 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030950098 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.119017896 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.041127511 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.114652406 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.122347009 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.128282775 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048593242 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020253206 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.237137684 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.100905764 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.339659257 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.193193141 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027513961 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.138466519 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025492356 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019827596 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.140024991 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032127662 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026531918 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042965843 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027700316 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.039242344 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028563037 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.130875601 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024275756 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093979121 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.133532673 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.183821188 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.102688776 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026445551 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.03780563 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030386564 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.157802247 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038004725 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025901486 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031659039 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020467599 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.131373893 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040333835 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020741798 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031213425 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029402415 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.097800393 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.147921322 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.065149964 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031923646 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.106831032 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.097726085 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046322597 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047787962 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029697976 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020001994 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.190197312 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025843697 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038325739 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027410479 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.053283743 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020237245 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035046995 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.192134754 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.14631597 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.086321155 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021462361 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.235298061 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022262753 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.045208796 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021524099 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020954727 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.186556734 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020642736 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020801249 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.030978596 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029625757 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022917303 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.191926904 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.101849907 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028973591 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027806529 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.0212512 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026936193 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021942497 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021315977 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020795035 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.096373695 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037616866 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.02026125 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.104422487 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.120891927 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031608293 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.037616511 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.249729647 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.024374557 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030648015 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027930135 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.137522035 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.02720047 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.133511388 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.022117282 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.041413559 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.116294603 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.097258459 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102437588 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019973193 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.138666885 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029940011 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019589997 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027383869 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046959139 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029728353 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036817938 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028414039 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.13827305 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030321491 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.026030775 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.115958672 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019339964 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.10597947 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098919818 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.128984627 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02496462 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029766074 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.092649594 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042022985 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049142371 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.040647063 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024419947 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.02004399 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019738278 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032859688 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019206612 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020014879 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032512823 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026673238 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035976676 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.233631105 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029577648 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.02413285 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.249986676 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031967907 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.090828442 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.039442766 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020234772 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.09968193 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.02167349 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040183476 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.083143401 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020307261 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.09729237 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020813583 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020262605 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026174468 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021944932 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.02965995 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033414578 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020641964 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032949447 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.028025121 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020180634 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.100224101 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022409346 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.186752895 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.099133167 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.095174157 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020503966 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.039027918 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020147585 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133151194 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020524537 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.069250551 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.110869005 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034777667 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040732689 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021480495 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.099359621 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034268131 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025432456 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.099927245 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.130907743 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.091414038 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026730548 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.241220718 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029334716 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020685249 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026319047 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029335323 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.02070441 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.100568205 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025246215 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019805821 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.02002773 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022332226 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019377646 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.044125799 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019594155 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028386248 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.026140363 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023364326 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022362646 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019408647 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028628301 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.100549102 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.118994954 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026553192 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039800694 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.032983013 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030822882 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.067003119 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028166039 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.158825765 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019443201 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.02985435 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.040359889 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019743247 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025008338 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025691255 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.036703586 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023672409 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021307771 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029163593 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020268312 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020297831 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020233136 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020576553 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029359667 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021717289 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019935252 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019909132 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036419016 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025438261 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025795714 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031184697 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.040305496 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.474095759 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021732626 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022753527 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.033061509 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025950941 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020682485 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021711559 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020247117 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022522594 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.02055551 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019929747 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.047637749 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025503902 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020825263 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.040671314 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.026336084 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030287031 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.118612713 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037084371 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025416494 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.01972959 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.258757042 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.094734907 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.041534633 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039677153 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020783249 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031334627 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020652702 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.021274778 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019805974 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046836676 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.026075797 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020743568 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019799125 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.02009404 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.06803544 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028861619 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.020048711 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028820682 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020352671 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020368828 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.047017994 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021250177 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020567994 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037938926 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032550538 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.105912211 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.03238074 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023970806 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.071615272 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.020015803 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020557503 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020845624 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.107082162 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.033136163 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022154276 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020557861 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.02802034 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029881969 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.074015001 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026948904 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.02400833 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028476864 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019951231 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020823739 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.047446519 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.049238755 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021855977 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.024348309 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020541075 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020768114 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.098419467 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.028243218 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025672233 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.109538429 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.023011458 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028812623 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019985081 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.488638232 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.208669659 seconds)
  done (took 22.350983252 seconds)
done (took 23.16286608 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.149763652 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.033200448 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040519055 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028888113 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032193278 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031738555 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042373884 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029719382 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032769132 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.040681616 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.142181584 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020306296 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027760692 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.033985721 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028711892 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.032589675 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031478215 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.032184304 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.02071512 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.032455912 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031392975 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.031232878 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029144607 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031856758 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020622235 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028702666 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144818954 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034876088 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030665359 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029641566 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027904783 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042132665 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027966056 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027503851 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029486702 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025706941 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029874412 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026762347 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.144301482 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025851137 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020513162 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031688833 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027200714 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027900447 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028811715 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031049541 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025527476 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.032470073 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.028370482 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039671042 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14374621 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028888102 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.030602497 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.02841134 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025596811 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029180852 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.030275315 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030433952 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025406818 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039015583 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028884735 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027924197 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.01991606 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028357178 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027382382 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027650438 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019133591 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02876924 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019915639 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019854588 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.028356581 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028338093 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026790881 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.030523843 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.028292745 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019837975 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027845948 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.038847909 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026927367 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028491469 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.02023813 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0255266 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024987088 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020311366 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028811853 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030971762 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.029132449 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020376403 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.028362811 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039377639 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026622594 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.01983983 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030765819 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028737792 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028588816 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019945749 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.028482817 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028510767 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027838595 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019907147 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019146053 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028733955 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025222012 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028360144 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020248108 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028576608 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028466916 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019181867 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028367983 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027131455 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028793948 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030707044 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028437381 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031183505 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020343403 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019151048 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029666824 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020240383 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028701479 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.02808083 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.02541909 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027722027 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020407931 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027925365 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028522404 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.026049801 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020263152 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020342432 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020242695 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028635467 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027211441 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019155106 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019816386 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028505404 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028322837 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027926596 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.028344935 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028379987 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020360802 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025974407 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025412258 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028420909 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.028132903 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.02020041 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.02819018 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.02817342 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.029041056 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025416408 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028709975 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.02048619 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028377683 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027051849 seconds)
done (took 5.678452227 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075507421 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.062826226 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.171186682 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.139192973 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033253789 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033887244 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025173839 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040042883 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026720106 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045149301 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045765945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043458974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.156453627 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041289625 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020373398 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032263421 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020922353 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.046750152 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.140565434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.04542812 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062094783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.01914406 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.035380862 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.038771383 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.032051184 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.03844742 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044806903 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021492919 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038250197 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037114071 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047421191 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022993755 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020764147 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039260631 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036375228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028833025 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.02015421 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026818151 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.031817927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020267892 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062848342 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038409581 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026574014 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.026779809 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021193407 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.034977281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021046933 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.027601793 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.03345302 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.02657847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032367111 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.03626382 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022234578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.037857587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019326224 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027420027 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.027085036 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020202778 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021065066 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020257582 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020197381 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023261269 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.032582487 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.038062507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024102376 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027223624 seconds)
  done (took 3.527159475 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.046688179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.066873997 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.03465101 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035130202 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.020051006 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020522772 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020496611 seconds)
  done (took 1.151531765 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09296537 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135971408 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139233401 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140524154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.152901206 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.137164276 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033376828 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050208348 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.055524759 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156343244 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.147809701 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14191733 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024479054 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032835742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052528119 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.144101332 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033372001 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028092176 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13621446 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142419747 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025595338 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052259725 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033598448 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.02361386 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.144649362 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137239149 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024424935 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062705875 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023328121 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.02123489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021251605 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043567279 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138049293 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035996742 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021507917 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020172872 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135612625 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021705173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.137948483 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028021482 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13526119 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023663505 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023989211 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021487415 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022440551 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135099255 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.02250867 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021192541 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020750018 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13938231 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.032159047 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138339028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022723496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0259994 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028309943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027612035 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028130595 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021638282 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141448084 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031610162 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023178532 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144273315 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14326772 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138798468 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.144063535 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030389644 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140322378 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.135855269 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021330461 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029303994 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022096376 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145470489 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.02508841 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023910199 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019851577 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028806809 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.150993058 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.151020884 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.151590088 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035156971 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023047674 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.02202118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.151130451 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152079343 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026892768 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.02177129 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.02201529 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037263296 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046002159 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023946451 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026323656 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021635454 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032235372 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.02396019 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023274148 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145566164 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.02086444 seconds)
  done (took 7.608012934 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038936506 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021685432 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021169675 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021504244 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021843552 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0215678 seconds)
  done (took 1.131494215 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.060959218 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022037304 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.021821951 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021798271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044136298 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129303394 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129099655 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.02308908 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038595196 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033887209 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129115334 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.132134016 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.131360784 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023102475 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.129253794 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033662714 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.12964837 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026386502 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032844428 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02305991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032106954 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022729273 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022918955 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.14882449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016999397 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033230476 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.031048692 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033039484 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032650978 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022665191 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022628667 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016664357 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.031810696 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022658646 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130537569 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.032211458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022007917 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017693362 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025888271 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016645639 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.133394788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023248497 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026278153 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.01769141 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022714161 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031883625 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017703657 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031554827 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131171304 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.01799945 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017820663 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022404154 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016812134 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017638065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.031984263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022883913 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017734682 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131552278 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023045985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.032227463 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022112944 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016783342 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0227367 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016667839 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026677762 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017718878 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.031969562 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022996472 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023095473 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021912619 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.017735269 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021958775 seconds)
  done (took 4.012704927 seconds)
done (took 18.337045957 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.455250622 seconds)
  done (took 1.363260536 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.959454689 seconds)
  done (took 1.879533953 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.050470577 seconds)
  done (took 0.986615442 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.293156082 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.462013962 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708192224 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.091339965 seconds)
  done (took 2.474710409 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.852290767 seconds)
  done (took 1.797556486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.205712294 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.170530369 seconds)
  done (took 1.338677009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.491717667 seconds)
  done (took 1.423341536 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.32230847 seconds)
  done (took 2.261357453 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.193997536 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.134425726 seconds)
  done (took 1.267713458 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605634205 seconds)
  done (took 1.541488787 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.355021975 seconds)
  done (took 7.29338908 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.185429788 seconds)
  done (took 1.179046449 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242080755 seconds)
  done (took 1.181356198 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.708256601 seconds)
  done (took 1.646746049 seconds)
done (took 28.580976805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044422681 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037538713 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037525599 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.03483917 seconds)
  done (took 1.081785838 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030827167 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025225549 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027337374 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.02767377 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025095846 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026938468 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.02764855 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.02410716 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.02522712 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024553236 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.023214917 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024493684 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026871215 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024310869 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026644759 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.02782546 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024551505 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025119889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026280844 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024223419 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026919561 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.02450715 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024507543 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025784793 seconds)
  done (took 1.560103783 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034672808 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026001965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027790294 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024885725 seconds)
  done (took 1.056587224 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.031830032 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.02945014 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.037384938 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.037975277 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029522164 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030001344 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.035589291 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.03629595 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043685446 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.038419386 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022052553 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021822273 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.021031801 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.034072107 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.035380603 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015988461 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017180106 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030100947 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.02904535 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.031556661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023956288 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.01967811 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029589324 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.029619182 seconds)
  done (took 1.650189487 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037287407 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019931268 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.03515598 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044246506 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.04419039 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019756431 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032868249 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045052983 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.188195111 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.020062698 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.026089406 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019859673 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.050327222 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019761758 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034191925 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.166341175 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.169667588 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.024258441 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.05061787 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019866133 seconds)
  done (took 2.016026926 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.029271559 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.023934898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025253715 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019487146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030521277 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026792337 seconds)
  done (took 1.105183983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024452669 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021542795 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021297042 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025642491 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.02126678 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021142678 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021201331 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.02002901 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020025003 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020812127 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020883204 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021244865 seconds)
  done (took 1.202449399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.141791039 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026589841 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.02432371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020018061 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021843721 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.021052808 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.033429275 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022681305 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.036355208 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.02079374 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.02116326 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023232773 seconds)
  done (took 1.356874354 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059192325 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062905667 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095257559 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071982468 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077685734 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049056517 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.194793042 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033719114 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.11225987 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087400688 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074949467 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045616841 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039627956 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023793332 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053860525 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069647718 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088882076 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027240921 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072401538 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.230821205 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083341813 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.082969838 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099126842 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076275742 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045240074 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099022238 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05000753 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055922851 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.076409393 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.078953571 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074335284 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.057216251 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025775067 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025012688 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113215565 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.057447818 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073447843 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.046268939 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.05952658 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.0440262 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079738083 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024810811 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038306109 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.065354078 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04166422 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089701125 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.050455074 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07183773 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036497894 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095334117 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084869661 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.171881872 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041822839 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059989952 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098216597 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068875087 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088047459 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063736899 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036611178 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.077038705 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.067315374 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058855237 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065648766 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036159374 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133839261 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045470493 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.234472625 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066520138 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.04370066 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0479958 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063870847 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087675401 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076674587 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.069137012 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08160545 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045867136 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079979674 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.052723914 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.076852569 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054809047 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026597547 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.072687696 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079605305 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.049770765 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052517969 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078102629 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046245107 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029823911 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.042537738 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.071627221 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034005923 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.061188906 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03865527 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.081989659 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086435167 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05126512 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067770044 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074749567 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032489701 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11609245 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061106741 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027337702 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071358169 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066260766 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104823872 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05028053 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029627224 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053800624 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056338194 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.115890614 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057480162 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035328421 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071256751 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095368822 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04972804 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.246348228 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050782059 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098008646 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070713028 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041495603 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030093714 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.04969589 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068462373 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066389045 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080032188 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050573851 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038461476 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041786115 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0766216 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049660923 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034490051 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075884575 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.060107328 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.02995856 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045594766 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.03235125 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108907698 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.041016982 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097988862 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.244173241 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030327305 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059512414 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049884208 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058453983 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.053770015 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072799186 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090358654 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.14481225 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043358593 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.036215378 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060382138 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093774824 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077011207 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043974157 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.036965779 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052645183 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062976928 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.053104327 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074076081 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046724476 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062452561 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055303917 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090570814 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093666129 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054116474 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058996418 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05850395 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.066336976 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.02931272 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10970451 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056498914 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076391057 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041444928 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093469575 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.069845232 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060157612 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040629469 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057949324 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.055922389 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05996244 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096114318 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.04654436 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026570594 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047376845 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100307954 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031387599 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073352538 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044926665 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.045635541 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071623036 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.04786733 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036802745 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022980299 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077398091 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112930494 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024977923 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072722945 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.071355252 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059331991 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.07847603 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.024463151 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083967642 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094016033 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082601473 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105617901 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.399780737 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07871932 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075146099 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.081183723 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227920659 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033467865 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.077183623 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084889857 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.045328306 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044530915 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085731028 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071181106 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.084857687 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.064575012 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07287622 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.056345592 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060713754 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055672648 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.052989106 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092650555 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074264694 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.076649442 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037531443 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062377505 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071529986 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087334112 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034905637 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092133622 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.038192531 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094212608 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032306572 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.078763416 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030815454 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.125136061 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033745869 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053595857 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024050419 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026622596 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095748468 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.075041147 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057977463 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051894132 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.087001734 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090501958 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032364851 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065802903 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068418927 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057929813 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068172723 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061975788 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042909383 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049399896 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.062217631 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.039301866 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.035107964 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080394179 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050979155 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09060041 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037910719 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029551793 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094200574 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06613512 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049004462 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031409997 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063063966 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.08363378 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04796235 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041303379 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077292405 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060978826 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098907056 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.046069495 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.058014169 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082686145 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037312225 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052174588 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024967338 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045564092 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031986975 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088042052 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03173352 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.236155014 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023609352 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081689109 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038253628 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.050660399 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.056451173 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06027571 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085945441 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04714182 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089983638 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041697134 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.070423571 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059695666 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064541262 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.039368865 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055232929 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056535072 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072277187 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.045454827 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072040421 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092156045 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054251647 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092920055 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043054876 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075368267 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059378006 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.076499149 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065077455 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146696844 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091296335 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066746983 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065052401 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029714689 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049626709 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064369814 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063482283 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127390962 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076897819 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026570772 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057704186 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047750155 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060764204 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061200725 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033771293 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095908364 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054290672 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041662453 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06162348 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.042799001 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058361116 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030094327 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056404103 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.049648768 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049297722 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051652521 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070037686 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084251205 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065074773 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100426598 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.05872704 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046564037 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.07432193 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073364619 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071153373 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038650925 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039003376 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100349089 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.0779089 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.083017384 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054397431 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067527236 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071699099 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056744484 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.24057982 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058544878 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.075012749 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032992229 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.030107235 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022791916 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026119266 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074872431 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062292752 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060956753 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056476638 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026188867 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057563075 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059662211 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026016077 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038467096 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046119106 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.051508285 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.035071345 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056388402 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.067187037 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.045668192 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053522672 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055793359 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090388595 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.050643005 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040833507 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093665877 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100028476 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041413873 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046600403 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025825329 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033154427 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075908185 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097012296 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099823812 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.032944643 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040479013 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.037769179 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040845472 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025718538 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.043061052 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.041823815 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05846903 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052996504 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067694634 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058046363 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030015039 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.06112891 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053334582 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046941841 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.062574192 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074297495 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079846089 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.0911053 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068981828 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068779025 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030276957 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033358649 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030889192 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034332427 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061135823 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033744554 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031084977 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102961665 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046738764 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06678526 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068135277 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.043004693 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030475479 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08949911 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024490443 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091102593 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025918927 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035317341 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.037093385 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033828657 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051225048 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099598243 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067117889 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06641905 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063313643 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067651432 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.299373415 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108178976 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038202319 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092034973 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0292031 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029782527 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029971862 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059741254 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04202091 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069755106 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09311777 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040838866 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052344446 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031363095 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09235198 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.049604749 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.05345797 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038277563 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032690647 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09185314 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033193211 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.037252251 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041857147 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062987518 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026069184 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.054285961 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036706363 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033260581 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142421193 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.665215702 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050185977 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.028570977 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049858829 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.094464546 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085676405 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049315651 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063571786 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.071640235 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058155571 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048182946 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067355894 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.157576368 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028222803 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048862776 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.051164073 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055924556 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062153437 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.049946912 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.041920075 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.049309867 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.040492211 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033810091 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067275148 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040498957 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050471253 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061470896 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037263711 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.042294452 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085277697 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056547507 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.038525758 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043982771 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.067303535 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041869969 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061837397 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024569589 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.065891163 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044152074 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075609134 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.055706426 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066458131 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081329619 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049052061 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093344388 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064936164 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079193556 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042206155 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.033332977 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082804503 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.046340966 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.188988634 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093586451 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.04542805 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.057795474 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058319954 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.049117679 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060877804 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064452625 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064385486 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052597466 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031636267 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050089934 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.056478819 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038159578 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03233169 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.026382782 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.029410489 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059376568 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036937732 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039702648 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068116588 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041336318 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.055250559 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.05003033 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072676547 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042143227 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055843925 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062090139 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044897075 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083562384 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053962704 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080215259 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126919753 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084473136 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083116572 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086506952 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032205613 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.033126647 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023584542 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068963547 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034071342 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.041181143 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033289543 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086326304 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038953127 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064458785 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.213941496 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034646653 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047103984 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05003647 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024321913 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037627761 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063015438 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040653521 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034100749 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06542516 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036116699 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082086659 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062309333 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052483878 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.04952523 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034739788 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061971239 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058868356 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.083641573 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052713251 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028884636 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111917244 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061556068 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098193409 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029564583 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035697128 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084531283 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060416885 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09143665 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036669783 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117872477 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.101395091 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.062182908 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092122476 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026253188 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045012384 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045814972 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.232959428 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037661142 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057786502 seconds)
  done (took 40.460457747 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.134978923 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.255740784 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.130674567 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.10926447 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077446101 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078379218 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.246993981 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.091182246 seconds)
  done (took 2.181703798 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.025087212 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.054893762 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035826443 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.283501469 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.053394047 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021241963 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.02739242 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036637712 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024140426 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020843068 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.059213444 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.021074686 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.025049662 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.442740702 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020348767 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025003069 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.025085994 seconds)
  done (took 2.275502887 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.301753587 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.664336004 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.220543994 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.456475611 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.105522894 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560844248 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.02906788 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034429798 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.635377248 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.16641583 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.097485444 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.174772367 seconds)
  done (took 17.50889155 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031646657 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.148478075 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.147260536 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028063876 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027713893 seconds)
  done (took 1.515906467 seconds)
done (took 75.984529723 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041628133 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.121860564 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021129887 seconds)
  done (took 1.228965949 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.15067272 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.146955664 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.147427671 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.148574071 seconds)
  done (took 1.647962344 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030967292 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030220962 seconds)
  done (took 1.125288773 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.173687506 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.280176106 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.050564794 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.039927723 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.035501547 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035850388 seconds)
  done (took 1.178242713 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027251569 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025125918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024973805 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025326567 seconds)
  done (took 1.158348 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.130329125 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019937394 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022508265 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023994442 seconds)
  done (took 1.25395018 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040275342 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.038983102 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.069041697 seconds)
  done (took 1.209091623 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040056723 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038974045 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033504477 seconds)
  done (took 1.174434471 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.056470719 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.047314887 seconds)
  done (took 1.162424334 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036378909 seconds)
  done (took 1.097661592 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.044724134 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.050779062 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.20608162 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.173977553 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.210575189 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.193052855 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.032578166 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.029919643 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.03234509 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.034129996 seconds)
  done (took 2.064990375 seconds)
done (took 15.90502456 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036545441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.147530983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270652425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.039576653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608557711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267333539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.686542088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.042988325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053680879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022943439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037708006 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.587056566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.687019916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.099520144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.670626902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.094662801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.515575633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022362088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021517296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021965986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.664548499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021880803 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022326455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022777343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.514081656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.287581898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022790566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.097417112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021838011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025363189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269279244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022844101 seconds)
  done (took 11.978690265 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026239635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076318807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026602589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036507871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023751028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023924941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.039799975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022433839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064733428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022239641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038102793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02166668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026311121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023042267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041143021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022120717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024036315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022608441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022211437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022756508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039956626 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021890663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022448537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022674142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022416089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.03636148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023238442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022077513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022357778 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025846668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027152161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02351008 seconds)
  done (took 2.008634386 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078604998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077444164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027359142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061084468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072620213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024702971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10433103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043620908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.066977763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022659927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038427563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022231211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058287492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023653978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041955577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022375293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024459396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022820581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022300947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022635408 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040475841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022036262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022592932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022737386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022742508 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038297345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023272496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022241319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022340944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026130265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.028049729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023550135 seconds)
  done (took 2.26552741 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026338939 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026434469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032208003 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035168367 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020689219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.02326432 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.02452808 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020791825 seconds)
  done (took 1.283274789 seconds)
done (took 18.61424726 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.03613239 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022414748 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025366537 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046917784 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028894388 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137297886 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.025089576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027555787 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026170065 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025401186 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027534703 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019894821 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.02469011 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024726327 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026346861 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020422677 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140227223 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024996208 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138328844 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.139635094 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023335059 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026312339 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029290763 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138668581 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138371214 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139027643 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029800533 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026503557 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026204254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023659508 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.137371949 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.139530783 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023319673 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134342238 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020930162 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020716911 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025321602 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022236067 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142179626 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029935869 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022959985 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029667445 seconds)
  done (took 3.392561187 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.143402214 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148369602 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.141252065 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033149564 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029449544 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032635246 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.147605617 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029877807 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028694084 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.145602803 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024287749 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028436282 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030621866 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0214458 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.028295252 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024728842 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030288149 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022569548 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.028239407 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028507659 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.146797521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021960872 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.02914457 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029824223 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024284517 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030345015 seconds)
  done (took 2.52159094 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031752855 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043730247 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045671401 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109962952 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063175662 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.044496897 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037461118 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047861583 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.054146504 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021504301 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044085838 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.049746496 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051023561 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028485756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06072161 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040610504 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034866854 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023157582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.02785633 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.057689208 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.045243066 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.041843889 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054990623 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.04208402 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020600372 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030795167 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025801301 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037835988 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032886092 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033704853 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025008567 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025063563 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022404159 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032092945 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024994195 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.020003506 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044982439 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034151419 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036579759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060759218 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031859844 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022724767 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.047847783 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081430776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020315947 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024206475 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025697243 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034016266 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022947181 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.064191683 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036361169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.021032767 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040958074 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022825457 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022990355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042352799 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023131559 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02353498 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042102981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.02790096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043593369 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027223744 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041456523 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020426902 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033017164 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022763252 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023205242 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020150136 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.05528184 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028784855 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.067503636 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022519801 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019964992 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033596403 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032983942 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028786097 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020247354 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03959301 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033923175 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025363813 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039881128 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024356009 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024962454 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.066104949 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.02081633 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019914155 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019872988 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023972666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024835689 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022024714 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033594289 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020942273 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.02493714 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.048211478 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021268422 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022061872 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024069251 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022783593 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020899251 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03062981 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024683357 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.02338214 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.03404548 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022191652 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024999836 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036983958 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030874821 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020163125 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022771767 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023785182 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.02342721 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023443362 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025154989 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023571049 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027182869 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029199916 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027278908 seconds)
  done (took 5.019101387 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234278147 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223832486 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022702916 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.220277719 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029874217 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.150937216 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223391276 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.223280162 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022289588 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023446134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021541166 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.166066055 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.161080711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.172927261 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.152540568 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024445294 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055154451 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171697583 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2280706 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.223066096 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054249802 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.033270267 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024814164 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.02372686 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.023168905 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030970592 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.039127631 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030450281 seconds)
  done (took 4.114252154 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.03032826 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066943732 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.02597734 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046889343 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.037928624 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022864837 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.024138901 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022426585 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039330007 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027516115 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022578303 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026314304 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025561945 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024400088 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022432935 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028625708 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.029006459 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.02113748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025889761 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.02689167 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.03353264 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045102796 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026108948 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.02210097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025479355 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.022120809 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026980387 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030258045 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021950229 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021938755 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019461064 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.031047058 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037375256 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023520702 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021921877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022881582 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022663807 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022555694 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022399105 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.02070682 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020605853 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027486602 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020940535 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026708426 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035873732 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024836376 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023943138 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024898215 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.025161086 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019454894 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025019143 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025111552 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.025281769 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030912624 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024759789 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.025493501 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023900523 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037656304 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.02851469 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021912367 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021681756 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020871009 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024423994 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028936109 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038867857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024476609 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.02090408 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.023025413 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.024090704 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035919059 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021756819 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028947345 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019852141 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022686499 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.025076217 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025279073 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023758612 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020796827 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022349217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021818484 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02257848 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.02215588 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.02156111 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024892589 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.02043727 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020799602 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.023021981 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023951002 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027152203 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021258146 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025682079 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.02389238 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021365954 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024910403 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027905397 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025179605 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040102673 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029590509 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023262147 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.0205914 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.039123861 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024897037 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021885382 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024753976 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031249531 seconds)
  done (took 3.881933793 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053295158 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.023805501 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042232592 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.05834816 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032675645 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028226796 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036534571 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.022778673 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.044104553 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021554649 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031678297 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020723376 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035637138 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031001818 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023586266 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032081313 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025144375 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043350385 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037604247 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021102227 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031124452 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.035079302 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.035065025 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040172588 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039735804 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.041197775 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034679907 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.0252525 seconds)
  done (took 2.055313862 seconds)
done (took 22.051276826 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.122862291 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.307045204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.104230398 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.716286686 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.157932578 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.336951573 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.183413919 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.080482468 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.993606413 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189348113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.780732478 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.297434593 seconds)
done (took 59.435566057 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.168290301 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.251260967 seconds)
    (2/2) benchmarking "String"...
    done (took 1.343821179 seconds)
  done (took 3.700396561 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.530779964 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.092768057 seconds)
    (3/3) benchmarking "different"...
    done (took 1.126064627 seconds)
  done (took 4.829038693 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.465180659 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.080597981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.406269951 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.080901113 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.097963848 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.733137037 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.236054747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.775324237 seconds)
  done (took 27.500160741 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.145163572 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.357990679 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.45952274 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.561232365 seconds)
  done (took 17.69758473 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.543390815 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.512598627 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.512017109 seconds)
    (4/4) benchmarking "different"...
    done (took 1.724128838 seconds)
  done (took 7.500858665 seconds)
done (took 71.042017492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.081215076 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.239645525 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.099225588 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.277904103 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.127925371 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.162939092 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.09831581 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.119903753 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.091484585 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.095126897 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.994265729 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.091954241 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.088778897 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.150393782 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.099499578 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.115670737 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.233309146 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.100854703 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.116278287 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.664240218 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.264359166 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.085509398 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.098223222 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.1658995 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.182403973 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.136467849 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.381440315 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.092581879 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.687204393 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.098878745 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.098038936 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.091349843 seconds)
  done (took 180.512157591 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.080777034 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.864696313 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.92610593 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.09736088 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.426280727 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440154254 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.887603674 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.446144522 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.090364319 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.103853476 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.086961184 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.085452268 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.114780117 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.618482477 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.126679345 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.117934469 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.960768014 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.898982337 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.137215205 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.967931447 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.090475173 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.569803303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.543138181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.893302909 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.103072675 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.113402854 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.102116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.126692735 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.558765496 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.912851176 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.09955844 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.112261397 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.274160487 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.328683023 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.089670893 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.100340861 seconds)
  done (took 151.588421996 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.263825534 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.088758843 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.124527807 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.200308931 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.855078097 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.762383633 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.092325744 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.080742904 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.080768458 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.087829744 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.082326325 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.147567488 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.091643269 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.403368008 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.120553673 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.082800862 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.081504843 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.397173351 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.102243057 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.080883729 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.080731316 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.176126188 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.433841856 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.193074726 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.091896855 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.08917815 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.190302934 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.098348133 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.08304021 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.081053327 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.189560151 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.0916571 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.2059298 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.200838816 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.096999482 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.136283611 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.09926068 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.177441815 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.09377826 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.081132206 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.082666482 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.122836459 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.090849443 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.900200299 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.190065035 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.095396369 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.100126829 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.533033832 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.682192041 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.09434507 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.081947155 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.081146391 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.084346642 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.083013293 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.51517714 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.095979007 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.114429599 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.183112152 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.097945499 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.081166429 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.08158906 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.081112329 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.081867313 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.087557218 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.116804333 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.623182498 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.719466307 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.445362826 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.690123686 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.092090422 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.081040554 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.080962553 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.594533215 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.152991527 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.083020188 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.081009046 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.245635312 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.091493501 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.081371518 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.921965072 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.933188312 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.092785396 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.190035435 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.092248363 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.081581524 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.488317997 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.409988575 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.102221408 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.100987438 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.135704163 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.085119327 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.080616012 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.087927895 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.921981212 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.093733857 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.093729878 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.256211702 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.092462638 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.081092927 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.116574279 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.436020327 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.091549638 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.163190582 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.475383197 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.874594702 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.092275936 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.08100482 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.099719045 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.082408017 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.093257912 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.092866146 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.082147713 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.081087265 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.085916964 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.081374967 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.080370768 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.081010213 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.099837663 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.082104047 seconds)
  done (took 322.489474036 seconds)
done (took 657.048890338 seconds)
(4/20) benchmarking "parallel"...
done (took 1.080546842 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.334638483 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.10821775 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.290881706 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.343876181 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.286929029 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.262872933 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.290584891 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.381723802 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.320530237 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.254401999 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.312922738 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.257780633 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.363029435 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.347030698 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.344847015 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.375848767 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.289087831 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.788622243 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.297928599 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.258329583 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.278612493 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.26842673 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.241603025 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.316270995 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.347019396 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.285022323 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.490455894 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.324105724 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.296190414 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.338845996 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.355617602 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.371869518 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.304364641 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.3319393 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.345551933 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.354107812 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.319867308 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.350500217 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.262462837 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.298157429 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.309930442 seconds)
  done (took 62.381744048 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.51939932 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.269169973 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.399027851 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.408138623 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.910597752 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.386552036 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.502039784 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.268081447 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.283309996 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.407038083 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.430765455 seconds)
  done (took 17.893179716 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.347730254 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.268704955 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.402370919 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.410553713 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.533273436 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.395710183 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.447007944 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.26948604 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.284292202 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.400179035 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.419613013 seconds)
  done (took 17.286232745 seconds)
done (took 98.641755411 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.678583538 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.163950723 seconds)
  done (took 3.922332022 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.112955658 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.100752828 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.093863296 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.096477788 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.094981478 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.092336828 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.148675497 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.104795132 seconds)
  done (took 9.924880173 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.093196302 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.093794085 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.093436526 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.0932021 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.092706733 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.093090889 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.093082474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.093143428 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.093015498 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.093471026 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.093189519 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.093294289 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.094292492 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.093018123 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.092990817 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.093267788 seconds)
  done (took 18.574985152 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.09233808 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.09355753 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.093423473 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.093269899 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.09323697 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.093160918 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.093252037 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.101197703 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.093229849 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.093241849 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.092721584 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.093229821 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.093081758 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.092739431 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.093596901 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.093147886 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.095367854 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.093534532 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.092905194 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.094031147 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.093051404 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.09393757 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.093700651 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.096327856 seconds)
  done (took 27.331799681 seconds)
done (took 60.861968525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.686805598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.86939079 seconds)
  done (took 6.636188585 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.093820754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.093571226 seconds)
  done (took 3.331655803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.092709379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.093502938 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.093439517 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.093020072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.093558067 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.093096571 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.093558177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.093259966 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.093088675 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.093483718 seconds)
  done (took 12.01301 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.093107646 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.09356758 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.093018764 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.094143901 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.092926041 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.092731606 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.093609682 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.09301907 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.093314848 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.091775701 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.093458706 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.281297485 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.092907706 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.319145228 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.093283926 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.092616362 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.092883597 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.093054843 seconds)
  done (took 21.170763691 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.093542373 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.093063844 seconds)
  done (took 3.267117163 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.092586968 seconds)
    (2/7) benchmarking "second"...
    done (took 1.092364788 seconds)
    (3/7) benchmarking "month"...
    done (took 1.093462651 seconds)
    (4/7) benchmarking "year"...
    done (took 1.092966601 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.092787702 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.092652492 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.092718363 seconds)
  done (took 8.730005946 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.54188164 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.255420751 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.306376952 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.557633969 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762581638 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.033152494 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.766598347 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.031290434 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.85197443 seconds)
  done (took 16.18752546 seconds)
done (took 72.417797559 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.869860024 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.084351162 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.536572403 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.268747097 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.100660821 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.412664981 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.105245029 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.685113364 seconds)
done (took 37.152573355 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.127782421 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.081821095 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.120772802 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.120370059 seconds)
  done (took 19.403958885 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.082817607 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.645395659 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.122339261 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.133576613 seconds)
  done (took 19.149927251 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.48429734 seconds)
    (2/2) benchmarking "read"...
    done (took 1.49363511 seconds)
  done (took 4.078342485 seconds)
done (took 49.843555085 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.093778563 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.09319492 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.094035426 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.093087131 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.093420674 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.093078835 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.094064704 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.093551763 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.093214133 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.094191852 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.093244181 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.093657393 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.093523763 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.093479982 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.093343658 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.093697407 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.093704204 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.094539482 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093949377 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093679446 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.093545182 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.093764623 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.093592577 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.093575507 seconds)
  done (took 27.328193756 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242265862 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.192682442 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241672073 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223944944 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209916287 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230297458 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233804834 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.156520035 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.235096438 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.233413909 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143137837 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201375068 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232008264 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.206904027 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237028398 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206487978 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236292092 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159470733 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235220314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211396364 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230392074 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159050232 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.202552252 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188602741 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.199585477 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.140237074 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238998922 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.193101827 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186944047 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.199983747 seconds)
  done (took 37.290062488 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.128061619 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.094583495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.094501121 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.181522251 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.094709609 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.09484342 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.09524276 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.095277419 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.094426757 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.095058001 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.094753969 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.094824957 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.0947911 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.095505688 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.094764144 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.095536569 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.124918759 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.275229012 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.095013139 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.094567519 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.14451413 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.094708891 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.095135906 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.095128411 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.094788983 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.094756504 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.094416345 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.094755574 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.094758484 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.094369366 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.094883316 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.139879344 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.127824747 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.095058004 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217064099 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.151683403 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.094785226 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.126704333 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.094873157 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.095085727 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.094767337 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.094780297 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.094718483 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.094795401 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.160390138 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.095666613 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.095736237 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.094770876 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.094368912 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.094976266 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.094993132 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.095047523 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.110456684 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.095350587 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.094790073 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.095572613 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.094767233 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.094609312 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.094548023 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.094677818 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.095079689 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.166481308 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.095204396 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.094673764 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.470963592 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.09475906 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.160965433 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.094973354 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.095571501 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.312417958 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.09466752 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.305342464 seconds)
  done (took 81.60723899 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.093243097 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.093647882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.172664414 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.170918417 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.093757016 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.093519996 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.093583917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.093524357 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757491706 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.093404745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.093707532 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.093488251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762260472 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.093735795 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.09307986 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.171177557 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.093880807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.093253921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.09367368 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.093874758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.093639252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.094127407 seconds)
  done (took 26.707284738 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.132288879 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.108313796 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.135377307 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.093774012 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.093908643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.093483943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.128466631 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.108766718 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135934786 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.129932439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.130044812 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.132941105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.093709694 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130471069 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.129798276 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.109476624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.132635833 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.108707847 seconds)
  done (took 21.20930721 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.270532261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.259110588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222333636 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.138254631 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.35499522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352458245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198810417 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317956067 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.195364381 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.259163341 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.318812264 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195585044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.352366493 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136191541 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193677828 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.355694889 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221111277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135643356 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261406111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198304322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27147317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261955752 seconds)
  done (took 28.552920877 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172476236 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.187165843 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.171133414 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.176729491 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.094072747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.093625604 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.153200169 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.131329094 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.109648554 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.177785617 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.130207464 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.093857661 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.109300504 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.148586001 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.183124348 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.130458961 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.189950619 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.14868493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177957237 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.093839311 seconds)
  done (took 23.955232473 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093896448 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.094400845 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.094407986 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.094935675 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.094585655 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.094509188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.094691749 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.094128954 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.094541257 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362640319 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.094365794 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.094420204 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.095070867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.094506409 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.094947384 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.094018398 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.094988762 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.094165112 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.094442141 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.094617388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362726437 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.094821146 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.0941366 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.094261533 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.094542818 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.094650999 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.094216783 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.094589279 seconds)
  done (took 32.264496636 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157252901 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.093974007 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.094034697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.094536312 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.094474869 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.16128736 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.094563799 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.094065123 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.093443464 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.094055781 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.093929431 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.094273897 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.094540563 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.154349157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.094072312 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.094168612 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.223805874 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.094266402 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161871943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.083199858 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.094937406 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.224180244 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.094376568 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.093930644 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.08263539 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.095501739 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.094341569 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.09434088 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.094381418 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.094080467 seconds)
  done (took 52.405249971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.112214337 seconds)
    (2/2) benchmarking "in"...
    done (took 1.11542382 seconds)
  done (took 3.309457854 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.094246182 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250963765 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.094685719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.293276153 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260447417 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.272757704 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.314721529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189642486 seconds)
  done (took 10.852556669 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.094293243 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.181811991 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.217403101 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.095174023 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.094595974 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.311814145 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.099519135 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.832149672 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.71807462 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.084972501 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.241324254 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.661412004 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.131605175 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.355568349 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.20840454 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.901576458 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.211095692 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.424533795 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.966367573 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.197027663 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.666745941 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.152769868 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.094856258 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.094136256 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.095575638 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.015955115 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.748501481 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.671453463 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.114712262 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.196418814 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.704759769 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.133910859 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.094543276 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.23842011 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.189480526 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.095800268 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.13874813 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.180558619 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.095402645 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.094818923 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.550442875 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.665430894 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.259737243 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.209827985 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.15945428 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.09566629 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.095027557 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.095105427 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.284213027 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.747915352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.168163082 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.003644486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230676207 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.095706163 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.475819379 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.204743334 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.095041587 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.01801504 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.423041284 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.168766788 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.465641544 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.249235269 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.009387061 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.200345901 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.095544289 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.311253222 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.008836112 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.712538744 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.712160504 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.185976074 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.361158298 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24306097 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.095374705 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.09509381 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.989680261 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.40657508 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.108012377 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.095650162 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.094589364 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.095190046 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.233695017 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.190316093 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851549745 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.231946058 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.305582761 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.548780755 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.200183938 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.095392185 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.645541228 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.94767918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.140693417 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.468090634 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.36655293 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231546631 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.982472703 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.32667838 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.131623599 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.095176471 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.880366339 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.46344288 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230706906 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.095392015 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.458925949 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.22931115 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.111849906 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.095355531 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.665435161 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.199233147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.131975649 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.120342044 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.095985951 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.095111982 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.718301386 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.145887677 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.108728139 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.600921813 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.173346783 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.384796449 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.38564283 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.229999243 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.337822792 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.919560714 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.327182978 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.009432954 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.112027255 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.342974231 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.08666144 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.792744208 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.244041999 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.19622948 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.651231804 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.267775542 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.096165306 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.068594093 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.126758417 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.09616878 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.095452893 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.095382899 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.095435451 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.095475679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.184388767 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.360515672 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.577324004 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.200885633 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.27389758 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.215168682 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.645958073 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.325656272 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.710173352 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.232524289 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.096461208 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.525363104 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.211342838 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.841160542 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.199711478 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.09637869 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.095138183 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.88149552 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.001873423 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.168881593 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.095918405 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.728947775 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.145829239 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.109174118 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.095766104 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.573781205 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232686133 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.096322149 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.090755867 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.751099159 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.644392476 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207010763 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.349418508 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.211770224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.095750064 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.095396123 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.09563473 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.826703774 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.75977261 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.171055009 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.705435912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.793221306 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.139393592 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.148933464 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.163707703 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.268392014 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.23216626 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.234354692 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.096347425 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.095368662 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.095953942 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.614117457 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.998218667 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.825315796 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.95315004 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.102450677 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.037917147 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.13381001 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.716291597 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.262554695 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.684746391 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.949354076 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.173228913 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.096205101 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.096093161 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.207427844 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.21202687 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234722293 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.393336926 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229029393 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.096101479 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.655223435 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.199219879 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.670827862 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.177056057 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.862249504 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.083216843 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.197895464 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.156431634 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.531134452 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.149976984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.095955858 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.594042271 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.167819555 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.096860452 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.021581257 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.491733099 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.961296551 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.782340651 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.479409453 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.11299779 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.652272517 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.286150702 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235801011 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.839776161 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.170985738 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.37325568 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.248292818 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.323068331 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.219707617 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.653112785 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263046996 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.528864364 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.199655897 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.962034461 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.193720832 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.423111248 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.188288985 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.096709883 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.163943527 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.164679262 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.660160936 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.197474098 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.190940215 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.343384544 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.847848546 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.170689971 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.370250064 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.247541294 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.930617654 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.040958784 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.397641102 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.92855246 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.082425466 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.135268839 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.776617638 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.175891854 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.352234146 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.230990293 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.09656113 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.095178847 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.23636383 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.1571606 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.096100346 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.332754843 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.001103214 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.149421382 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.135450665 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.10938818 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.096195875 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.195886448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.106155984 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.197880679 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.422103535 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.660875875 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.808655081 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.19670919 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.546640968 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.14850166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.808214035 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.14394009 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.110001733 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.673882743 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.196701075 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.256221872 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.214668712 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.145713149 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.510912064 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.229693637 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.286898124 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.150931098 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.192779319 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.761164801 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.616954846 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.279614098 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.258163379 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266164646 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.666132256 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.153808213 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.656022038 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.183307324 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.822244841 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.034066203 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.125043055 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.096681937 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.096276488 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.643121384 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.162810941 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.112713694 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.823728758 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.543042539 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.1404579 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.855302478 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.146434053 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.109828842 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.095611911 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.096740207 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.023042046 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.035504624 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.2480592 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.175301762 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.096426819 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.09673538 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.010984859 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.273388321 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.744817489 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.848105189 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.989438371 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232198586 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.096931656 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.096502937 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.096451651 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.096692574 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.095743631 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.096128708 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.354759246 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.232328517 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.730830128 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.147248331 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.11025664 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.208825025 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.131434755 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.096093676 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.16209171 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.126166229 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.179598829 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.164605964 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.096277214 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.50420939 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.233909917 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.080424922 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.22900391 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.25803227 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.266813799 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.342930215 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248856832 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.517814512 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.429939058 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.962684301 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.111800244 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.022802521 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.134438835 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.769774249 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.046028241 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.386993671 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.69525693 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.181888466 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.280443931 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.907535099 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.504909018 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.264635026 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.13437924 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.097264761 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.096186604 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.085983177 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.287088424 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.14214719 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.30373787 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.207077204 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.092211564 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.234557883 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.163210257 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.087234628 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258153243 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.115548254 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.096024251 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.097560612 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.421639066 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.796421867 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.129186543 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.096980819 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.016900933 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.819034359 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.912652841 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.765687 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.108840303 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229863902 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.097052397 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.276567618 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.148356675 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.60147303 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217698625 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.825004562 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.401720184 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.142974286 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.174771887 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.456077059 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.816721869 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.346469287 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.182661897 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.096308831 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.343577534 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.006020458 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.235752971 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.006718223 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.331394931 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.651561451 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.660988987 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.352063472 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.182794406 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.010978691 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.657076906 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.184355628 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.112923689 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.88556164 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.235866357 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.299458736 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.927905559 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.261565727 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233934552 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.756748066 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.71414257 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.233224121 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.644744148 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.234168075 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.097962797 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.572030302 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.114353829 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.117186336 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.187732445 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.096681708 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.114192928 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.676388108 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.676244869 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.207124469 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.141901325 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.097780459 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.598134409 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.92586939 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.14574631 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.110109792 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.09747998 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.246403586 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.244807265 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.097392722 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.5080654 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.707651864 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.233965927 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.617332901 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.254237412 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.234965751 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.273926057 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.389932155 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.229539763 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.158145534 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.097579068 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.09695629 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.096347294 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.392314701 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.225618573 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.097274662 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.655113105 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.234270322 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.65369953 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.174867857 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.261984929 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.133648198 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.511081059 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.234117624 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.620319093 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.11139409 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.134450802 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.397763897 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.245633666 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.140479636 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.718260658 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.170237785 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.097114415 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.943505021 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.298960942 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.289679294 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.368897461 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.305327384 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.151611567 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.699485138 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.176121186 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.585834645 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.211570929 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.097056761 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.6098177 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.230398133 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.388879886 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.215733773 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.461221432 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.181079111 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.451112094 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.402806093 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.188910056 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.09810029 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.097114822 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.981631621 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.109692859 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.657490249 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.098227958 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.453925543 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.19706837 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.964964305 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.651523893 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.594811595 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.396943407 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.249983939 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.266465056 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261905391 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.008882151 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.348856779 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.1224858 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.219966484 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.189916915 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.780947343 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.116128172 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.098279587 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.399254797 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.224315007 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.097725839 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.097407721 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.015927174 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.743464734 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.168439763 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.209377071 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.161197843 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.09828426 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.651689961 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.356928715 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.134465432 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.096936808 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.097823805 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.861465544 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.17586026 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.097166012 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.334700395 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.216483324 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.311030552 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852190805 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.507058816 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.18755413 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.09753279 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.096769967 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.606201089 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.548932032 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.225594764 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.464643127 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.230865023 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.631660558 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.174900568 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.469026578 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.595346347 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.972163589 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.187393055 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.09704734 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.065813779 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.737417798 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.110783911 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.864292139 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.40278877 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.155844344 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.784167207 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.95348024 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.126460914 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.164664315 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.116529878 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.098019522 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.097512769 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.097940436 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.613682895 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.180581835 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.113564284 seconds)
  done (took 1399.913867743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385007152 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097191308 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.097292302 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.097065871 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097900512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.097281992 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.097160467 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.097016597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.09752583 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.096942623 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.097791524 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.097297102 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.097147788 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39206614 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.097402041 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.097162174 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.09745537 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.096726066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.096844892 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.09706441 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.097415938 seconds)
  done (took 24.709221561 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.097064512 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.096761411 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.096913642 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.097283006 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.097277933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.096996918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.097216976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.097800657 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.097325524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.097079245 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.097481355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09739397 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.09709353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.097425647 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.096828071 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.097223158 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.097712896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.09786118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.097745344 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.097020145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.097070496 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.097037369 seconds)
  done (took 25.224683806 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.096481647 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.097119794 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.69600645 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.187495612 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.098022065 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.097834038 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.097385386 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.278385295 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.064187539 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.003897822 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.51197534 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.232542215 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.113414911 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.235360027 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.191945495 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.097496774 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.222574911 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.097816525 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.097553703 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.097021571 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.097559577 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.207564742 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.198983678 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.097717769 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.864653458 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.236843286 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.097926795 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.09760965 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.097401547 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.082795355 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.139507771 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.111022285 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.829129186 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.743671827 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.310172715 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.005516325 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.151123451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.11066239 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.09768401 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.097130046 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.327643636 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.967863785 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.114666473 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.097151672 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.301270237 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.178918593 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.097640633 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.474378322 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.23049579 seconds)
  done (took 87.165049217 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.110173041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297697654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.181479423 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.097377575 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.293911665 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.097556085 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.261530107 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.097462373 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.096885324 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.097799976 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.303354211 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27144759 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.097632928 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.097446459 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.254328537 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.097461457 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.097659914 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.097000976 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.098134656 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.09699436 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.097630212 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.215555656 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285639879 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.271699415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.097744404 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.09763911 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.097687532 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.097481486 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266637883 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.097940996 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.097688148 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.09718966 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.301007191 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.235073203 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.097414066 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.097251327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297176446 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.097129 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.097127305 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.097394942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.097390187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.097356179 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.210883136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.304823588 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.097691088 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.226806 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.097247 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.097717716 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.262591872 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.098213758 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.09771733 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280394261 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.097323536 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.097924307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.097304917 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.296186679 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.097581197 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.097475904 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.097554434 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.257940665 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.097433121 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.097717582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.270559872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.097717706 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.098172214 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280581355 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.227522244 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.097530784 seconds)
  done (took 79.748528299 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.097454946 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.097719699 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097352893 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.097735733 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.098209734 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.097751974 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.097628156 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.098064841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.097732034 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.097945984 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.097784094 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.0975385 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.097122943 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.09750919 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.097638037 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.097566205 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.097761309 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.097873781 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.09748685 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.09757781 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.097871249 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.097368494 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.097755474 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.097619907 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.47037779 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.098065966 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.097704431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.097643825 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.097956819 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.097760672 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.468811035 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.097207337 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.097975211 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.097552917 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.467608056 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.097743142 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.097745793 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.097950867 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.097591914 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.097352199 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.097739423 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.097622146 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.097686158 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.09793592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.097452042 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.097848502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.097978332 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.467855608 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.097740135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.097144683 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.097388792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.097933992 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097805903 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.09796407 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.097617587 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.246854787 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.097790071 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.098007546 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.097819144 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.097752633 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.097848948 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.245043112 seconds)
  done (took 70.92525513 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.097605928 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.098464564 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.097920291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.098121199 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.098283037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.098461085 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.097576039 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.098075092 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.098356646 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.097897717 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.098152931 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.09797344 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.09761408 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.098553141 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.098311051 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098502853 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.098424311 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.098405937 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.097957419 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.09813662 seconds)
  done (took 23.049062372 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.097906553 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.098482761 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.098321001 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.097807556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.098420663 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.097704996 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.09804025 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.097808638 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098124622 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.0980272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.098205782 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.098360795 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098490314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.097990673 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.097861147 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.098259554 seconds)
  done (took 18.655696012 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.097976868 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.098379057 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.097743817 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.098715222 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.097960402 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.097953347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.097988868 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.098261117 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.098492804 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.636586436 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.098216885 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.09786404 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.097848219 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.098439857 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.098084772 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.098570714 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.097921961 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.097756288 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.097849631 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.09750836 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.6722101 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.097496177 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.097949163 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.098017533 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.097959963 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.674848344 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.098401367 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.098367074 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.097855869 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.09798397 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.098431764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.581624785 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.098245275 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.097919325 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.097969803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.097989542 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.097931496 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.097569207 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.097838667 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.098297868 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.097561688 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.098082757 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.098049508 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.098240516 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.097935144 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.098154894 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.097932428 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.56504169 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.098436927 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.097778741 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.098009045 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.098182593 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.098063548 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.649079205 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.098504567 seconds)
  done (took 64.671230151 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191930638 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201523495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.09836001 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.097981197 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.151585189 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.145911481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.190845535 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.113239807 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14586756 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.098100784 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.178021304 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.1128263 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146892346 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.1959304 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.178916029 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.188337562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.098184607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.178393614 seconds)
  done (took 21.798672985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.097955229 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.098185391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.098191716 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.09820556 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.098433351 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.098302532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.098257117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.098524332 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.098602374 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.098396757 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098200884 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.098991905 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.097766381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.097991883 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.097853547 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098537805 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.098014637 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.098244158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.098251514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.098647019 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.098076677 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.098002202 seconds)
  done (took 25.248192409 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.130613207 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.14414185 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.098195281 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.098822471 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.098489703 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.122303397 seconds)
  done (took 7.77843886 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.151073076 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09836718 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.134201977 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.146114018 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098172409 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098705764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098055564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098111726 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098115271 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405458532 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098043591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098436681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098158747 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.097914802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098116173 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098230835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099022884 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098494714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.145222235 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235489359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098457864 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098732255 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098323604 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098265779 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098306387 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098101401 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098022698 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416809594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098140473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098190427 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098464926 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098130075 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098837809 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414278676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.145783346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098645159 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098877653 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235055291 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098650741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098404811 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.140464774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.097927398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098798407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098765845 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098036594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098786571 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099350492 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098478423 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098247871 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457604609 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098658219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09856539 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098488045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098417101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098504819 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451873274 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418252351 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098882272 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098436216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406345575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098969241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098909928 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098906234 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416493632 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098610226 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098799187 seconds)
  done (took 76.751963673 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098082666 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.134838942 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098738806 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420239356 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099860964 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098803208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098769752 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098418517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098771806 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.152489172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234481224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098467235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098360155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.09886939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.099114709 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098323649 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098846579 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098085664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.153051847 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.453892376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.099401379 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.09877059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098599903 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09915211 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402089373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.09856764 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09914562 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.099078955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098763479 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098342515 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098829288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098928948 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098927926 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.1350857 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.099003182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098709231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098908636 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098729608 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09912831 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098893117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098942006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232592234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098923567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098861461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414222448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098931346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099410725 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15850133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098759359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.152897064 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416120447 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401875271 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420351252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098902854 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.099219398 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.099340671 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099055968 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.099527907 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.099240604 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098543377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098829675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.099286437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455850688 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.099407378 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098922706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098897162 seconds)
  done (took 76.771223805 seconds)
done (took 2348.976996197 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.183776365 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.153788775 seconds)
  done (took 13.423007418 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.099832363 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.09969515 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.252630014 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.099175664 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.094788904 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.167619727 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.153517453 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.110909077 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.099655788 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.183450783 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.099906051 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.231640701 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.202104264 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.100285025 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.099271939 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.110628753 seconds)
  done (took 39.342495524 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.086930906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.275913729 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.109457694 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.885060057 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.105189794 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.122365033 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.378862036 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.31634809 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.389633411 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.550766612 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.359190132 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.596236586 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.919567121 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.212457045 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.596525348 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.61261712 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.669467012 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.769212914 seconds)
  done (took 59.042215024 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.091184366 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.243206922 seconds)
  done (took 8.435986395 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.09171685 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.118072798 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.131066296 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.125873496 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.12501071 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.13863711 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.103852042 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.109936195 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.110336863 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.105353388 seconds)
  done (took 62.26501091 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.087132603 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.740119204 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.52148662 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.677806714 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.660248578 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.497009398 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.261936743 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453355146 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.188418721 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.08821982 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.943915261 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.612189474 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.836136081 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.072903751 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.62076034 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.416009093 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.696616567 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.629956226 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.423250125 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.424685971 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.312531366 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.805517106 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.554921187 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.950743246 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.109964223 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.189601253 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.171005881 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.20719293 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.174086659 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.007454861 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.948919429 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.125719531 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.050994963 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.102941386 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.105631655 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.737000332 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.80521443 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.305076457 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.384903951 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.410216254 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.483507185 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.380411782 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.227422059 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.353111258 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32836691 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.298465514 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.04094331 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.338242731 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.19117947 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.216529517 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.674688586 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.281031158 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.227360635 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.210374981 seconds)
  done (took 149.663026275 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.088177772 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.479936701 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.243170778 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.091707536 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.35492768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.30932109 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.620722081 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.589833285 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.107210218 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.300580081 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.267169805 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.223275854 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.090809748 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.091163967 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.091801583 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.090106905 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.278346193 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.609047682 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.111998923 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.088972219 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.296548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.329533425 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.231477541 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.09218347 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.261366557 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.33894715 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.555226422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.227343237 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.479276435 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.089317606 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.572339162 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.106549774 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.089970295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.998506119 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.503323391 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.402393784 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567439316 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.098828837 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.851603106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.089997591 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.736409494 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.294866095 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.403440386 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.238533528 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.248177562 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.329487128 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.719097968 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.089037477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.835650599 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.266583721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.31129457 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.308701157 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.371847808 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.096607938 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.607391509 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.090256738 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.089597552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.349581451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.243332183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.212679079 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.091995207 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.090080795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.089748574 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.337724868 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.091716167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.210049033 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.091108342 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.092832249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.209844331 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.21224948 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.241892359 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.338860171 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.339227511 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.032686663 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.444134582 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.327106318 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.523595765 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.338458521 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.092342838 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.089021831 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.50547133 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.53867839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.254899046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.335205886 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.399162193 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.385649159 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.649192238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.088496059 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.309949983 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.253612341 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.462067121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.247177269 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.435734929 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.010730351 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.089411563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.08908392 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.441357649 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.224008557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.092650552 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.598696828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.360871565 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.669039406 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.266166747 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.392682192 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.201946343 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.092330461 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.668781061 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.090893175 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.313266148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.386421189 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.098865683 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.09136118 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.245765956 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.038593657 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.089032332 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.36841346 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.52229524 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.105554665 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.249208641 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.091975 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.344175989 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.965868782 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.32613878 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.929371806 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37227629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.285995592 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.245014084 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.092671293 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.470222069 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.365508012 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.499245204 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.424848138 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.091576264 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.091197778 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.398358097 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.091345812 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.089551555 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.271283876 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.814012599 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.269491964 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.09275631 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.493789004 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.255439739 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.445442682 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.106910154 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.336129264 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.344714587 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.505269191 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.109058634 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.231077776 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.091585015 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.047935018 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.260436026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.090585664 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.091728648 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.899071461 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.091154307 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.249029486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.325648382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729602823 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.591669882 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.441737441 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.088527581 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581520644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.303085574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.524302446 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.629929113 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.265937758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.82053326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.349184416 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.088812834 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.335913252 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.401568547 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.090644124 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.091272458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.797001707 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.021118135 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.090066208 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.25941411 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.034234455 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.383262895 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.30221011 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.094465834 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.429418061 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.10595254 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.324668047 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590859159 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.091247172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.090313562 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.090175276 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.089546094 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.090436659 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.307981011 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.356832614 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.643980944 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.24127774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.392641312 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.316968167 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.402278077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.545192974 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.101366576 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.429312 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.092235993 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.54394423 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.104850504 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.223292914 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.398582394 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.09161707 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.309966952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.454610924 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.187501818 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.549254909 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.100662103 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.092662486 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.667185889 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.273299602 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556655459 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.100218803 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.193534348 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.469236444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.227421851 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.276992086 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.131703446 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.098392836 seconds)
  done (took 721.892799696 seconds)
done (took 1055.151844566 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.088238837 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.093459221 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.097678546 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.09508736 seconds)
  done (took 25.46108372 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.949171858 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.929301475 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.196637277 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.102903488 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.252065755 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.330578055 seconds)
  done (took 10.855186078 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.594825866 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.093326873 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.095297186 seconds)
  done (took 17.872521151 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.411159575 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.576348585 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.27717636 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.195818196 seconds)
  done (took 6.555281234 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.103580604 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.101338458 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.100140109 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.101087265 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.100798791 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.100485564 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.102683196 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.102063334 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.103065588 seconds)
  done (took 11.007143825 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.52157358 seconds)
done (took 77.363239081 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.492835803 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.388805447 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.10322289 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.31627352 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.231425541 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.427791207 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.21425322 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.119487532 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.396666685 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.556089247 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.597684681 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.325723778 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.578191103 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.609566623 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.329700755 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.127228093 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.11547529 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.161006101 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.688474939 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.28414135 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.104445394 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.235260785 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.089407534 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.130780712 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.994730988 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.177363823 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.346800013 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.094411871 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.802357991 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.123188012 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.190361228 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.643958939 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.322782687 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.407104721 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.196073308 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.983951165 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.583115734 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.103253688 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.355134915 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.598673267 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.371331191 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.221697672 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.089873255 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.410170846 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.533165588 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.119004396 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.026579326 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.261732915 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.675412994 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.291197374 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.472915953 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.103404311 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.734927839 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.176654697 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.183192246 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.091327605 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.178157435 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.570353825 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.312987441 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.409242294 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.11579825 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.089223942 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.125211451 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.128386032 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.089903802 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.419889866 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.541784187 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.188388861 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.56394024 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.126898334 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.116163255 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.130058069 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.81473642 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.185831771 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.088672292 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.140568319 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.392099364 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.175978239 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.101983536 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.196493587 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.353423907 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.096893111 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.325538652 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.394977966 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.262135164 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.464856193 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.592792169 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.512076825 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.704925113 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.104713108 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.558600619 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.718432285 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.474611521 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.104439877 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.185693731 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.386735014 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.735686476 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.599206788 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.234199415 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.761337622 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.129589533 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.116219948 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.595327387 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.429482303 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.87991893 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.138402392 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.229740737 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.089525081 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.289180685 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.090523708 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.676495553 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.634525325 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.10255632 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.162405317 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.58438798 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.100863801 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.390349581 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.427211103 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.14764201 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.101025088 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.346263538 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.104469046 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.221619093 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.758695405 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.499535211 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.330927792 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.093968968 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.688537136 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.103669104 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.351043916 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.106329468 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.737273342 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.705089865 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.133166226 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.351068857 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.224861115 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.090055423 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.279125604 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.152419636 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.236480228 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.432479256 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.429928054 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.266289751 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.088714609 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.451479132 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.225527755 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.342461867 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.406555076 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.263157968 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.363513145 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.183555504 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.11263405 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.108464308 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.60295472 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.708136886 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.805876616 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.366237836 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.232068788 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.686769062 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.447549584 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.910089241 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.203676516 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.150064115 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.103444403 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.118143485 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.161416285 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.088924717 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.100932314 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.341935988 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.432577844 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.838684746 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.948309735 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.002032015 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.392531132 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.236703198 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.113810156 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.744898872 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.100831324 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.524143831 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.556071516 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.2477885 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.128310002 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.090311709 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.244189881 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.907065989 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.141087907 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.407542378 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.6997666 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.543684143 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.454334534 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.279274811 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.147085009 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.534388335 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.344465273 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.380600636 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.300310227 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.708051133 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.182083041 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.452590026 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.195469309 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.381923492 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.103706211 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.487564386 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.314088933 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.581975964 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.411120841 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.332731739 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.328565752 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.383912131 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.102870207 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.103261614 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.041627586 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.486524419 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.131188931 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.090291075 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.864806099 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.586814153 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.232596827 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.226104841 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.510942918 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.220551582 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.259892956 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.546170353 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.115147983 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.428661829 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.323565394 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.264294165 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.299658089 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.135143696 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.242496282 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.274249347 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.238749531 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.353548644 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.096837963 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.486995942 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.139388533 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.022840528 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.0927687 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.805470129 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.13388228 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.112876364 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.43404054 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.282701708 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.404698521 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.254520894 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.262559981 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.090633605 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.207066265 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.614921155 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.043023234 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.643337624 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.185227382 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.130372591 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.089968673 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.641275562 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.531552696 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.167639704 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.237694237 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.723000582 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.142525853 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.315730675 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.106686604 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.102346156 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.946338453 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.228348097 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.344149636 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.827823867 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.103942552 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.577730441 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.124796591 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.640857612 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.620068621 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.150946148 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.223442994 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.093154084 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 5.031265646 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.499450974 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.130673979 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.244897197 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.415782382 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.217458346 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.216122895 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.094133877 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.142953141 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.701814709 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.474099164 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.676031222 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.138879 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.510909611 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.104047288 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.591652894 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.120854723 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.184138441 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.497715818 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.272357909 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.445859247 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.107301287 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.1505989 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.351962002 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.128056832 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.090209221 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.259430435 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.128710569 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.752677562 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.97407547 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.299133392 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.010719092 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.336064145 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.101697812 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.137957855 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.233607594 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.184012462 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.712793303 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.644105315 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.104979434 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.412037606 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.094284883 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.544800208 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.126875791 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.117020703 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.222331449 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.191453545 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.09075319 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.151039125 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.272969355 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.684615348 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.264042376 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.001488195 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.109281715 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.539072069 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.223106026 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.438493757 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.79525032 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.117893842 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.265816525 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.763218601 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.258324238 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.130487209 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.318998268 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.108115601 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.745947046 seconds)
  done (took 866.190813244 seconds)
done (took 867.495160388 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.137749023 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.469460708 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.297276616 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.038817897 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.895054478 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.739179849 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.316625961 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.330348888 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.172623753 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.317029714 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.026056261 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.897921083 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.188329858 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.214865702 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.177626355 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.203195591 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.279063489 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.336049123 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.214345493 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.897995384 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.460557481 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.900830175 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.512958298 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392341043 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.470129275 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.193495788 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.16154294 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.449968125 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.448323829 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.074098826 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.27840405 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.295350198 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.933949844 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.342398651 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.177132996 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.178388949 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.992214378 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.188777224 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.124098313 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.178773137 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.471578045 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.218002985 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.812245109 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.940002099 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.873951748 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.513025756 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.977165806 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.198675503 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.210903479 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.272304342 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.125621397 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.121736286 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.450311596 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.089826232 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.987840978 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.945920361 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.449151218 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.986097759 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.827969794 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.273048309 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.467267811 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.196994169 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.272981535 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.327605423 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.218049764 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393541845 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.513013691 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.124430597 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.295001883 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.324215674 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.340685264 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.321121839 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.213333961 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.290871862 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.215209425 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.316839636 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.824488323 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.296287819 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.887063391 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.194623595 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.02341094 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.042515013 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.050775816 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.172731253 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.13823449 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.874270386 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.046485297 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.028151165 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.215982433 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.29517842 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.001695121 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.296736507 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.552175792 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.162600331 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.138200431 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.296620864 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.056401788 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.120572751 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.068977871 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.294721706 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.880061836 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.162368371 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.137416906 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.177047691 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.201066814 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.122100211 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.162218173 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.520684707 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.322888745 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.252358952 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.471826106 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.215007952 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.320743784 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.215723312 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.171868439 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.874396074 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381502895 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.970459736 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.120500952 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.772948948 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.351299917 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.176454496 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.471384041 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.391635656 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.13841608 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.194799398 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.200603081 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.028091329 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.199234654 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.19699849 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.283727672 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.553103167 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.273075132 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.040359061 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.323062704 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.770344247 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.334138169 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.322451901 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.171716697 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.968151944 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.194865658 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.054962659 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.392951386 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.473490848 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.33532623 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392294685 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.215994806 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.35250892 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.119717735 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.214552707 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.321780245 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.222251753 seconds)
done (took 238.80479183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.468475958 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 3.451438449 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.394970551 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.323098558 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.471272298 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.39828535 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.169845108 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.554463469 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.149162423 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.57615104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348006388 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.262541394 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 3.454698431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.353935276 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.479760273 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332295717 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.149675399 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.345543042 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.556411888 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.483094615 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.110735876 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.296539266 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.234364778 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.49248336 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.090805145 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.102165367 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.401291775 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.215064439 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.367338715 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.107044452 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.116706623 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.363525215 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.401701832 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 3.222241794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.507685214 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.090291388 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.405160802 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.162860439 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.35488621 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.466329753 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.30583339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.89774195 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.107744585 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.123218622 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.204641389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370138701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.166851508 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.333073934 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.09060664 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.092013937 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.399660104 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.143778533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.221768389 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369841707 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.317684711 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 3.220948935 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.485348198 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.478239361 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.482064208 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.399360247 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.355300963 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.519787436 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.473286727 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.217591245 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.115994006 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389429469 seconds)
  done (took 124.60496045 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.530307632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.395569157 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.502848746 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.366925906 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.650354182 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.500360014 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.458789955 seconds)
  done (took 13.494554165 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.154645965 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.143255331 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391304569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.350004725 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.153758246 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.2753877 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.235209095 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.106982201 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.396047956 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.190129787 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.464598644 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364486322 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.047652429 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.107674654 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.236054206 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.387575938 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.130005702 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.213922468 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.207980923 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407298161 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.107104011 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.09037754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.301354683 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.130363288 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.152190321 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.190955184 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.146815712 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.122921717 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.146156828 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.133479216 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.154009932 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.259657875 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.143020551 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.100075937 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.133888851 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.468109538 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.15339188 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.151430082 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288226899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.095198219 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.128445729 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.152474193 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.289838664 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.154192119 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.128947624 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.337518892 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.134443208 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.15574828 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.133814789 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.146568179 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.337502686 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.146360817 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.133157379 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.057690452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.355771295 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.091215801 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.214446804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.14231496 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.141282218 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.204761641 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144186016 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.407735838 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365303888 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.127373949 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391420228 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.454609496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.146467724 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.135592776 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.128036796 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.391910477 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.142465855 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.341388246 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.150481205 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.195728603 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.156471419 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.272964568 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.338326664 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.949329669 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.916990297 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.066782602 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.499139919 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.131368124 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.464894621 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.079111087 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.057253423 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.134285807 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.151873452 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.797314367 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.056884144 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.144487384 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.45691202 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.131110086 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.208938216 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.19596497 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.129822938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.20755789 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.313967092 seconds)
  done (took 142.635170338 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.227587614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.328235306 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.495821723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.035253699 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.113734231 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.322147683 seconds)
  done (took 14.612837818 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.575079316 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.96737931 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.170368104 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.163633564 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.201561178 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.102611383 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.103473167 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.301928197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.332244562 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.155304347 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.103881775 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.10461757 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.102609669 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.30392263 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.102503951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.155302851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.103889324 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.170419191 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.151633103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.212739267 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.300978469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.203234885 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.211781968 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.821652812 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.180108013 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.15678934 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.86899328 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.157221831 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.15746831 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.515251185 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.305928475 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.103477614 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.826453679 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.261896124 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.888699292 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.827439922 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.313593936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.112629163 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.150942229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.103509471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.103968059 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.212876975 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.163501612 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.10411932 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.479639512 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.768191127 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.183267972 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.459233796 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.102981242 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.104598296 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.103895523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.164198687 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.103679094 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.104366321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.430836764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.681651357 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.08745306 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.111350344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.201830951 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.830253352 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.243819923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.112295796 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.53933468 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.068848404 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.097177172 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.104154238 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.836298257 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.29988759 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.221044924 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.160476477 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.1051003 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.162421034 seconds)
  done (took 112.642505804 seconds)
done (took 409.080834585 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.317682847 seconds)
  done (took 7.407947547 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.246967055 seconds)
  done (took 7.437115574 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.094877913 seconds)
  done (took 7.211919452 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.112466913 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.141241516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.122860004 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.122946005 seconds)
  done (took 25.639252214 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.735565326 seconds)
  done (took 7.82924828 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.091357437 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.120325776 seconds)
  done (took 13.317326672 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.149323743 seconds)
  done (took 7.269287036 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.356603084 seconds)
  done (took 7.482976164 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.111580668 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.110107757 seconds)
  done (took 13.348839988 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.091540924 seconds)
  done (took 7.182572893 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.164363845 seconds)
  done (took 12.308291303 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.106549168 seconds)
  done (took 7.318793122 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.118589787 seconds)
  done (took 7.210613367 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.105206284 seconds)
  done (took 7.196113438 seconds)
done (took 139.2517731 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.091840912 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.098151982 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.095892142 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.096758465 seconds)
  done (took 25.473069025 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.428132415 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.429035713 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.406655823 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.517902208 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.372277195 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.372345139 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.429093612 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.428584289 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.371915377 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.473682143 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428272768 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.472557948 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.579023014 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.405946816 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.406718778 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.579255868 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.501018509 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.428807772 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373471278 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.406098818 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.578626982 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.578831457 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.861162959 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.846142647 seconds)
  done (took 36.770448414 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.312333832 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.467766022 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.270724733 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42156308 seconds)
  done (took 6.563336378 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.1397929 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.403065148 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.461161542 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.520403619 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.460735652 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.268927909 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.46105932 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.258136108 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.252430839 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.245919749 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.728532379 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.255010799 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.268104208 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.519894494 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.254837187 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.104701591 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.10455231 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.228032731 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.402719498 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.343627347 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364245497 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.462133857 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.358841932 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.461416463 seconds)
  done (took 33.420459578 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.865329216 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.030071911 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.462329743 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.015232571 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.804845287 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.895900223 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.383646938 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.62536066 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.369375605 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.345928437 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.899396554 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.793986506 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.243258336 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.980012002 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.869321094 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.279897742 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.279941963 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.951589036 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.516067858 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.402710303 seconds)
  done (took 38.105478234 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.0925274 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.346935606 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.336985343 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.266155787 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.093628884 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.096710329 seconds)
  done (took 26.323922 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.426008007 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.251427232 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396082504 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.37027672 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.269228138 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.237117734 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.66431401 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.336608517 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.844795963 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.824261973 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.582069158 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.536460061 seconds)
  done (took 21.8348698 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.093240709 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.144700393 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.099413407 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.27964941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.962877834 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.988429051 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.417676023 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.094197501 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.220621161 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.31181269 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.960284226 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.268264879 seconds)
  done (took 39.951651443 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.273679929 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.296809249 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.411472719 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.208569982 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.471898501 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.146662492 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.469673546 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.532338416 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.680810055 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.886074141 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.655008404 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.112296907 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.625300355 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.068546445 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.202007968 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.395326383 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.912745461 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.12425291 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.415875588 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.138919384 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057689 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.180118106 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099059479 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.545644445 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378403446 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096656762 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.27476107 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.341027069 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.09267502 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.343675598 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.093352949 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.618928145 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.252774297 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.40246473 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.502177699 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.146175079 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.290810965 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.093408275 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.722794428 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.389275133 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.237775117 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.258153036 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.341894164 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.098462628 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351325798 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.87618012 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.104487363 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.823298003 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.078990634 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.363530536 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.859493486 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.982461739 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.546031607 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.839126729 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.238086318 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.394341062 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.259318982 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.093269149 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.391312912 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.286015088 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.130991808 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.28662533 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.275472262 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.067644652 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.489981293 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.304023523 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.233679313 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.301965765 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.418251904 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.393961494 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.445404955 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.357743458 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.792572076 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.150811981 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.599687013 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.00869218 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.44670049 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.094538022 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.814097227 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.627993883 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.075351288 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.211122343 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.731077346 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.060348209 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.093304789 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.267913078 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.715106934 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.067250297 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.105044987 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.296164473 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.329470947 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.147056794 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.165871594 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.386956501 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.842718452 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.10728269 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.190557738 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.341565704 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.066456943 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.659233095 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.093159025 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.121204182 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.094137324 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.72331977 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.47965448 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.253690527 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.874443142 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.763703883 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.395159821 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.6923159 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.254197017 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.927072232 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.442631522 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.423356715 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093109479 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.851665986 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.094499454 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.343045935 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.31342264 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.093830284 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.068024498 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.462174255 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.252797084 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093826879 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.335543781 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09590675 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.244684221 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.092851722 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.729317172 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.067272373 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.339407962 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.558549027 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.180149069 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.248185982 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.06313042 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.239803739 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.538907802 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.216334561 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411598061 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.414417759 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.286059501 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.546139123 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.088757988 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.933647698 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.466561215 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.321019072 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433906195 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.75447668 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.26488452 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.104357882 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093678345 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32185294 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.104815589 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.637956566 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.152543161 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.738731605 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.087766465 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.349712107 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.09302161 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.255767618 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.094682546 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.27896236 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.523479887 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.266258545 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.270491844 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.348216066 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.296528637 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.093801761 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.066438635 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.370062234 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.29929873 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.556129351 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.335430513 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.522458775 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.545505338 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.591551312 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.273122662 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.418104579 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.958077318 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.763686062 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.348503252 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.117628127 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.128021405 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.849497867 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.317971626 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380207878 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.308218563 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.886502842 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.094905623 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.155337048 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.195874598 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.676659088 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.068374468 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.24318754 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.475958565 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.099981368 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.593849649 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.176233155 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.50976269 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.599301979 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.125255695 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.358201116 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.727471287 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.605770347 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.452901275 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.425352498 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.074200916 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.921128719 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.719076224 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.292445899 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.107630287 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.549671829 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.73922598 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.282746818 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.094650328 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.442118412 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.031663441 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.951171449 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.62313417 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.673411929 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.119876239 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.259766518 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.093234456 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.097815705 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.91810521 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.397409337 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.317067739 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.594588006 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.539607381 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.321567231 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.423833019 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.093498052 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095151374 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.399045378 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.404001607 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.381934593 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.544612231 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.322687585 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.773473503 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.200851076 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.754765969 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.263122211 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.122506579 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.612881858 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.271571473 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.917843989 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.248846945 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.934032276 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.41088094 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.650839632 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.367586034 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.094348762 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.47615681 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.672187202 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.096806705 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.113506182 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.220307556 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.094813289 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.326242793 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.857009988 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148559013 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.769694566 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.280943028 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.306811693 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.247585092 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.483959906 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.513531127 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.842106998 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.06805154 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.249264677 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.19196795 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.390934602 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.094214334 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.363377509 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.735036175 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.532574723 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.053772099 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.586517951 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.486774247 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.718118399 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.468639764 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.305656845 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.390209015 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.025374904 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67969482 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.108338499 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.235062902 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.067226298 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.706368409 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550724455 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.462319062 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.477816887 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.12127117 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.506264536 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.437184595 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.342717101 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.136564906 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.358215218 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.093795053 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.440821148 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.093929446 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.094374412 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.52080534 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.104155326 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.093691628 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.329426712 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.426979278 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249637625 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.615713432 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.253447369 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.226815182 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.863036336 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.273856366 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.23411734 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.441259787 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.738677578 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.29642791 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.126419804 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.599096809 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.735735236 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.468927796 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.668944783 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.584223857 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.407186095 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.871408447 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.095017825 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.273398147 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.256508725 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.09328409 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.312048064 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.480286606 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.121750179 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.276856411 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.410996029 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.419532885 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.649378601 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.078297361 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.782552461 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.526444934 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.628030146 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.633796245 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.879612816 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.372522642 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.252246939 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.461817699 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.248864794 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.259963441 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.336571536 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.824936509 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.139433585 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950157226 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.884203276 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.181440324 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.637902548 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.124249741 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.975133552 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.255564457 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.332296942 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.272696384 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.232578314 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.062476946 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.886651279 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.890105674 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.366362157 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.259673181 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.246839516 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.18340823 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.354090411 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.711669722 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.406467143 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.871815587 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.476745783 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.278494192 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.068189017 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09565453 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.368957193 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.453116581 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.106488609 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.395161295 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.428738408 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.126955897 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.111385732 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.102054532 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.403675929 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.948440107 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.822287769 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.343483992 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.505437171 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.666205188 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.843829172 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.872299856 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.274629145 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.448968853 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.483763924 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.920915264 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.527762336 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.392248734 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.244412033 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.068248289 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.252035604 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.106214492 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.2695191 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.8723563 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.391428302 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.09712021 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.056234897 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.705163948 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.095726067 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.200973196 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.806483876 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.370051269 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.292137025 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.093779349 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.877147074 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.470659219 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.244098041 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.079805013 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.85728484 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.068051528 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.274991832 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.095129191 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.360321707 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.937546006 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.121089339 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.868486446 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.540724758 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.140572139 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.377154442 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.067786209 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.698015272 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.245623731 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.53931291 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.051514897 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346371156 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.613472979 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.246857885 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.100645911 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.423769689 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.227442038 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.408929416 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.362610947 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.478522331 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.49210147 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.369444084 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364472854 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.779485118 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.350717461 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342610237 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.067764576 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.122542997 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.10534957 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.4694902 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.457070276 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.0941431 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.652661168 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344073769 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.174063322 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.352730279 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.264487427 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.720640742 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.305358334 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.176116244 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.348712918 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.154764683 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.41206287 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.09525994 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.354386737 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.095717675 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.16030761 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.277328954 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.345184518 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.478173207 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.402385647 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.696412747 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.254603349 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.782287803 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.936169111 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.629100484 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097147167 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.748793481 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.577958123 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.095333455 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.47221 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.698295938 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.247246465 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.796388401 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.354137016 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.132040475 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.336267633 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.611824713 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.113417772 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.761332285 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.477798612 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.09624871 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.466388101 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.139794628 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.256059455 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.879613212 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.595425751 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.096393232 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.704866597 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.521130275 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.671818041 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.369182068 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.100450484 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.255778787 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.746781346 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.075225971 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.097376613 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.243211681 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.628315688 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.111437284 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.643050872 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.164851798 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.350273264 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107988954 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.166841525 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.096764338 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.273898985 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.28731274 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.341213753 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.371076806 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.248234762 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.099812683 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.917305395 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.806251939 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.201726597 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.3440602 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09522598 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.493570799 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.860112132 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.099064823 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.712612382 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.301115076 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.074146351 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486554155 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356123496 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.130496128 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.27569145 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095804374 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476851815 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.258856909 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.596219198 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.338697685 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.094853766 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.233259346 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.110984641 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.636280553 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.462497223 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.934754501 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.095116455 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.4038427 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.094937736 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.711971288 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.759968835 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.256337222 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.167325893 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.986690391 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.80466435 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.913929214 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.36170928 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.099128159 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.309331766 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.599995038 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.068054486 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.707950697 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.1082091 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.287389744 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.425631414 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.069535894 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.249133074 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.112107537 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.077490732 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.597028092 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.095622846 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.406929963 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.06988162 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.601506129 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.10799726 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.143161528 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.342081842 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.460608644 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.095773297 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.814421468 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.268953942 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.095404274 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.094901674 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.421285513 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.24736119 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.30673117 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.467572874 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.250263968 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.541235301 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.013174866 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.720732087 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.238691264 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.407925071 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.929125149 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.648815408 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.155804743 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.713434313 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.715152505 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.243316823 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.638937478 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.343740922 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.838433574 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.171432115 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.600915811 seconds)
  done (took 1944.45454055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.115777977 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.254204012 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.142888855 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.15521748 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.150412976 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.136563022 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.242473721 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.146225147 seconds)
  done (took 50.437836919 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.095323426 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.137109075 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.593991957 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.360984507 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.123120862 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.180237294 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.35273039 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.722131475 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.119606493 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.020562243 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.247082486 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.295310056 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.123332556 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.139328027 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.878576776 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.235184084 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.10096442 seconds)
  done (took 92.872391809 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.110027359 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.258468342 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.124373761 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.837894236 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.127294573 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.520675532 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.117942544 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.094983868 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.560069258 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.395064826 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.15113628 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.19401528 seconds)
  done (took 80.627605509 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.13464327 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.133866455 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.133554131 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.134800513 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.134170203 seconds)
  done (took 6.764482525 seconds)
done (took 2404.817629861 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.324714419 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.639978952 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.674038957 seconds)
  done (took 4.407165628 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.163460258 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.229888776 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.298053015 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.244886724 seconds)
  done (took 6.05333817 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.392924459 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.580476908 seconds)
  done (took 4.066574662 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.443256445 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.114473349 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.719761937 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.094669309 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.106420536 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.104486892 seconds)
  done (took 19.415633189 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.130001867 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.124159124 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.127512773 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.123774805 seconds)
  done (took 5.608005345 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.095469586 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14855252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.106091456 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.107204575 seconds)
  done (took 18.550353128 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.399911158 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.18486101 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.84329619 seconds)
  done (took 5.534455344 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.915612624 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.228727309 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.89898141 seconds)
  done (took 6.136591385 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.34833957 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.023795447 seconds)
  done (took 5.465596921 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.271208018 seconds)
  done (took 2.364874634 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.579612218 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.585190558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.761073999 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.833127874 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.012806567 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.393210534 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.49629627 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.342461484 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.626769158 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.655286051 seconds)
  done (took 17.380451094 seconds)
done (took 106.680014219 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.139928056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.51364026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.259572481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.393702959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.207826489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.258487567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.150742646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.198083559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.818425706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.817417724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.926953858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.208405524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.183506746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.490917434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.18268418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.466953363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.504438144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.144624711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.855751741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.745650923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.173400549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.497333492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.665760458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.518352738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.52954069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.241740392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.105865124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.491539208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.06722895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.128420362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.270097084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.965667823 seconds)
  done (took 153.216823698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.094223037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.121052163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.122391869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.106972268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.120684097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.121339573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.108058907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.105706221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.152122514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.15839989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.120570756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.1195279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.12132377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.105129988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.124155921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.106195943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.291704215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.120346555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.121774041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.120642615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.122326193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.835292647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.120843442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.850466908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.275316803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.120519905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.105983428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.120655875 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.120581897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.120431077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.122291479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.106430572 seconds)
  done (took 188.703609573 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.094915563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.120727802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.12061773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.107066994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.119071069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.123094822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.108438772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.106595883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.118818908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.12161153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.121460867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.121212138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.120313405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.106526425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.121994162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.106426983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.121869052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.120614837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.121500438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.121219951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.121556687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.106743243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.120897813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.120238544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.120291853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.120327122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.106715547 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.122472938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.122184847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.121476509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.120997518 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.106421068 seconds)
  done (took 196.854303097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.404492579 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.138020852 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.081262615 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.670083768 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.985335749 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.128908416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.668818769 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.40624871 seconds)
  done (took 13.603678987 seconds)
done (took 553.495618008 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.750151717 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.002693106 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.283168278 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.338976174 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.641398047 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.420199049 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.340201401 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.548245475 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.84135857 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.52805901 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.572687123 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.335366408 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.924853013 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.334461898 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.298861516 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574113909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.50510568 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.808717281 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.31466747 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.950490749 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.313652779 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.005464016 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.583504833 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.889656767 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.592924145 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.049082011 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.281590326 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.513849827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.320069984 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.320093338 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.119442667 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.570717027 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.33670399 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.332356055 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.620485941 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.584414221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.524490003 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.600889425 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.282753608 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.794561789 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.942396094 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.717672619 seconds)
  done (took 74.705331102 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.127561213 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.141854263 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.292103476 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.20361556 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.783639508 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.204893566 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.358075612 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.345224313 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.215736886 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.323001246 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.374398778 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.81378509 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.375929904 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.78444504 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.372788759 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.386122735 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.212452118 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.74930169 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.365194729 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.342015642 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.171410208 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.293371257 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.170451566 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.31967483 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.165822293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.171824961 seconds)
  done (took 36.1886461 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.176603682 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.276224591 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.372870662 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.196706527 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.370929961 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.124682333 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.434179693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.272729028 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.718824239 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.445053745 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.229043779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.287189781 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309109384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.403473974 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.369378307 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.309844762 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.339447378 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.296361981 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.283309255 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.33006388 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.207468066 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.220785233 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.439623775 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.055253409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.980874376 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.645181448 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.326987254 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.679970911 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.299746665 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.307665745 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.259818721 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.419357869 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.517322205 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.376986397 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.275961599 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.149326371 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.159474044 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.232337064 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.034731366 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.293105881 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.43228213 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.537246685 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.481333622 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.706425805 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.405436909 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.360246239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.561097174 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.24157942 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.260078664 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.012069142 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.409863952 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.784017036 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.360749014 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.324457102 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.254366667 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.503105518 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.319946106 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.538142153 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.243412373 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.902934103 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.222503069 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.524563882 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.292517202 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.409838512 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.402136434 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.336210279 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.328483084 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.66781879 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.479446244 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.318027075 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.761972174 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.225753375 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.168753495 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.227929361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.282611615 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.591429453 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.02622952 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449845617 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.510469568 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.421587465 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.370922924 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.691187644 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.113844412 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.434870553 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.319921246 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.145520578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.234512193 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.464556135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.415850091 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.675933968 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.724075337 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.559362173 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.551558029 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.28618842 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.707754698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.637478132 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.146598942 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.152142103 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.360360329 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.728001994 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.227356011 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.381008643 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.757942349 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.616331002 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.457371194 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.237039339 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.494064253 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.419154059 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.531935228 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.130840102 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.32945537 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.239553959 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.3368809 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.421891418 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.127495582 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.689384565 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.250575402 seconds)
  done (took 236.181976952 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.095701218 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.115602634 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.10153686 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.116075736 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.096486862 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.648551482 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.15307668 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.096685817 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.658453865 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.153056637 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.096751243 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.096980184 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.097719989 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.101502786 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.308561336 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.335653799 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.230396504 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.096369148 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.095923526 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.108662748 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.214783465 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.099228827 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.096745306 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.109027281 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.100577143 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.098466323 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.107520198 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.113769963 seconds)
  done (took 151.845491647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.156522455 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.525664619 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.185718176 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.248839758 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.194943106 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.170530718 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.66342417 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.289038423 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.235552675 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.168120651 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.170888279 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.385660459 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.463823816 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.748383027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.297557872 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.36428926 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.806845008 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309871225 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.169933847 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.16056851 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.321690492 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.490396837 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.419103569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.420330264 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.793362788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.422609673 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.230440727 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.158300007 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.741317831 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.632538376 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.18153635 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.502261596 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.306012213 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.165941517 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.645626743 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.515665488 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.732144809 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.798226128 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.353226655 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.122314868 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.123086195 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.389680904 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.45636288 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.203860837 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.158225434 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.7806312 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.182960284 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.414900537 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.183087982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.122741948 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.247522789 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.276775012 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.402719794 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.068677095 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.33677241 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.31352114 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.746970316 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.147023576 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.172531001 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.475110227 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.140549464 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.629155204 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.679816035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.205005244 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.177990768 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.0149584 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.247241802 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.678313128 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.773958173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.210062026 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.504516792 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.364171365 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.14008104 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.415186594 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.685475774 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.102496345 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.736015788 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.302280524 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.264597001 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.247893406 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.430071271 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.153766583 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.707873457 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.262202162 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.138435523 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.748331367 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.555743236 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.140242068 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.156392435 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.274147348 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.332524933 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.367884473 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.429150393 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.23592773 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.058706126 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.420852116 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.442282198 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.175860864 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.282634608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.153163096 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.539125884 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.351045981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.144756078 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.472812664 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.561702147 seconds)
  done (took 157.029691101 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.879568887 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.206956518 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.351702958 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.688160231 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.528093894 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.621644732 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.408372729 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.227430433 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.462853572 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.37227661 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.351561772 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.250318532 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.167912435 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.879219273 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.213151675 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.337464216 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.230365169 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.788792629 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.475505466 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.104738683 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.600509775 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.884743796 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.469599576 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.561877611 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.596392289 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.638397036 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.863719957 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.278977013 seconds)
  done (took 47.550274688 seconds)
done (took 704.59672132 seconds)
SAVING RESULT...
DONE!
