cset: moving following pidspec: 679462
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.271729459 seconds)
loading group "string"... done (took 0.290463633 seconds)
loading group "linalg"... done (took 3.68862373 seconds)
loading group "parallel"... done (took 0.026008408 seconds)
loading group "find"... done (took 1.381725507 seconds)
loading group "tuple"... done (took 0.991785735 seconds)
loading group "dates"... done (took 0.251611388 seconds)
loading group "micro"... done (took 0.062489527 seconds)
loading group "io"... done (took 1.370098847 seconds)
loading group "frontend"... done (took 0.011832087 seconds)
loading group "scalar"... done (took 4.862851938 seconds)
loading group "sparse"... done (took 3.3932316 seconds)
loading group "alloc"... done (took 0.015258838 seconds)
loading group "broadcast"... done (took 0.372532082 seconds)
loading group "union"... done (took 3.761583201 seconds)
loading group "simd"... done (took 2.848941452 seconds)
loading group "random"... done (took 3.13814496 seconds)
loading group "inference"... done (took 2.078029269 seconds)
loading group "problem"... done (took 1.182605895 seconds)
loading group "array"... done (took 4.766492851 seconds)
loading group "misc"... done (took 0.871012361 seconds)
loading group "sort"... done (took 0.36088588 seconds)
loading group "collection"... done (took 6.465319971 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.383461994 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.171361485 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113072479 seconds)
  done (took 0.931419016 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.130982836 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020587337 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020486587 seconds)
  done (took 0.814316239 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021180569 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081478033 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023031532 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.023460272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.023310718 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022953669 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0226368 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022612694 seconds)
  done (took 0.863398324 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.03158617 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019785549 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020946578 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020305069 seconds)
  done (took 0.735255372 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.025501531 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.074290371 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019432035 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019878134 seconds)
  done (took 0.780253908 seconds)
done (took 5.295986718 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.376472291 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.129727237 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034070113 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.161770233 seconds)
  done (took 1.371358556 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020048535 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025136678 seconds)
  done (took 0.694757494 seconds)
done (took 2.709022995 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.385145974 seconds)
  done (took 4.023317228 seconds)
done (took 4.667151882 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157640651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020134669 seconds)
  done (took 0.821384031 seconds)
done (took 1.517526199 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.794460392 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.789713917 seconds)
    (2/2) benchmarking "String"...
    done (took 0.863529668 seconds)
  done (took 2.317651837 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.954110319 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.688546525 seconds)
    (3/3) benchmarking "different"...
    done (took 0.703741013 seconds)
  done (took 2.993477278 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.690961444 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.175694737 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.930561954 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.647232552 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.658362957 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.130038844 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.306001 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.01033726 seconds)
  done (took 22.508537652 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.859638759 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.948249612 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.881460062 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.915745666 seconds)
  done (took 8.295806027 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.95519368 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.037400797 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.037410565 seconds)
    (4/4) benchmarking "different"...
    done (took 5.64763477 seconds)
  done (took 9.402726197 seconds)
done (took 53.721604489 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.520328745 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.724794648 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.678010681 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284954866 seconds)
  done (took 15.853993398 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.8831433 seconds)
    (2/2) benchmarking "read"...
    done (took 1.003426985 seconds)
  done (took 2.545030577 seconds)
done (took 19.046142506 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.900831998 seconds)
  done (took 7.545670212 seconds)
done (took 8.193314634 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.770151958 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.030289947 seconds)
  done (took 4.445512338 seconds)
done (took 5.103607154 seconds)
SAVING RESULT...
DONE!
