cset: moving following pidspec: 680847
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.189569573 seconds)
loading group "string"... done (took 0.262892785 seconds)
loading group "linalg"... done (took 3.933090459 seconds)
loading group "parallel"... done (took 0.025484774 seconds)
loading group "find"... done (took 1.407058946 seconds)
loading group "tuple"... done (took 0.934759214 seconds)
loading group "dates"... done (took 0.245057234 seconds)
loading group "micro"... done (took 0.060927217 seconds)
loading group "io"... done (took 1.370970896 seconds)
loading group "frontend"... done (took 0.011888772 seconds)
loading group "scalar"... done (took 4.914076621 seconds)
loading group "sparse"... done (took 3.408496748 seconds)
loading group "alloc"... done (took 0.01504138 seconds)
loading group "broadcast"... done (took 0.370460824 seconds)
loading group "union"... done (took 3.661315856 seconds)
loading group "simd"... done (took 2.836703822 seconds)
loading group "random"... done (took 3.207225579 seconds)
loading group "inference"... done (took 2.029323283 seconds)
loading group "problem"... done (took 1.1427156 seconds)
loading group "array"... done (took 4.758188538 seconds)
loading group "misc"... done (took 0.887802659 seconds)
loading group "sort"... done (took 0.350585562 seconds)
loading group "collection"... done (took 6.236034756 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.395712233 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.193989999 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131180498 seconds)
  done (took 1.04972496 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.150200281 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.022709241 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02270917 seconds)
  done (took 0.917547644 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.023180595 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.088565749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024458876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025263341 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.025259048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.024825238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.024893569 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.024585847 seconds)
  done (took 0.961349993 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.035626969 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022186026 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.02305072 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022445607 seconds)
  done (took 0.824661959 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022663303 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.080519752 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.021749526 seconds)
    (4/4) benchmarking "different"...
    done (took 0.021593741 seconds)
  done (took 0.866330213 seconds)
done (took 5.885700524 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.41630334 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.146797011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.036028699 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.163676807 seconds)
  done (took 1.515702374 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.024474523 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027481138 seconds)
  done (took 0.780588013 seconds)
done (took 3.01823098 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.541655765 seconds)
  done (took 4.260772238 seconds)
done (took 4.982311482 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169260762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.021757384 seconds)
  done (took 0.917768575 seconds)
done (took 1.694520352 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.814081282 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.876549566 seconds)
    (2/2) benchmarking "String"...
    done (took 0.947227794 seconds)
  done (took 2.572559217 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.03458791 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.768835648 seconds)
    (3/3) benchmarking "different"...
    done (took 0.78427183 seconds)
  done (took 3.314196994 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.755319023 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.253211839 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.014375005 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.72619285 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.73688318 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.237554355 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.31265577 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.059267883 seconds)
  done (took 23.067502295 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.059332406 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.964508887 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.995686161 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 2.026158428 seconds)
  done (took 8.816963006 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.037867627 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.997927906 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.99857092 seconds)
    (4/4) benchmarking "different"...
    done (took 0.820681859 seconds)
  done (took 4.627556192 seconds)
done (took 50.762931773 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.725909974 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.810368495 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.761277123 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.429598727 seconds)
  done (took 16.453231262 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.952362561 seconds)
    (2/2) benchmarking "read"...
    done (took 1.085707432 seconds)
  done (took 2.77853521 seconds)
done (took 19.958079517 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.954363311 seconds)
  done (took 7.680881267 seconds)
done (took 8.407089327 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.86629708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.11489671 seconds)
  done (took 4.706355185 seconds)
done (took 5.478676059 seconds)
SAVING RESULT...
DONE!
