cset: moving following pidspec: 842384
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.271952297 seconds)
loading group "shootout"... done (took 0.887696702 seconds)
loading group "string"... done (took 0.221995932 seconds)
loading group "linalg"... done (took 3.245630734 seconds)
loading group "parallel"... done (took 0.021633355 seconds)
loading group "find"... done (took 1.20215922 seconds)
loading group "tuple"... done (took 0.718642566 seconds)
loading group "union"... done (took 3.184427977 seconds)
loading group "dates"... done (took 0.158384592 seconds)
loading group "micro"... done (took 0.058414585 seconds)
loading group "simd"... done (took 0.373565847 seconds)
loading group "io"... done (took 1.479612678 seconds)
loading group "random"... done (took 2.321463798 seconds)
loading group "problem"... done (took 1.153397976 seconds)
loading group "array"... done (took 4.461737841 seconds)
loading group "misc"... done (took 1.110128681 seconds)
loading group "scalar"... done (took 3.498984 seconds)
loading group "sort"... done (took 0.308257302 seconds)
loading group "sparse"... done (took 3.564805139 seconds)
loading group "collection"... done (took 6.021527265 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543013889 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.074899542 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.253128022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072767061 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277058274 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084303359 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087172377 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.073923695 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.128075926 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161704702 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.213173414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.385943595 seconds)
done (took 5.075863703 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.3310287 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033808201 seconds)
    (2/2) benchmarking "String"...
    done (took 0.124388394 seconds)
  done (took 0.7451985 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.138669161 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015891772 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022864426 seconds)
  done (took 0.757977452 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020604658 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099382109 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021666584 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022323939 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022170975 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021586423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021450632 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021431449 seconds)
  done (took 0.812896431 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029380394 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023091442 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021067813 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022551776 seconds)
  done (took 0.677664364 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.02290872 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.093978154 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027283323 seconds)
    (4/4) benchmarking "different"...
    done (took 0.02733375 seconds)
  done (took 0.749158334 seconds)
done (took 4.689331186 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.196725691 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.763381832 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.97054404 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.178652208 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.350962383 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.295171821 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076414735 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239293805 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149285609 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.032910551 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.185556617 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.039717876 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.514077421 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.470626859 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.027947363 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.143479206 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.577407496 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039178446 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070323666 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.250336684 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.038578193 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039353253 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043785642 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027945526 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.128491714 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.140102376 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.585325673 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.067529644 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.025975924 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.048554943 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028901159 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.032384032 seconds)
  done (took 9.400157841 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.164742307 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.145080065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023862916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059540043 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050901925 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025092936 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030423203 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023186104 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043516215 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088513667 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046091405 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1545531 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021352214 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024814336 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.137245573 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.116059993 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037868433 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.03722395 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022563915 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036545106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.04911602 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034842759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032860456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.03249572 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068113876 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089842396 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.044483049 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.067390008 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022799865 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034565596 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054538292 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.064170762 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023251598 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021889981 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065839119 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.044124464 seconds)
  done (took 2.69139414 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.742562956 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051421973 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.142083048 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.129203781 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068683698 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.05451175 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.180458798 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078341544 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.055071448 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024033381 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.206466973 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.645587616 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.167319966 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.116647512 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028514309 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.185493723 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.929475228 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.974246787 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.024588306 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024579268 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.136559784 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027735705 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.178557948 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.026420982 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.138036855 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.7246694 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.143224677 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.031101941 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.056432951 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.146597392 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.024166706 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.101413236 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.048778467 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025964898 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.570440621 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.023653104 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.021028932 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.043885654 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.054303743 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.024156747 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.024698444 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.033761772 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.022881852 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072986545 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.034148686 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.523663766 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.029831201 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.722273624 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.753872483 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.034280429 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.0296762 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061328515 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.021734926 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02541776 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.551977191 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.11524506 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.025960761 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.302191309 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.026269332 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.025304305 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.025833392 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.058154033 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.025196967 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.026080402 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.02921844 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.044509828 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.983284839 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.035243812 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043141939 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022490594 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023406076 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021937767 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.40496725 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.0297339 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025959453 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.021724016 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027996029 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023796818 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023038875 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.069141253 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.053123867 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.051665643 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.030885148 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.027553158 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.026886817 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.547476753 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.980997485 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025540989 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02530374 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.491483464 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.02170632 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024048144 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.025526872 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.046992001 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024710449 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.021156219 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06408938 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026586907 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.133823694 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.352364891 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.026626326 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.022442497 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.419938744 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.025865595 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060869359 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.079051871 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023794669 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.069315073 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.024322691 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.021220951 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.027416384 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020773684 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.025089 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.022249318 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.02309403 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021931476 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.024392843 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024964185 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024018317 seconds)
  done (took 23.837463373 seconds)
done (took 38.25432919 seconds)
(4/20) benchmarking "parallel"...
done (took 1.001087196 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.221665813 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.05416578 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.020973297 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.169752961 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.049122158 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.14183852 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.186251507 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.135023143 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.049568818 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.050158345 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.049777602 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.189566648 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.194980776 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.050045213 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.120897214 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.196999853 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.050984399 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.02152414 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.048934138 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.049566434 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.049726996 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.021171146 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.048795441 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.050298432 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.123385378 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.050015555 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.021326517 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.122547981 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.050883156 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.123811703 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.049711419 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.048640351 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.049566667 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.120280826 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.052378525 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.12368207 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.021650267 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.051549861 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.051617497 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.052906927 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.052174271 seconds)
  done (took 4.153035506 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047946868 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.041638624 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.05707511 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.019572244 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.031773759 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.044503159 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.020676797 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.040962678 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.063304415 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.041120239 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.040818016 seconds)
  done (took 1.23314397 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.0429265 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.04273208 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.048591511 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018896407 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030722114 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.040184798 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018457839 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.040065544 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.059613879 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.041807926 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.043233096 seconds)
  done (took 1.168190496 seconds)
done (took 7.267208799 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.153490842 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.12549973 seconds)
  done (took 0.997565314 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.591815143 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.209651748 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.135038702 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.25242063 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.125915618 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.15885079 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.837260546 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.161442353 seconds)
  done (took 7.247517172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.076917992 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.145981573 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.02609743 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.025554675 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.024838444 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.024035266 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.025410576 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.024042578 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.023188364 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025787702 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.025295678 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023377479 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.024177105 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025367123 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023487252 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.02364443 seconds)
  done (took 1.427929223 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028892009 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.026226795 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027427441 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017475134 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027789831 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026499521 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.02749898 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028646074 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027137376 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.027484808 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.025461367 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.028300487 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026804319 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025558052 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.028119439 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017575127 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028435279 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027460084 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.02969862 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027884449 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026904382 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.025071855 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028671477 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.026450676 seconds)
  done (took 1.361913451 seconds)
done (took 11.752151253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143796803 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.030842868 seconds)
  done (took 0.887405729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.127677599 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127867653 seconds)
  done (took 0.969607259 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029279347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016740955 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.034542561 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.026478891 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.017851073 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.017055323 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.033145267 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.01724209 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016793632 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016761027 seconds)
  done (took 0.960467586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019692416 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023383589 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021266914 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.01960317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.021192806 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017311681 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019673361 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017515734 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023443032 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.017442663 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.021530031 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.040260167 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.020731486 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.040252533 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.021331158 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.021846993 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.022430791 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.020168941 seconds)
  done (took 1.123760351 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018159187 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017524907 seconds)
  done (took 0.782745284 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020788123 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017475009 seconds)
    (3/7) benchmarking "month"...
    done (took 0.01930456 seconds)
    (4/7) benchmarking "year"...
    done (took 0.019499566 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.01766939 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.017491056 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0179484 seconds)
  done (took 0.875277283 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398582191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.093066984 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333988625 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.026426433 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.039981713 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243879844 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020808544 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.025652745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.025648345 seconds)
  done (took 1.936475686 seconds)
done (took 8.25745979 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045845874 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.150318872 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.155012509 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464651632 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.036656366 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.024285677 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.059217738 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.234117537 seconds)
done (took 1.939016065 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.492151254 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.313593515 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.204637496 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.025331487 seconds)
  done (took 2.292455648 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318131379 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143804659 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.032940496 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023923119 seconds)
  done (took 1.279488399 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022415684 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027948201 seconds)
  done (took 0.789223749 seconds)
done (took 5.629441083 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030376864 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017231722 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023739904 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.019039344 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018847047 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.018160817 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.01813151 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.019168894 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.017187858 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.019188622 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.019199754 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01916618 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.01877699 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018651904 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.018200579 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019022682 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.017042823 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018615947 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018628757 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018572658 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016868852 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018883543 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.018086119 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018544938 seconds)
  done (took 1.185496976 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.038567385 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022937378 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022872588 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022885586 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.024058568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022901327 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022856253 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022872768 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.023253639 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021980399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024310152 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024407876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.021761836 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.024261679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021790853 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024172073 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.023124576 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022916527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021774871 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.024180102 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.023035332 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02299927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.02414538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022971294 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.024078992 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024178121 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021902775 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.023009623 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.023051794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.024284258 seconds)
  done (took 1.449983263 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023581647 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015529244 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015817007 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.026129766 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015432817 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.01572863 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.016028399 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015216675 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015666322 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016515554 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015961883 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015384744 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.016204767 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015306244 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015429222 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.016002949 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020810263 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.037073097 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015909233 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015629917 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020442086 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015794091 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015493222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015578125 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015992339 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015526445 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015327877 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015791657 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015571923 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.016279108 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015534376 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020330818 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021976777 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015991187 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.026158584 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.02093382 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.016310957 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020430349 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016649286 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015475173 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015471911 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015515053 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015641193 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015689169 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026471684 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015857928 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.01696145 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.01622494 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015860443 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015417319 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015611741 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.017285472 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021566542 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016839547 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015423562 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016836646 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015474755 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016310943 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015672817 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015500866 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015405797 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019697674 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016941008 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016225613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037764728 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016937361 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0263271 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015575915 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015983054 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019798106 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.016030418 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035781348 seconds)
  done (took 2.036672132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028312146 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.026383601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.035719241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.026022904 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019522456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016613722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019897511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016789952 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026601026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.020664595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016756601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019939645 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026430898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020471337 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017674335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.026213404 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020364731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019482419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0167507 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020367742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017997469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.020062529 seconds)
  done (took 1.231503313 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108567911 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.023963661 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.071542947 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.023862589 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.02213492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.023304398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023814241 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.023589029 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023752309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025000392 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024931783 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023847942 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021925896 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024780817 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024911656 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024612006 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023812146 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024531151 seconds)
  done (took 1.348006148 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.035129736 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021951353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.050269569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021770474 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021722695 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.021202097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.025846729 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025569917 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021395923 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021852839 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025614314 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021702702 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.02162197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021847832 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021422283 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021838059 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021412411 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02203883 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02567956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025984884 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.026016152 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025437365 seconds)
  done (took 1.301616965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037695983 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021917144 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.041176409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.024022625 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0160155 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015969188 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023967166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022542074 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023829806 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.021580774 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022747964 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.016037326 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024891917 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022779798 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.025037759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022702728 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021654883 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.02274977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021668121 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015993202 seconds)
  done (took 1.207996876 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134265039 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.019037663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.018669266 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023948248 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.019145925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.019247544 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02432903 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.019347313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.02019639 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.045341636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.018548818 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.019166889 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.023944891 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021475056 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.018202542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022886966 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.02418976 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.023598871 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018746572 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018974511 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.043520527 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018092352 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022758431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017935058 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.01786687 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017778628 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0178578 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020813933 seconds)
  done (took 1.476596277 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039872924 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015213744 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015434052 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019538017 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019559845 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025592522 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019510812 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019661865 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015134334 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015540769 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017552936 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015143086 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015161114 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.025002274 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015154832 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017548163 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024975888 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019562369 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025782547 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.027729469 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.018502811 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.029414661 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.019362383 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.016123182 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026290975 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017755373 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019765339 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020571868 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017501896 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015612278 seconds)
  done (took 1.349342474 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030243912 seconds)
    (2/2) benchmarking "in"...
    done (took 0.027013004 seconds)
  done (took 0.794521525 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018853702 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.033950616 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015326662 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.02905671 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025270251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019823545 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024600699 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024992323 seconds)
  done (took 0.922794612 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.12595636 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.151471598 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017739577 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017729168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.124025577 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085434816 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.135332947 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.029355589 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031140485 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020244669 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017374051 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.135476812 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.017161306 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030940508 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018504184 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.02692342 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024418332 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.035636999 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030301606 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015920405 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029940624 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017745511 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.017447135 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.018054911 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.018196053 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.02410985 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.03315511 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029662774 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025317358 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015229014 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035838276 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016074078 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016727941 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025352333 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.124783846 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016456029 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054565289 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016307989 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020600337 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015873431 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.028245849 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037255325 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030621901 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034452362 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017548639 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017960375 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015950264 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017660711 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020143028 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025365449 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016191416 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023626195 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.01586881 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017512602 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026742633 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016267102 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020833775 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025480808 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029990485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026822073 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028730331 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031833873 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.025019044 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024668858 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016858904 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036346758 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017923255 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029803245 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031362971 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017512566 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029295712 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016110166 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015274586 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016161967 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.057297277 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.020830689 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.020185002 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.018256761 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.01725432 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.018131865 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.026287009 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021103558 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02386123 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019371039 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.03242697 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0255523 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016087845 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023442747 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034804789 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020300786 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016259933 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033582083 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020313097 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016056588 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034490222 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026932881 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017835508 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016940628 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020245042 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029735773 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017475085 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015343282 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024713205 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017653153 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.12579882 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021295906 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02489446 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.01629381 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0269063 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023604349 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018470659 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015804068 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021698339 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017746737 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.01586704 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026464023 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016948607 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032168857 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023826788 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031591384 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.032506732 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.028242252 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.033666134 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016826568 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015930343 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035964428 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026457645 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.018039992 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035466718 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016621145 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027536254 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016729103 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018207203 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.026218911 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016094519 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018349216 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016845208 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023134959 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018119776 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018294104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022736656 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025263637 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029170997 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017734123 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025555643 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016894088 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032921428 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026520181 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021539945 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019881382 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017413971 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029085278 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023761632 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0258639 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016370447 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017266913 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016532767 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027928125 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026126563 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018258986 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.025817152 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021530694 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017361723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016621481 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.01758876 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020588898 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020272223 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017295157 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024568153 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025557511 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031317849 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024365671 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025908927 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016025757 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016524182 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018500897 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016545148 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021535345 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025957806 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032499343 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028677986 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038537751 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016844482 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026474432 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018394915 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034080899 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030212812 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017716342 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021560252 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015851661 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018568831 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026159144 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028446917 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.03297981 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.034104039 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.022633823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021939431 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.017174643 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032481986 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.018355597 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.027215044 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.028288747 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.025587201 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.019171853 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.02124224 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.029744171 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.025015396 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.020458521 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.03746549 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.027495958 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.019214693 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.035572051 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.019667371 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.031688904 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.019282651 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.023941385 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.025845058 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.021543414 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.03049511 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.036768162 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.018389706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.019689357 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.037046824 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.021237731 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.021212058 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.028543015 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.036781936 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.025043509 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.028489036 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.031502398 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.031535498 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.025136617 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.031148526 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.020429094 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.030144207 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.023030798 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.033083548 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.019410316 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.041319504 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.018761915 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.037597707 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.020367389 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.032323314 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.020086647 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.030805821 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.020687764 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.040347351 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.021609489 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.020911506 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.033854981 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.018661457 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.030626166 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.019641954 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.025794509 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.027874633 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.030295157 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.021674647 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.030705991 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.021613574 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.030145499 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.025878563 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.182186922 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.030417731 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.025597291 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.019290925 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.029224374 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.031972714 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.028611598 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.020482296 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.020669808 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.019704522 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.030374324 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.020546118 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.020497654 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029220657 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.025504029 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.026548377 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020480992 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.020539406 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.020765748 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029304609 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.03004243 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.040390549 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.029428051 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.028474458 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.030017858 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.018876867 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.037266126 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.018664708 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.027826864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.018184893 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.025703594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.030082726 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.018965035 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.040483054 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.020339839 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.028403778 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032984856 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.030346276 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.025124622 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.04134327 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.022618545 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.029983802 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.029331855 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.026068984 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.028540334 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.020964285 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.029547894 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.030475485 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.031580155 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.020162711 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.028775974 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.030500009 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020838838 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.027585887 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.020971695 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.029931879 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.020688439 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.018475235 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.025442585 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031587456 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.024632272 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.025786969 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.01950174 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.018405421 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.019541458 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.026162863 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.025057512 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.028674239 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.036971395 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.018238291 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.020074116 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.019012321 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.024016551 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.039715103 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.03088862 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.028695869 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.025299772 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.018340105 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.02056431 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.020261132 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.018709752 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.021632983 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.017943946 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.018416029 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.030590299 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.020057516 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.024522665 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018894243 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.019621413 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.030441052 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.023410955 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.019009401 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.026890961 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.018470367 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.025411227 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.01791824 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.019938682 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.024581892 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.018790983 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.02379104 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.030640758 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.038101647 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.027697244 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.029369111 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.019966224 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.028343189 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.036766623 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.027156741 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019531679 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.029411892 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.018510398 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.041435935 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.029905249 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02926848 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.030788813 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.019701802 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.038258944 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.024269437 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.030152013 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.036968381 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019922047 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.027095032 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.018910802 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03716816 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.024952158 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.018973391 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.029302464 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.027819116 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.025758146 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.032232318 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.0199553 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.029217991 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.024087763 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.023917366 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.020623318 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.020769585 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.029354722 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.038044446 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.019753156 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.02450834 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.027524561 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.02849847 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.024426845 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032094692 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.027156874 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019261453 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.020109446 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.022298868 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.019104594 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.031125421 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018487645 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.02296305 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.022728002 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.017564987 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.024817818 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.034233956 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.026626491 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02680181 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016880659 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016326899 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.03621273 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.021223846 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.020487226 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.025172579 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026918071 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029265303 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026043313 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.03391155 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.017048948 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022904617 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.02890093 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017561695 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016364049 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020566158 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.01807256 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025665515 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.02631169 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023984814 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018438262 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023684696 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030203347 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018024361 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021537709 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.022756009 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017386494 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027213328 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024476371 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025209117 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018016136 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.01637544 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020229762 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025306259 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023925815 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025439336 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0174135 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025112934 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030872018 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.02400227 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019859772 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016323048 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019731659 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025536667 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.022887433 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016369241 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.02154475 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020471837 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.025170294 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026062171 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021548108 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016524921 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034068094 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025394628 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025689154 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018378796 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.0184662 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016881755 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016432894 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027898852 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016507963 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018415833 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.02166244 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018435145 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035008753 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.025055943 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.03269265 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017602907 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021509932 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016508806 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026190111 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021550199 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016641499 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027102289 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.016061485 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032415261 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028813229 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024297263 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016563762 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022107625 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025487433 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.032031438 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026413637 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025589073 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.020237732 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026235154 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.018391599 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027749709 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016586828 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015789665 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026965145 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025255093 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.029289228 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016673286 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026942889 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018717993 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024931494 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.025695593 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.018406486 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018562324 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.018387343 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.026583178 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021776582 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.026057292 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021833446 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.03418829 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017859114 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.028099445 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025708925 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027845962 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030805076 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.029484003 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.025680326 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.017231055 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024369049 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.025676952 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017982296 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.022034186 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.020417926 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.040045703 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018637121 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018580076 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031915389 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.025887835 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016956948 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.025407633 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.02204236 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.027063486 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017816823 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.027526248 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.022974314 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.01780119 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021816557 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021889099 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015868502 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016624593 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.017098044 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026747679 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.022020921 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016935671 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03704556 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.166376884 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.025184127 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026812767 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023226466 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.01722826 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015174627 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016602352 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029516681 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031358387 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020171812 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024410492 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.01728105 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024917985 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015096295 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024410514 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023714865 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024269088 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.01560995 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015889635 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030843307 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031202349 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020859994 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032839811 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024687627 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017118717 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037357101 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024734097 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016560241 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026437235 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017589265 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015311549 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015129917 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017076494 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027066244 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015613402 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017527684 seconds)
  done (took 16.282702025 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.067990298 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.020327849 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.018834839 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.018820227 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025108033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018356977 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.016808282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017998895 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.018270336 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.019083132 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.016865853 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.016695321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.022781072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.032423821 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025073049 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.02000668 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015986645 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018339645 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017486211 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.019264102 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024883652 seconds)
  done (took 1.251776532 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.021251236 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.022365071 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.022159614 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.022497795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02193359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.018556136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.022325758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018483062 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.022837994 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018951551 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.022983717 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018554684 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.018950102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.018906393 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018856845 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.020183031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.02290697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022135327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.018539266 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.022521208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.020161588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.022532937 seconds)
  done (took 1.337099464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.019449803 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.018373871 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.027571607 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.017823506 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.017942517 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.02110087 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.018075033 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.023854782 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.023992055 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.023288039 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.027312887 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.018527381 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.018118637 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.024684824 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.017831162 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.01883946 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.068301767 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.018128433 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.018030084 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.017607429 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.020055075 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.027708611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.018279168 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.018543366 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.02320675 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.021006859 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.018291494 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.020477419 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.018326495 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.023477225 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.018630411 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.017394028 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.027731436 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.026618117 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.023028288 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.023229391 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.019517917 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.018773696 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.018035218 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.01765206 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.026886611 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.018802313 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.017571431 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.018624799 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.026841986 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.017627903 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.017758466 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.028133324 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.017934917 seconds)
  done (took 1.940837517 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.029149614 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.074650144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.025487572 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.055281901 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.032277751 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.023057079 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.024819776 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.058567894 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.018672328 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.019459784 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.033536745 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.034116343 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.020723102 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.022064915 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.025168001 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.020153706 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.020718767 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.019046204 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.021574148 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018823279 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.021582263 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.025444633 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.030297385 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.030935368 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019915855 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.018283492 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018510446 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.020058962 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.030950897 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021870052 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.020455281 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020846637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.030165919 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.025835686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018410218 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018552212 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.030958809 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.019258739 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.019050835 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.017537203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.019132906 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.020718406 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.025446495 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.031601482 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.01905638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.025802843 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.019094362 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.017464058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.032175557 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.019291912 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.022968251 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.033406489 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.02098043 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.020040902 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.020710676 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.031065328 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.019694725 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.018371063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.019708567 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.031532801 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.017793781 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.020102586 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.155960056 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.01891816 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021950912 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.032354414 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.026733881 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.020471949 seconds)
  done (took 2.824634889 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.028248012 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.023977273 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028873751 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028553717 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.02357677 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.023818348 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.023988505 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.024853507 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.024743755 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027698698 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.024126125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141833002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.021569194 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.025204443 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0241008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.024095365 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.023982328 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.024005738 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.023767075 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025130298 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.024266428 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.028706396 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.023778364 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.028634433 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.05799213 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.020985195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.024054902 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.024281343 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02888085 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.023867058 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.031291535 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.024168836 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.023998209 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.028773257 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030765569 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.023935286 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.017499005 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02542467 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.024412596 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.024199112 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.020724047 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.029369901 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.023925671 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.020717678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.024141275 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.024146148 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.029045369 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.031169716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.024960317 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.026936551 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.023866172 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.028527527 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02353627 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.023725768 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.029144804 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.065457247 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.031320207 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030825965 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025336096 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030610089 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.03056599 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.037851664 seconds)
  done (took 2.628367211 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030916918 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021443427 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.027036129 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015556686 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015456541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021417697 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015428309 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015517975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021395444 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021398538 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022944688 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021590683 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023379963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022827142 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021520308 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023337823 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021402253 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021388964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021408939 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021404701 seconds)
  done (took 1.231681857 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019267622 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.02090846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016274942 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020199164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016282689 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.019712341 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016248146 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01625277 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016181679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016242539 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02081315 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020785698 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016288532 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020375764 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019755315 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019820956 seconds)
  done (took 1.073522053 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020627969 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026671679 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126579512 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.01705669 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018811899 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016254058 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.017058133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015901621 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018242223 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.030204385 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016959915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.019132595 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.017011098 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015702665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016267612 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.019119158 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018245816 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.017092409 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.017089438 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127298362 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025699371 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017618128 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019174674 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017681625 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018785691 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025238016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018353611 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.01873603 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016911835 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019167632 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018728656 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.02811864 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018728506 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017543334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015667551 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016583119 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016997425 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019399851 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.01935215 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017212505 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.016043842 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018901277 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017112366 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017483237 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018211102 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.01919238 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018221907 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027394739 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016895642 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018747881 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017020924 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018200169 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017365552 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028252232 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018941516 seconds)
  done (took 2.042987633 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036141494 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022407889 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015428037 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015316024 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021782386 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.023225671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022007549 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022651314 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023163718 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.01534835 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023359557 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021564706 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023293955 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022218245 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023308661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022212186 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015405625 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023080852 seconds)
  done (took 1.179691518 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024561364 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.021011014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021346086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0173872 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017337049 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021354295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015749778 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.01694289 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016991071 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017383053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017375482 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016958686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016964632 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016978392 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021004072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017401487 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016966569 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015907072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017342614 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.01564891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021376598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.01572666 seconds)
  done (took 1.18073743 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.187548729 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.146514515 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038943955 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034028601 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025673452 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051856901 seconds)
  done (took 1.258420064 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054248012 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025586439 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.022177814 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047724478 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02149395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020113339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020058199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020384171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023504096 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029170239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020444961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023121981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023471861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025169545 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02198708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021476954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020363182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02036474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022182925 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031897918 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02052639 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022974066 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020481094 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020153958 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0203495 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025060432 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023489023 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029194166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020213241 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023079176 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021447401 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020405017 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023125605 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029116239 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021869893 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023489543 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020376242 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031920341 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021446373 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025092869 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021721686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0220626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023451513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023033983 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023058279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020549792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023245481 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020638367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020722582 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0345947 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021822932 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02514339 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022285236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023489692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023738757 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034692338 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029400316 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025497682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022411964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029526413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025591115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022199634 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027058046 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031344007 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023864428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027328342 seconds)
  done (took 2.411494469 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031030844 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049724651 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020189543 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028910101 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02482917 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020364806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020371841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020348161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020302394 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022550113 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.060647847 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020662851 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024948789 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025111498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020920272 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021752284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021524513 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02613953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023738712 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.035600654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021565561 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02622701 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026070703 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026144676 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030348077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022657503 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.021432877 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02136446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021363671 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021338631 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024336854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021544846 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026224055 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.023589977 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026238186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021603837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02140469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024390266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021558503 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022574729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026344773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032841021 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.021672991 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021508999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030724936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021791082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02186143 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023908331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021716856 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023855383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030784184 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030972417 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030824433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026809646 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021895895 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021864445 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021567918 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02156744 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021808514 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022797186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026493846 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021660019 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037718934 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022996916 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022986537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028406817 seconds)
  done (took 2.460137891 seconds)
done (took 54.138752786 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183815585 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177720404 seconds)
  done (took 1.137883305 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.137140578 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.136221714 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.165477197 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.024416423 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081677462 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.175970809 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.127856126 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026537793 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024310613 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025781894 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023993117 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025535304 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025752556 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023973422 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.08671873 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026508324 seconds)
  done (took 1.928681953 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073656535 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.27572937 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.068748382 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.02333476 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104965993 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029524565 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024264994 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028730887 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029154533 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023472846 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071024766 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045530086 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027630104 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028848745 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024141216 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027581714 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028658115 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.029442508 seconds)
  done (took 1.758912522 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.064425548 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032210625 seconds)
  done (took 0.891133444 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.140119543 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063999135 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.10645288 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.314859711 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.09898319 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.296070614 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.102823039 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.098881501 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.066044215 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095488666 seconds)
  done (took 2.172536394 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.060242728 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056131146 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.283331217 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.055652875 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034864487 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029677827 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030659634 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030358976 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030872914 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029915786 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072604694 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028534359 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024769366 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.068555875 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049230594 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059470857 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.024014157 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.02977454 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.033156077 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023859139 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028685557 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030096787 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134497493 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.03023325 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.050668351 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027512356 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029296987 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029836108 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029733563 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030636527 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.030928266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.053961626 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029897048 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037767675 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028709856 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.050198611 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024765268 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.04908432 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027402253 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024676681 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027359157 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.03065455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025188726 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030361791 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030801888 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029767582 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.03033334 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023881937 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030976477 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027619265 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024725218 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.028440552 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028736059 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029328617 seconds)
  done (took 3.039751729 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.077935454 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.067978748 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024787373 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075217671 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066947707 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024906651 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07941764 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.061007818 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078198798 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024261301 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023896953 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023835183 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031686435 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035559908 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077137461 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.070139607 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025861722 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024482153 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.069164063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069244729 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.02337065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080540293 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071596979 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.068129034 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022929068 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024437333 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023151882 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.02377951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030985875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031128084 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023587354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033373206 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035079718 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030872306 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022846898 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023124187 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023040544 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031673878 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032433317 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032196318 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030233681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022813764 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023086346 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023692064 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024232354 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022612075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032388904 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031285961 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032346172 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023757303 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023699892 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023121469 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023973607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030666889 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029487068 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031075855 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033215749 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023438953 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023401855 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024848682 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033960314 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031792415 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031587171 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024463772 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031903753 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023288116 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032808228 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036200421 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023269771 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023920838 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023507869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023522977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023851126 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030029883 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030146134 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023947213 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023816466 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023212933 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031580275 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030279667 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.02329674 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031367066 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022835936 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023534072 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023915999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024138513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.032326944 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031565802 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024040686 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023825447 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023600195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023567541 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.02275187 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031642475 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031447588 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.031721645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.033173182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024422271 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.034379865 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032874851 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024613606 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031823981 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024066086 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02444525 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024345213 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031696321 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031534326 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033233331 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024062972 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023684086 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032600171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035724172 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023908682 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031466835 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033477877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031939534 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023430917 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034859275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024031011 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.033831485 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024229577 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033181962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024244873 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.03199564 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024188166 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023325201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024045746 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.034539655 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024547472 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023997635 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024329957 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02398722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.031987968 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.035430923 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024961327 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032988898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032722155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024775872 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034010703 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024382278 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034845362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027352506 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.028952922 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.027490339 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.040404236 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.028044378 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.027797573 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.028474153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.038576299 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.028269062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036966583 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.033638758 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.025133781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036635449 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.036211958 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.033535641 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.03682194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025985648 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024814978 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024302475 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024561025 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.034247097 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.035964722 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025405029 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024579732 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031617532 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.034598552 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023978787 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.032098064 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.032052546 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032453782 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024762957 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024556099 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035360018 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036404497 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.032442299 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.034479369 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033461181 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024455944 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032253041 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034939399 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024501705 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038840574 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024503129 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.036041929 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.035272042 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031755099 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034934981 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.036317521 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.034572597 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.034592777 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.179148966 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023644605 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023813649 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.030372509 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023743996 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023987029 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029958491 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024386202 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.024544941 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.036687522 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02429943 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032143208 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.023367833 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030812828 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.02316021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024307729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03518546 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023786155 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02419977 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030237791 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023697024 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029902788 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032609259 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029838689 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023573007 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024125604 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032557601 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031647079 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023494676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023356528 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023999332 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.03143139 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.030821943 seconds)
  done (took 7.991740073 seconds)
done (took 19.735100622 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.146529285 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.075179638 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.147377416 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.086683134 seconds)
  done (took 1.252085552 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.058389667 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.020146599 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.146840682 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.156750307 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.02075984 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.138286469 seconds)
  done (took 1.359269567 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.263949051 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.157399497 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.165606298 seconds)
  done (took 1.406639735 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.153661207 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.284742811 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.554704701 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.147355108 seconds)
  done (took 1.968144064 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.171155944 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.16601872 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031933703 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182851503 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.039295947 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016526163 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.107893967 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017380967 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052169411 seconds)
  done (took 1.663753354 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.096172626 seconds)
done (took 8.562922631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.199476563 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.139545551 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.03460498 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028354453 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.126704884 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.133107916 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.144414584 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.03083464 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.135575054 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.310038566 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.183605216 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.049889907 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.160557514 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043642763 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.262561378 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.032068278 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.030700722 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.025414644 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.142690393 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.133351574 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.243752934 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.029169578 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.097837714 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.031510735 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.102484763 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.080480329 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.19044299 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.31594835 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.276410853 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031830042 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.120603903 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.043304572 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.116726311 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.125524291 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.135017493 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.049518256 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020513537 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.243122301 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.106344633 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.322611305 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.166687067 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027925082 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.141563343 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025961292 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019951391 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.144661261 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033189786 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026922232 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043426688 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027426318 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042124978 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028439213 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.131715452 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024435003 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093916434 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.140555525 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.185308915 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.103385369 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026653841 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039551353 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.03053245 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.159644459 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.039300283 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026280411 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032671146 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020588145 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.137089188 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040503654 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020857743 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031618659 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029576427 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.098538195 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.154164666 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.066125184 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032077354 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.119361393 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.097847189 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.047248909 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049642673 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.030057256 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020221185 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.192550682 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025964823 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.039024294 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027516013 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.054309661 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020417176 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.036065707 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.170258468 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.149756352 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087747613 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.02159087 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.237992498 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022608623 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.047309298 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021941042 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.021175645 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.189144827 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.021032718 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.021062411 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.031452417 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029859181 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022696481 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.170020039 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.103843537 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.030698339 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.030806407 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.023403357 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.029561832 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.024084676 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.023596564 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.023252715 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.103680146 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.041209188 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.022536405 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.276702493 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.128423556 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.035097213 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.040237838 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.092571959 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.026199128 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.03331816 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.030411671 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.146334452 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.029483668 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.142104663 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.024176863 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.046142364 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.127533811 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.103234925 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.109746734 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.02152744 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.14635046 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.0323849 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.020931991 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.02969462 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.050528667 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.032044585 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.039483661 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.030481097 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.146289345 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.033182723 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.027882348 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.12624676 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.020741232 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.124438816 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.112325107 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.140986255 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.026422518 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.031260975 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.094502 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.043308864 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.050240294 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042741362 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024301425 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020324339 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.020403863 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.033783067 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019506951 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020178628 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033106701 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026924278 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036217016 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.243015308 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030390224 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024611803 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.253234735 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032716682 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.091774304 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040411274 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020522832 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.101932901 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.022223728 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040783649 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085112899 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.0207884 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.098284645 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.021263554 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.02048913 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026440595 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021995166 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.030003231 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.034203627 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.02100293 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033728509 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.028246038 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020440252 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.102085143 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022405127 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.191149712 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.100787431 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.095765598 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020721655 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.039212902 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020212163 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.134055325 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020752606 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070303508 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.112599387 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035479502 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.041014331 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021796754 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.099943098 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.035129385 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.02560671 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100246856 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.132352438 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.09245198 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026932029 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.256602578 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.032803367 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.022890259 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.028935028 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.032222472 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.023060833 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.107691477 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.027819639 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.021708499 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.022127582 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.024182387 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.02137714 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.04832616 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.021580963 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.031098024 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.028616604 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.025756932 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.024079022 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.021328245 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.031384899 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.107685685 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.127900136 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.029036508 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.043133312 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.036974734 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.034624221 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.073022045 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.03095941 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.16893944 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.021540069 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.032982619 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.044403782 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.021617017 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.02703571 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.028424 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.041277365 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.026646182 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.023759868 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.032286696 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.022727903 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.022950788 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.022686134 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.022871061 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.032467928 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.023863326 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.022020478 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.02211854 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.040111773 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.028538598 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.027781574 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.034794871 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.044284106 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.506185863 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.024133468 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.024923149 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.036293995 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.028680769 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.023017378 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.024288456 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.022489038 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.02458287 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.022787198 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.022268806 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.052851137 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.027597747 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.023084876 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.04493822 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.02894418 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.033291491 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.127583231 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.040437937 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.02772496 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.021793712 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.274073581 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.102371675 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.045731301 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.044062885 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.022899214 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.034601647 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.02308594 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.023313133 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.022198093 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.051282587 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.028061925 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.022948805 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.021834394 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.022212089 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.073988394 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.031955312 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.022181479 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.031816881 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.022674525 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.022700847 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.052199786 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.023989123 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.022959348 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.042065546 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.036223642 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.11499444 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.036085537 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.026509677 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.078000412 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.022066095 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.0226935 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.023256256 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.127195287 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.037103636 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.02429171 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.02277676 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.030935568 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.032760131 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.080619245 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.030057983 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.026986849 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.031408887 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.021921721 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.022999221 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.051269791 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.053568858 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.024137585 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.026857136 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.022480677 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.02322948 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.104980627 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.030984063 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.02832548 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.309518405 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.025018206 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.03268303 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.022343942 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.530278252 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.027978304 seconds)
  done (took 23.290339316 seconds)
done (took 24.118565747 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163978933 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.040428258 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.047744461 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.034397839 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.036706314 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.033602671 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.044163435 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.03078322 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.033780651 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.041161952 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145255496 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.021020847 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.028549554 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.035167702 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.029220283 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.033454842 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032214612 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.032971529 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.021085986 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.033266812 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.032372472 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.031857938 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029528722 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.032637308 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020970603 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.029163481 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.153574212 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.038564269 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.033869191 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.033262489 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.030993839 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.046720592 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.031069684 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.036490793 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.032954684 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.028707624 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.033693148 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.02984816 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159806106 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.029080336 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.023041969 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.035456859 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.030776305 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.031060464 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.032082914 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.034633145 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.028564484 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.036536231 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.031581795 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.044053376 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159495937 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.032473583 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.033442606 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.031711095 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.028423212 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.032623478 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.033206238 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.034261755 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.028315858 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.043630512 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.031844265 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.031202249 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.022218502 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.031654736 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.030298759 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.030641212 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.021391016 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.031866711 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.022138523 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.022126493 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.031388669 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.031575164 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.029906076 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.027875357 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.031320313 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.022139012 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.030824179 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.042960337 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.029830098 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.031721079 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.022654142 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.028434069 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.027962256 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.022646018 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.031933947 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.034258758 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.032025347 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.022737596 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.03139456 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.043242674 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.029584901 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.022138239 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.034210614 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.031724954 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.031857019 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.022311084 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.031459977 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.031821361 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0309297 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.022063903 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.02120562 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.031860327 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.028031374 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.031702531 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.0226345 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.031746248 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.031903162 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.021344935 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.031491585 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.030085296 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.032089591 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.033930367 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.031623047 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.034759157 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.022705056 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.021295214 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.032930308 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.022489057 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.031709715 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.030925476 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.028259574 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.030752435 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.022761435 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.03066887 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.031533497 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.028800521 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.022569479 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.022735696 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.022433749 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.031689295 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.030200789 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.021366048 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.022032345 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.031818235 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.031569311 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.030868218 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.031266801 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.03166675 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.022747969 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.028661012 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.028154422 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.031615498 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.03117582 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.022539503 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.031103427 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.031067977 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.031899081 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.028339865 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.03178267 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.022834544 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.031595539 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.029958665 seconds)
done (took 6.235895844 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082321536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.070673694 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.190826177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.153480503 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.037618533 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.03820198 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.028249184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.045122881 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.03032409 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.050938839 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.050758299 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.048181662 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.173879162 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.043863958 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.021691948 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.034518637 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.022065481 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.050765208 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.150828944 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.048438629 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.06700013 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.020362816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.039067589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.041419633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.035379972 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.041975156 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.047533905 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.02203121 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.039445702 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038778218 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.04841345 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.023356605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021139045 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040983104 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037438776 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.02996091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020304792 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027778243 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032889149 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020553182 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066036809 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039843757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027781709 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027950075 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021359501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.036073899 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021416724 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.029153991 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035514999 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027575773 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033775235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038426806 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022872493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.03935529 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019603656 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028629531 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.028422174 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.02037986 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021331807 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020447435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020417958 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023518872 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033907316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.040597036 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024762687 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028398603 seconds)
  done (took 3.818895667 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.04731854 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.069591519 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.038473634 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.03955485 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.022459523 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.023052844 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.022976123 seconds)
  done (took 1.192119608 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099520711 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146481207 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.156304236 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.157780126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.16907442 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.154353846 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.037387192 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.055897104 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06183425 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168995943 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.16488089 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.159089315 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.027577418 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.036896119 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.058429102 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.161092724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.037422486 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.031154719 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151691022 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15972632 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028801447 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.057265302 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.037169501 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.026447504 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.156032687 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149115316 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.027674579 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068856219 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.025879483 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.023529832 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023503016 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.048632111 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147679578 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.040221427 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023616183 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.022228218 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.144582209 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024114358 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.147726118 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.031463183 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.147620883 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.026280991 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.026361825 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.023669261 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.024767201 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.150628921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.025192177 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.023449967 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.022969556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14963037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.035909295 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.148321729 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.025379657 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.029181447 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.031188742 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.031165888 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.031282091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.02387196 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.151154202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.035351636 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.025938222 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.160425974 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.160018678 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.148975587 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.160640948 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.034074245 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150151194 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.147852278 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.022682573 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.031014035 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.023236257 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.156422598 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.026714869 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.024911642 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.020874011 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.030107751 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.162118003 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.163094854 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.160632523 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036741345 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023534065 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022814679 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.158518786 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.16092656 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027859525 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022054093 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.02220794 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.038287636 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047341101 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.02438893 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026886933 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.022234909 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032832278 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024404861 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023711484 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152835872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021249164 seconds)
  done (took 8.300568106 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.04240336 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.024230777 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.02396636 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.02436603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.02486519 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.024827937 seconds)
  done (took 1.220173583 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.065543998 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.024892664 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.024899539 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.024704383 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.049909396 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.144199635 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145557392 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026242303 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.043004548 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.038045988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.144261707 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148916832 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148205748 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.026103383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144753088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.037726326 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.145485118 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.030065913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.036754198 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026036236 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.036367088 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.025574142 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.025611254 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.164762719 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.019355964 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.036953882 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.035189057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.036912349 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.036450479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.025299157 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.025283928 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.018755795 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.035354556 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.025404871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.145281862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.035881445 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.024590708 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.020032765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.029076188 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0187628 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147776818 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026327538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.029344847 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.020002326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.025430981 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.035577456 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.020175298 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.035509014 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.145890272 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.020466166 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.019944942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.024868415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.018852123 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.019893845 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.035481866 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025494562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.020039662 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.14575633 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.025827651 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.035779077 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.02466069 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.018810587 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025226383 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.018703765 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.029944735 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.020023515 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.035595784 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025831628 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025792343 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.024374059 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.019986286 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.024424142 seconds)
  done (took 4.485665701 seconds)
done (took 20.04516829 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.45386683 seconds)
  done (took 1.445027236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.011710148 seconds)
  done (took 1.959294979 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.053759523 seconds)
  done (took 1.097260336 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.320988779 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.51484625 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7676338 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.097256314 seconds)
  done (took 2.736914079 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.859945329 seconds)
  done (took 1.905569663 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220580418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.181431369 seconds)
  done (took 1.445587525 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.502633076 seconds)
  done (took 1.458177911 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.43617245 seconds)
  done (took 2.472434022 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.21337305 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.141993643 seconds)
  done (took 1.400513599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.652696508 seconds)
  done (took 1.690310071 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.549295015 seconds)
  done (took 5.592245026 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.200366058 seconds)
  done (took 1.30504557 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.197591275 seconds)
  done (took 1.241235078 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.742210425 seconds)
  done (took 1.783988468 seconds)
done (took 28.580858458 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044400797 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.038105736 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.038232903 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.035524514 seconds)
  done (took 1.114645382 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.032587218 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.028131464 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.030658536 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.031135422 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.028355391 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.030308892 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.031167047 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.027072625 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.028306263 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.027500852 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.025860259 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.027377948 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.030281281 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.027072447 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.029900384 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.031478348 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.027577763 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.028229044 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.029545624 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.027021255 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.030342603 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.027487215 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.027450145 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.028881458 seconds)
  done (took 1.675278616 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.03673095 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.029192132 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.031336154 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.02799492 seconds)
  done (took 1.181036828 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.035192698 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.034061382 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.043693091 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.044046822 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.034491422 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.035181362 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.041883504 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.042443751 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0494867 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.045269356 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.02445554 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.024090795 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.023218303 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039365872 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.041391792 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.018389932 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.019479518 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.03501094 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.034110443 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.036970143 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.026694471 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.021800378 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.034291188 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.034917392 seconds)
  done (took 1.873286754 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.039918494 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.021823623 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.040175781 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.048784112 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.04896837 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.021818738 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.037787913 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.049636639 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.091621249 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.023468314 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.030626222 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.023518887 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.064131225 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.021912413 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.03862317 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.071305513 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.075518361 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.02705881 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.056137846 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.022120164 seconds)
  done (took 1.913483008 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.030402117 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.027112988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.027955408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.021490601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.033607028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.029769986 seconds)
  done (took 1.22469175 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024590504 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021897392 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021744166 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.026141729 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021590283 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.02150244 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021569888 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020378718 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.02043386 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.021229183 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.021169203 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021572554 seconds)
  done (took 1.263605201 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163243888 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.027305832 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.025192422 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.021214015 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.023036432 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.023138471 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.03976656 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.025706074 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.043325481 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.023302037 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.023835623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.026502114 seconds)
  done (took 1.433244791 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064097881 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071048217 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105451192 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08065595 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086982892 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055562412 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.21169558 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.037129948 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.124049784 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097896333 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083845313 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050828035 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.044490031 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.026630698 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06061985 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.077983977 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098150695 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030117938 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080858224 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.25590157 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093160535 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.092525325 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109251572 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08462571 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.051265528 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108829207 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055556269 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062186174 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082842481 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087714844 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082252625 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.063091434 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.028302907 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.027911185 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123081059 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.062640481 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080387286 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.052011703 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.066193202 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04860908 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08698293 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.027036262 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.042445417 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.071643863 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.046503777 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098378189 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.053182554 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078159661 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040271052 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104038939 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092867488 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.186246132 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.046369082 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066268435 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106161134 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075272537 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09514202 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069302373 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040612026 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.083565029 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.072339267 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063682531 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071642149 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039717486 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.30195122 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.047323726 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.085305145 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072382504 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.048510865 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.051899878 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.068512059 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094615825 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082867386 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.075337057 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087760459 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.0489804 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084953399 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.055545904 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.078925609 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05792277 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.027090835 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076381907 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082387087 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.053040284 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054771257 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083018898 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047749383 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030630696 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.044723133 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.074425046 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035179555 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.064795468 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040941477 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.086433125 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091621752 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054243138 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071533152 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074802312 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033558428 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121897214 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065492593 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028010621 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074629103 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069699403 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109440152 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054253745 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.03180935 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059735658 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063017687 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.121830749 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06444516 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.038999666 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079135419 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103729793 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054544739 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.271753044 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055969162 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10731259 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078094926 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.045699454 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.033467022 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.054846099 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075437124 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072696522 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08753976 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056083918 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.042420737 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046135693 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083479615 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054368353 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038326087 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081975519 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.065532683 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.033511343 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050453233 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.035776936 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.280192979 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.045177343 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098246777 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094017455 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.03331387 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066709344 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.056072006 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064936302 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.05992778 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078321601 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099228279 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.149754357 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.048921079 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.041321132 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068045002 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104784992 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08539763 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049555652 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.042092413 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058006777 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070821547 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.059324195 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083311929 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.052533408 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070801799 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062762392 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102440005 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106028027 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061387442 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.065465515 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065744178 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.083914764 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032629255 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120775401 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063388349 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083881147 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045945404 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103952629 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.076502692 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066964225 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.044978619 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.064556425 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.062749756 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066540064 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10605853 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052700517 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.02952365 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052953952 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110796698 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035211615 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081101002 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.049779349 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.051559438 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077844061 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.053489378 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040525705 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.025410792 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08618636 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125574643 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.027425584 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.078580283 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.07602386 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065203118 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.085190849 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.025421353 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089721664 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099679343 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088231586 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111799693 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.160137564 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.232101726 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072014794 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.07705497 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068038125 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.034118728 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.0803502 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089733233 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048276734 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0467632 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090340057 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073662586 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.090354816 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.06856352 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076765478 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.060052778 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061122406 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058674202 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.054371685 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098412435 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077417979 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.08115129 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.039277582 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068314671 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.078247596 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098726033 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.039482977 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103688788 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.043859362 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105250798 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.036642111 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088356464 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.033834785 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.133957442 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03802839 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.059594577 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.027028204 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.030106687 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106072548 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.083697376 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065187617 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059512368 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.098094175 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100186957 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.035404445 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073514352 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.075886231 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064486064 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076779183 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069833624 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.047901482 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056879404 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069342561 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.044824524 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.040937629 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090484872 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056826203 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100286322 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.042246403 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.033055528 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103101682 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073939032 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055315016 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.035227537 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070796632 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.088878354 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053407508 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046304534 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084927617 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067792639 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108970243 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.050990066 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.063627763 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089381873 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.200867459 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.055341095 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.02709079 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.047944537 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.034580093 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088275358 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033730565 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075704363 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.025831032 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089973486 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043428523 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.055931962 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063047861 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068202186 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09486374 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052458538 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100609742 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047021358 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.0762232 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067195217 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072546292 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044302594 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060993006 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.063361423 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080514398 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.051950479 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081165684 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105595849 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063567271 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.105257405 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049568592 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083991257 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066860315 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.083359521 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.072991992 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15758259 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101534925 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075447144 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073051177 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.03281215 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054646951 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071954243 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070549969 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140200663 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086045334 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.029291578 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.062768796 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.050685299 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064980548 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066581695 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036730081 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102031418 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059133876 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.044476829 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067504063 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.049370548 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063666204 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033471992 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059851802 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.053973789 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052951324 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.054780775 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073072347 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089066816 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069562177 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106374296 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.060155101 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.048042812 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.078239224 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082759329 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077163604 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040611843 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041159141 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.257974019 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07205234 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.0820488 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.05247108 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063608283 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06573838 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054054193 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085496838 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061941874 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.083783731 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037259711 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.033929136 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.025347969 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.028839748 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082456946 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070498982 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069041644 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063615307 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.029022718 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.064346584 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06664119 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029257588 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043523311 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052317926 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057234847 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.040279553 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064112824 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.07484423 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.053009247 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060895374 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063332628 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104868207 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.058157471 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048393693 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107645346 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113575062 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047473796 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052827739 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.028706194 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037387899 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084927828 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106483533 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111237122 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.036956359 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.045017618 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.042678202 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046232009 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.028566021 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.045944669 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.047840215 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065464518 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057810281 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.074404957 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065490215 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033367251 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.068445447 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059630247 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052314653 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.067035625 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079565099 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.089048947 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.103445046 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075062369 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078383675 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034402167 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.038632712 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034472479 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038100471 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.067498656 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.037326048 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034357008 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112990514 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.051982483 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074239824 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076465687 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.048443913 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034535186 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099166858 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.027094491 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100885342 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.02855013 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039531407 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.041215817 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037738326 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.211661767 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09920005 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066138328 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.330151477 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066014448 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06908456 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148974506 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118456401 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043290319 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.101382625 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032463451 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033389608 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033211869 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066440455 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047463336 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077136162 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102602316 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045654981 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059449981 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034996563 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103251786 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.053743057 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060179779 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043640928 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.037145874 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106128286 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037443109 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.045140809 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047922498 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.069843069 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.028466105 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.059224996 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040416404 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03612678 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150591963 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.669764254 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05422302 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.02948175 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05217386 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.098645443 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090656218 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052274433 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067263724 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.07452287 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.061251968 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050091464 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070863909 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.156211596 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028970795 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051600648 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.053886207 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059805763 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065830248 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.052129137 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.044485154 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.052777445 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.042041108 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.03514639 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072777852 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043318327 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.056280361 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067606793 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.042711341 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.048621495 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093654633 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.062863754 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.043252428 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04900907 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.071267129 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046011761 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0689794 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.02716061 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071624552 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.049260735 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084170536 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.059155933 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072587025 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.246839378 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053278957 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095812624 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.066278462 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08150968 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.045321467 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.035131464 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082376494 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.04741841 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034721942 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10310188 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.052409229 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.063026274 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06547826 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.054227036 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068428278 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072424745 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071505668 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.059234266 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035539905 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057125017 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.064379241 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043944563 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036639564 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029861125 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.032629559 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067804848 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044127729 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.04510749 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.076830604 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047445823 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.062136719 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.057805199 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082431203 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047988015 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064946925 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070619396 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051592036 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095366477 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060914108 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090021653 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140529421 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094415893 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091709095 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096198223 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.036248747 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.037791933 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.02578888 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.075488022 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.037954353 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.045720922 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.037020666 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095639037 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.042327749 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071743036 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.220619825 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.037822742 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.052878679 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056421861 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.026844143 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.042008545 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069900414 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045187252 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038069752 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071906336 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040175883 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.090168251 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070623982 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060295549 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.056219324 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039734354 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070610535 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.064966651 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.093383983 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060268056 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.033869382 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08886964 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.068511442 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108839342 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.032588026 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040215029 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093812108 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.22332819 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091960912 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038395885 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11361854 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.1003561 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060697513 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090260615 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026778028 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045387948 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.044824936 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.078923014 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040760126 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062168197 seconds)
  done (took 43.973926545 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.138948656 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.126523517 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077076304 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.090518587 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.246184694 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.255639204 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.113703542 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.0806438 seconds)
  done (took 2.218275952 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.025809387 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.059381448 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.038784372 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.312248655 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.060220919 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.023670145 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.031414181 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.039978927 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.023627539 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.022873257 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.061818984 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.02357302 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.027404592 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.491024222 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.022251231 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.028126545 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.027212533 seconds)
  done (took 2.516816415 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.324079092 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.668625799 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.346982997 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.510309607 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.105536878 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564516148 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.030473135 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.036082982 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.688402742 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.362537105 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.101162477 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.184561835 seconds)
  done (took 18.102638347 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.033029238 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.165844143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.165978 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.031623536 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.030996197 seconds)
  done (took 1.670553328 seconds)
done (took 81.252422868 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.043255757 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.136966813 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.023639608 seconds)
  done (took 1.369796976 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.160616493 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.157077921 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.157222561 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.159893838 seconds)
  done (took 1.745810178 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.032632484 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.033543966 seconds)
  done (took 1.197887825 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.190863914 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.275747418 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.049328667 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.041283721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.038440456 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.039104922 seconds)
  done (took 1.312665883 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.028609694 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.027710316 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.027792315 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.028286548 seconds)
  done (took 1.293390787 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.142793263 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.022183297 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.024590395 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.026570213 seconds)
  done (took 1.392916442 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.043022435 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.044422387 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.077570234 seconds)
  done (took 1.342142114 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040167737 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.039609041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.034307839 seconds)
  done (took 1.249298378 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064656887 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.051314513 seconds)
  done (took 1.20494872 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.038877188 seconds)
  done (took 1.198479367 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.051312455 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.057688207 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.229250772 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.195973628 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233696697 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.214441922 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.037076078 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.034058455 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.036210353 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.039051287 seconds)
  done (took 2.314545252 seconds)
done (took 17.356664777 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.038972258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.152521765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39661405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.045303679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.612132158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.393273063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.687063285 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.047183601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.056851685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.024433445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044292393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.589777544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.694650453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.102967457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.680935587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.101602433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.520242099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.026481704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024326183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.024921698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.669692065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.025633207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.024946021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025181651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.516890821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.292961373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.027048252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.10081066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024781099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026845634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.270080102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.025154105 seconds)
  done (took 12.47820902 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026531684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077534363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027414007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.039736512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.025682394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.026322902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.028830679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.025646496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.072936258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025387147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044614797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.024365515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.029471473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.026435196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.047578244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.024842977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.027334774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025482653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024741672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025390107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.045846412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024760758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.025576049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025526444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.025389462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.041376807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026418924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.024853901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.025013897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.029586178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.030727925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.026718582 seconds)
  done (took 2.130280796 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083328712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.086122378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.030588927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.069377809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.081523636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.027266178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.115555197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.049722333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.074816844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025282872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.044562011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.024775167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.064541278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.026461614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.047599672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.025183744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.027607529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025360276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024615391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025303266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.045756379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024721944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02536126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025601458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.025455323 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.042933003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026395088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.024884232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02476817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.029401428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.031512917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.026543327 seconds)
  done (took 2.530481126 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.027236886 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.028801037 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.035470541 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.039218263 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.022832488 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.02556215 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.026949971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.02305566 seconds)
  done (took 1.4213083 seconds)
done (took 19.75845766 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.036756228 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.02344864 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.026757413 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.048900389 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.030455161 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.147406933 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.026215035 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.02820436 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026559194 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025714342 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.028145793 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.020108794 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.025015525 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.025188717 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.027087297 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020795249 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.148293991 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025860644 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147007604 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.149154002 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.024025411 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026750953 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029538965 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147237865 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147991919 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.148798023 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.03084499 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.027080322 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026659812 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023885132 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.146133084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.149189375 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.024145375 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148114957 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.023729403 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.023180461 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.02802584 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.024874405 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.158293134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.033314788 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.025570364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.03280387 seconds)
  done (took 3.651449595 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.157490027 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.166232046 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.158986344 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.036584284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.032560176 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.035801388 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.163607366 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.032904996 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.031496697 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.162993367 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.026998869 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.03131935 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.033697762 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.023692156 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.031003422 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.027472717 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.033449578 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.025163287 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.030695047 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.031073146 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.162312875 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.024091083 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0320687 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.032242885 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.026483046 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.032822819 seconds)
  done (took 2.805565878 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.032473098 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.047351 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.050261054 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119619163 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.068440451 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.048126015 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.041113994 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.051886143 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.057988643 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.023743274 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.048087895 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.054646965 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.054772702 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.031718572 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.065274263 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.044237063 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.038018731 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.025597239 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.030811242 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06119917 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.049127389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.044842767 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.058800554 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.04522764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.022794942 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033507979 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.028707107 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.042084556 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.036317909 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.037414343 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.027891899 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.027629166 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.024748799 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.036098763 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.02787172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.022031261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.048665921 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037780799 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.039913356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.065665429 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.036001522 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.025164102 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.053356416 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.089009136 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.022516065 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.027043878 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.028433111 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.037474471 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.025348495 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069765352 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.041005145 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.022997628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.044358498 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.025247674 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.025506405 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.047405131 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.025345813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.025902451 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.045202109 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.029307494 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.046516104 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.028785187 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.043848421 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.021421198 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.034862655 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.024011365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.024398227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.021306414 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.058477068 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.030452459 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.071767019 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.023877532 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.021007566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.035616879 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.034807913 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.030393009 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.021327756 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042151098 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.03589306 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.026209182 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.04076726 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024757938 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.02536326 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.067407726 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.02145437 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.020340885 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020334032 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024823895 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025281499 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022628837 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034934963 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021537641 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.025785855 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.049882011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021614936 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022514525 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.025118526 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.02345422 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.021442295 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031989907 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025399783 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023689502 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.035158391 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.02265049 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025798368 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.037265541 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.031616254 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.02058618 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023494883 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.02485146 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023859478 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023610552 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025845892 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023869852 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027532317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029724281 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.028193323 seconds)
  done (took 5.412942409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257658647 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.248131996 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.025492402 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.244933317 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.033994395 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.171411198 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.24776212 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.248403831 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.025441524 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.025968801 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.023928827 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186114728 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.180878684 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.192362483 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171377932 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.027275552 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.060518797 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.191504327 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251133982 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.245703514 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.06019849 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.032988326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.027503457 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.026022881 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.025450623 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.033899072 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.042670367 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.034555696 seconds)
  done (took 4.525851153 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.032226836 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.072849821 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.028906813 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.051888469 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.043547678 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.025022144 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.026535005 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.025271697 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.042827647 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.030915813 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.024871773 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.028750001 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.028384636 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.026980122 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.02481366 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.035801872 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.031831218 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.023338849 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.02845131 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.029584058 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.03669522 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.050832378 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.028830375 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.02441072 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.02818213 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.02437483 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.030213132 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.034043389 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.024134242 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.024170567 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.021463844 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.033899058 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.041015613 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.025764052 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.024149188 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.025075825 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.024802505 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.02478717 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.024545538 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.022685627 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.022593728 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.030539887 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.023355793 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.029823786 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.039445716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.02726076 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.026565429 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.027456779 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.02743485 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.021485591 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.028071304 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.02821379 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.027442839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.034209233 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.026976638 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.027594768 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.026491516 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.041191725 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.031184932 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.024098782 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.023694989 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.022961831 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.026355169 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.030610819 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.040846457 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.026392803 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.022049308 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.024286745 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.025713933 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.037691799 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.023220959 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.031021279 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.020718655 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.023781613 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.026090601 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.026885121 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.025151643 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.02229259 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.0234835 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.022923878 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.023793567 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.023253543 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.02271333 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.026199574 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.021491178 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.022003667 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.024563556 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.025453288 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.029165549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021746405 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.026271876 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.024206394 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021819615 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.025327863 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.028293368 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025670935 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.041271265 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.0307852 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023608829 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020607221 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.040488208 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.02543406 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.022037488 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024660568 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031680363 seconds)
  done (took 4.246992501 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053662938 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024843226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042688809 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.058824154 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.033232047 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028689687 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036615006 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023994447 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.044663386 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021978215 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.03222046 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021153198 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035952878 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031774159 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024731633 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032844858 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025586565 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.044421012 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.039721713 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.02357856 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.034705563 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.03877115 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.038838638 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.044164029 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.043347909 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.04489836 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.038465121 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.028150114 seconds)
  done (took 2.129884619 seconds)
done (took 23.958881525 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.241870571 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.413554184 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.214327874 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.85283607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.279004991 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.151279596 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.414127694 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.129550223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.183963832 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.301628515 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.955652413 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.51757314 seconds)
done (took 60.934706714 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.15677894 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335103035 seconds)
    (2/2) benchmarking "String"...
    done (took 1.366168705 seconds)
  done (took 3.893278659 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.648863965 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.210423161 seconds)
    (3/3) benchmarking "different"...
    done (took 1.244357599 seconds)
  done (took 5.263641958 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.588709981 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.99162686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.476541648 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.127721064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202740222 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.646705305 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.372961515 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.888198486 seconds)
  done (took 27.816692217 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.280646164 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.447047066 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.538176564 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.737388297 seconds)
  done (took 18.195555525 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.600181923 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.7210946 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.718313645 seconds)
    (4/4) benchmarking "different"...
    done (took 1.830388344 seconds)
  done (took 8.110879159 seconds)
done (took 73.231613736 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.135347472 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.58063532 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.232020741 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.362946313 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.238520783 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.207457139 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.199866669 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240314571 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.136640732 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.193992028 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204712811 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.106928683 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.193135145 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.25815286 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.114613469 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.205036597 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.593407311 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.12431455 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.228872536 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.163091738 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.544898609 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.195888652 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.202027383 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.214883231 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.682415521 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.199778959 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.729334483 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.189155931 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.788924949 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.116313308 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.205491876 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.201695876 seconds)
  done (took 185.090627792 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.157677376 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.107228245 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.133744541 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.199159867 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.604650331 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.562148487 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.983316901 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.631748149 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.195854255 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220348317 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.250577214 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.220131373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.179254889 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.762909052 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240560951 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.218136703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.118636949 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.022441131 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.231124234 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.127244839 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209179554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.804708696 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.790601882 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.977541353 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201229464 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.163022372 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.211150607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.240402124 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.601767562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.098504194 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.203247111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.221351176 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.366026279 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.34966909 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201466459 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.154854629 seconds)
  done (took 156.067643949 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.42066079 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.189402434 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.159866713 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.243529577 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.18074773 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.048586387 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.199159128 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.19979162 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.162884063 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.097843236 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.087705924 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.175288634 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.124761235 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.512772531 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.107814611 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.072018139 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.071019613 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.229008438 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.098975001 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.079940757 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.083357954 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.180980273 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.430068457 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.193746507 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.08307084 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.078796549 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.179932848 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.086989136 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.071154538 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.070302335 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.179489249 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.079937076 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.20084925 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.189794468 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.085511687 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.128041019 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.087381836 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.26466857 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.081863476 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.069564184 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.075469723 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.116441801 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.079859933 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.103129659 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.183203571 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.084490456 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.089417048 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.55138875 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.668598555 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.083210114 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.071469324 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.069111683 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.073133824 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.073285367 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.310683097 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.084609934 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.104899381 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.605054053 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.085571342 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.069518448 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.069630294 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.069589797 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.073174737 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.077178358 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.105576454 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.681543082 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.833757224 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.437827624 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.777220822 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.080212612 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.069519778 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.069872625 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.903047228 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.140186141 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.071567013 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.069537387 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.24529024 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.080098027 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.069798192 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.990629799 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.989903798 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.082249517 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.180323963 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.080190409 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.069602646 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.515841406 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.141951491 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.08820857 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.089385793 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.125362605 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.073086074 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.070160991 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.076801819 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.990882209 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.081367323 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.082439582 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.402779725 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.081524346 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.069542451 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.109087329 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.441989607 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.08216678 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.152507783 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.478533194 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.987453956 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.080785654 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.069882421 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.088446028 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.070903403 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.081979801 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.082500328 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.071380186 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.070877993 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.07516807 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.069793191 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.069639902 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.070258109 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.089278585 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.071346509 seconds)
  done (took 324.186392686 seconds)
done (took 668.039145849 seconds)
(4/20) benchmarking "parallel"...
done (took 1.069562024 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.327300669 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.092070373 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.266387547 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.323115636 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.277692989 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.292186467 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.283480114 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.372071819 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.31029391 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.243541418 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.305325262 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.251920357 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.366409162 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.336048378 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.372353693 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.333524962 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.273482262 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.770175917 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.291145768 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.253220056 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.278484383 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.248761722 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.231972061 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.303422103 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.371028423 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.250505901 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.479106416 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.314797527 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.281752623 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.335108267 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.347673369 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.363076555 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.294730428 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.359773629 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.314033594 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.379408449 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.239636191 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.342262962 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.255546153 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.290196479 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.301455276 seconds)
  done (took 61.995856744 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.587949811 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.263781667 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.393027976 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.395858015 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.982396311 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.418810569 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.490673092 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.260377753 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.275878005 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.392874244 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.40369189 seconds)
  done (took 17.964210142 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.315229519 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.265076657 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.397763001 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.399553336 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.492176676 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.398101819 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.453425146 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.284096138 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.291413269 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.39218976 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.412667807 seconds)
  done (took 17.19716613 seconds)
done (took 98.226410605 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.675747614 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.153898309 seconds)
  done (took 3.899566505 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.103052232 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.091151951 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.082995864 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.08729692 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.084976795 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.082977234 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.135625929 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.096433628 seconds)
  done (took 9.834446576 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.083976426 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.0834672 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.083892767 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.083227934 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.082781531 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.08302629 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.083004722 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.083042403 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.082786738 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.083139335 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.083451365 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.082738458 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.083553183 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.083144635 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.082664011 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.082400693 seconds)
  done (took 18.403095031 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.082935347 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.083694107 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.083236255 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.083142185 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.083148414 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.082732361 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.083593355 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.09163344 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.083161397 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.082149854 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.082687265 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.084204426 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.083435784 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.083233525 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.084110586 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.083139721 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.084305106 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.082679268 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.083983837 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.083517341 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.08239223 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.082585441 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.083523812 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.085903058 seconds)
  done (took 27.079607186 seconds)
done (took 60.311265435 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.700785614 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.894180314 seconds)
  done (took 6.664583641 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.084881067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.08338097 seconds)
  done (took 3.305383279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.084002302 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.083218016 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.082963549 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.084238251 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.082256623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.084247381 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.082733496 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.082712524 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.082030903 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.082506649 seconds)
  done (took 11.901583307 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.084076727 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.08254255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.083125314 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.081953819 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.083317459 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.082941655 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.082410475 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.08387734 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.083296156 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.082854352 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.082234139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.287470049 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.084247038 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.309710966 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.082533383 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.082786286 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.083154569 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.083300171 seconds)
  done (took 20.996615203 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.082796476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.083559596 seconds)
  done (took 3.236070652 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.082527715 seconds)
    (2/7) benchmarking "second"...
    done (took 1.083452404 seconds)
    (3/7) benchmarking "month"...
    done (took 1.083213342 seconds)
    (4/7) benchmarking "year"...
    done (took 1.083818624 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.083030959 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.083563679 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.083139916 seconds)
  done (took 8.652901552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.529193185 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.247518515 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.2961651 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.543748215 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.708887145 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.029387772 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.711438852 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.030058855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.847362719 seconds)
  done (took 16.013395453 seconds)
done (took 71.839804959 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.841337351 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.075735109 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.572276636 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.166196193 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.087215491 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.412207246 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.074446781 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.629984596 seconds)
done (took 36.935719338 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.180414023 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.071269895 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.107552354 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.108697451 seconds)
  done (took 19.359050618 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.070955761 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.637824832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.112679647 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.481467415 seconds)
  done (took 19.453091154 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.49109465 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593479723 seconds)
  done (took 4.173835804 seconds)
done (took 50.23822526 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.082660504 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.083112056 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.082984671 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.08281049 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.083180015 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.082606515 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.082671068 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.082312278 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.082089652 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.082578934 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.08258311 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.082692621 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.082652463 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.082761639 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.083794169 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.083149082 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.082169693 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.08262152 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.08288661 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.082897186 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.082757025 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.082185432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.082840961 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.082769812 seconds)
  done (took 27.056598955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.151018053 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.140185967 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.154404757 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.14534487 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.18097687 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.14548405 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.14687156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.121892651 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.151713674 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.13385053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.124984156 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.175635817 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.119791266 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.179090998 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.119919856 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.178670593 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.154427835 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122704043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118881139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.180870964 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.145999207 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.122157256 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.174846145 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.120352531 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.172730625 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.121661542 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.134154093 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.140430507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.116063617 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.172450924 seconds)
  done (took 35.438298726 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.11637671 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.082316236 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.082473926 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.169848234 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.082706806 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.082332029 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.083325585 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.082450442 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.082802169 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.082297978 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.082893355 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.082639502 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.082695429 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.082399076 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.082852608 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.082902421 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.113311382 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.262693615 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.082754542 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.082518874 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.131485385 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.082784641 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.082614837 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.08253699 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.082677357 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.082482821 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.082445907 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.082876428 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.082878683 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.082327237 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.082996931 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.128094768 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.116264149 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.082357248 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.206193654 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.140470801 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.082396309 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.114224407 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.082096789 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.082830398 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.082447079 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.082920546 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.082913253 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.083000226 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.147333891 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.082999266 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.082954793 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.083472883 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.082862301 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.082540742 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.082651772 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.083432466 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.097876028 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.082476362 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.083037682 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.083028858 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.082289377 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.082460531 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.082597539 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.082935062 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.082246481 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.154321427 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.082935044 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.082814395 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.460324732 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.082715755 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.150141684 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.082941907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.08322725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.301206708 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.082778876 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293955089 seconds)
  done (took 80.726189548 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.083380222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.083192295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.163120106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.161951393 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.083195766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.082619001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.083178987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.083251967 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749803321 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.082244756 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.083008443 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.083213296 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752379521 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.08291947 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.082880932 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.160543589 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.083353669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.083564808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.082864871 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.083244664 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.08275096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.083365951 seconds)
  done (took 26.472000436 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116849764 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.098384568 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.125318297 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.083451702 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.083370555 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.082784103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.121978647 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.097742027 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122688849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.122619461 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.123932932 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11659724 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.083207991 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126620627 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.119759762 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.098230916 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.12371664 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.098182701 seconds)
  done (took 21.016413515 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.260333516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.248540485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.166490473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.126425332 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.345258813 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317844165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188144293 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258458267 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.125079179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.249531391 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.258115385 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.126121507 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.317386316 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.127346659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.125036994 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.345389417 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.166822269 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128171831 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194242354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187848597 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26065859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194443105 seconds)
  done (took 27.788397347 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.119431808 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.142929492 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.160691487 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.165804019 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.083300262 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.083201287 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.142787345 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.119936248 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.098572141 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.125037886 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.119708834 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.082964251 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.098370884 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.137080129 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.173018278 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.128134695 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.142759439 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.137744188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.125173624 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.083041259 seconds)
  done (took 23.540937979 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.083161357 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.083340472 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.082827706 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.082944855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.083511633 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.083233859 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.083450414 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.083067875 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.083904729 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.337818012 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.083639763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.083327247 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.08341251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.083617884 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.083504252 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.083192051 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.083580466 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.08331346 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.083315156 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.083314456 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337845282 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.083397315 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.083847711 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.083147678 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.08311776 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.08386351 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.083374198 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.08284157 seconds)
  done (took 31.914669214 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143816432 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.082971968 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.083377764 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.083255084 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.083560726 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.158222301 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.083537998 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.084101888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.083251152 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.083668244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.082950445 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.082940062 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.082619243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.143579771 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.082931418 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.082877617 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.174114345 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.084020442 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152364386 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.071627022 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.083329546 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.172840155 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.082904885 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.083586132 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.071614392 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.083591754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.084751281 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.083708703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.082921989 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.08344608 seconds)
  done (took 51.993531799 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.105267857 seconds)
    (2/2) benchmarking "in"...
    done (took 1.105018248 seconds)
  done (took 3.281187522 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.083546646 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18386224 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.083457554 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282440336 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25067648 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.25874625 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248623746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179530041 seconds)
  done (took 10.641674544 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.083941235 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.218671952 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.226487515 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.084958057 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.084934876 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.401420467 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.122288431 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.849538503 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.75050622 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.067024948 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.17870688 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.661533821 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.056885619 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.358977749 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.201202485 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.89146416 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.242480519 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.467948144 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.019997693 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.198942135 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.694162571 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166093832 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.084533775 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.084274807 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.083532779 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.00963242 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.940733711 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.539891355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.148539524 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.199808411 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.725740265 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.142321562 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.085149105 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.364311177 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.191710063 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.084678057 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.158794936 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.182377242 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.085686488 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.084568791 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.747752297 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.577475852 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.294670216 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.224193865 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.161201186 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.085050931 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.084122884 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.084141786 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.325425687 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.750018046 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.05958976 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.012506986 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223622648 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.08461533 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.516149119 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.219699904 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.084437713 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.010954351 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.501954718 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.209075635 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.473415613 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.182930752 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.026467213 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.203629397 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.084891034 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.301904283 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.90187446 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.757610068 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.720115702 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.188911948 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.461304397 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247609697 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.084962935 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.083541097 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.997728415 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.392947347 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.09123673 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.084963764 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.083673668 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.084212685 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.275701192 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.194586548 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87243248 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.225004155 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.29091954 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.452953099 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.203601295 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.085420353 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.66909953 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.94252434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.182280551 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.635202286 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.242304541 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.224195699 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.00259303 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.317689371 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.121106245 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.085875686 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.894347013 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.538310584 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233698805 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.085414869 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.448848962 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.119224776 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.092930274 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.084756328 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.68623014 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.203172475 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.207538615 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.114822858 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.085065325 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.08431309 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.70511229 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.188008101 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.093791467 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.599624826 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.062974198 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.469214609 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.432039682 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.245916591 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.347357362 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.886270572 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.335570513 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.901762178 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.09318425 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.367174351 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.115868861 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.681069427 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.25629059 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.201809695 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.777145937 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.113436723 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.084476577 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.098645562 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.138816286 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.085162931 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.084043613 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.084742868 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.084754329 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.085060057 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.185791911 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.396046406 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.624692835 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.218500212 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.288856697 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.209883245 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.779212785 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.177893934 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.742241832 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.224910799 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.085917471 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.580047279 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.390728393 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.695954929 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.204684449 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.086178226 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.085043913 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.88663625 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.011582439 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.174283629 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.08480336 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.717502534 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.190045058 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.093867371 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.084993488 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.582292793 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225403859 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.085797053 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.130682566 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.77199512 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.681204769 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224342078 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.361809039 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.204297098 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.085039893 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.085220716 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.084857121 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.840802218 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.757631805 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.093323886 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.727227064 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.723193839 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.155067989 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.152086906 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.168633047 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.294755584 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.266957943 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.226562634 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.085334613 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.084400847 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.085384794 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.610217036 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.891933815 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.849689098 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.992550134 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.101541301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.062678021 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.177627613 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.863579222 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.099497929 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.703647549 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.970096219 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.179181972 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.086886261 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.085265894 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.207622045 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.228906668 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226939902 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.425769184 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234213137 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.085485636 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.665207522 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.205111263 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.678433062 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.183259419 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.868039002 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.10450816 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.204228109 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.138790334 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.554702627 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.181323347 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.086574296 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.614251683 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.199470305 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.085459029 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.051205833 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.526120545 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.991832361 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.795614529 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.565856489 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.140624634 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.684953731 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.300331007 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.227577692 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.833141621 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.177861128 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.358598542 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.139376719 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.339257112 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.239984065 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.814373455 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.099793366 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.578618085 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.221992556 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.995180639 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.200625711 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.445555151 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.195284487 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.086118567 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.170089202 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.171271811 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.667704379 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.204917578 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.18592617 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.338372452 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.871354633 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.177403973 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.358693562 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.139144458 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.934563732 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.060594215 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.401439592 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.918876518 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.093588271 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.177994882 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.791894319 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.212649765 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.35348219 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.223872912 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.08645998 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.086442812 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.20904221 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.163122227 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.086335884 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.340190312 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.014249079 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.145029946 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.179570413 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.095690007 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.086581633 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.255815161 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.136011743 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.225682136 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.480736224 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.6843054 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.81337895 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.20470218 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.568407779 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.184153311 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.784212963 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.186289518 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.095471901 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.679210158 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.205161251 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.333848637 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.222341829 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.166385035 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.594308795 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.267589422 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.328126984 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.138204972 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.200185063 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.780880141 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.668693807 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.301263329 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.401116877 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.105508147 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.663773536 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.057261982 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.671266097 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.082296039 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.798384804 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.093872541 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.130455459 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.086618807 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.086069304 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.610970864 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.05740684 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.095536119 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.834366546 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.628424343 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.171046513 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.842411517 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.190244522 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.0949974 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.087589031 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.086708984 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.009523467 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.08356026 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.285013586 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.201032144 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.086011972 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.085415606 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.009114168 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.286710056 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.792690578 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.894728932 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.008826044 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.22452209 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.087121281 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.086368082 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.086103207 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.086667891 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.086696745 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.086207851 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.431219639 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.242369069 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.714991419 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.192732802 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.095817174 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.203571085 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.138561355 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.08682655 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.175772643 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.146532554 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.1776059 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.154988534 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.086164313 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.532843125 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.226785501 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.072876438 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.280233728 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.26973966 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.284428687 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.508200379 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.107410011 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.548755475 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.415035579 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.860730515 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.096873697 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.009706394 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.180680862 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.757770303 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.061813981 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.465300855 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.720297288 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.079111834 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.292357685 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.947796136 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.497123776 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.144707949 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.142982699 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.086811669 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.08565894 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.090834542 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.300047681 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.131701805 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.276139816 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.236427898 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.086357013 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.319219937 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.173345081 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.242385332 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.102062036 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.104571871 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.086954532 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.086600577 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.440646574 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.82423442 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.152944328 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.087341318 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.006955506 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.889115509 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.945215346 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.766594061 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.003074631 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22368016 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.087579871 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.273696099 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.138531711 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.649225195 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247027967 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839043603 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.396935036 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.133152468 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.157966536 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.487639913 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.712955825 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.399713619 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.194099829 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.087092807 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.363795686 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.029208172 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.229983439 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.007661006 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.34623128 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.659987283 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.556283343 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.273684355 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.193521627 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.003698801 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.671130629 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.079504822 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.096643286 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.901406455 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.230305033 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.301242367 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.964762856 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.306729644 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228741844 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.743693671 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.773545186 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.226812144 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.655721464 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.227932603 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.087513665 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.601618369 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.14215888 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.176011252 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.199365185 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.087351809 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.105181053 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.683773382 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.702570339 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.201979643 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.153538648 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.087976009 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.611629761 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.951803459 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.18941965 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.096409351 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.087452774 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.416566573 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.106011409 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.087473934 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.529971716 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.726364443 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.228222658 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.61390105 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.162523224 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229443679 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.284865992 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.384312006 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.24589001 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.149066866 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.088244827 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.086374718 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.088068647 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.482084529 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.23797343 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.087711593 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.665794767 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.228317868 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.827990227 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.032136627 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.244797512 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.146098681 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.54444143 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.228039194 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.6067299 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.978253271 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.179620081 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.387531494 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.150111373 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.118442311 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.751522823 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.184106792 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.097373877 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.012000081 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.34104014 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.399422562 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.47114298 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.388574461 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.242967067 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.7554798 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.240034599 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.690757417 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29575291 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.153842599 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.690741829 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.18843101 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.52937922 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.278039567 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.497261987 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.245146967 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.480593804 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.329537538 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.226141526 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.166252183 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.17289931 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.154831915 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.131479037 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.676623323 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.014774228 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.480934377 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.226352392 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.982627532 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.561857122 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.669371854 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.451680091 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.269168992 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.502223225 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259060689 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.177371653 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.498401101 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.16288133 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.239860733 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.194193226 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.778730259 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257160927 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.236523562 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.527349589 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.248160292 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.093404706 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.092191798 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.029006729 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.80284496 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.199060411 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.223576049 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.189783354 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.127000849 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.66818489 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.369946462 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.145819465 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.100566465 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.099863017 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.876096778 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204631909 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.108482102 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.409364188 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.245833001 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.356205341 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.892679061 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.513907396 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.225503038 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.109950296 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.109099775 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.804557255 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.445189582 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271906376 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.465846954 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.152945109 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.643744419 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.089015858 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.48602929 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.660842451 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.002503974 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241583413 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159666269 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.205824915 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.857756537 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.178324973 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.922125461 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.494330366 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.225518072 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.824098573 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.031474306 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206649562 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.181415762 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195871274 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.153040369 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.11331451 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.116526084 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.674627072 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.096760955 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.155040034 seconds)
  done (took 1406.127150706 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418828898 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104039745 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.1068405 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.121420855 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148553925 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.124417037 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.10929022 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.118649544 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.114316498 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.094516719 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.139958371 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.150153003 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.113763713 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.444671396 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.159886928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.13936632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111660062 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.140203628 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.126417636 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.110819429 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.133252636 seconds)
  done (took 25.369122617 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.16737624 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.151986255 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.134581545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.162689455 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154267289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.134127726 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.115961627 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.111182526 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.13998728 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104649002 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.119334374 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.111421922 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.125510849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.138100657 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.114802602 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.134558638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.093014739 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.122342131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.137615697 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.156474565 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157255456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.146579982 seconds)
  done (took 26.091290493 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.102155699 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.122942404 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.732807408 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.22575106 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.096424113 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.128961881 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.113079779 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.29822252 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.087247598 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.037147737 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.585964195 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.199864389 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.139510796 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.272456807 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.208304038 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.153896663 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.260324094 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.155191683 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.152580949 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.137366652 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.144774549 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.270234043 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.2683558 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.11268147 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.907718789 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248721163 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.12708592 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.111821024 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.164482633 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.093515674 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.243878583 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.160334458 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.893272904 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.77226784 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.424105719 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.012171725 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.209233811 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.125343507 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.148037861 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.142039897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.376696111 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.877211254 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.141083081 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.103053546 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.334821251 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.218896189 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.151541362 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.510467502 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.185497758 seconds)
  done (took 88.81902617 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.163770823 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.303580481 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.185902446 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.166873572 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.24087869 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.12918004 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.167049792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.12207644 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.155877153 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.115487823 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.275916727 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271050935 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.148652157 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.123370332 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.19867717 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.133712456 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.154750613 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.134847571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.147609059 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.122863113 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.124659292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.18213823 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.249212744 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.302493276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.128794774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.12060677 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.141037431 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.133222863 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.330021292 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.15639969 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.130522519 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.137614878 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283614141 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265263054 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.143076094 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.094992878 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266583537 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.140919965 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.139300732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.128316301 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.120594255 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.098297551 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.215074913 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.272153601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.11587369 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.214696096 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.141650724 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.103354147 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.261066923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.118511098 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.153763914 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.293720545 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.130704114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.13430217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.122005267 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.241174347 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.125125904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.128488042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.137137837 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29740838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.150076906 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.122231835 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.2852375 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.139674478 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.118265541 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283123807 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.217674312 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.155212048 seconds)
  done (took 81.064803182 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.150617793 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.096828613 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144051723 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.118305555 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.119243755 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.132917618 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.113418112 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.111122868 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.15421811 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.162149353 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.129821706 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.168728582 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.117617865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.151129061 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.113484846 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.100586436 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.138606337 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.13597167 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.139928231 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.171971282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.139443339 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.135698864 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.112907296 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.131474797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.464584309 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.112852791 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.133620128 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.128934056 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.103375486 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.134993758 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.503986228 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.126753474 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.152522148 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.118242529 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.487528712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.127543109 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.164454937 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.118928271 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.09663729 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.114363991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.12721939 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.117758968 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.10175817 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.131290603 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.120617107 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.111019145 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.098440568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.529242726 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.115609284 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.155461072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.163989562 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173525592 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.112221356 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.163997132 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.125602647 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.228144116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.10499598 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.11136218 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.13640435 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.10891289 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14153391 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.204949482 seconds)
  done (took 72.816888934 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.100902094 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123672273 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.135893462 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.129631446 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152773704 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.141879026 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.107159093 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.120446487 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.127201008 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.131268476 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.132068961 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13155185 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.13176754 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.106530704 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.122921136 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130568592 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.121782423 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152423609 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142966697 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.155219992 seconds)
  done (took 23.730534336 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.116936237 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.147617664 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.136676123 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.122128872 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.118413059 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.114830555 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.10338635 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.121096029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.118664471 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.117168968 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.110409269 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.130409447 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137080993 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.14892975 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.132631345 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.130063649 seconds)
  done (took 19.139577877 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.139962927 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.124450723 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.165347511 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.131069292 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.112927718 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.13422567 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.139488429 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.137779516 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.144280202 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.628464161 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.215800444 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.182525995 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.133949022 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.129049545 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.124518705 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.134316322 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.169244114 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.166071472 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.224061111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.148125931 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.706634546 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.188190906 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.161132778 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.106383336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.096121145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.676852999 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.12615595 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.09816809 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.139399863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.134764431 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.102970159 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.578189585 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.143574489 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.101566741 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.103185704 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.129609778 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.101260155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.105372392 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.152036225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.107484491 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.096245687 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.094510718 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.132748607 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.163485666 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.157666268 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.137231975 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.136104128 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.585220945 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.113626518 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.103745823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.106667307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.104759852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.101767522 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.578457422 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.106554013 seconds)
  done (took 66.384342041 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142669145 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.158269482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.104204977 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.100941568 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.159407099 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.142468359 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.147896351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.118831135 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147934383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.103377479 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.16588233 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.12271627 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.139752054 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.160561046 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.161684056 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.143535645 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.109402745 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.193285331 seconds)
  done (took 21.616767948 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.119267812 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.10340836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.101395696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.101940886 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.102116969 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.105823192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.10744242 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.106189538 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104898566 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.16845669 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169540529 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.172731954 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.183407562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.140558569 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.170242937 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149567996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.154231744 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175180381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.173588235 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168334469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.101239056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.097198035 seconds)
  done (took 26.099786467 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.140786053 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.17716884 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.1521821 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.183169548 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.118005986 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.159231361 seconds)
  done (took 8.012649846 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.180377797 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1267562 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.15722081 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18370048 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.124989651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.1318415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.124348046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143836136 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101914187 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409813177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.093900359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.089084642 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.088606366 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.089489747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.092039562 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179041094 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.147863935 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.148474165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192331624 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23171876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.148198894 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147123046 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148014224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.150658889 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.146182902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.090227808 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.0917339 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397736604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102320451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.09844792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101365309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107071052 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.107734519 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401979797 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.151842302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.092877982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.093881967 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180594761 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088918689 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088772769 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.131102895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.087763936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.08850612 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.094026674 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.088195474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.08881925 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.088815107 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.089336082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088629864 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402666915 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.088187024 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.088555883 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089721098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.08908904 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.088398439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393695262 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3976643 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.088840536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.088428592 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39438963 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.089397197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.08830199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.089611653 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396517483 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089441443 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.088562855 seconds)
  done (took 77.001902484 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.090880829 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.126035941 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089978475 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401499368 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.089805916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.08928496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.090540754 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.089680558 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.090047714 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.144043781 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175075418 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.089531523 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089104384 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.089244359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.089485217 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.089952012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089575038 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.089190468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.143209541 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396073159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.089297338 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088667476 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089303929 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088966201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392040538 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088855152 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.089836658 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.088818302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.093429351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.091167349 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.08908484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088680286 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.08870572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.125399274 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089554757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088661404 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.088564749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.088858552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.089326871 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.088314138 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.089250893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175228299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.090017865 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.088450174 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39312892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089320272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091627795 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.148885819 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.09068235 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.143906171 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392832735 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392370482 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399807136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.090505137 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.089590781 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091288287 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.09325265 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.090913319 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.090124186 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.08856464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.089909192 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.090140876 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400074915 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089395132 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.089016074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.089332489 seconds)
  done (took 75.913899304 seconds)
done (took 2359.128643275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.192530676 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.248989119 seconds)
  done (took 13.517695292 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.122572922 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.090853034 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.244216791 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.08912289 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.086392288 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.212946154 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.124431546 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.099095776 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.089008106 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.173481457 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.091262608 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.224209952 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.191927332 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.089607142 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.128862662 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.100301376 seconds)
  done (took 39.256153256 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.080949489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.433811011 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.056505954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.773507904 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.095763789 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.943978576 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.355382378 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.265444203 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.473750538 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.545726393 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.354704016 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.686948037 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.805627981 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.140367471 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.780182268 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.635375845 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.730778563 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.792775493 seconds)
  done (took 59.029199742 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.085549686 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.248175525 seconds)
  done (took 8.440689265 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.085175703 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.110546117 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.09934124 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.108184002 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.121299056 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.124625161 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.090661207 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.124122676 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.137914603 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.112026639 seconds)
  done (took 62.209247313 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.081719974 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.750051312 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.503511778 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.570542898 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.596089961 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.536058575 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.24684895 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.526794105 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.190431337 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.076973861 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.881205884 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.682482067 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.815599703 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.029287646 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.626447108 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.518559505 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.704613419 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.546395774 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.418188785 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.5238996 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.230132974 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.916194924 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.424946609 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.019389058 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.104979294 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.157417088 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.211681622 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.1951373 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.160520612 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.961878775 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.868932026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.222459018 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 4.946409608 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.194562065 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.312229002 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.611978151 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.749416969 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.300930988 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.412982594 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.407824567 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460452714 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.317987369 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.255433164 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.327582134 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.353944453 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.291078656 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.133003564 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.349956862 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.179252241 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.203964631 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.784382251 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.279265711 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.231075158 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.199106656 seconds)
  done (took 149.701503904 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.07702086 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.477199532 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.254964321 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.078384047 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.512250918 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.298653122 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.620826845 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.654009243 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.108270401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.289106009 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.258792672 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.213311343 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.079774121 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.081563829 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.08123875 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.080009456 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.268018044 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.677261673 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.097166601 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.079398972 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.285686425 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.319216478 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.212267819 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.080791423 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.251312449 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.330445664 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.487622622 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.213886027 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.475170994 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.078116882 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.522935704 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.098086636 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.079008608 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.973436786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.473705023 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.431733863 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.513866077 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.089450842 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.824847431 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.080296263 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.761961484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.284814957 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.418228177 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.229576175 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.239527081 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.318403453 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.696390588 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.078009301 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.854458432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.25397792 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.305635735 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.297419348 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.360847674 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.085746918 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.619867339 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.079545387 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.078823477 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.370069833 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.232108578 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.214507519 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.081648 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.078273228 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.079142985 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.326944691 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.080536342 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.198251752 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.080620429 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.079299783 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.200494654 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.21307092 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.230605349 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.328530368 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.333048984 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.034149589 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.431669465 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.317308262 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.497174171 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.349706022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.080893221 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.07890382 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.527864932 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.539106559 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.243016634 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.328930512 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.3944911 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.373374259 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.616687291 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.077135839 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.299283675 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.243602535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.431172744 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.236286549 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.451324762 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.979202762 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.078407854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.077883992 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.026977178 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.218832246 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.081700819 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590721009 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.357399517 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.698903079 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.258645078 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.543680614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.190624401 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.081602393 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.648593742 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.079952637 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.307578948 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.374728229 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.087815017 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.07856655 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.235347203 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.059354436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.078938653 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.139553014 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.49781651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.095181053 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.239067835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.080609734 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341203382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.913657073 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.315914494 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.080810014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357375683 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.270319433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.236090595 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.081813938 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.428315406 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.353031711 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.486769328 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.312993118 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 5.792311006 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.080101815 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.390505271 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.081019336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.078959234 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.260776458 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.778488652 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.257376729 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.081117217 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.448053659 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.249570946 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.461821119 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.079847889 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.3288792 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.334619149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.491018622 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.089382488 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.219090524 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.078424899 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.04589508 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.250190117 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.079551005 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.079809887 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.949587633 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.080810651 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.231928874 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.315991527 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780469058 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.500787368 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.428578411 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.078122091 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.538740832 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.293411012 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.55339003 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.600109551 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.25704394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.081953292 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.078596532 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.078354198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.325558419 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.26987754 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.081272597 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.081847009 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.808240479 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.018216903 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.07870877 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.272491005 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.750124854 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.330546888 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.293766924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.082023842 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.444194055 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.079609931 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.28996524 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.58696039 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.102948336 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.078720582 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.078696517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.078085098 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.082050538 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.297910309 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.336153521 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.639259586 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.248962122 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.410065768 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.312872332 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.404517748 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.56279442 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.137760434 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.37457641 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.113332234 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.529357659 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.090844394 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.436479588 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.519156918 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289613971 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.487129986 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.460615601 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.176583788 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.486464064 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.085267953 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.091184204 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.163017361 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.316260259 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618640684 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.148254327 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.315654115 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.458042763 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.211344929 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.286152014 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.317873747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.102664391 seconds)
  done (took 722.730250846 seconds)
done (took 1055.960672504 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.080630533 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.092688416 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.093602593 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.120124241 seconds)
  done (took 25.467204819 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.951148896 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.956425388 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.22319724 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.129309384 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.438256218 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.14516157 seconds)
  done (took 10.985925144 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.595622149 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.135329134 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.118802635 seconds)
  done (took 17.938327765 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.468792991 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.694873635 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.360438657 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.344524837 seconds)
  done (took 7.013585445 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.203308817 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.214348897 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.199552541 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.193618911 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.171510323 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.170917789 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.143848799 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.145198134 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.171186555 seconds)
  done (took 11.824163343 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.750377268 seconds)
done (took 79.068238014 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.512398551 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.408518188 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.101916619 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.407361011 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.239885281 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.420322301 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.213198991 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.129208617 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.438571939 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.528491468 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.602143275 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.383491583 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.72044007 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.597102376 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.330264858 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.139676703 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.109225541 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.165485768 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.887339865 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.3311138 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.127473475 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.323788017 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.846520091 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.177446017 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.120881222 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.313477999 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.439220144 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.419433111 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.228897092 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.233590794 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.317107048 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.823177677 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.510947314 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.586040499 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.389433359 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.227535383 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.816104545 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.314677864 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.590260316 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.679952648 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.572242186 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.398364172 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.408688614 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.375352731 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.565224528 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.230478668 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.221875327 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.367344248 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.89438067 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.353019887 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.503415189 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.195973182 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.808821622 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.30615439 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.265880152 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.147001823 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.282735393 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.624212503 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.341273706 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.527189604 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.277804915 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.25516937 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.205016588 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.167963305 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.83281287 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.479360939 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.566654159 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.284632554 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.798618808 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.16227744 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.139586956 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.153109426 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.923336042 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.257632071 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.117753734 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.263299259 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.413197152 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.285574937 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.227260333 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.437747614 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.348664981 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.22775142 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.250473234 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.46710752 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.281206626 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.537797539 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.618211844 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.630666419 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.815851419 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.199385143 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 9.536122617 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.218957614 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.233336323 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.153103792 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.261605575 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.875159282 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.975803788 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.617682868 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.258465802 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.83776175 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.150775326 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.126016243 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.665999915 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.468363758 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.014941859 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.157578367 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.253909823 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.110832017 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.403770212 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.121333973 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.19380563 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.722572473 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.111465886 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.291051452 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.725797043 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.14371054 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.521541927 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.660680539 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.281906787 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.1834743 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.512758257 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.170953779 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.278087743 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.719589817 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.512845066 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.390436934 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.122704815 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.032030356 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.107850609 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.317317093 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.109068023 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.768147608 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.756835372 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.159424113 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.363988559 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.232415104 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.10025722 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.42169111 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.215083089 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.262052563 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.469924034 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.425880626 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.250677032 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.121319677 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.432201992 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.10085526 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.337528034 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.42765416 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.270359832 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.413217308 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.19488299 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.116708468 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.264790197 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.545081288 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.679567996 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.832949638 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.364863069 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.228437597 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.635552836 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.392798619 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.94287855 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.210039033 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.163210715 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.108766128 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.11383162 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.157970462 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.082403451 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.090856064 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.441725842 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.493604826 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.748682746 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.968229733 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.09672773 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.388628147 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.24391025 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.047241467 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.75438482 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.09437304 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.451649527 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.57777883 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.250284367 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.120451268 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.081811704 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.142135762 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.843449349 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.131607739 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.429109638 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.75786273 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.572229852 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.441834257 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.344244701 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.131634638 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.468030134 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.347255209 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.372530686 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.321730562 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.733982126 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.211544998 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.518972622 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.252646494 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.373222543 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.091445897 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.764473574 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.351862782 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.567047785 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.416353978 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.325632016 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.319524604 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.427761778 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.091853804 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.091636225 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.279421895 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.436511715 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.12157877 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.078660388 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 8.273896263 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.880103595 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.080057396 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.218150763 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.560014005 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.211848974 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.236569489 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.558751655 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.108487946 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.383023447 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.313823216 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.3071684 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.29263522 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.125247215 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.233314119 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.262558642 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.229832281 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.345551827 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.214914399 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.522741599 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.112040142 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.427186325 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.08175356 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.0854197 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.12507796 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.104077633 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.424703249 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.288276003 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.3928477 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.315701302 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.25287517 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.078568655 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.261935279 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.582025888 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.990411036 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.658250656 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.11907517 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.123689005 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.080780513 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.507553878 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.522095449 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.155276 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.228802909 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.748718217 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.131779767 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.259587787 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.094890414 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.094642679 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.964011523 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.221543558 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.33403041 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.710664528 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.115960266 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.962111087 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.203909943 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.623257135 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.644368303 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.143367481 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.212851819 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.540175933 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.251821254 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.471219747 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.120953385 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.244774247 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.42167644 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.209840642 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.205906458 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.08317582 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.132340988 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.785598786 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.48928444 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.630898905 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.129142079 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.549687222 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.359871491 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.314733304 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.111444904 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.173483152 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.496395999 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.21777298 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.434226786 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.094364129 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.245516755 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.341819346 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.118103514 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.117821211 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.228319513 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.113975833 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.153886827 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 3.696602686 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.339429041 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.109194511 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.326749197 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.090031533 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.050345068 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.220829727 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.188035881 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.662707516 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.65559967 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.093673132 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.376493293 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.108948566 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.465868842 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.119440749 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.107907654 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.245289844 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.183310696 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.078723364 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.386401854 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.245171663 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.618237629 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.254953189 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.096699438 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.397656518 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.269118174 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.204218448 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.484605919 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.87871739 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.108672236 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.255613117 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.688895476 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.286453873 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.122275615 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.332502486 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.09294344 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.780511763 seconds)
  done (took 881.164507469 seconds)
done (took 882.37637236 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.128987971 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.460719728 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.286915018 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.050640937 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.89349298 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.729093512 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.306714415 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.320222467 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.163200142 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.306264935 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.986586653 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.89681543 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.18384932 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.203631334 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.175641121 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.211397631 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.294347379 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.326288114 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.203920261 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.182106361 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.451560309 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.182365721 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.511591352 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.382214798 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.460091171 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.191132493 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.151417937 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.440117897 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.439785047 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.274229759 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.293773446 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.285999675 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.930193861 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.311094369 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.176240637 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.17011365 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.959646342 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.184645919 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.113364536 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.169188195 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.461080763 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.213605997 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.797266399 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.007358766 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.865912995 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.502985749 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.969994467 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.189458416 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.212420749 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.263594909 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.116842257 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.112548501 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.440678971 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.296344015 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.918963845 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.003574411 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.439266291 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.959034999 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83130346 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.264309597 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.458447175 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.184909073 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.264158172 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.31761981 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.211159587 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.391309152 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.506037231 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.113225424 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.285823328 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.313519345 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.331677386 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.311569573 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.202268199 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.223981267 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.217582471 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.306734092 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.954963737 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.286909234 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.877250005 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.190568224 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.033991268 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.974928102 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.041413633 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.163052027 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.128584518 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.861519871 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.027181104 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.035785656 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.205796871 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.28601859 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.994204237 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.28755505 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.547624964 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.151880582 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.12935343 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.286020415 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.039077654 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.110820974 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.252015369 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.286023558 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873041608 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.151284152 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.102108199 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.176320631 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.189833853 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.1122996 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.151462195 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.503179273 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.312555177 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.240506706 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.461694708 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.217701161 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.310903795 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.203535407 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.161392518 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.861192865 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.379178441 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.960261819 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.111005142 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.766726714 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.384047574 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.177034057 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.461081305 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381304575 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.129588566 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.180441435 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.190769314 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.027337611 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.189582388 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.183947268 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.27957277 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.536198763 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.263638399 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.051964522 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.31239979 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.767048824 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.324813971 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.311665553 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.16250065 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.995800335 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.180373583 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.231753418 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.383173859 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.461729357 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.326628134 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.382595146 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.205625859 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.385937499 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.109854941 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.204428899 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.3117307 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.199330222 seconds)
done (took 239.089114208 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.433519765 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.255797058 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.347350396 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.30790281 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.447757308 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.364413994 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.158596392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.544263663 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.138728718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.50461262 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.287932346 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.986971326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.241340509 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.32396311 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430507129 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32462914 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.14061375 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.340552296 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.534966628 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.469172005 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.859176918 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.287079986 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.220587038 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.480664927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.079214819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.845700701 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.388596219 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.202580519 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.353555248 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.848494354 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.864102283 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.35192656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.388434746 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.85014175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.498096278 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.816039609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.39139753 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.875369568 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.338523141 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.420291157 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.294451901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.942036909 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.85346058 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.880236369 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.191448845 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371340101 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.158474961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.014996724 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.079443053 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.819350702 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.350863587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.90463848 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.982789563 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358343281 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.324414485 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.742070779 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.476639357 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.47695871 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.466917065 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.385257038 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.339451066 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.503468044 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.469131209 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.208265372 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.871819325 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379523949 seconds)
  done (took 144.870786265 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.5170695 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.399860557 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.493433117 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.349886373 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.642007521 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509298706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.463291008 seconds)
  done (took 13.454122579 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.149531998 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.135912567 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380808242 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38021294 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.142765514 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.260613323 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.224865352 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.872576983 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38620793 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.181279658 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.460524643 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381373398 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.77557964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.87491444 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.225358671 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.376839423 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.122276168 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.205378635 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.196799765 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396851916 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.873725475 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.85027033 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.289589584 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.119169501 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.142471142 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.180876342 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.137789528 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.108903791 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.134584504 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.118997426 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.148070939 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.249418169 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.136296233 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.857829962 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.121863442 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.463460349 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.141393483 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.138581443 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.269766318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.080884764 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.118229106 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.142047089 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.279012922 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.14688239 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.117224699 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.32512083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.124599993 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.148000551 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.120416149 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.136734642 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.329237259 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.134322562 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.121806065 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.793780338 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.345476544 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.851479014 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.203892115 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.132242754 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.134299114 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.194690277 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.138214373 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395603422 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355667103 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.124382937 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380403043 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.443072691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.136403399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.120964889 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.117332076 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.381255078 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.131094185 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333615034 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.141095086 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.186467125 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.141974985 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.263955486 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.325886418 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.933010198 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.905303432 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.786510756 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.459120909 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.123880385 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.4566634 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.070938667 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.783450934 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.121090027 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.140539014 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.806876562 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.045658488 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.13476028 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.447494156 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.118315918 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.193999783 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.186983972 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.118311999 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.196669151 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352751358 seconds)
  done (took 149.315912099 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.265097777 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.409791247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.297257333 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.061091025 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.136283264 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.371385808 seconds)
  done (took 14.620696148 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.554569939 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.890651297 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.155866676 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.155310603 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.191463794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.092273747 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.091443299 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.2785767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.306903495 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.149494082 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.092915711 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.09343501 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.092765274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.278440333 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.093792816 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.145990981 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.091821957 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.158870509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.142175359 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.20258329 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.440223091 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.192814295 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.201292977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.804855625 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.170767123 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.145464009 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850601853 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.141611822 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.141517683 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.447834166 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.325721895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.092752638 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.804934692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.224020794 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.808991333 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.803620624 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.303806653 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.095517019 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.138775097 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.092065301 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.09276862 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.202979995 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.155333058 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.092825466 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.455100824 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.748763156 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.173230821 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.40506925 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.092221527 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.093298166 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.093117148 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.162838948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.092549412 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.093255862 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.485075166 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.585509239 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.067384477 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.094135498 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.191328857 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.80807798 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.237875297 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.09501254 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.508782474 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.06167951 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.813064393 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.093725638 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.813209845 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.291448765 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.203796559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.153083727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.09299817 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.153374227 seconds)
  done (took 112.314233646 seconds)
done (took 435.654905561 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.262882093 seconds)
  done (took 7.341819806 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.248374517 seconds)
  done (took 7.473071692 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.079904461 seconds)
  done (took 7.171913304 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.09323249 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.108016086 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.102676911 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.111959898 seconds)
  done (took 25.537298012 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.565837243 seconds)
  done (took 7.647977996 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.079903592 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.102937736 seconds)
  done (took 13.349520605 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.124149866 seconds)
  done (took 7.227520971 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.347326625 seconds)
  done (took 7.442828121 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.095446481 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.091601021 seconds)
  done (took 13.30354608 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.084587602 seconds)
  done (took 7.165107574 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.309263642 seconds)
  done (took 8.458104754 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.090082169 seconds)
  done (took 7.200203838 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.08754174 seconds)
  done (took 7.168010593 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.246141811 seconds)
  done (took 7.326912426 seconds)
done (took 134.892939605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.080349377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.084117136 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.085194357 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.084879746 seconds)
  done (took 25.414331656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.416305171 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.417466879 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.394288096 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.468181235 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.360483903 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360274027 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.416147135 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415647006 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.360026678 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.470602119 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415682111 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.566798108 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.467716329 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.393776451 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.393750196 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.462020835 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.46934805 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.417055207 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360296517 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.394000782 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.460279428 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.46826789 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.834805222 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.826818022 seconds)
  done (took 36.093988785 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.300865023 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.537607555 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.24733058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416441149 seconds)
  done (took 6.581975308 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.126434129 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.466264339 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.449330644 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.508396815 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.448906209 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.264007767 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.449158282 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.301332571 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.270450869 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.272201907 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.714965365 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.243303399 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.256031224 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.507916356 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.262879786 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.092466032 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.092104937 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.230735796 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.466673173 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.307609243 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.353796464 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.449473103 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448743102 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.449394312 seconds)
  done (took 33.513930993 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.853656249 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.01925045 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.450643408 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.001732465 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.791037955 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.882553376 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.371788092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.591283248 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.358975038 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.334617349 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892767698 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.783550486 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.235395376 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.980447085 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.852950872 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.269588659 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.269568244 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.936960821 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.508813854 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.391599639 seconds)
  done (took 37.857415433 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.080783366 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.08118069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.31966258 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.256283448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.081070083 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.083612739 seconds)
  done (took 27.983094068 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.480830424 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.225877589 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384509959 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355523069 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.249703188 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.217888111 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.626787456 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.31539252 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.843866862 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.840153643 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.515516923 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.514756038 seconds)
  done (took 21.655541768 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.080377104 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.126049257 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.088508671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.319977119 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.128130423 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.754971638 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.098169088 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.080588994 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.611939815 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.346247194 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.224819718 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.318513268 seconds)
  done (took 43.27642696 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.296636553 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.257872989 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.392502121 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.125730319 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.490736902 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.130757484 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.449510168 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.049130136 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.810753843 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.817133902 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.469963329 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.097174411 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.616524098 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.055561861 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.082313133 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.381311085 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.901696933 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.578361892 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.39630064 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.125337942 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.050088385 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.22595167 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.083994658 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.515715874 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367896328 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.082554618 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.305905751 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.33054822 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.081076631 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.312691114 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.081914807 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.561310864 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.280867536 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.39316178 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.482867656 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.128105218 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.212326878 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.749556817 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.673996265 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.379318011 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.233081954 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.247245719 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.080842335 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.090160002 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342176377 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.899489288 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.08421877 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.744277018 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.06500169 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.201124552 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985479568 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.684110667 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.537004177 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.045066832 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.227565782 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.379383607 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.24941892 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.096593597 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.3333467 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.141649963 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.282107762 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.183985701 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.294978608 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.053849727 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.327573983 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.435214275 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.197849746 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.328414252 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.398546261 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.374592713 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.417680377 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.216378953 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.918283144 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.210274211 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.655869901 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.995528597 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.437942531 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.084404412 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.791315298 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.61906386 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.064427587 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.197760449 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.912562443 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.049841362 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.080829367 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.256131011 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.955752802 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.053340767 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.094915532 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.154681771 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.504438773 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.209668776 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.226875179 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.27683878 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.788695596 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.063153961 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.083219688 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.366819919 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.053852683 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.642366838 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.106812122 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.0616789 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.120120806 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.638090705 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.46172954 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.87610011 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.863089369 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.689903689 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.37783343 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.693053232 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.248745836 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.920847908 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.419455153 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411997484 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.081147084 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.778529695 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.134793521 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.129120087 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.446224096 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.081324727 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.053926468 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.506815191 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.281008833 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.112709219 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.312974196 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.083547168 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.236470404 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.081082437 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.660726204 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.051071818 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.328219801 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.542975395 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.17302599 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.231766692 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.051359265 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.230519 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.525693118 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.156247827 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.429616439 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.394496414 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.276270835 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.526769994 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.079324093 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.922020522 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.442228212 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.310366435 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.420952255 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.728076876 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.250314306 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.094186168 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.081195413 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.250239815 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.097717073 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.640408294 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.081445011 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.935857161 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.780816099 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.339102701 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.080846655 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.24556645 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.102985 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.280083766 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.658784695 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.103510218 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.253649808 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.355194252 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.258975219 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.081967594 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.051637526 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.351592708 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.328971195 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.53948022 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.322180472 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.661128177 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.386196196 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.578728405 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.304301619 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.419983896 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.871261389 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.50753163 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.328114003 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.78317222 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.095813495 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.108552406 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.16210383 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514194188 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.312576911 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.861974017 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.722264489 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.666075721 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.122084569 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.088148061 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.053989767 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.229966776 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.451758203 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.08761677 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.575443919 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.168151559 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.378594405 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.583699178 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.115159465 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.382744403 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.847102574 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.445838764 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.438761506 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.413335694 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.061838838 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.631858407 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.618162412 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.219267534 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.145496441 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.419116087 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.001276928 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.108258704 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.082634831 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.430000652 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.019413732 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.811940267 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.586179582 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.627235547 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.051042755 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.24770659 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.63613788 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.092793521 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.986755292 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.202199896 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.121671678 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.733472336 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.512240072 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.309824072 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411734125 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.081177393 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090478406 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.361661452 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.391341784 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.359718063 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.530670371 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.312713517 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.75065301 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.187781571 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.696841786 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.252225554 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.118794198 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.734260048 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.028604996 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944581436 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.273357497 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.812589079 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.22853078 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.972935536 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.36323314 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.082320237 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.442524232 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.662286518 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.084133427 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.01260398 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.208503376 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.083616797 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.290356322 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.980854851 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114480249 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.638479816 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.752734658 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.328550641 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.273467346 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.459914432 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.488129658 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.829632408 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.053616721 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.244102669 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.179920585 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.373350909 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.082292638 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.366646416 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.739049176 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.657504137 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.882454428 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.563236964 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.285475589 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.277734373 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.441931344 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.294617606 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.373397861 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 1.97166986 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742655136 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.072650304 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.223434633 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.053800453 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.825811813 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376629019 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.460704526 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.445924008 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.109231288 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.487073785 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.421245204 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.131215087 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.274036938 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.344226907 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.08178445 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.313544548 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.081301823 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.826318998 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.456608814 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.092138571 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.91587717 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.268721796 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.412715632 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.244506116 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.60102316 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095620468 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.20932324 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.520354789 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.262541055 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.222783389 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.42811266 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.860854134 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.095783184 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.149020948 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.652412376 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.719588282 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.442315548 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.660953936 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.567719413 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.443505404 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.860005805 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.083535194 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.305910163 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.242819218 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.081706029 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.241943387 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.457812175 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.109379788 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.297448027 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.392729419 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.302214245 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.630566643 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.063559489 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.767733628 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.280174121 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.609284973 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.632276249 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.867624242 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.494365621 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09581131 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.553574417 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.036642734 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.244781786 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.453653695 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.698556158 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.127740306 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.88999564 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.873074741 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.223942464 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.524690579 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.163396242 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.845512939 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249077566 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.321534932 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.305934443 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.221808803 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.052787626 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.746994445 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.867968407 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.360381734 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.248774579 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.273490601 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.210148979 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.259226213 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.654473807 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.396184538 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.859768576 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.443169098 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.285200603 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.055658453 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.083100153 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.782222174 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.439808213 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.096398611 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.375477793 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.40489904 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.112557848 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.09900993 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.146880783 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.410009834 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.842793325 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.807554389 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.321679439 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.48344678 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.658828919 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.113817159 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.860641914 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.306702518 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.439471498 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.465293168 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.909283949 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.517324306 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.373657616 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.239908114 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.05455844 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.275989308 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.087467372 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.202818735 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.031111945 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.389910133 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.169679949 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.233589031 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.691270888 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.08304702 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.141941325 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.796905218 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.359811275 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.281739868 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.08216854 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.74165423 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.45592745 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.234728225 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.068955566 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.84680819 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.053443823 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.305967817 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.082481157 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.297749932 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.916865799 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.178899178 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.76069032 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.518490046 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.127284641 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.313783442 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.054335981 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.836701455 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.076057041 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.683040476 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.883609325 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.332601082 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.605345658 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.273483542 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.086653685 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411798935 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.220314092 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.388290999 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.342884396 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.449370834 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.478054445 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.348375501 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351258279 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.605243147 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.237442438 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326919034 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.053602751 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.083048446 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.153785295 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.461284662 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.446142693 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.082224705 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.612024741 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338584256 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.226877464 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.263342528 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.206923016 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.653955501 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.293893795 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.230588423 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.256155087 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.112487168 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.406980479 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.083359897 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.350880155 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.121690191 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.104048324 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.307520988 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.332249053 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.464860533 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.392632407 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.686495756 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.247555682 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.623953459 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.783977143 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.616718773 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.084846355 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.667625094 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.618835415 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.083858745 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.448590435 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.690405507 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.274951777 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.360464723 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.396862227 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.10596976 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.310996741 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.603045276 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.088299884 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.68578523 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.459068777 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.083860194 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.445096086 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.127912354 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.245293453 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.865468311 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.584457464 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.082077796 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.630376454 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.425711607 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.642968557 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.360287917 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.096139171 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.186609538 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.656137208 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.063201067 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.084322324 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.209422134 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.618816799 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.092682505 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.570359721 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.220715443 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.255658612 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09063674 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.225179342 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.084410121 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.305560855 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.275924159 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.330584044 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.359052579 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.27327543 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.087317176 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.691881879 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.760150442 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.189273126 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.283963028 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.110706505 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.406467053 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.968785559 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.086278893 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.689173521 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.260817244 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.054442311 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478700932 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345033696 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.119223177 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.295812828 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.082879779 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443329833 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.243857934 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.58004086 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.327403624 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.565391884 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.23256046 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.105631004 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.618418406 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.445536848 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.924404059 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.08238402 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.395488474 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.082318841 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.630146304 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.79892319 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.247167315 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.233782372 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.814351978 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.863294988 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.071823075 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.133312604 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.083628446 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.298020175 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.594477533 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.052852139 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.624304011 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.160563324 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.30269113 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.414723662 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.054150064 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.27635662 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.104992793 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.066103111 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.585149515 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.083136295 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.435244059 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.055305846 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.658515349 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.098180599 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.195144995 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.254505039 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.403086274 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.083670677 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.06837163 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.258817356 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.083203335 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.082084851 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.423719469 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.23387957 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.335183815 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.445276459 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.28916608 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.435832513 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.99652095 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.625342174 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.285682212 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.393953531 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.082645495 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.637279507 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.18522661 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.606914025 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.628538614 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.287401492 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.619661379 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.333192369 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.825528787 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.231654599 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.577257838 seconds)
  done (took 1926.780330814 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.139388327 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.276129539 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.128759864 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.14623578 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.287177917 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.131153233 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.115082841 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.124349934 seconds)
  done (took 50.430795722 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.082752906 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.134426905 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.596842227 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.271329291 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.116164562 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.316459304 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.247108038 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.609314799 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.291221271 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.130251992 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.149277905 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.176434262 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.096253035 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.128525386 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.001468333 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.175475867 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.086875921 seconds)
  done (took 92.755935422 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.088803541 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.095901841 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.118053536 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.038377702 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.137555 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.518351124 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.103428371 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.086128663 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.466205751 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.376790931 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.098286615 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.180633908 seconds)
  done (took 80.435622039 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.123236048 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.121819447 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.121926176 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.12255649 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.121964443 seconds)
  done (took 6.693835714 seconds)
done (took 2390.571523712 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.313304171 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.572786896 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.655547739 seconds)
  done (took 4.309970106 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.155439613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.231966227 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.282464985 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.232856784 seconds)
  done (took 6.011309847 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.359264979 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.572880581 seconds)
  done (took 4.014377836 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.456461124 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.097174076 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.626785479 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.083423847 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.094641036 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.093589707 seconds)
  done (took 19.370196702 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.119298596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.113074708 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.11610986 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.112725242 seconds)
  done (took 5.551759673 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.0819642 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.114225389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.091405165 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.116347622 seconds)
  done (took 18.48559888 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.372465146 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.340269866 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.842717733 seconds)
  done (took 5.649898314 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.90649186 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.220219452 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.886195485 seconds)
  done (took 6.095134695 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.039813381 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.021703782 seconds)
  done (took 5.143488111 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.262246193 seconds)
  done (took 2.344436155 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.570760983 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.573988563 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.740519847 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.810354872 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.988419445 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.384293726 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.444899474 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.34552608 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.587931399 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.590724554 seconds)
  done (took 17.120354519 seconds)
done (took 105.671837197 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.026442906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.481185672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.248291328 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.266331757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.1852807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.248480707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.088318371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.065441382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.685080122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.684659309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.790592306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.184504953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.124058196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.466287304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.122610825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444615624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.490478385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.039585625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.161082881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.321390507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.1087917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375287842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.522172029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.391738259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.505530329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.228638394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.973982977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.459285741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.384377516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.988143562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.243729567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.552954531 seconds)
  done (took 150.942558133 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.082493522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.098602618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.098175059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.09376002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 4.944583215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.099156987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.09617401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.09333055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.016866807 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.01678501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.099074457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 4.972570971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.100511157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.093948573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.099338705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.093918175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.230360585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.09913787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.098530336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.098540386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.1006248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.743163317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.099508682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.753534329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.229054798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.09961785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.094251085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.097988653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.098629475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.098432387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.100150047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.094213619 seconds)
  done (took 187.334405017 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.082345573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.09687336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.096107619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.094167469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.097323686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.096845603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.094418342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.093495699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.097470013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.098129567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.098588784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.097654137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.096761241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.093911978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.09983816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.093327792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.09738016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.098702795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.094111239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.098138603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.098211645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.097104982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.094112375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.100213101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.094383949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.099639889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.094500806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.098937302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.096464333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.098515635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.099996375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.093517971 seconds)
  done (took 196.180977655 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.393226393 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.12532492 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.043851911 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.881620776 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.016148831 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.119666875 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.834724476 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.394027701 seconds)
  done (took 13.906673658 seconds)
done (took 549.46270665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.752597067 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.010750388 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.272340579 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.36796344 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.694478442 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399033089 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.366895012 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.565544419 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.815453165 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.524908746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.576960195 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.308725482 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.964862363 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.363873534 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.280615164 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.609580152 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.495595293 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.783519128 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.295446029 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.955949646 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.309110075 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.973922441 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.575190169 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.867040698 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.581941047 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.027047038 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.241247024 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.495850435 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.349843522 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.277578669 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.152528398 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.515794368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.32367036 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.320808123 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.613927594 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.596153485 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.477752791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.510345762 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.268977009 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.765888589 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.961994927 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.696591969 seconds)
  done (took 74.39226698 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.113700378 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.136819156 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.280347362 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.187608807 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.757493418 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.193710729 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.353873721 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.330325616 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.205365489 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.3183744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.368893404 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.787853856 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.358075701 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.758267219 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.350250473 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.373919938 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.193758574 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.724136249 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.34856854 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.325691838 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.160939326 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.279237366 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.159201314 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.303050238 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.15439194 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.167410747 seconds)
  done (took 35.804083191 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.164103257 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.301938369 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.35407141 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.182864742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.364806764 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.118441994 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.457440652 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.24190488 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.859204443 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.290219425 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.19990519 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.247910915 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.300849823 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.387467041 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.368492704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.231438939 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.281164963 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.284517755 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.309445999 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.217934533 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.194665683 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.202961801 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.463341989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.190115382 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.765169259 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.625298887 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.255191323 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.68546839 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.111738202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.36754306 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.262596674 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.442177724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.497545291 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.360933429 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.258078688 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.136936412 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.137426316 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.202851884 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.098021429 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.282117598 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.456094442 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.486669123 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.403110259 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.649218661 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.369122261 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.281872296 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.563996981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.214619649 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.254511423 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.915726997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.417565592 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.813029307 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.232322828 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.390191989 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.249888026 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444441828 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.305604815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.394789494 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.219250367 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.83356424 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.202040842 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.514487978 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.314258919 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.374705938 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.359620851 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.320590558 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.17384023 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.646455129 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.399427385 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.076809106 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.7768263 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.201525902 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.165128562 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.201137116 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.305873669 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.598974432 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.078406266 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.355924788 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.514854483 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.447373819 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.341774793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.695959741 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.118474724 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.657795427 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.150764428 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.123100808 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.204589545 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457339891 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.439812651 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.59734126 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.664147061 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.411184018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.551897207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.508932194 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.699903159 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.428673208 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.12477945 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.138823472 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.344187452 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.663408321 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.206264503 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.22188621 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.737098282 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.465578921 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.590829871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.272469245 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.473997478 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.373098505 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471401511 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.11681865 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.196135433 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.141085076 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.363316964 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.42907958 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.114190795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.632100689 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.219787321 seconds)
  done (took 233.063345835 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.083271379 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.099624357 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.086246202 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.099564457 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.084173989 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.623883481 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.139530702 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.084234622 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.633290723 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.139021407 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.084145192 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.085005664 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.086635712 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.092736584 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.232252935 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.270710811 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.815419658 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.086389563 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.08396454 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.095101963 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.790555352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.086503788 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.083188584 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.095801922 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.086772973 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.083165381 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.08961327 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.140492328 seconds)
  done (took 150.55048721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.143833864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.509169878 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.175653335 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.235650789 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.185872432 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.159266532 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.646784157 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.299591823 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.222203593 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.159360811 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.159253435 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.37263823 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.45470014 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.738168381 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.277571368 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.353593614 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.796907583 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.302720398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.160928416 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.153224868 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.3063587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.508753255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.406249192 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.405206296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.295034156 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.426498062 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.228570451 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.15046906 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.262722226 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.632087209 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.168569401 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.504107081 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.305180662 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.163024883 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.649041109 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.499940768 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.722354708 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.78459584 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.343625067 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.111547224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.114716824 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.387931339 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.458001498 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.201411457 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.146186409 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.788649151 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.168567136 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.406799299 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.170684527 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.111071845 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.256661023 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.270179232 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.390483933 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.152463812 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.343672119 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.299905768 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.735326604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.133569847 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.217302896 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.45057416 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.128812648 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.635650424 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.103002487 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.212725582 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.156481856 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.002120731 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.232604405 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.663233296 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.758995337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.196849892 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.498152193 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.349651808 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.12811189 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.407422412 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.336042277 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.576793863 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.722902985 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.28380612 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.25147008 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.231970127 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421088883 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.141257043 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.707366536 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.255432905 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.12730498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.640974235 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.549431209 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.128269286 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.143956389 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.245003755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.319007648 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.361065289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.415084529 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.21958584 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.056860397 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.403797629 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.430626238 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.168341162 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.272964236 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.141853138 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.566904484 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.340292484 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.129866545 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.465813646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.533098209 seconds)
  done (took 154.738212756 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.825827291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.210412796 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.387970026 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.693126781 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.501234559 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.545114761 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.419297968 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.21808916 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.430149492 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.35861201 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.436383195 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.234474547 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.857742408 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.870970161 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.201975191 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.334177631 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.219857924 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.789349145 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.471326395 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.13900639 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.428283927 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.912791307 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.449080946 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.553020411 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.521163471 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.648701956 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.794466556 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.268637516 seconds)
  done (took 47.818402077 seconds)
done (took 697.448951368 seconds)
SAVING RESULT...
DONE!
