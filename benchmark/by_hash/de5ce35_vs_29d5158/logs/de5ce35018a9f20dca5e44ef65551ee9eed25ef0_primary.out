cset: moving following pidspec: 3796880
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.751378551 seconds)
loading group "shootout"... done (took 0.795840296 seconds)
loading group "string"... done (took 0.225631878 seconds)
loading group "linalg"... done (took 3.113498048 seconds)
loading group "parallel"... done (took 0.02095199 seconds)
loading group "find"... done (took 1.156602996 seconds)
loading group "tuple"... done (took 0.688249234 seconds)
loading group "union"... done (took 3.03466987 seconds)
loading group "dates"... done (took 0.151882999 seconds)
loading group "micro"... done (took 0.055985507 seconds)
loading group "simd"... done (took 0.357793283 seconds)
loading group "io"... done (took 1.379475811 seconds)
loading group "random"... done (took 2.347090057 seconds)
loading group "problem"... done (took 1.186514933 seconds)
loading group "array"... done (took 4.570331442 seconds)
loading group "misc"... done (took 0.959111552 seconds)
loading group "scalar"... done (took 3.409188137 seconds)
loading group "sort"... done (took 0.301969137 seconds)
loading group "sparse"... done (took 3.511312816 seconds)
loading group "collection"... done (took 5.933878411 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543460665 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.072146338 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.252865535 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076559897 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279397949 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.081968696 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087883355 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.069962872 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01509027 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161485619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.211417157 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.391095847 seconds)
done (took 5.128210549 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.263362365 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033054368 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122923714 seconds)
  done (took 0.761426333 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.136632854 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.01525599 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022149971 seconds)
  done (took 0.771672372 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020140874 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.097773338 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021158373 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021792988 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021637679 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021029783 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.020819357 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.020854729 seconds)
  done (took 0.82484961 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028322415 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022736693 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020661979 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022088747 seconds)
  done (took 0.693289158 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022070231 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.081615086 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019768249 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019629675 seconds)
  done (took 0.738164417 seconds)
done (took 4.688276625 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.194502556 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.776948939 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.815187501 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.178128733 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.348989018 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.299127162 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076180316 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.242451195 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.146103396 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031122236 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.180323357 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.036154038 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.536190134 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.444626202 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026583768 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.144086314 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.579333051 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039254745 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070199338 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.225954928 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.037514732 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039177681 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043728509 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026357798 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.157324868 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134290778 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.583089436 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.066907804 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.024195516 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.050698912 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027145632 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.032547447 seconds)
  done (took 9.252722153 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150328215 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142330511 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023374309 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059415131 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.049611364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024538368 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.02984753 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022545275 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.04262119 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.087888604 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045206852 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156502214 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.020991113 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.023951003 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138720311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.116258885 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037488507 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036828291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022058286 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036131512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.04929363 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034366982 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.03303446 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032507873 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068181274 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089865512 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.042931951 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.063750594 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022186846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034760549 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.05140845 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063686022 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022993247 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021120405 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065210802 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.040546236 seconds)
  done (took 2.668732227 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.98868464 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.050002458 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.13650659 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.126991653 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063215941 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050432367 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.17747224 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.07729807 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.054984636 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023611471 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.205516124 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.64012986 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.166758213 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.025823912 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028240245 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.179579172 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.877683602 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.933674911 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023261935 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023484654 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.133399848 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025970177 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.177445599 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.021467161 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.136789914 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.811556341 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025502581 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.02404197 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.052318785 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.139325652 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020629865 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.095825869 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.049708041 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.024854174 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.550334647 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021616406 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.01960777 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042457888 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.049944987 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021882836 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.022889236 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.033487601 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021019381 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073765204 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.03541168 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.524546033 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025058919 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.687758427 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.801532292 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030645755 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027718551 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.05788351 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019690141 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023293858 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.571901922 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.111361928 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022564145 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.24879831 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025366326 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024292008 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024384384 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.05757144 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023301853 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.02437354 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026580536 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041771286 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.972345833 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032543934 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042779567 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021502975 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022654847 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.020914639 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.386761134 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029482723 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025078584 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020566494 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026922854 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022956704 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022218363 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.067597963 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049705039 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.046977168 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026020637 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023223543 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022389944 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.541223832 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.051057656 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025033982 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02404797 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.481096517 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020188478 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022132721 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.023683594 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043693898 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022528227 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019392155 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.058081001 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024203409 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.125106852 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.52249917 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.024219648 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019820701 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.489948462 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024017676 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.055566448 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075590588 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022043363 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.059586894 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022567576 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.019857625 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026237102 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019709099 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024086584 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.020906435 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021772524 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.020636366 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022499318 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023589732 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022370019 seconds)
  done (took 19.590127619 seconds)
done (took 33.099438562 seconds)
(4/20) benchmarking "parallel"...
done (took 0.744418827 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.210304248 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.048163405 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019194333 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.161480314 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043875484 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.133650471 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.175066124 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.12689319 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045716191 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.045255696 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.045579208 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.180938839 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.194336615 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.046496375 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.11976785 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.192725171 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046859142 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019632361 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.04573203 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.046362874 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.046644766 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019714108 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.046003652 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.046823944 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.118390454 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047108485 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019612482 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.12170871 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.048005688 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.123532767 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.047729991 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.046537415 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047660998 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.121345214 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.049292139 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.121089184 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.019890674 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.049122711 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.049343393 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.050244444 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.049569117 seconds)
  done (took 3.943021824 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.045091649 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.037115812 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039720638 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017677434 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.027179296 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037201834 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017660103 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.036641965 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040849475 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037047101 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.0370932 seconds)
  done (took 1.116183433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.039930536 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038276773 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039569844 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017586568 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02885182 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.03797408 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017501402 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037484109 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040272631 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037973475 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.037897112 seconds)
  done (took 1.058043394 seconds)
done (took 6.781413051 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.151791536 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.119514694 seconds)
  done (took 0.946456888 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.555976215 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.218198162 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.128813787 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.254217146 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.122238359 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.15437056 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.279927709 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.15925476 seconds)
  done (took 6.601995788 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.073658808 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.140394566 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023779671 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022324097 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022440001 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022496535 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024236445 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022876639 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022190523 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024648725 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024277117 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022336741 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023082869 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024441458 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.02253992 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022645387 seconds)
  done (took 1.364166012 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028462985 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025266666 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026398265 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016835007 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027300759 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.02574411 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026889754 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027329119 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026447564 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026207287 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024137798 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.026775993 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025959675 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024628781 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027089324 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016752041 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027145145 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026710826 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028534315 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027587881 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026578557 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024255479 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028166744 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02540897 seconds)
  done (took 1.317676141 seconds)
done (took 10.915211289 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140004263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029252436 seconds)
  done (took 0.857557263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.125885643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.124330197 seconds)
  done (took 0.946112188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.028631682 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015698221 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.03208234 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023940011 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.015738306 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015593076 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031223643 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.015910705 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015732115 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.015793098 seconds)
  done (took 0.909266006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019087563 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023127898 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021152022 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019075192 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020683326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016649559 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.018896618 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.016983475 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022589757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016023859 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019924703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037354886 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019247324 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037703726 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019117161 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.01975405 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.02128861 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019071635 seconds)
  done (took 1.086161834 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017333307 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016656497 seconds)
  done (took 0.734087376 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020323164 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016635231 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018403242 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018199386 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016226453 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.015613666 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016218797 seconds)
  done (took 0.815626126 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38578744 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.085854024 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311315183 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.023886592 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.037650689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.224345894 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019228361 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023653252 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023571254 seconds)
  done (took 1.830256355 seconds)
done (took 7.877984996 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.039997478 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.141587336 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145813344 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.448747287 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.033508076 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022048624 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.051655684 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227869501 seconds)
done (took 1.820141288 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.480469299 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.255448022 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.255740605 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.023539143 seconds)
  done (took 2.241282871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310762062 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.138922149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.02983184 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022190128 seconds)
  done (took 1.219162088 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021682447 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026761884 seconds)
  done (took 0.762440646 seconds)
done (took 5.417074859 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030015254 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.01659741 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022825657 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018031807 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.017743381 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017088667 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017100581 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.017990773 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016125797 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018130766 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018237611 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018175264 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017908643 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017834171 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017357903 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018202026 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016231647 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017865718 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017817886 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.01795562 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016183563 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018183438 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017451251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017963139 seconds)
  done (took 1.139078879 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.035707267 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.020541811 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021239066 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021019363 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.021540709 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.021027346 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021000016 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020088954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021111756 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.019877156 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021585961 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.021688661 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.019988032 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.021807871 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020106685 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.021725366 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021340663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020475195 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020118298 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.021818247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021224994 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02039148 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.021672841 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02121293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.021596787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021569711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.020081568 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.020435105 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.02123994 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.021559859 seconds)
  done (took 1.356338062 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.022533451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.014757031 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015032137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.024884837 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.014690346 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.014961142 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015303763 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014469542 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.014813316 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.015675012 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015141493 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.01458398 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015329358 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014604856 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.014620208 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015132568 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.019700296 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035104069 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015008903 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014746756 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019271359 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.014983562 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014683746 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.014748308 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015154049 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014728535 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014571754 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015036751 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014703563 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015342027 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.014959687 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019190217 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.020712745 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.014675283 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.024848229 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.019637752 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.014676133 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.021283861 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015609902 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014578742 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014562727 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014517124 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.014773919 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.014730308 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025021393 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.014915578 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.015882234 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015214711 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.014875791 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014591502 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014725418 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016250299 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020369834 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016076052 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014747434 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.015952798 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014770081 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015506586 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.014939167 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014720785 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014735464 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.018711121 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016212013 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015517832 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.035797023 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016285898 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025354564 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.014923314 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015347305 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.018880134 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015393493 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.033993175 seconds)
  done (took 1.946405863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027465285 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025480553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033671047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024481767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018205213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015519182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018672419 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015562456 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024891852 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019312189 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015738182 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01889323 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024899848 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019295378 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016712758 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024790661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019366212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018521919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015705083 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019290984 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016810332 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018868535 seconds)
  done (took 1.173336127 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10019095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.02096715 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.062508888 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024172624 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.022949116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024431201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020967943 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020928217 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021053014 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02152819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021547785 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021047047 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023082672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021546383 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021548906 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021406875 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02106247 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021398226 seconds)
  done (took 1.225303922 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033331088 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.020790782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047648068 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020489222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020560971 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020268094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023877926 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024082077 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020358917 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020765618 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024438267 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020427385 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.02041274 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020757625 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020393141 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.020761406 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020371668 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020721872 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02436276 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024227339 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024282653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024408199 seconds)
  done (took 1.232059272 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034635408 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019911096 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.036025001 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021310292 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015208579 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015169986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.021410616 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.019971996 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.021222247 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.019540883 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020018176 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015141932 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022183414 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020250585 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.022331096 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020187379 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019838149 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020259086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019846807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015341593 seconds)
  done (took 1.135415123 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129420358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017373164 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017122945 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021479855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.016988467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.016995613 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021493664 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017143382 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017239865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.040950099 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.01718724 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017188251 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021795349 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020047273 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017412442 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02210515 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021774894 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.02182698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017210016 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017182867 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.040892883 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017383941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022189275 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017347945 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017356744 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017385981 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017305005 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020351296 seconds)
  done (took 1.394623551 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037363451 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.017683267 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015407513 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019259453 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019216438 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.03134998 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019217694 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019020829 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.017469052 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015503123 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017600322 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.017618106 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.017619832 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.027782875 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.017523326 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017597625 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0277426 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.01936135 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.031669593 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.031501859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017698756 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.027542048 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017651262 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.01545585 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.031675269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017715148 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019704367 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020593568 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017895095 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015624526 seconds)
  done (took 1.35965915 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029326056 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026033864 seconds)
  done (took 0.774444016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018247512 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.03304465 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014618218 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.027703148 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.023359089 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.018857512 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023432904 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023206312 seconds)
  done (took 0.896058205 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.124253267 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.147619011 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.01662102 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.016736879 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120999571 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082793717 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.132698346 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028393588 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030220944 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019557399 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016687636 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133390849 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016270692 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030005147 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018110162 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026156359 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0237896 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034640997 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029711853 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015392306 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029227112 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017081843 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016250954 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017571189 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017480024 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023350606 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032448275 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.02889587 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024804916 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014680926 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035297452 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015554275 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016196913 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024835459 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.124362582 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015780431 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.05334454 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015728384 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020165097 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015350732 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027683547 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036538722 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.029973061 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033828203 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017051039 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017489853 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015475722 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017247588 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019716829 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024907745 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015675663 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023121534 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015362456 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017085411 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026432836 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015764741 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020517797 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025014172 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029353104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026182275 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.027975614 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031234453 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024488867 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.02439719 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.01630573 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035725852 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017256857 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.02900888 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030585846 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016786511 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028950824 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015523561 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014738772 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015673755 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049834466 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017060225 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016550223 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015770926 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.015836989 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017060695 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025304391 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020562151 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023127782 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018759989 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031766743 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024871066 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015477733 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023231874 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034206714 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019776121 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015722164 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032981724 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.01973541 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.01548378 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033892794 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.02627811 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017346893 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016467845 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019792519 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029454356 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017057555 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.014815531 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024298235 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017260846 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.125568212 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021172934 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024447647 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.015929306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026634463 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022871464 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017646287 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.01518396 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021022058 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016929558 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015120129 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025719284 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016128587 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031461684 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023200462 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030927018 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031421086 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027137964 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032551796 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.015916335 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015177778 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035101214 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025664358 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017556775 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035034738 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016031611 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026899325 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016130252 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.01764911 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025645073 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015456817 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.01784615 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016359947 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022912115 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017725837 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017901475 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022341928 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024828518 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028747605 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017224186 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025012612 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016401192 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032440531 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026073803 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021279766 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019862319 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.0171329 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028863637 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023359884 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025543363 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016161301 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017117033 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016249342 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027435255 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026007658 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018120814 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026352405 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0212944 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017181111 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016675484 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017584378 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020294634 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019945862 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016931856 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024216929 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025239168 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031187178 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024478654 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025521992 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015709333 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016171439 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018218638 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016219828 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021203007 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025819927 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032339909 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028500538 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038175287 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016563511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026292138 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0184067 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034084328 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029899654 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017406328 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021602555 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015452757 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018320603 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025979387 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028244069 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.0311297 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031767449 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021471158 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021307147 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016278472 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031897971 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016810037 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025060161 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025873507 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023190772 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016235193 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018386921 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025756431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021405553 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017476032 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032606074 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024785391 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016299306 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031078514 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016734988 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027500779 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016352015 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020267871 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022032064 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018542781 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026300933 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032244367 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015513456 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016840294 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032654912 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018453715 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.01832557 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024636081 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032209324 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021496549 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024457049 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027433359 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027091594 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.167575979 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026109331 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016276102 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024875057 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018217473 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027133721 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015361779 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033592105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.014629335 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030770469 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.01599941 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026284338 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.015702875 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.024734288 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016018326 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032311591 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.016691801 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016047471 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.026914236 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.014550564 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.024454892 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015139427 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.020860027 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022344984 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024481905 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.016745065 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.02465974 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.016558851 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024328332 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.02035026 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.02386585 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024403146 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020278691 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015033846 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023552037 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026014042 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023358413 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016477944 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016487202 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.01554927 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024483794 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016520346 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016071441 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023311273 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020346056 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021429004 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016457861 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016603797 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016480569 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023630798 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024531234 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.032969433 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023727149 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022521956 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024302291 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015003531 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030585633 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015069928 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022707514 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014384943 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021408568 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024177554 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015268288 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034007911 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016472659 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.022962614 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026938772 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023620077 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019307369 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032745117 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.017927049 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023410503 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.02297254 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020177356 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022162281 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016513862 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023482167 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024534431 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025586892 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.015732729 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022638141 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024163702 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016644288 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022989065 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016456492 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.02353731 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016824666 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014641656 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020368104 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026647438 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020714528 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020922034 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015740268 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014630423 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015647056 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.022615894 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02057299 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024151873 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030977675 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014658934 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016130901 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015303206 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019520862 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033824649 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025188785 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023608558 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020697283 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014920743 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016900063 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017078074 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015622019 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018603799 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015006513 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015491522 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026374405 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017178005 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020557561 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015838378 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016713837 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025631918 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019941214 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.015940195 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.02275958 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015387348 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021243716 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015013934 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017176464 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020631993 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015397369 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019772591 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026087261 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.03251224 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022808079 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024624792 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016546064 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.02363949 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031317881 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024219129 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016606659 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025077855 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015214082 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034758622 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025100203 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024278008 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025519534 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016577939 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032775284 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020812032 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026343258 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031919121 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017110459 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.025043213 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016028689 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032193978 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.02109224 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015994373 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024888057 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024057841 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022503093 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028205245 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016960208 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024871915 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021630332 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020111867 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017902491 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017880554 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.02502342 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032635483 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016983412 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022346599 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024252079 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024608449 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021136646 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028638735 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024528327 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017190553 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017882221 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020144614 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016886116 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028495516 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016418959 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.02105093 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021054142 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016004101 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023327292 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032973766 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025624157 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025722373 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016192465 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015863319 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034923113 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020304079 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.01998669 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024557438 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026314194 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028909735 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025846489 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.03373756 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016772168 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022629204 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028904018 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017229793 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016086117 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020302383 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018006099 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.02556185 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026351397 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023786114 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018280701 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023649205 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030055646 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017798372 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021402089 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023170621 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017237548 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027031851 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024370744 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024930244 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018004897 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016215009 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020079441 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025222905 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023810034 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025357634 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017323158 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025623024 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030847351 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023875173 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020021592 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016161489 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019847873 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025504293 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023378192 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016232142 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021432751 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020240482 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.02591186 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025961234 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021204511 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016148039 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033857787 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.02507742 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025523796 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018208513 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018347923 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016665126 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016267747 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028001051 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016327169 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018207808 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021513333 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018386147 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035140485 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024738974 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032763875 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017449588 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021285068 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016307823 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026269316 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021403013 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016437046 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027116948 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015766496 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032423117 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028920081 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024708259 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016409252 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022035641 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025385163 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.032241002 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026399608 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025568086 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.020405482 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.174760851 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017157191 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026211832 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015287972 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.01459089 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025376396 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024140955 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027528866 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015230755 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025291699 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.016796363 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.02360604 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.023781766 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.016603367 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.016621696 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.016551456 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024760696 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020376867 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.02452757 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020531467 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032120443 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.015981577 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026120391 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.02418601 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.025899332 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029253274 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027216617 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023629582 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.015573051 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022731894 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023575671 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.0160635 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.020694865 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.017952537 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036802258 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.016557284 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016508461 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.028937606 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.021918075 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015157046 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.021626973 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.020245074 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.024961868 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.015833703 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.025374545 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.019702019 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.0158015 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020190814 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020264825 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.014304389 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.014970147 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.015265786 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.024592169 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.020010368 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.015150219 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033979348 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.016302623 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.023738929 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.025835001 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022122373 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.016306457 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.014358438 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.015794648 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.028452869 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030528334 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.01917209 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023747993 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.016566476 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024310867 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.014344978 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.023771259 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023006377 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023626297 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015024221 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015277147 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030011565 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030813684 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020357046 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.031585074 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024148712 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016517242 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036689046 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024211044 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.01598192 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.025797535 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017015958 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.014828348 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014561881 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016649878 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026694935 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015305099 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.01744087 seconds)
  done (took 15.033990176 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.059210614 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016395982 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015001941 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015113866 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022012583 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016174535 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.014943872 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016120957 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016141699 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017089442 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015097322 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015088391 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020563876 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030154505 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022950623 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018804311 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015128183 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016340358 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015112036 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016339383 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021136076 seconds)
  done (took 1.187387401 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019498072 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019496747 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018919927 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019063136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018269219 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.01524918 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018563446 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015182021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.018897036 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015640952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019136179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015370351 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.01567373 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.015717066 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015733861 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016771055 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019254709 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018437472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015353472 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018811418 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016804699 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018846571 seconds)
  done (took 1.138617365 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.017937596 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.015845419 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023867337 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.014676613 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014638062 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017414733 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.014600569 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019499834 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019447299 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019409221 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023725008 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015377429 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014521313 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020784296 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014520943 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015299627 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.058924634 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015604791 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015601853 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.014870983 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017091876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.023938009 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.014883627 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015073759 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019573644 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017582725 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.014785535 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017187137 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015329634 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.01955887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015624851 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.014641799 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023805885 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023142711 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019605259 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019553526 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016092725 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015535755 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.014864867 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.014824371 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023138377 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016013268 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015178248 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.015945403 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023852119 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015058308 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014778554 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024038491 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014849883 seconds)
  done (took 1.659118179 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028244206 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.067621248 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.021095105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050655233 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.026590239 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020238138 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.020900932 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053475495 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.01611902 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016597169 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.027742837 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.027809953 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017610027 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018804025 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.020883662 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017520509 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018185755 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.01687817 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019861945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017209566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.019982655 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022348198 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027337609 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.027826811 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018723544 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017196339 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017400737 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018965148 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.027559976 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020625512 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.01920772 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019715072 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027932202 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.021425088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017525015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017681072 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028539313 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018105132 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017840072 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016383616 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017538327 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018980606 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022459306 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028587243 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017952215 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.022749767 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018028185 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016058293 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028125618 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017827461 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021491477 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.028997773 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018948865 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018236124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019327468 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028153002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018083931 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.01680639 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018138956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.027790974 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016398723 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018816783 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.028636715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017531368 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020993657 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.028798451 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.023003172 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018909171 seconds)
  done (took 2.419950533 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.024806652 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.050045387 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02892572 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028903947 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.024383699 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.024424011 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.024413937 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.024715229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.024521564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027410973 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.024747563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163585455 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.021952293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026442157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.024836628 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.024839559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.024776871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.024890935 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025088927 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02501591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025124821 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.029657633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.025050968 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.029760151 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029514612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.021764338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.024848793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.025035876 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029866241 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025005932 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029631216 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025051947 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025075297 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02988802 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.02955347 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.024902581 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015706751 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02493388 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.025117398 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025007145 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.021739397 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.030072892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025139781 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.021952049 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025334937 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0252103 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030257247 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029981608 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027088887 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028306491 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025395848 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030242383 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025203731 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.02555846 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030714327 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.033570283 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030441273 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030524371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025662792 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030663019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.03051912 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.03373163 seconds)
  done (took 2.576589603 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030180111 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020826829 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.033573566 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.014836074 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014744872 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023663869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014719959 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.014791652 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020610545 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020726419 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022247998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024036028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025793507 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022209871 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023977422 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02583997 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023965275 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023939242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02082469 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024025091 seconds)
  done (took 1.219706931 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018731377 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020385844 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015644608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.030948168 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015548725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022743961 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015571571 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015563877 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015568588 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015486822 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019935154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020119385 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015712362 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023530318 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019144439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023035869 seconds)
  done (took 1.066596769 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020040723 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024000385 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124803017 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016170684 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.017997889 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015459299 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016205561 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015284034 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017521216 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.028985336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016352759 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018440218 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016403095 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015085131 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015661983 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018374248 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017550464 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016470984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016398605 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125798994 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.024576298 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.016915125 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018504296 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017047686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018317082 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.02463726 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.01787314 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018365711 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016529926 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018700169 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018262886 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027235234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018307001 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017035744 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015233926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016120785 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.01654487 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018657617 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018658121 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016602762 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015435533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018294858 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016618413 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016955212 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017780271 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018716026 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017800143 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026375014 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016440213 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018356273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.01656748 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017685518 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017013412 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027526708 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018597848 seconds)
  done (took 1.987663165 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034089599 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020519647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014822455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014739187 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020054105 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.020648115 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020221736 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020247411 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020682355 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014718882 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020621104 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019706619 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020649422 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020335294 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020842261 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020424005 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014774906 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.020598478 seconds)
  done (took 1.128820254 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023994302 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020564484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020654646 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016649952 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016739894 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020592556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015105235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016230673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016176843 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016639576 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016830056 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016407566 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0164042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016422668 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.02035512 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016789668 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016400617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015329451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016832532 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015199236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020863445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015322665 seconds)
  done (took 1.147376458 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.187353937 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.146241454 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038730216 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034473384 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.026375813 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.050973715 seconds)
  done (took 1.247094504 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.050820752 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.052477457 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.02014418 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020114021 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024191371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022482032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02248106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022624314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025617382 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02858865 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022993654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026174556 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025979176 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027608851 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024369118 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02449752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022893541 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022851684 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020257509 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030202525 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022975095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026424055 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023318663 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022984131 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023269306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028022723 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02637549 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02900574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02300226 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026598983 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024835527 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023246747 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026616813 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029074191 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020504218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026353493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023297824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030908767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024910381 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028085499 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020330579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024900265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026465349 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026084829 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026938664 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02364403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026452543 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023560873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023717049 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035324535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025437785 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028385753 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025227028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027096667 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026781962 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035005375 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02946424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028583104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025326562 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029520346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028871442 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025539562 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028621784 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029856825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025572047 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028796316 seconds)
  done (took 2.520475979 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059250949 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020565163 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022745502 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02796861 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026970037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022570072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022754458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022855016 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022854777 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020517984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058602596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023087743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027528162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02746437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023022027 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022855658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022898646 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027428354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02072086 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.033831414 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023176941 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027938902 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027904701 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027915197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029006092 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024918617 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02325193 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023283074 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023224384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023166512 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026162523 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023332596 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027967212 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020694639 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028017974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023324549 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023143111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026164592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023246992 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024954031 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028020406 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030926439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023366997 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023376747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029472982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023484616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023389191 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020938449 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023422566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02090909 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029451469 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029424861 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029458561 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028443833 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023699084 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023593326 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023479775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023483908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023590535 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02525973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028378505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023431034 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15190751 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024523727 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023970341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028955053 seconds)
  done (took 2.625904809 seconds)
done (took 51.298962293 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204299869 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176105398 seconds)
  done (took 1.132260078 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.136451311 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.133784782 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.156109035 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.02363892 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081435888 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174285823 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.126558037 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026219468 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023875476 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025990091 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023447363 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025714104 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025835859 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023370453 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086234005 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026008715 seconds)
  done (took 1.891482931 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074675278 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.239046111 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.0587209 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022601019 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105008336 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028767091 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024000432 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.02817901 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028672807 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.022615486 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071298328 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.035677155 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027294726 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028260603 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023961059 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027378402 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028197768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028808578 seconds)
  done (took 1.676520673 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.06875025 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.0331401 seconds)
  done (took 0.874217957 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.118601821 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063688716 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.102143351 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.308682745 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.095116653 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.098275266 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.102071015 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.097193076 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.072351807 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.094717789 seconds)
  done (took 1.917670248 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.060971531 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.057351916 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.281183243 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054926219 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034355995 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029312155 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029195767 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.031001421 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.029492266 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.028966101 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075119448 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027548476 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024234752 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072420311 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.050374686 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.060263482 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023646848 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.030263207 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032325991 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023339135 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028207381 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.031232891 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132782339 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.03065525 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.052489983 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027773403 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029459972 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.028654602 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028544792 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030679506 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031184443 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054386398 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.030507389 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.036985717 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028710396 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.050057608 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024331455 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.051341802 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.02711042 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024356424 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027667884 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.03124116 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024831652 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030807566 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030012368 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030193297 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031669839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.0235917 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.029922437 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.02739494 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024528426 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.02881269 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028632058 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029777854 seconds)
  done (took 3.015110624 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.078030906 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.06621309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025423593 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073658459 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064805264 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023946556 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079912465 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060479059 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07833078 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023602729 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023169071 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023226372 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031028675 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035022762 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076089564 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.06920376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025313352 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023817229 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.06837744 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069091136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022815232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079844083 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070914194 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067808906 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022648333 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024062591 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02276939 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023404026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031684418 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031539082 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023144189 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034100287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034995321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030706452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02257727 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022924609 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022774261 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031593608 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033110022 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033053764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029997432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022532661 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022835347 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023418424 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023864567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022360546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032973602 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030922929 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.03290237 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023490149 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023372845 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022827282 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023556373 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030466711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029518361 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030923511 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034090485 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023227871 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023179094 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024672786 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034960727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031918031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031716907 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024196563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032990576 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023728425 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034221265 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036994294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.02316595 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023666196 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023238456 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02321889 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023536862 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030026508 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030117323 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023649733 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023786316 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02328297 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031857294 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030417388 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023023193 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032412867 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022646729 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023242851 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023599616 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023848498 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.034126584 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031935626 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023781925 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023671308 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023312761 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023199556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022606703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033064053 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032360641 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032684389 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034629779 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02416766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035533685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033229175 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024935987 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032689662 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024123688 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024192207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024094315 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031790753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031388614 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033125509 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023813095 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023432209 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032633281 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034827845 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023619144 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031407317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034316392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.03189737 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023247106 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034920343 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023669766 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034778373 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02383807 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034914727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024139565 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032494182 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024048891 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023218678 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023876395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036004677 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024749192 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023849741 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024277535 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023915635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032546231 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036857446 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024508567 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032994424 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032655168 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024381683 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035027151 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024083483 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.035094835 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024157807 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024337147 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023145263 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037060368 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023752611 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024245934 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023908585 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034681649 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023971533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03459489 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031891623 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023456234 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036049905 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0343507 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.03198242 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035135531 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0247106 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024157345 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023814554 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024125222 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035231647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036765707 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024907827 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024060875 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031553503 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.035633801 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023519761 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031999363 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.03191119 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032360076 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024209163 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.166451854 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033001411 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033725868 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.02942029 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031983691 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030295699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.02294568 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.029163015 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031780015 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022949447 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03590749 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022835897 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032347581 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032002644 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028509113 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031869321 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.032933143 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031593649 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031281706 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033277507 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022431211 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022665597 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029236469 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022696545 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022848532 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028851129 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023255362 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023371049 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035535587 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023038735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032216102 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022418181 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.02989152 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022311239 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0232027 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033845545 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02268663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023181964 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.02951192 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.022785626 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028981192 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03189471 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028859586 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022678314 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023162026 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032473474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031751473 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022668665 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022593189 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023068629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031567304 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.031106537 seconds)
  done (took 7.804996367 seconds)
done (took 19.089162909 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.152464646 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.071397462 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.157461188 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.090359658 seconds)
  done (took 1.237262643 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.056295034 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019221747 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.139565663 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.15098988 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019472411 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.134194618 seconds)
  done (took 1.305042022 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.210613678 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.136871388 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.140740295 seconds)
  done (took 1.27818382 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.128663154 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.265616584 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.534320201 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.126814924 seconds)
  done (took 1.850195542 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.171801432 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.163571608 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030914955 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180661115 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038062087 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.015731782 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.103204637 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.022385166 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052638198 seconds)
  done (took 1.625304668 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.096045859 seconds)
done (took 8.182813141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.179709087 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.137538405 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033026968 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.026732278 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.1316389 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.135209983 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.138887828 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.029090659 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.129413714 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.297118964 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.160686085 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.047622199 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.154869672 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043070658 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.256938855 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030853934 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.028583321 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024221226 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.14387961 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.126797841 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.238229747 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.027909767 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.092800478 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030012883 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.104395288 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.077996922 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.167672243 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.288662562 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.272060567 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030326381 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.126533815 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042306051 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.120018608 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.131277035 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.133454967 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.04857428 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.019922674 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.241610762 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.111438691 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.30433998 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.151621376 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.026466922 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.141816873 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.024533444 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019106867 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.14203788 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033044189 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.025815851 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043587757 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.025931115 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.041584326 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.026373863 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.141036928 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023401492 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.09297105 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.139713889 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.163211305 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.098385961 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.02556372 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.038818078 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029165636 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.153445311 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.03863171 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025279982 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031823147 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.019802674 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.137238099 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039368275 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.02023169 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030146782 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028094037 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.113859357 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.154583828 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064465061 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031822471 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.118550353 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.096110255 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.048152326 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.048854778 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029498102 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019416649 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.168330447 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025185931 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038184353 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.025983111 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052702345 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.019712247 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035254764 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.156509195 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.151083626 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087294392 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020782993 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.234327458 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022055285 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.200331476 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020739771 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.01969199 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.163773517 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019420886 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.019606983 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029126564 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.027789249 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021113396 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.149813932 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.103109444 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.02717941 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.025848605 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.0197302 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.024742986 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.020449521 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.019736806 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019564565 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.093609469 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.034738476 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.01886922 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.106151486 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.12494916 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.030232063 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.03728772 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.083765723 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.022338323 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.027923507 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.026153441 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.122221006 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027093601 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.131914994 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.020610468 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.041665806 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.117466235 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.092830529 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.105515843 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.01929142 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.153341109 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029254178 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.018892569 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026168267 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046873647 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.028655752 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.034665597 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027333004 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.153458112 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.029850393 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.024627366 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.116863388 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.018650181 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.110111959 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.09344301 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.126895661 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024219716 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029483138 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091639964 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042680609 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.047896486 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.041868263 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.023494825 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019448324 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019120093 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.034052881 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018698183 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019413293 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.03377098 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.025537996 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.019182812 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.238130635 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029335414 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023584802 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.259741345 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.0315541 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.098832402 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.041413827 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019938855 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.104414199 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021602217 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039977808 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.08117813 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020089488 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.095228439 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020152028 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019791551 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.027094773 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021394055 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.02855355 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033102619 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020215382 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033701591 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027237115 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019749448 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.104398982 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021638319 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.167947065 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.1038675 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.115850752 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020045091 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.037925551 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019546468 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133171461 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.019835585 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.067764193 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.115158196 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.036326303 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.03999376 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.020930998 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.093532798 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034932758 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.019519512 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100737467 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.127729551 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.098811119 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027080675 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.242813392 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028656781 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020318249 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026918266 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.027826447 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020376312 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.095586065 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024139371 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019123844 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019439481 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021341876 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018779809 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045495428 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.018977944 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027146831 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.019475952 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022146968 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021476478 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019109854 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.027555517 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.096037304 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.128959216 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.025487039 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039676012 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.032523125 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030868985 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.066980898 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.026514583 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.1410849 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019223676 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029196822 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.042175985 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019423606 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024583999 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.019824599 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.03918581 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.022996241 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021513345 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.02834584 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020263842 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020355777 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.01997263 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020194933 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028164418 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021615918 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019495667 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019481342 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.019925626 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.02438573 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025046673 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030579112 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039837356 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.457565983 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022273104 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022350143 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.020244197 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.020123897 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020456519 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021682916 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020005553 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022045871 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020275936 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019699174 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.049283957 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025119077 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020869245 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.042755407 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.020139662 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029457345 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.128457414 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036924208 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024974733 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019417845 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.268881642 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.110705083 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.04329097 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.041413777 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.186481662 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031598212 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.0201241 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020194533 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.018985532 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046810824 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024228857 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020100127 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.0189147 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019204243 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.066508329 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.027388963 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019181398 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.027381658 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019235835 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019529547 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046914835 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.02049698 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019303385 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038509784 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032119087 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.096680415 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.030804048 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022212363 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.069055113 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.018657821 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019294217 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.019759137 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.110931347 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.031961045 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.020526898 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019306915 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.026921291 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.028074897 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.070750752 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.025010881 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.02209466 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027026675 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.01849512 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.019613865 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.043979054 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.047026534 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020298225 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.022641284 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019049841 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.019615193 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.092021325 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.026701231 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.023600785 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.101498535 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.02116275 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.026921231 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.018531773 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.450156101 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.023767613 seconds)
  done (took 21.886242223 seconds)
done (took 22.692277367 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162904249 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.03368524 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.03262484 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.027994971 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031784766 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031915363 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.033091736 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.028828864 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.031788137 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.031135918 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145859504 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019184834 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.026890238 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034675792 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028035018 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.035379195 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031921198 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.034738642 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.02002438 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.034894096 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030045323 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.03253168 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028258301 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.034332579 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.019957961 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028013092 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154902929 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.038370578 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.023098908 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.02927833 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027192027 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.033250307 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027158461 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.02681331 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029034011 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.024810196 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029789391 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026062593 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156060969 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025244695 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020134913 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.032528272 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026733145 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.028017248 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028210443 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.03161164 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.024820035 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033288025 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.019273008 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.032454703 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155638127 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.024238053 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023132077 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028040723 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.02486889 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028963634 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.022873234 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031227959 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024644961 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.031757246 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.027585671 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027417399 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019422671 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028085772 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026723852 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.026998989 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018482263 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024138341 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019424544 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019383744 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.018769374 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028096503 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.02637484 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.02441038 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.018807726 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019373876 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.018975654 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.031873206 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026698697 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028337414 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019885178 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.024906899 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024495089 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020033303 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024303469 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031416789 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.018951993 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.019972243 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.018952766 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.031078635 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026051854 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019536005 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031383208 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024263892 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.023901801 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019509656 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.018988902 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024000933 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027671081 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019470704 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.01854088 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024054357 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024641637 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028240684 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019881885 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024127148 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024000025 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018703773 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028322763 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026803487 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028615541 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.032456639 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028313786 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030900527 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020007754 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018501852 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029261579 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019830907 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02435012 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027463626 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024719751 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.02752899 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.019978629 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.018783844 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024058639 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.02542417 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019819916 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.019949841 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019864349 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028514633 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026882318 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018711355 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019553218 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028488106 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028440762 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019065922 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.018926921 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028329638 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020061941 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025613396 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024922579 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028408899 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.019456278 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019999507 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.018908656 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.019326376 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.018995479 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.024952273 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024285013 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020094166 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028640127 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026793975 seconds)
done (took 5.452781274 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.034804075 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.063305237 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.17511548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.138768933 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033175262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.020824786 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024773899 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.04010241 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.023261321 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045232229 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045046725 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.041644486 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161903951 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.018769346 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.019797118 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.020564565 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.01822718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.031976492 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143749871 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.043730321 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062626921 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019658902 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.037142815 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.040418813 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.03309844 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039043336 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021197161 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020721924 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.022750203 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037621926 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046087062 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.019691005 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021063838 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039701538 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036267231 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028992906 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.02067057 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027030407 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.020778876 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019859032 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.02188167 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038457757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027059369 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027359303 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021023804 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.020449376 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020337806 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02800998 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034406636 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026338031 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032703067 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.037026141 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021865331 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.020402519 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018656832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027738847 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.020252054 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020482276 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020809272 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.01962359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.02069389 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022806614 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.026001518 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.030830413 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024125898 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027670461 seconds)
  done (took 3.280611043 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.039497799 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.048845721 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033917757 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.03416465 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019494401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020073662 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020044097 seconds)
  done (took 1.110784392 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067368611 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135779989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143409594 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143852354 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.15530418 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.142039713 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.032803396 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.049733852 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.019559386 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156193907 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.152466573 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147478989 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024144741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032791245 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052826736 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.150583744 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033139413 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027186159 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141791557 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148653493 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025240747 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.050821898 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0321407 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.02118184 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.145580983 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138839508 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.023935262 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021218273 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023062497 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020416033 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020332698 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.04348044 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138203006 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035622378 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021450333 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019447006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136127536 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.02174218 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139436249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028509577 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139570017 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.022937707 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023014798 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.020657573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021791108 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.142598405 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.021741381 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020652842 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020196838 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141041828 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.020053287 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139719891 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.023378285 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025967779 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027830009 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027280678 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.02748912 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.020996416 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143127308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030535543 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022237383 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.151094708 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150169927 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.14032737 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.150760413 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029533185 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140709721 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139748924 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020558976 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028520277 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021099892 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.151831661 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024427779 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023267469 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.026034683 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028005273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.158337129 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.158906442 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.159586349 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035530991 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023764893 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.02114194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.156599813 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.159821318 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.02676407 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020955992 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021959029 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037176901 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046394943 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023042899 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.025823112 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021037361 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031207477 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023536246 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023570322 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152648531 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021415069 seconds)
  done (took 7.602815519 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.028806288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.022982619 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021533526 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021514033 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021698503 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021447212 seconds)
  done (took 1.129571096 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.048223891 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021675141 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.033446039 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021401491 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.043407285 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.140512442 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140430259 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022729348 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.037131659 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033015777 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140860043 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144694872 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143055149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.022392587 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141201111 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.032943766 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.14284516 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026296699 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032180777 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022726702 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.034958366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022237461 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022535169 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.151017783 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.023465014 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032478717 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030518321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032378765 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.031830897 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022486919 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022171598 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.023116241 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028038614 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022494647 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143741315 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028396755 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02165584 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.025276669 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.023347602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.023072407 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147372011 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023079547 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026404181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.025409362 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022657797 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028339355 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.02534165 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.025386261 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14500356 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.025742171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.025391194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022176488 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.023219837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.025267792 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028372495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02268656 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.025296006 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.145146194 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022624545 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028521769 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021849866 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.023239681 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022649452 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.023143914 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026621689 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.02533918 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028610047 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022790416 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022771437 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021883431 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.02561038 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021865945 seconds)
  done (took 4.213587642 seconds)
done (took 18.238482557 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.508171012 seconds)
  done (took 1.410467705 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.014437708 seconds)
  done (took 1.946621278 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.052399544 seconds)
  done (took 0.983632739 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.289979554 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.396235945 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720100224 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.091172166 seconds)
  done (took 2.41422298 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.849766616 seconds)
  done (took 1.787026524 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218586166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.180602124 seconds)
  done (took 1.363973501 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.499404036 seconds)
  done (took 1.427059213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.315539932 seconds)
  done (took 2.25238762 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.188776941 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.129716706 seconds)
  done (took 1.255442482 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.59546958 seconds)
  done (took 1.528924499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.550829958 seconds)
  done (took 5.486934681 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.195858767 seconds)
  done (took 1.190293718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.195581054 seconds)
  done (took 1.133084402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.707079148 seconds)
  done (took 1.641356814 seconds)
done (took 26.764141793 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043269452 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.039044973 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.038744633 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034138506 seconds)
  done (took 1.079704524 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.03003374 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.02432834 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026642597 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027142241 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024551192 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026253825 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.026735408 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.022936304 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.02436998 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.023513834 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.02182157 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.023505619 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026041682 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023099141 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.025580248 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.026998793 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.02360954 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.023993543 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025652623 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023094629 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.02616982 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.023575754 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.023532719 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.024981974 seconds)
  done (took 1.536103209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.033648187 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025539936 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.028533056 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024348718 seconds)
  done (took 1.052022555 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032171765 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030144454 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038853773 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.043347666 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029450941 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.03025045 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036838625 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036909079 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043338628 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039619635 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021179199 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.020911612 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020177293 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039125958 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036266808 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015788429 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017210075 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030449212 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029564913 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.03238182 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023211156 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.01894721 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029588206 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030401156 seconds)
  done (took 1.662148584 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.03760096 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019142688 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035425238 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044278797 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045204585 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.018900139 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032526338 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045273162 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.081480935 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.018869981 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.024824811 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.018853863 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057157067 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.01894903 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034077241 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.063977037 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.066772154 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.022872996 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.051758133 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019027055 seconds)
  done (took 1.700732804 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028109406 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.02402352 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.023664552 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019070269 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.029868533 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026256381 seconds)
  done (took 1.097670955 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.023981228 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021965016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.020851955 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025836234 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021629317 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021541213 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020818103 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019581703 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019635581 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020355029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020257508 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020734054 seconds)
  done (took 1.197435544 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.17028362 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026166049 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.023942671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019680749 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021337211 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020271073 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.034395718 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022081427 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.037262885 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020375659 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020381254 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022412928 seconds)
  done (took 1.380232952 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060926664 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065263007 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099280877 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06956477 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068838838 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0496766 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.196725148 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.032314773 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118798827 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092285934 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070907489 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045290819 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039909063 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023138142 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054777071 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073881805 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092157914 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026737024 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.068550897 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.240115173 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089468234 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09222146 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104809208 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072040319 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047516712 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104506505 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050873118 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058697155 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.078332394 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083914975 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075245114 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.053084483 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025020174 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024652939 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107491769 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.062971149 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076380419 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047264525 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060142957 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042969987 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063660837 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.023384409 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.036216587 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.066694106 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041015024 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090432349 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.047644215 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071948106 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036146673 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098908508 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088208853 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.176355015 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04220724 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06303522 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101934641 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074316159 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100297705 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065126759 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039847582 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.22916778 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.05915306 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053615576 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061383762 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033560408 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131750833 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042650098 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.065649694 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064475772 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.04928072 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049223916 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.060074656 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089364674 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079351612 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.079399844 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09087429 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045057665 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072971259 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.05359658 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.081788227 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057480622 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026196124 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076879499 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083771859 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.054296495 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054730823 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085938839 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046742561 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029855999 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.055865746 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.074719218 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034157428 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.069610629 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035613419 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.065195719 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09565955 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053725829 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067372171 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073963072 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032225002 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114405047 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063987767 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026921669 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072934607 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069159044 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115247283 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052092388 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.0301513 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055926448 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059966374 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.111960948 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068695939 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035839262 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0691053 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10386653 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051990297 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.25979616 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053489043 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106378883 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073760511 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.042880306 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030738132 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.046649554 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.221638926 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061572308 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065480496 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047787873 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037272422 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040038608 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067884332 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046248564 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034179656 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.067173053 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.055941036 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028233176 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041520739 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.029925893 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094155267 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.031657175 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088583432 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078509442 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.028702014 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059927469 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048571798 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059119374 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.050847303 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070656595 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092346758 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.137655485 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043808337 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.047789584 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06109444 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09866091 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082352122 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046625535 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.031174637 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055827587 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067089047 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.053044199 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080666501 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048661472 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063238213 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058728458 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099516225 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103509463 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054918074 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056377618 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064862356 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.078707415 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029006919 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115703024 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060898858 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074769177 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041670946 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100722474 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.066525696 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045482199 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041733989 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055589788 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.062391906 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06471148 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1060728 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052152459 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.02720424 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052265364 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109200717 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033533504 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070723783 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.047545487 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.049370197 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079285857 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.054762418 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.038142676 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.023026372 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.245352263 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112471098 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.023550142 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06567932 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.060160387 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055572276 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.074577361 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.022908384 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071835238 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089514959 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06943256 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093531119 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118267668 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070038922 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071233293 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.067085806 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.058730438 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03258994 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.078478767 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088018565 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049170346 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045015994 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088886392 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07271639 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.092534785 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.075250891 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074376759 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.061762977 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062205922 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060209942 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.061163324 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103716931 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077979276 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.081829111 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037799875 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062250336 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073857072 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094345232 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036305968 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100850058 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.04058218 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.077276082 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.03303309 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081509986 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030437909 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.1253088 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034255313 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057662752 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.02397832 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.029284818 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102412379 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.070763896 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06786035 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061267899 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.101274448 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098494615 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032064212 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066714606 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074518547 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060138815 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.228818928 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.06286809 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042566161 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048533375 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060338238 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038658596 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.034774987 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069860135 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047285459 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078694249 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037443012 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028337284 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092362018 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057511205 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048186267 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029656112 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05992267 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.07851071 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04620832 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040037529 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067788321 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058113705 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094711842 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.044127797 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.05082545 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078078438 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03351625 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.045676137 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.022831535 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.038844691 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.029430065 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082303037 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.029225629 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.070935736 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.022409559 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086726796 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042803132 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.04761871 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057390499 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066204976 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083698769 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049237182 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098984569 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045057271 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.076966526 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063889567 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049702899 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042253253 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058206723 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05574239 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079279705 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.050920362 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080330581 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102428262 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058937085 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099994575 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045959524 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078683689 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062719127 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.081382824 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.069453331 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130143668 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102837804 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072305467 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069346479 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030295809 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053877122 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065361228 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073573317 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.297260117 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080009219 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026006927 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058027468 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047461311 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061982806 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057332884 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035561991 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097954314 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056065515 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041270075 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064891006 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.044426148 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057123377 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029386446 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05376439 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.057066465 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048168899 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050197514 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066759235 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081437845 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065296419 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.096374735 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.055622815 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.045399976 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.071846957 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063684563 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062583985 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038885149 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039419752 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092073665 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072869229 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.080725057 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.055099969 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064379498 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.066155537 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055507164 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082485591 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063804972 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.085515719 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034838663 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.031367973 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022158516 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026231801 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08110437 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063859441 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067503211 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054378937 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026327177 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059371524 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059220565 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026282394 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042954905 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050592046 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053127626 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.047887229 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064010843 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066296222 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.051443797 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060198602 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053013025 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107704269 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.056997434 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045888012 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10655929 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115670806 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046093997 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051712655 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.02606173 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034329384 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073651051 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115885185 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.259374475 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.032117223 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040748912 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.039396261 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040156758 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025139012 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.041679526 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042522945 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058891653 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051492165 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.066861971 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05809775 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028797768 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055808323 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05202821 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045688261 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.0601071 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072463919 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078664301 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.094630057 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066990124 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060153242 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029529451 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033751916 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029304197 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032819713 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.054778589 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.032055889 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029479655 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096871933 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.045123133 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059152167 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062205039 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041581866 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029290678 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090529524 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023168612 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091399192 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.0249998 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036457995 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036190936 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033078744 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049269608 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096176379 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0654502 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06840772 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062292369 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060351291 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119459416 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117078983 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037049282 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.099647849 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030177031 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030932415 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030214611 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067809192 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045556487 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069718788 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100920395 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045629849 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057646446 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032663091 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103223006 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.059385569 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061072936 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042064132 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034152167 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107016799 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034459472 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.040167143 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046213521 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.070067289 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.027320749 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.0601051 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.039118761 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035039443 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.271894216 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.663909226 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047201923 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.029590039 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049715078 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.094459462 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085001588 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049412507 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061390373 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.072444725 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053715682 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046919929 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060929693 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.145725696 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027432907 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047664418 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.057008933 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050730216 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054725489 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.051700473 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.040141659 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.045634545 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.040146676 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032471633 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060743179 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041520649 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049494999 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060390813 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036313442 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041328053 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085204761 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.057711759 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.03687096 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042334362 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.057322972 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041896203 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057794872 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023100336 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067259417 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042993084 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07492024 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.054882321 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063763489 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082467711 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04913586 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095541309 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064895333 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079414366 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041965108 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032749719 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084237173 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.045583861 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032002422 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104991908 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.05415915 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.058456642 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060106553 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.051201986 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069640024 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077619012 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070832295 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053919412 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033979453 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06131106 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.062744664 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044305893 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035493283 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.030011485 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030940484 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066279569 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044798337 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041768742 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.072020168 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047221522 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.209776535 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.057404731 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07659681 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041084727 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055217641 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06463781 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04529045 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063252656 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054375906 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082446955 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127788254 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077878931 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.332252456 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088560546 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.031058317 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.028886431 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.022130775 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066945931 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033222752 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.042712264 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032304664 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08740624 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.037127905 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064769083 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.199463015 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.03414244 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047785639 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049462676 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023204845 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036575962 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061481831 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040585071 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033774993 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072644809 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035146705 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.08477659 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066897756 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054807411 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050189673 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035229632 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069826736 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.05767703 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.08506313 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049694845 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029618233 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08082541 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059190253 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097131697 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.027186306 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035518423 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087373622 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05994919 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090502988 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034827761 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110548204 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.099813116 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055865725 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093578893 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025091091 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042352729 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045648371 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.082490865 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040416732 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070727581 seconds)
  done (took 40.749343768 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150021117 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.138888588 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.075620557 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.088550381 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.244631191 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.253195552 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.105862607 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.077745242 seconds)
  done (took 2.229307064 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024471231 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.037246008 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.034687588 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.277578671 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.053423356 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.020642073 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.025628431 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035275074 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.020747115 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020215002 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.054842257 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.02054561 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.020966425 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.428782108 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019820591 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025416155 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.020853503 seconds)
  done (took 2.213031166 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.306650312 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.554905097 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.288481584 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.559347174 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.120213435 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.675503087 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.028909925 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.035243318 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.785437601 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.3493363 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.11364025 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.180296978 seconds)
  done (took 20.058208531 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031515085 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.155116343 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153386438 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027741902 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027206932 seconds)
  done (took 1.514157301 seconds)
done (took 78.479718836 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040530326 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.123867323 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.02036263 seconds)
  done (took 1.232251799 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.15839747 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.152209133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.152123443 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.15526393 seconds)
  done (took 1.673195396 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030183227 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.02965183 seconds)
  done (took 1.121341876 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.185504067 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.248867764 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.04397564 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.038488597 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.03400783 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.034322116 seconds)
  done (took 1.172737897 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026841602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024639157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024665539 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.024870903 seconds)
  done (took 1.155326052 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.134983151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019321556 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021781815 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023652833 seconds)
  done (took 1.254987987 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040482092 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039930351 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.068949373 seconds)
  done (took 1.211132551 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039389788 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038762825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032771393 seconds)
  done (took 1.172636042 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.065306603 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.05008009 seconds)
  done (took 1.174989915 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.03545977 seconds)
  done (took 1.095969715 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048097613 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.05106521 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.218540559 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.183896851 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22233132 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.208973383 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.030275296 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030834062 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026415331 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.025363404 seconds)
  done (took 2.102603846 seconds)
done (took 15.945253155 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.035650034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.14356904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.27105893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040360502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608729398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.26710037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.677327249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044183087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053143409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021563295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038205711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586209909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.683846925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.102168213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.667710098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.090109091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.761963248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022921636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021285217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021826285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.660549413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021565275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021708149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022082706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.758794469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.287032707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022624433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.096808429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021930035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025677697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269099543 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023238899 seconds)
  done (took 12.440144363 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.025871959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076079405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026611661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036953227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023569206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023326087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025216284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.021857729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.06417893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021579285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038412454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021029282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.025836342 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022536305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041734137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021358243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023759533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022215335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021544645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022085104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040412814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021497711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022199742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022377715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022037033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036229096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.02301482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021597147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021892949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025974236 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026989096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023026834 seconds)
  done (took 1.982811642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078577369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.079388443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.02754674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.062001553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074006687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.02411862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104895714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043990196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067257341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021936022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038873803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021709867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058160531 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02320373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042256109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021936679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024305496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022288565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021521587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.02205866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.04047459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021497993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022143028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022359759 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022244229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038097165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022791128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021782906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02159014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025856189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027873657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023141609 seconds)
  done (took 2.261084892 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.02492255 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025042869 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.031024713 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.033906507 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.019982887 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022084792 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.02308502 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.019992109 seconds)
  done (took 1.27152411 seconds)
done (took 19.03254471 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035383065 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022021448 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024840227 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.041396399 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028001129 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143550346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.018906747 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.028692811 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025091511 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025317679 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.026679832 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.020108275 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.023734174 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.018595647 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.025579527 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.019797375 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146046104 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024259229 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.143773794 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.144862423 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022406016 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025424922 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028483134 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144301452 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.144157797 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144139316 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.028948381 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.025787059 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.020200719 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.022815551 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.142490578 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.145113976 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.022883637 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140191439 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020277195 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.02006635 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024346467 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021881522 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.149162412 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029335101 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022421602 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.028857347 seconds)
  done (took 3.415784316 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.14818809 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.15384791 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.145463425 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032065767 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028531611 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.031835871 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.152060042 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.028885634 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.02746136 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.151492535 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023321905 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.02748684 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.029806418 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020602923 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027428981 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.023763442 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029073306 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.021683225 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027440005 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027357614 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.152445784 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.020951485 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028192518 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.028886268 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.02308831 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029114902 seconds)
  done (took 2.528518294 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030157623 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043236948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045934914 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.099067153 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.06319125 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.035961433 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.03635244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.046905804 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.054504848 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021150406 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.042868166 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.048579778 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049288735 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.027868547 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.061049701 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.039492702 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.033587906 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022628347 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027662087 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.05517936 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.043875324 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.039895756 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.053854719 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041058779 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020201436 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.03036235 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.028370335 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037369485 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.028461872 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033141474 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.024970532 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024479628 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.021868814 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032369225 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024802613 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019157115 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.043656594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.03343479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.035625272 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060187772 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.030932957 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022455463 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048230367 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.086437045 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020677931 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.023702783 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025302116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.03344537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022451318 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051440249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036195928 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020842494 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040170467 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.02243492 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022387037 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036479635 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022661061 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023172413 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.032712713 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027114003 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.041980948 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026277529 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041452119 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020858997 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032236357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022390977 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.02269671 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.019860928 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055692544 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028434467 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.070726839 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022207526 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019304257 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033305263 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032545627 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028342625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020798717 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03997201 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033454873 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024938225 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.032065553 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024005321 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024329735 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.057490295 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.0201404 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019225262 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019177107 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023464361 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024297883 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021735911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033490897 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020623133 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024387129 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.035401429 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.02103908 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021685506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023510138 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022318711 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020491033 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030832564 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024727612 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.022652115 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033801676 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022125998 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024341555 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.035964777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030315666 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020695946 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022271812 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.02350343 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023145223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.025780744 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.02472393 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023238694 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026286386 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029087079 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027479816 seconds)
  done (took 4.897223691 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239911408 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227592012 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022086828 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.224676233 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.02960612 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.158347092 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227655912 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.231616047 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.021782803 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022642242 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.020907045 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.171598154 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166697983 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179470435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.159073965 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.023927285 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.048782794 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.178552741 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232970928 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.22858301 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.047770087 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.028947145 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.023982088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.022998822 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022350566 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030174546 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038737627 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030360061 seconds)
  done (took 4.160198071 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030445536 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065953892 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025042249 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.045866577 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038417268 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.021520448 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023288971 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022985355 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038503934 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027130207 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.021292921 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025565895 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.024829145 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.023651066 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022346562 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028025871 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.027927275 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.029148647 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025072745 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026109907 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.032289881 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045789648 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025638947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021654316 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.024959689 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021436737 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026980706 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030216022 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021325783 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.02140326 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018721589 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.025936853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.035888253 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.022620232 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021323698 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022150475 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.021711985 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.021661316 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0219253 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.019785889 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.019729295 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026556474 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020298154 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026416286 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.03552494 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.023686851 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.022964676 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024065196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.023914677 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018487347 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.02518308 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.024863944 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024097366 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.02978272 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.025275498 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.023933117 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.022956377 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.035482133 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.026991501 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021000193 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.020661696 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020044418 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.023216932 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028198447 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038361092 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023206135 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020017111 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.021705432 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023195204 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035660742 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.020972441 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.027058864 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.018679458 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.021750613 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.023928616 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024542923 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023002918 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020054288 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021388028 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021836987 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.021700407 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.02154452 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.020941534 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024234517 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.019603684 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020107747 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022276865 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023166057 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027128992 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.02053305 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024354861 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023022993 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020523719 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024244536 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.026827637 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024581969 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.041700832 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029608311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022256507 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019579437 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.036413335 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023523914 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021018983 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023469637 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.026288493 seconds)
  done (took 3.799815335 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.051349396 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.023809772 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.04134479 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.052858998 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.031691749 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027216985 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035204778 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.022870855 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.042562409 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.020942344 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.030663691 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020189748 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034238774 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030210944 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023433875 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.03133451 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024321495 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.041855223 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.036002562 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020435727 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030223449 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.033705443 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034091768 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039285242 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038867596 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.039793509 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.033746811 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024580376 seconds)
  done (took 2.020003626 seconds)
done (took 21.888497289 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.124739518 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.343383277 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.106365381 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.842391322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.172515279 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.23445726 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210454704 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.086017998 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.793513169 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.187597179 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.865742308 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.020758828 seconds)
done (took 59.150265591 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.200031581 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.236667005 seconds)
    (2/2) benchmarking "String"...
    done (took 1.32604481 seconds)
  done (took 3.669137292 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.530340348 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.092256595 seconds)
    (3/3) benchmarking "different"...
    done (took 1.129899626 seconds)
  done (took 4.832285585 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.380416174 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.663452045 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.382740173 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.093690611 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.101185915 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.612525026 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.256264444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.754199385 seconds)
  done (took 26.954571809 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.087895098 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.42296892 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.447034467 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.552523534 seconds)
  done (took 17.678504502 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.536961473 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.510001408 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.509677366 seconds)
    (4/4) benchmarking "different"...
    done (took 1.802644701 seconds)
  done (took 7.567343799 seconds)
done (took 70.374774401 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.08018779 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.358501649 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.117381266 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.280761918 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.184861226 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.185309861 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.098687261 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.11557353 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.091916323 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.091067688 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.092334274 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.090848302 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.104756033 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.140027228 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.091058854 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.124943955 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.358166284 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.100469175 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.118366579 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.882871195 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.422450377 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.091964596 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.094334255 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.173447493 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.475653071 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.110826741 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.513621761 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.100930875 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.698329918 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.086530976 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.106791072 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.093385524 seconds)
  done (took 181.758407722 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.080131161 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.920035084 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.892531089 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.11124659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.481900642 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.443656696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.955442753 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.483737301 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.09205828 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.094391383 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.073300536 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.089521258 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.123346516 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.661849778 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.126169568 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.143366011 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.005982299 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.902643021 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.136764651 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.01904363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.08849537 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.581612066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.55478493 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.942188203 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.104992586 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.112967706 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.113412788 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.116507264 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.604650102 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.030256546 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.091942345 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.125021727 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.281143107 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.327950039 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.097413069 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.102492418 seconds)
  done (took 152.203078277 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.344045858 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.090484787 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.12779419 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.240502005 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.055383525 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.953425239 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.094457788 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.08000304 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.082240102 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.086878657 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.081379386 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.148770038 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.090101759 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.126352873 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.12381737 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.08366144 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.081862883 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.126524578 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.103842589 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.07999487 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.079609552 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.184154389 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.432665271 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.236111773 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.092949411 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.0883247 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.216416828 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.098968468 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.082879209 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.080329798 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.21348284 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.093545517 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.213766756 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.223427086 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.097825448 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.138712729 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.097593359 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.386582492 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.093582134 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.078998939 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.08172127 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.126471318 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.089410927 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.149341164 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.196000242 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.093068771 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.10044536 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.540190276 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686904482 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.093644616 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.08172814 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.082367991 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.084345815 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.081737365 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.592016961 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.094949026 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.11508144 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.728393013 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.103958518 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.084131753 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.081117881 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.079643409 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.080555197 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.087082129 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.118040581 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.77694597 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.853009938 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.443595758 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.827709404 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.091999984 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.082221315 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.080397831 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.954421139 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.161170463 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.082750504 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.079707828 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.255114441 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.089986746 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.080362872 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.998776674 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.000194432 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.090744584 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.230982476 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.094715518 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.080824383 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.091385108 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.126344999 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.104172153 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.10306027 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.134620316 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.084935329 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.081058248 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.086389291 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.001583024 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.093411323 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.092707218 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.50079556 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.093618382 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.079505028 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.140067275 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451311469 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.089510216 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.161962543 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.48700072 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.067524761 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.09271844 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.082742594 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.099764966 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.082246294 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.092538666 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.091563869 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.081336422 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.080909746 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.086384782 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.080121788 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.08015959 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.081153114 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.099719814 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.08120509 seconds)
  done (took 324.494558861 seconds)
done (took 661.020516005 seconds)
(4/20) benchmarking "parallel"...
done (took 1.081691123 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.340872919 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.480279579 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.200443541 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.343111868 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.29387984 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.264265963 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.292904631 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.387893729 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.324465996 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.258734537 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.314001342 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.267221113 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.381839832 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.349523586 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.383134699 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.350600797 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.29185615 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.788389425 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.30717284 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.266922011 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.294613288 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.292613779 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.249598953 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.321594909 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.392496446 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.262318907 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.48917527 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.332526614 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.301270593 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.345961461 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.35974153 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.373335315 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.305339441 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.374078097 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.341095515 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.395613206 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.305989349 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.357094369 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.277689772 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.300207493 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.313811402 seconds)
  done (took 62.954908367 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.431327651 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.276164532 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.405818877 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.392197996 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.02959031 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.390104631 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.480390375 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.274136925 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.277308867 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.411956219 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.42037506 seconds)
  done (took 17.898763837 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.32741133 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.280621324 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.402478641 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.409246188 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.476391161 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.401772982 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.447085702 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.278052032 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.281128041 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.410048408 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.422006232 seconds)
  done (took 17.243506885 seconds)
done (took 99.177055338 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.643913803 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.162540623 seconds)
  done (took 3.887415725 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.11651257 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.103644355 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.093242982 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.097378668 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.095391864 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.094630162 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.146969295 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.106724944 seconds)
  done (took 9.934247235 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.095959193 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.0951539 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.093563041 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.092847826 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.093708069 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.094116288 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.093598852 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.092212723 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.093979776 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.09629135 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.093260726 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.092781964 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.093995297 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.093430094 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.092724878 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.09371734 seconds)
  done (took 18.583379529 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.092984334 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.093976469 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.094250726 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.093392419 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.093153889 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.096310947 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.09301161 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.101287179 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.097005165 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.09262959 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.092909178 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.09437638 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.095309261 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.093255556 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.096153956 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.093509876 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.095369566 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.092850234 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.092318345 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.093510544 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.09421976 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.092444568 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.094290376 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.096689649 seconds)
  done (took 27.346853786 seconds)
done (took 60.859827808 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.67115256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.097523122 seconds)
  done (took 6.849435494 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.097372221 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.093922895 seconds)
  done (took 3.385621171 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.092960769 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.092247122 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.09259727 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.092938226 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.094849185 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.09486312 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.092936693 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.09421055 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.092605121 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.092144389 seconds)
  done (took 12.012606861 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.09359843 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.093864196 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.093657238 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.092479367 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.116383414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.105922343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.095017943 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.094112959 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.102679296 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.10666992 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.093698598 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.296170148 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.102547771 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.329670886 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.10190926 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.100200776 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.098264477 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.095864083 seconds)
  done (took 21.294505522 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.098160876 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.094931941 seconds)
  done (took 3.276779874 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.09478831 seconds)
    (2/7) benchmarking "second"...
    done (took 1.093825564 seconds)
    (3/7) benchmarking "month"...
    done (took 1.093454538 seconds)
    (4/7) benchmarking "year"...
    done (took 1.093239524 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.091836297 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.093578874 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.092691423 seconds)
  done (took 8.735700725 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.543403381 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.258991914 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.313234931 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.571597719 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.700010607 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.01532785 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.701039663 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.016119842 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.903337479 seconds)
  done (took 16.103572483 seconds)
done (took 72.738251619 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.784901971 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.094041359 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.780579942 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.205001211 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.098935951 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.423032961 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.09721642 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.636872228 seconds)
done (took 37.228014004 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.295775627 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.080919585 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.129904408 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.130691639 seconds)
  done (took 19.426587443 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.081025418 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.695688774 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.129978289 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.126291528 seconds)
  done (took 19.218649004 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.591283051 seconds)
    (2/2) benchmarking "read"...
    done (took 1.517956529 seconds)
  done (took 4.208067472 seconds)
done (took 50.237796206 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.096251368 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.095111351 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.092937222 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.095093171 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.09482469 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.09434477 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.096152223 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.094369452 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.094931491 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.094203731 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.093830687 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.093893944 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.092715676 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.092325988 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.093193183 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.094215403 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.093813635 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.09368758 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.092612979 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093528188 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.09384782 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.095099116 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.094374104 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.093106918 seconds)
  done (took 27.340280513 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.166982724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.15733925 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.169609526 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.171776262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.181688542 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.171458688 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.166262936 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.125452612 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.174212447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.14251905 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.129894813 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.179217331 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.133515973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.182533943 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133047339 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.179554467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.169843822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.125596184 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.132909165 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.185280473 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.166820388 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128847432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.18195403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.129268021 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.173549045 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.130122328 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.142780405 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.154286992 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.132823034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.175960812 seconds)
  done (took 35.776266368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.126999011 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.094778744 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.093548657 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.186627669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.093660884 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.093628534 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.092951098 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.09270833 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.095949194 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.093980882 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.093512922 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.092385071 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.092895936 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.093540532 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.093765823 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.092345777 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.126858888 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.273668226 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.096130936 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.092797791 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.149746815 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.093613191 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.093875104 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.092210273 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.093262513 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.093905015 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.092666077 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.092843448 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.094394881 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.093317722 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.093865236 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.141163443 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.129436422 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.093889756 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.210410145 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.159194348 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.093795817 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.612571509 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.093273426 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.097371007 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.094615667 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.092930623 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.095270053 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.094580413 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.151379781 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.094595636 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.093214835 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.093360151 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.093738949 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.093555338 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.093828638 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.094570769 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.110480293 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.093107741 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.098261424 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.093387994 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.092557095 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.093036692 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.09266129 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.09390007 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.09345357 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.15863903 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.092634111 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.09321724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.462445744 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.09355296 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.159750759 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.09356926 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.09391479 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.312763338 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.096162065 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.296097318 seconds)
  done (took 85.009749159 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.093127911 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.092508839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.173822001 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.17719347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.094535535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.094987855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.095071928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.093011473 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767433331 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.09542296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.094224836 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.093605182 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766632585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.096536053 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.094449978 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.177446746 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.094444854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.093054326 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.096403847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.094399459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.09620559 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.093910734 seconds)
  done (took 26.751028754 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.130467068 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.109426387 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.132559972 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.110114104 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.108559843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.109792501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.1347215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.10922175 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13431306 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14183125 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132215707 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.132224169 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.110378168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12975283 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.133384792 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.177096793 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.130912416 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17734382 seconds)
  done (took 21.428124596 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.270426782 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.259387306 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.177756954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.138876482 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.355714286 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330798915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199375068 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269928474 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.142021087 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.259041286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.268640478 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137075768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.329723476 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135796572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138536678 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354888277 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.175136817 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137736356 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206398608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198007412 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269992952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209907001 seconds)
  done (took 28.046723561 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.130200726 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.152884803 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.165356715 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.170168948 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.095792164 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.093904863 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.15521508 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.130464057 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.111513505 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.137681707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.129830576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.096743078 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.190712309 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.153835709 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.181540443 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.130826846 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.150851559 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.155926801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.135961242 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.094235638 seconds)
  done (took 23.846895594 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093884513 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.093354543 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.093886198 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.094438309 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.094296486 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.095266719 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.094375109 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.09334163 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.095239222 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330550952 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.095955411 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.095227039 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.094376967 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.097713142 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.09520929 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.094271332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.095382455 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.095214694 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.093775606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.093586388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332204947 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.094536174 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.09422527 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.095325591 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.093365883 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.094081286 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.09485014 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.093499691 seconds)
  done (took 32.206244125 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142263415 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.09360929 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.097506186 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.095062898 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.093665037 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.157170497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.093531089 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.09350939 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.094465754 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.096728172 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.095903205 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.094823223 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.094318535 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.145709627 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.094808851 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.096301233 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.19383619 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.101738284 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.158434903 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.083044808 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.102838721 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.150976563 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.098511154 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.094932895 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.083248232 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.104696135 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093738121 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.094746447 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.095994225 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.09329845 seconds)
  done (took 52.311475795 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.116095625 seconds)
    (2/2) benchmarking "in"...
    done (took 1.115937179 seconds)
  done (took 3.313725026 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.094607092 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198309203 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.094094692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.292983139 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261635686 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.27055029 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261548588 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189566153 seconds)
  done (took 10.744344012 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.093955043 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.527716807 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.116398455 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.095503061 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.09411616 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.599548908 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.06807419 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.007507323 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.913346492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.967740002 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.187936819 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.626522949 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.063605345 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.4154812 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.217059077 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.953349746 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.358576433 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.669232594 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.176043091 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.230320219 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.860478105 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.208655356 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.094854241 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.094698419 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.093163195 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.026561034 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.98859527 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.538123435 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.269982308 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226828857 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.890822599 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.184967693 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.094411418 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.389051779 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.221076263 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.094049233 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.270892199 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.208977999 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.093562896 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.095691601 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.904714318 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.81220894 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.393521855 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.350130947 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.189829477 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.095216819 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.093315537 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.095870636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.376538792 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.761810877 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.06318066 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.088784064 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242300432 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.096207202 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.849819189 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.109188811 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.095968788 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.028862109 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.682358017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.391317244 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.489902195 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.191370648 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.126308589 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.231909335 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.094920626 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.322774637 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.910359286 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.896066631 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.873493542 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.216219883 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.634867616 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.116632062 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.095096518 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.094864822 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.049734109 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.410451161 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.094924018 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.094514057 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.097933423 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.094029834 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.358620523 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.221750053 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.947852587 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.244410308 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.30694055 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.544507432 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.232874149 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.095959363 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.775141234 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.962355659 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.190091888 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.760572032 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.343135262 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244787356 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.108564095 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.366991942 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.134546724 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.0941399 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.938384522 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.743420816 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.109758042 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.095104791 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.451847859 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.123905495 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.097951719 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.095540222 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.808549443 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.232070464 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.231231695 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.142250937 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.097073279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.095534669 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.710675785 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.193718357 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.098292209 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.612595296 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.068686922 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.641833327 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.372718248 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.316128457 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.468223897 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.119598043 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.392870812 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.907394051 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.098987403 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.649668506 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.999828146 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.683931006 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.364682633 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.233268054 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.997021417 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.167896692 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.096112679 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.24830975 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.181131239 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.09508424 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.095134215 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.095034855 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.099975978 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.095118879 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.230456538 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.497370764 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.992065617 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.109546195 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.345810327 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.224835905 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.967562545 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.34408829 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.833689608 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.245269394 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.097397715 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.87096865 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.393395893 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.824149964 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23400145 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.095273745 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.095526964 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.975168454 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.1190747 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.202224569 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.095218031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.725492941 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.195631781 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.102833054 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.096161398 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.564667095 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242582232 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.09674339 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.225001978 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.899496616 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.370128028 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.111862777 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.418464778 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.222539208 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.096435634 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.096072849 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.094971112 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.894266088 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.776480658 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.248015453 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.753569201 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.892947182 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.197326273 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.284441865 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.209284635 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.407142112 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.355031205 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.248462487 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.099903103 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.108861436 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.095658643 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.618217967 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.933552202 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.530049591 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.983306993 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.146185301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.072385559 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.185853095 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.918788818 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.114214778 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.838947614 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.118481232 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.207323608 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.09590256 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.097918688 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.263795145 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.293284997 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247343339 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.689967782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.110655325 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.095347041 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.766294952 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.233443491 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.783651552 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.212627815 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.949760197 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.214115865 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.231756994 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.245202787 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.786993801 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236492667 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.094710685 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.844725908 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.253491116 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.095750752 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.164574673 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.825014615 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.903598371 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.895338789 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.757597578 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.071792242 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.681491446 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.357851236 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24589092 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.956385989 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.206129595 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.365895487 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.14218297 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.619572555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.118191071 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.859540231 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.114506286 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.188023039 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.110146629 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.11257637 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.228386984 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.591068119 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.224074281 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.097020609 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.29346426 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.201730165 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.772368856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.234308573 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.224012612 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.475759352 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.04317806 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.206705714 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.370898337 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.143443111 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.037529815 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.10003452 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.455477629 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.064840966 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.126095994 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.185346474 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.889950054 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.27438933 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.389698259 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.242829905 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.097373035 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.095801584 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.333858484 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.192185865 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.096970669 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.472208412 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.096653912 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.168241955 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.18780542 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.100386068 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.095179405 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.334319139 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.251498708 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.429395404 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.613082647 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.711394497 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.933029771 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.233787476 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.786989796 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.237554066 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793301992 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.194439675 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.099426882 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.780682157 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.234048642 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.397377949 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254747724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.22857359 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.789442284 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.253619178 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.401958152 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.256287928 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.228178359 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.877751328 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.663840927 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.361561827 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.535702641 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.138958605 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.661433976 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.207788804 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.695607588 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.088183497 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.805940835 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.180652533 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.158794344 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.097450717 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.097421829 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.663394467 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.06320859 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.099821708 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.899067157 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.829714626 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.043787632 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.857739302 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.19661062 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.100810509 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.095333158 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.098474693 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.035807213 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.178367817 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.700847801 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24148593 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.097455633 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.099058874 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.091680753 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.695684135 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.955058925 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.994601894 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.121796313 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244271594 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.098400351 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.096926718 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.096270434 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.098476955 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.09586551 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.098562884 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.631326925 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.112435667 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.724851358 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.199121783 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.099904212 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.320283372 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.167727603 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.098487388 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.329410101 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.187766021 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.219938283 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.17157076 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.096883436 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.502511296 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.245107726 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.088378568 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.400195052 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.444843225 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.353285457 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.677225272 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.152822175 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.534859581 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.44316117 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.865769085 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.100956196 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.033161378 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.187941927 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.917415942 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.115953748 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.550045987 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.745487289 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.082779051 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.375399713 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.021234238 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.508864783 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.239578942 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171358078 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.098497814 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.097047705 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.177756968 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.350569256 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.148432551 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.398634672 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.316653533 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.104752123 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.405261531 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.201386329 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.349157458 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.134740091 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.112342666 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.098327552 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.09715467 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.592923398 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.023704199 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.195805448 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.100192243 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.027508774 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.967907528 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.014873559 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.775972679 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.012623916 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242662578 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.098567646 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.302800655 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.15351716 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.948282493 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.120972901 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.896941048 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.441602772 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.149476342 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.330138405 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.527655923 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.821209219 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.494263949 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.222022093 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.098226418 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.483849584 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.106892281 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.248806158 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.040891468 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.456587845 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.695991778 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.567469934 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.345039556 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.221855624 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.021975216 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.683005251 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.08496024 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.103377732 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.949434384 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248939625 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.511125758 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.484623552 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.395967436 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24730953 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.746351973 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.826633063 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.245776257 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.751572381 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.246031224 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.098217416 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.94551201 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.044451315 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.294792438 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.227353982 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.100650279 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.112744018 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.778550929 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.708324471 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.399086249 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180981242 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.099973909 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.920367947 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.819185817 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.199298405 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.104731904 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.098316226 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.653901284 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.152268183 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.097321548 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.511327711 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.718549845 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.246900687 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.626447983 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.211839992 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248126165 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.384941776 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.565237108 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.319068246 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.165504121 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.098408847 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.09849513 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.096997415 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.683592254 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.112552267 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.098247077 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.717215087 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.24715047 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.867311295 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.069106037 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.36253343 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.174980033 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.539757951 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247514059 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.599826364 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.993794794 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.186813441 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.390196381 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.149162362 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.228851098 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.882811386 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.211135543 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.098388961 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.073318341 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.474130431 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.48747893 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.534329008 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.422780437 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.191106843 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.796664891 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.217581063 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.91606219 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.118773361 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.09927763 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.612385089 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.245177232 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.569134165 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.258741864 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.588283393 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.221426746 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.435686001 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.34094333 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.197625293 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.098623011 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.097798491 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.117116731 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.162883585 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.67883471 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 4.983858384 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.59690323 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.24059633 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.975875225 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.652440653 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.378639942 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.313902166 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.407031814 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.427247149 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.135923996 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.095090386 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.502116779 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.1876224 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.280013218 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.20137011 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.911299832 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.177610132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.101111237 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.693252413 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.114038372 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.097408808 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.09827878 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.02477796 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.88520768 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.21235782 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.361683891 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.216174849 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.109101822 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.724908861 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.393968664 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.142687705 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.103378751 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.105062035 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.992452309 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.216250148 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.098716821 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.461080048 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.260969455 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.423105964 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.935565351 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.552456935 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.195402903 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.100212973 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.097904372 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.821876573 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.718843808 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.13406188 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.452302217 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.129718929 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.637367347 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.07259281 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.579656232 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.645069617 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.146105048 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.231081655 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.098814122 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.133763686 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.030443829 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.029096014 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.867109201 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.571051276 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197785174 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.942756684 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.1299892 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166819372 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.278428831 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.174221962 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.098536627 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.099470927 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.098715505 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.616136114 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.08280917 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.101809982 seconds)
  done (took 1436.631487849 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367362 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.098755271 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.097745504 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.099014257 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097442782 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.098404637 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.099871399 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.099125159 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.098621648 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.099108162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.097930897 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.099445346 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.100871964 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.371518152 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.100252281 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.098372231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.099330975 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.099031487 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.100190291 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.099958645 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.097753774 seconds)
  done (took 24.706260573 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.101858069 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.09811781 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.097989615 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.098816512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.09803583 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.100676845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.099216548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.099216321 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.100482403 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098869662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.098691732 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.100822486 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.098320743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.098967082 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098979144 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.098480606 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.098984523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.099866675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.097833138 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.098611697 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.09983197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.098214184 seconds)
  done (took 25.269307219 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.098324758 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.097866728 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.853223992 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.233492857 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.099589779 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.098191113 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.099536254 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.306479068 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.148635328 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.002040016 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.509767894 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.132710242 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.101917682 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.294836468 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.203116696 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.098276623 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.220831046 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.099467375 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.09848987 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.099429984 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.100682643 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.347091348 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.244396223 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.0988187 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.955944177 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.250131233 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.099342774 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.099055427 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.098251026 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.091878719 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.187145544 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.102887359 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.996132051 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.907070292 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.456860378 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.003975972 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.19689828 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.102930296 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.099392219 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.099074296 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.320832548 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.868776304 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.103284554 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.097945736 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.420889871 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.225251765 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.101934162 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.4616112 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.132313226 seconds)
  done (took 88.254751232 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.099285052 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.227983563 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.152539536 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.099527775 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.232557549 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.101149482 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.160920981 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.100398911 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.10037234 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.098094414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.235815392 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.243856414 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.099315944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.09923774 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.171040632 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.099873763 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.100239468 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.099573084 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.099541449 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.100096419 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.099279757 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.153306181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.222837714 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.242979071 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.101530347 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.098896513 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.099879141 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.100188695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.23868445 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.100028049 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.099342776 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.100262968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.232614068 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.174298157 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.099199876 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.100949052 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.228326219 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.099117362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.100383458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.099207122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.09940802 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.100938187 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.153115575 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.24140488 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.099322323 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.202741308 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.099579258 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.100022771 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.23632606 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.099782888 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.100848646 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.251063652 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.098617435 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.098831699 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.099992684 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.225099465 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.097980207 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.10247246 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.101864805 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.231143831 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.100474812 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.102950535 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.243113998 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.101524132 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.098939587 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.250708731 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.194692484 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.099333875 seconds)
  done (took 78.636331799 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.10058557 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.236823553 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275847874 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275273839 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235431362 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.223796975 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239021035 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.23709292 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.236052827 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239491084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236761836 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.204131168 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.206991218 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.204650431 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.239572095 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22212693 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21879503 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220875257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239442232 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238914544 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.220461398 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273895489 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236273721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276044759 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.45255308 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.207648049 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235400079 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.240353583 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281050705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.235587573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.453320742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.240051707 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.235715131 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279111755 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.451160705 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.234395344 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.101258325 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23775345 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.239529099 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239128529 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.207521424 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277180726 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233299656 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.209366578 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221977393 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.233062445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275509212 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.454178309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20352973 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240267916 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.236715303 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278380408 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23398962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220553914 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275724053 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.208702172 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27466205 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276979065 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238986453 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274546168 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27448768 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208565569 seconds)
  done (took 78.549951722 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.099344654 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.100421005 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.183025472 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.101814645 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.099502581 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.185460703 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.098724161 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.10007891 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.098505945 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.099729035 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100370565 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.183521711 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.461394435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102320454 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.185910509 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.461374822 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186813443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183221337 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.100352202 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183381392 seconds)
  done (took 26.405639886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.100139823 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.101727196 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.098993482 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255995465 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.099719789 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.234826073 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.09984072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100357618 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.099016446 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099504521 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.099542956 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.099495496 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099741558 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256223804 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.098948456 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.234685324 seconds)
  done (took 19.266105751 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.099705851 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.099720057 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.100981605 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.098965794 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.098918035 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.099284208 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.099476779 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.098446243 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.099833609 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.559006228 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.101886015 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.101494101 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.100020862 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.098475822 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.099678081 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.099525188 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.100862928 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.099436945 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.099253626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.099680183 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.676022958 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.101598249 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.102049111 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.102135732 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.101107138 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.671273424 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.101575634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.102464819 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.099593789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.100126637 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.099831632 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.572025581 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.100454067 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.098081249 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.100179592 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.101397307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.101433164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.100311595 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.101971062 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.100510335 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.099576986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.099558571 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.100305324 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.101174751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.100224689 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.099224361 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.099004807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.554013968 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.102809271 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.100054076 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.100232368 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.101171519 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.099372065 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.571133361 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.102580762 seconds)
  done (took 64.609137195 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.140084092 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.160115736 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.099575536 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.100468458 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.153909201 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.139422901 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.141927193 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.117087477 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.137904651 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.100646421 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.158790499 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.115799279 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138463094 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.153845388 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.162255249 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146206084 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.098756693 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.173711089 seconds)
  done (took 21.52661696 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.100028099 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.099407505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.100387462 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.099983322 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.100372699 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.103559605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.099655532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.09949466 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10070941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.100676896 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098592807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.099739248 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.100115788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.102242949 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.102364547 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.10059818 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.101376035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.10185942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.099041012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.100079763 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.099643559 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.100273034 seconds)
  done (took 25.29824264 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.132153446 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.145755721 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.100728797 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.102048761 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.10183039 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.123003422 seconds)
  done (took 7.794047681 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162865092 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1633306 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.138454989 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156072688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168045607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191262606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179687168 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184652947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165407671 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399522829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185089177 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172284235 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163788349 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232812387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164060761 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173169999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183957255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188302784 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.150740556 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182358639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188831665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17114827 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191339864 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185269831 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183415087 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230631729 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167163791 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401480542 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192928831 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167960073 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167005382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183959971 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172619794 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390228098 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.154382111 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168346373 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18956609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180788691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168671551 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226037197 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.138095533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166330621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163819151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193914961 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166521061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192244912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188581366 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193466493 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190044214 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401902653 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169216601 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225147391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166569519 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172998614 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165090244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391513846 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397963952 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22445726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163037673 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397370247 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228309798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167629355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22435595 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398497995 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166090488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226288976 seconds)
  done (took 80.778825222 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225378844 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.141460453 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198386404 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403575531 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224602547 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185106359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192114455 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19639701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19823372 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162663592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192461234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195440166 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227607289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229404892 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190846082 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189858273 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186616548 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22523287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163963792 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393058069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184502024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228146832 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228167569 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226522771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390654731 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184388734 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192897861 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189094948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185641513 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189508791 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19492068 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196989154 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226804421 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.142121521 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225190353 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189423051 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190409253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197019449 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191186005 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179692228 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231254047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190974487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18997287 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188469847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393994624 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194114805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201458792 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16253295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192911449 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165182459 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394249184 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39104947 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405236469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226746183 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194535438 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191794384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194123768 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192981046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196257393 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179547633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226685859 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188580783 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394519139 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185582724 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20005737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225715189 seconds)
  done (took 81.643712102 seconds)
done (took 2407.228418888 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.166823237 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.126441897 seconds)
  done (took 13.381335522 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.100599758 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.101117321 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.25508059 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.101716566 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.13470503 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.170031524 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.160721407 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.110259321 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.100751718 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.188698832 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.100940486 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.237441828 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.202832953 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.103236035 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.105225058 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.111062145 seconds)
  done (took 39.38845885 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.211449622 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.651297336 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.054189457 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.899982159 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.136764149 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925369361 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.444144843 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.836319056 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.410591247 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.557156249 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.366547704 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.004631031 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.035395471 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.293270562 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.614826285 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.689213087 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.77068394 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.837076118 seconds)
  done (took 60.82797584 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.111454265 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.262437413 seconds)
  done (took 8.493183991 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.092776256 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.105626863 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.103913596 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.103750486 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.129821433 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.152683958 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.131739071 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.140035176 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.129929268 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.13037959 seconds)
  done (took 62.330250406 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.246630473 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.575209487 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.416113693 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.546960666 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.712577558 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.572557663 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.26303079 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449272785 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.189813013 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.089049658 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.35810198 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.487994473 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.9440965 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.360708499 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.732711788 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.364054276 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.860312779 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.464080797 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.445331213 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.540659468 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.339585769 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.217575507 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.554093028 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.866265876 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.094903703 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.701834851 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.371229836 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.250618854 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.174512947 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.237817007 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.477397994 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.116154743 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.412216887 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.107254285 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.271404313 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.771523638 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.803624153 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.302733743 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.667787451 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44561574 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.537147999 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.77143107 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.167603224 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.77978027 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.256779235 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.448596366 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.04850773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.349757275 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.185295841 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.221604121 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.687338541 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.275258772 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.244437504 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.214983948 seconds)
  done (took 154.095089522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.087773439 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.48132929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.251089587 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.090506579 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.499184208 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.311449775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.868702503 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.519264995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.099531653 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.331413555 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.271480182 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.226844174 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.092966485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.098230074 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.100111828 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.097852096 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.290431609 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.505081513 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.096550281 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.099727663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.31633403 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.338480832 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.230378925 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.094563308 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.276656041 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.343781994 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.487706813 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.225046302 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.485420806 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.091488539 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.503679892 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.097522592 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.099678002 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.998809458 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.470703186 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.426487118 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.487851655 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.091092794 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.83472512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.097623544 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.736017092 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.301014938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.43359179 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.24404981 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.354524092 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.330567604 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.696402186 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.090056007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.847170756 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.275520644 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.315203426 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.331108092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.386637315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.097875831 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.645240567 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.098204278 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.096535106 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.360829837 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.253391745 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.220335181 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.094243011 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.099008034 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.097894816 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.345224644 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.092496306 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.218046573 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.092592269 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.100419546 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.218408678 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.220924545 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.262768446 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.347007254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.344733598 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.341304544 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.091123764 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.334915796 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.484730367 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.331522761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.093071209 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.096435585 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.539749094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.546193016 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.260318651 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.339321742 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.411442653 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.386275252 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.648298908 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.090074512 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.327022114 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.26747719 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.46074095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.362316055 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.461531638 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.971162275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.092793239 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.100254523 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.245173276 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.230553768 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.093452278 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.613837634 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.365167636 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.726829037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.279616316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.552951852 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.205888072 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.092787021 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.655440767 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.093004926 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.323725635 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.410125043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.100541154 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.095205881 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.259131332 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.090013938 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.094057936 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.508734441 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.4784192 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.103953941 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.263270645 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.095077492 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.357501125 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.899037994 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.33471553 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.967564374 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377027886 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.282868539 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.380760309 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.093861242 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.352513108 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.363700395 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.503904459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.418681175 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.094931022 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.09875511 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.410814394 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.091931997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.098614141 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.276120627 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.076774876 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.279276558 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.095683492 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.474963566 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.263023157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.477474199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.094875613 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.36961726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.346086642 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.498965547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.10277002 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.235828994 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.092537445 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.060155568 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.262676711 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.09031058 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.095358124 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.927357105 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.098638386 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.250453175 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.326417458 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79034748 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.507151943 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.462547782 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.089101498 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552037929 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312019986 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.535847049 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.615184282 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.274470066 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.829328318 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.33782075 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.096078077 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.341694549 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.392254925 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.091014181 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.09874151 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.83115567 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.206629032 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.097052874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.268577458 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.773001006 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.533861772 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.309351426 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.093092434 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.467792274 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.095147746 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.28809733 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.595495629 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.510183143 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.096691887 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.099387876 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.099917861 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.102812263 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.315823811 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.342881713 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.660877162 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.248810177 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.394048704 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.314723762 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.418819902 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.555720962 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.103986053 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.432563096 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.093081587 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.533631264 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.101521282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.278896653 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.350927381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.092523185 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.32504901 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.459706979 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.168643412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.497661991 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.094274364 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.099937428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.678346971 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.277740487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.51885758 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.091419488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.198221555 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.468900601 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.224176062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.296962906 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.337898489 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.094471209 seconds)
  done (took 725.9658329 seconds)
done (took 1065.573199348 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.091614117 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.105603503 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.106448454 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.100857047 seconds)
  done (took 25.499773972 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.070325559 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.169795147 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.278006788 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.102604858 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.451212856 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.157281891 seconds)
  done (took 11.328077888 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.089135692 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.099601311 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.098772719 seconds)
  done (took 19.374962148 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.381321246 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.605292474 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.252572062 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.199190914 seconds)
  done (took 6.537883328 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.127705816 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.131107422 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.101830912 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.131152184 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.102203178 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.102500391 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.128972884 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.120306261 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.101625733 seconds)
  done (took 11.140860812 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.6113367 seconds)
done (took 80.593426434 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.367161297 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.4021008 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.104989937 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.413251791 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.229173018 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.470960073 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.222409415 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.114526471 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.450730288 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.522275502 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.551186363 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.197378613 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.494045486 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.515893118 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.355704164 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.128568723 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.113931643 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.162716895 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.671869047 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.266773167 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.511947725 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.235729181 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.091898972 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.127329969 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.009819936 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.236548137 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.349944411 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.928320601 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.057974361 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.125411324 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.185733147 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.580515127 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.372604759 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.452573509 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.20106433 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.94595207 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.522446445 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.198134876 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.235219263 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.500412416 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.364519163 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.193825849 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.089692405 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.267115419 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.448248172 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.118009201 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.061476 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.260132343 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.62548827 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.265053876 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.542525677 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.104722758 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.719234715 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.177066972 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.185087614 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.091602708 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.013928009 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.634427737 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.257903073 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.414777349 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.11409525 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.175356654 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.014915178 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.132313226 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.282676162 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.378206723 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.518164312 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.190799374 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.561017496 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.129406733 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.110276864 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.127733739 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.789630337 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.244592864 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.089969707 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.246922521 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.421404905 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.266592532 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.097560177 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.345432941 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.33304493 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.092351934 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.240612974 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.459441379 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.269366086 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.484889408 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.542598554 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.448263662 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.4780655 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.925802366 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.701656897 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.008116904 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.204604575 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.136691539 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.517419421 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 6.218017958 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.41782825 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.602831453 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.238009786 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.642218228 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.130800835 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.111021632 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.450891315 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.405088601 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.90331827 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.133588009 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.228597258 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.089795146 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.396999499 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.852172618 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.2039723 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.653187043 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.101885714 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.16470224 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.634988991 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.102278238 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.453158791 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537217886 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.138149048 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.098713435 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.390587307 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.105279044 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.222184612 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.665039652 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.474968308 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.314142051 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.09503266 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.339479196 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.103476535 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.296472022 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.104830539 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.681481958 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.591422582 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.135402681 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.381102253 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.2274013 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.089710737 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.463583773 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.154145633 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.324202485 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.434364655 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.432423261 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.257439019 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.090006438 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.423083222 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.102132914 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.342957017 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.441331745 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.265858688 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.409466512 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.2281108 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.118130975 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.027787865 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.484396397 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.75387861 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.637189328 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.344718353 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.23219684 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.627834097 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.35036872 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.949517389 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.193950575 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.15297166 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.104133634 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.119837735 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.164362068 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.092698987 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.10406523 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.391951673 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.314061163 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.59607267 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.933360523 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.831537865 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.421331014 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.252754429 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.018144621 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.69484334 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.10715043 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.412335316 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.606052584 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.323365784 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.128193905 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.09397473 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.15124539 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.804779687 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.13566548 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.375758246 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.592264105 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.403057302 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.455232646 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.327331364 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.139263321 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.431829803 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.377378192 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.419482819 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.314440233 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.486351037 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.242234319 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.441639031 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.135211329 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.423699673 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.104569816 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.171098013 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.327747668 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.598235713 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.48113326 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.323970281 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.268606824 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.409958945 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.102550564 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.369793558 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.202795239 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.475787715 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.124087387 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.367002374 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.202665251 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.509204363 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 1.988959416 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.220267 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.418668872 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.253293289 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.217610192 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.589361723 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.120214944 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.404584675 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.263110222 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.295473123 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.343847123 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.131988951 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.233027217 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.29924697 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.234306816 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.331149676 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.955859774 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.428145145 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.731893219 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.307379462 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.090013983 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.127036005 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.127493773 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.113278999 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.375065337 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.263354414 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.455839561 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.368707053 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.268702631 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.203061247 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.132262603 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.504627835 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.987356946 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.672086457 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.014716916 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.132138818 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.090724812 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.524331025 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.461693836 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.167726362 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.23694811 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.693276269 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.138154851 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.260870754 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.105370876 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.104569496 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.844314669 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.235526997 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.34970933 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.587316615 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.105790169 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.364296762 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.142757157 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.518053779 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.624013096 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.154604474 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.225412846 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.479744228 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.097373397 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.478295142 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.123436305 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.282360561 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.475086602 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.225944423 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.215164022 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.09383518 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.138080144 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.628433976 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.336121822 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.565751209 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.132157897 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.437415937 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.271256234 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.335981307 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.120934059 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.229361357 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.442494065 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.259337693 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.440892124 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.106268661 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.256731888 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.354118272 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.123763642 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.090331669 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.241359494 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.694930341 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.629534026 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.386487039 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.254122946 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.054725238 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.344728939 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.099818919 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.656552449 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.244256553 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.212021576 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.7567304 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.59277535 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.105134074 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.38272004 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.09563161 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.465484456 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.129925829 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.11115362 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.257526598 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.186985261 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.09119369 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.56585773 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.287489211 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.58525112 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.205921408 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.968625915 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.349056233 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.285689827 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.214819454 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.380347177 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.794548462 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.119671593 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.244578828 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.718624474 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.2891791 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.134751224 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.38403338 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.107987726 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.710398666 seconds)
  done (took 863.038799965 seconds)
done (took 864.30032409 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292697795 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.476533736 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.342220608 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.00417779 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.907918306 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.745338138 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.358277302 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.332422885 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.176746354 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.360674858 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.051782432 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.907412404 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.194710729 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.217283586 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.19774736 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.236075608 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.304781293 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.341251058 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.216041777 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.035340738 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.493318688 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.034752681 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.540305525 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395595664 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.478372943 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.209336005 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302980884 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530592392 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.53395061 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.289897972 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.318578346 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.328190946 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.937359292 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.348662909 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.19839842 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.18247602 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.982591909 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.200496522 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348217979 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.183333885 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.475633922 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.224803437 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.815637991 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.004209833 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.877686801 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.516425451 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.985325629 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.205484332 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.237860843 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.307441156 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294601712 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34985694 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531634308 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.309973955 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.948608116 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.00172112 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.535188011 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.98768258 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.825767466 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.308030792 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.622325184 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.204681235 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.308345654 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.331964472 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.216985259 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386350652 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.527575309 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350195512 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.325826328 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.367420479 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345390061 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.324586074 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.216298442 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.229948706 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.239794489 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.362180295 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.943043452 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.341385014 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.890449683 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.207812687 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.066059734 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.011022857 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.055988987 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.178407824 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290467756 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.874409379 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.077237933 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.066514822 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.219301574 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.325238304 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.045713966 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.343481011 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.564246366 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308622698 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291729187 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.343837637 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.086997471 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289671089 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.079540034 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.327026009 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.883538585 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30417903 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.140935341 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.201022016 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.202735936 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349082993 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304459751 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.518391604 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.324809187 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.265504397 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.476649124 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.240140875 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.326566622 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.217193783 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.17647882 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.877117608 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.377364573 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.989091667 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289829813 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.776247963 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.378932414 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.200903297 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.511491289 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400400464 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290637619 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.199261357 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.202736834 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.060534063 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.204255983 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.200094139 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.288041027 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.555075991 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.30936111 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.993196446 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.327148538 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.774149541 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.342732837 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.326009695 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.176035245 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.938524785 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.197889156 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.063700483 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399359756 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.475477697 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.344978264 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395061355 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.218632874 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.373975502 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290887957 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.216335935 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.325103956 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.230419093 seconds)
done (took 244.437220743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431165761 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.398145491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.377543129 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.398373859 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469205218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.463075548 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.167736655 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.562723539 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.21290797 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.514854079 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.346269358 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.957150498 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.424761986 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.310352797 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.453514468 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.385502087 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.214927953 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.359093295 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.610450958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.45770112 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.848591753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35035747 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.256860598 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.519624413 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.091102076 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.854212225 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.457544548 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.237654809 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.390205206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.849470332 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.89828842 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.367852896 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.456193694 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.936045978 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.541318924 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.826155042 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470235354 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.916019672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438137911 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.428418353 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.377520303 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.94456519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.882962451 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.888930256 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.262172089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.451466929 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.163912421 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.030729733 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.095683196 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.839669461 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.365401588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.897343991 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.961113405 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.438023578 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.300200331 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.858536197 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.590946067 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.595616968 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457434944 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.452571268 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427914003 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.52000019 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.516032237 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.303370732 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.897533509 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.397149336 seconds)
  done (took 147.657871906 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.525798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.390498508 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.541948921 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.598342309 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.66875609 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.557696066 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.678051144 seconds)
  done (took 14.05192746 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.171559726 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.153924312 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392807349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.394149876 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.15534486 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.276648943 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.237650909 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.887408894 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.373541219 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.194942473 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.4876128 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391512832 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.836287756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.866266131 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.239198982 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.420630549 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.124736835 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.218371438 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.208695051 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.410891401 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.890204573 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.860734124 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.343770092 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.238337281 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.15376475 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.191246493 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.153509729 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.121556183 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.189642041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.128513551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.160159451 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.262412157 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.142406485 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.846237334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.176986644 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.475564484 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.155958705 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.19727355 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.28144259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.100174164 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.138332946 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.153949032 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.282740746 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.156769531 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.131698032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.338614286 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.136903348 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.160220624 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.132718824 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.147699472 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.345213122 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.145733372 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.172060072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.815380138 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.359214512 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.870107704 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.219193149 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.145290309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.148002135 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.204175254 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.145473582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.407758483 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365672887 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.131046972 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391461824 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.426127813 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.146978795 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.135649292 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.132372273 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.367752042 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.142612438 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343253954 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.153328329 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.206657146 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.19834482 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.282706005 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.341298113 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.938160161 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.914382567 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.795410489 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.122079535 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.133394816 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.449095483 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.09238036 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.818844771 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.138191594 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.197446527 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.812321909 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.057057958 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.151094652 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.458507618 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.133949703 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.202685321 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.202397103 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.176140339 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.210013317 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.371233164 seconds)
  done (took 151.689508256 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.458811305 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.761905119 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377776033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.41099743 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.553487711 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.622366849 seconds)
  done (took 16.276363629 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.504765559 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.965411491 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.162707926 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.163422253 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.205343836 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.144529339 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.14360119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.36710817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.292999105 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.159122994 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.145287208 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.175350839 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.145668234 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.28596202 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.142533252 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.155046917 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.14247983 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.162904793 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.155232452 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.21277289 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.45052228 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.201756082 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.212236352 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.054101777 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.215736185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.156317219 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.074844318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.157720345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.153995899 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.493495321 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.34284484 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.147259348 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.001354916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.544529231 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.924891625 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.060092665 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.303547876 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.16962462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.199798386 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.143473861 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.178916069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.214205948 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.167421876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.165310581 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.562039162 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.994538949 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.237171379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.408170501 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.144794109 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.176615561 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.166644639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.174396155 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.146316065 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.166050948 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.682117836 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.639449096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.133735157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.151395122 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.203430129 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.040093968 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.230560351 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.149060207 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.531879715 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.103634626 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.814844487 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.168539384 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.061464841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.291968393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.218238502 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.163906024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.17162725 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.171832398 seconds)
  done (took 117.862656117 seconds)
done (took 448.63098925 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.127342365 seconds)
  done (took 7.220403136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.142887364 seconds)
  done (took 7.382466183 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.096425992 seconds)
  done (took 7.199839067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.110274787 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.115906867 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.116928394 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.123946791 seconds)
  done (took 25.607255554 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.302811841 seconds)
  done (took 7.403557459 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.091743371 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.11632769 seconds)
  done (took 13.410073446 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.264912921 seconds)
  done (took 7.383439607 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.462191178 seconds)
  done (took 7.569687105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.103652249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.130410374 seconds)
  done (took 13.363074657 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.09131872 seconds)
  done (took 7.188951591 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.565476266 seconds)
  done (took 8.755611757 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.092448059 seconds)
  done (took 7.227415612 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.152577051 seconds)
  done (took 7.252488681 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.223809111 seconds)
  done (took 7.321906522 seconds)
done (took 135.376573136 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.091561994 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.102037443 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.102326258 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.100716075 seconds)
  done (took 25.488351518 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.427438616 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.434365899 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.419654573 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.488661406 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.384621551 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38018082 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.436452748 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.434770516 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374649267 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.477631172 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432524547 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.582713904 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.482703727 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.405859393 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.405477893 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.475723047 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.578583957 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.427592786 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.372369457 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.410293599 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.57859541 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.580152766 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.864554322 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.852270391 seconds)
  done (took 36.823591853 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.312342979 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.46735694 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.271689025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.52023476 seconds)
  done (took 6.666873409 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.137084166 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.477502142 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.460203037 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.518899897 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462167981 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.278089527 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.460559893 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.31232186 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.281666375 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.241831178 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.726954615 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.257174049 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.267607683 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.421788766 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.274731785 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.104046794 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.103377415 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.241137961 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.480128359 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.349700009 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354454676 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.460951034 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.461294177 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.460888407 seconds)
  done (took 33.686930021 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.862005852 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.033437143 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.462280781 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.015458178 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.804531117 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.895024305 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.385520544 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.604506458 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.370686373 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.346836805 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.824884131 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.837727633 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.248689047 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.987520094 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863887483 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.282542365 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.28294491 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.95228823 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.743444142 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.403818821 seconds)
  done (took 38.303131899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.092403189 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.100178231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.34892224 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.2691855 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.092500594 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.103143716 seconds)
  done (took 28.099367934 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.189799353 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.261051235 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.423538291 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380545971 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.260407123 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.239015305 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.769079914 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.325730246 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.881078672 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.917256093 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.766551602 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.559125292 seconds)
  done (took 22.074732442 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.091567306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.142519953 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.10868258 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.277089369 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.935353047 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.994085395 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.422318631 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.094385239 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.190064408 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.298970677 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.964177477 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.272535356 seconds)
  done (took 39.90447136 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.283813988 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.329280478 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.449191044 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.966131469 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.63719458 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.191810577 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.531865636 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.612007681 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 4.18573503 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.953276095 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.639759892 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.16011895 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.635377732 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.076591513 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.096603815 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.439202094 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.923168171 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.597429244 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.545019986 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.178847756 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054278659 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.251318523 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.101695158 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.651649972 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426044143 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093359363 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.308431013 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.343902208 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.092722878 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.313154802 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.102353498 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.572653149 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.269806577 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.403856314 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.63234298 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.185290985 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.212577447 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.249741893 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.683076572 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.393852055 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.239672006 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.258048254 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.096487516 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.320176905 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353965605 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.882698447 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.103550072 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.751354811 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.08053883 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.249501473 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994761403 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.722247637 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.551406796 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.850830804 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.240131633 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.434066305 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.259053863 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.25432318 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.398874335 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.166491479 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.286612619 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209692979 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.28860152 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.069156512 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.608732387 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.445133262 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.420691086 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.42069605 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.395338895 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.413929759 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.473994991 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.232921458 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.9224013 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.243369617 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.626600998 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.012986857 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.460186859 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.095750257 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.838067356 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.634186602 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.077306905 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.214124895 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.784847541 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.059489979 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.094790955 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.265429664 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.967412232 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.068774097 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.196369399 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.170128257 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.498051908 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.235784487 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.246557001 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.366608413 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.794310907 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.080401987 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.89883322 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.396381174 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.066894335 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.663076512 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.114273071 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.073820213 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.1154614 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.671971662 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.514221756 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.15128314 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.876613826 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.774356021 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.434173565 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.725023293 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.250471791 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.09514966 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.477728449 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427012232 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093109386 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.858396118 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.245042717 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.226794845 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.458281188 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.098536656 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.076895952 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.489831211 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.266867304 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.119172782 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.32259652 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097473836 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.247732948 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.094470234 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.912503796 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.154917309 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.342256142 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.6304473 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.318974134 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.186476933 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.0655543 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.24365169 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.605714508 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.1922398 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.43702824 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.543111755 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.702283509 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.581985944 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.088349724 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.933335323 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.586021334 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.370229942 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.435525994 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.733069646 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.280069059 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.19212666 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093328098 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.263347702 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.100969975 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.660270484 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.098222051 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.846886964 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.882912873 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.449558841 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.096307245 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.082452821 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.879392552 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.32005705 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.755071703 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.151080506 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.267445647 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.36943964 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.328838438 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.095260458 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.071352107 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.476798701 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.365865883 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.62645621 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.359984556 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.77337491 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.462917111 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.612073791 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.300388228 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.448337159 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.868916629 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.524897232 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.453216768 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.353404839 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.125160848 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099541444 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.176258949 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527150096 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.323815825 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.866508526 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.860877141 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.836764309 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.149313789 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.682321691 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.073710152 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.250547427 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.590095651 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.138335502 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.663213312 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.307177683 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.29282497 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379268695 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.13253848 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.445410822 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.933266019 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.512175447 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.47384483 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.408840481 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077212142 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.311391409 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.603305586 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.610354302 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.238958927 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.514595543 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.35373479 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.158680817 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09968714 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453252206 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.058567937 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.870694498 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408052263 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.915864741 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 3.765895998 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.259841112 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.096322011 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.116348817 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.039902292 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.272739974 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.166059152 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.273674497 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.652165133 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.369880815 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.42570386 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.091713723 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.106243245 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.377815695 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.406682985 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.372754508 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.612193558 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.716143087 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.784919799 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.207756955 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.765583019 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.264304009 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.134734237 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.770097199 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.411088488 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.050722539 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.258919625 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.870241685 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.248673367 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.169070984 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.394665805 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.095449619 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.58550314 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.724800459 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.100555423 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.091826716 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.246843441 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.101168884 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.370209597 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.859447754 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.336206437 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.839751111 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.392062505 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.326111453 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.258469261 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.507515818 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.63257234 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.890983272 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.072062428 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.251196164 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.193180104 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.426529692 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.094189288 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.380713704 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.730395171 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.773619574 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.925255795 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.643448978 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.34521639 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.293388807 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.570904338 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.353278619 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.442717077 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.054228952 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720558764 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.078850454 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.242712995 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.067941315 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.160140686 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426679772 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.472789655 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.585126882 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.174090244 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.632068651 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.519165166 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.167339597 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.289281342 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.362421037 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.094509455 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.420442701 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.094576507 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.126160912 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.525642317 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.096308203 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.497753332 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.295715254 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427132548 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.252363303 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.678636197 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.141413814 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250482915 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.857672973 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.277734741 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.237800175 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.435348343 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.182758308 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.141157048 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.113351795 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.617033072 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.731151663 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.587862847 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.715812393 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.706990096 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.443944736 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.87233477 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.097829709 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.309312325 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.253871962 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.71101683 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.29131609 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.503409651 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.138606639 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.293378955 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.428026051 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.281875312 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.656287424 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.153448459 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.705459401 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.325849368 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.616421319 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.660891061 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.882864269 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.590566796 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.123425362 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.638532474 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.072589285 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.266559971 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.401487576 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.835068635 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.757205205 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945785118 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.89351769 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.264937363 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.531998878 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.187064483 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.884659529 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.259924269 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.334240428 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.301460622 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.238750354 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.066985605 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.711482801 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.878955012 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.376433663 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.267018519 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.256700448 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.24854676 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.253439543 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.650148569 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.411723043 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.868200332 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.583118214 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.335020166 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.068707389 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100090726 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.80132621 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.282735229 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.191485433 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.411380918 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.543114739 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.157958202 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.11099243 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.090353484 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.667094908 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.830085681 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.826865629 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.447446672 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.653652865 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.707651612 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.87071835 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.87480382 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.303027749 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.462760611 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.513243256 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.025467494 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.531925279 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.430918722 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.247367631 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.06861744 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.264596294 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.113492279 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.123249523 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.908899839 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.394151092 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.184717463 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.262177243 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.728116166 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.086170205 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.142894934 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.70889519 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.324769919 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.294408377 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.095584842 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.709856097 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.513720008 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.2634301 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.085736486 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863289124 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.070436733 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.309746927 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.075959856 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.298041619 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.934199481 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.197688241 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.76793195 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.654436621 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.147935904 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.309473658 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.072775103 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.165584279 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.121179402 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.782290931 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.922343545 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.347612764 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.614058426 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.260102521 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.100676114 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.430289882 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.235079909 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.426958335 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.383428032 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.594369274 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.519659947 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.474712288 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391029941 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.61451972 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.249655374 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343904952 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.066075327 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.101422747 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.121860701 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.474328887 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.472386795 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.094404758 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.66427484 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346828055 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.234176223 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.277841477 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.205741043 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.668613927 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.307617276 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.242389135 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.265185537 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.342566743 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.458300877 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.10015573 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.278444603 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.094540301 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.100821942 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.30932588 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.345853381 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.476682212 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.415147718 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.697293936 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.255399006 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.626330884 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.058951998 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.632045307 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.101709836 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.225532332 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.467536689 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.096049687 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.594092944 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.744043819 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.260965331 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.79506955 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.195696893 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.102744769 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.289881201 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.599496461 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.111138218 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.754951386 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.516262532 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.09617419 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.583209501 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.179214263 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.26236852 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.881106169 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.597582601 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.097702514 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.178415183 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.244432444 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.652465976 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.79869307 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.120775112 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.269031669 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.922457292 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.083669359 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.104435231 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.221512003 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.637036079 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.106586076 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.684803131 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.260485083 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.266892586 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109567298 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.242219842 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.096612763 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.313049592 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.287235235 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.343325581 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.368819805 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.259409944 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.102941108 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.71475855 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.800419984 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.207458553 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.31119653 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.061847616 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.502043814 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.920234698 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.068169316 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.678353717 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.335527353 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.294269062 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535106043 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361895054 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.137530335 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.284532245 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.094791711 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369247016 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.25805879 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.669004107 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.359050072 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.218044078 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.427961471 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.123839291 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.659597864 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.571514411 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983740528 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09748613 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.41693929 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.095374412 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.198509401 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.750969525 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.296800952 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.23944414 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.352537902 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.688447259 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.427246668 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.235363331 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.101198013 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.315042856 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.608008341 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.067894672 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.189296114 seconds)
    (567/608) benchmarking "2d"...
    done (took 1.987333495 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.30900303 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.425032503 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.070257386 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.262945124 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.114429192 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.082431726 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.600793056 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.096975772 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.455910172 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.070006788 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.634305144 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.080938324 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.200422125 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.262678169 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.50279275 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.096664192 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.821187353 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.270276197 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.102163915 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.098531129 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.459173582 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.184389091 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350615556 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.573663924 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.325118514 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.443233688 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.993435336 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.89872741 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.117400048 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.409909883 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.094399353 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.663582441 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.191334085 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.61897135 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.887963958 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.19446907 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.66202463 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.347206308 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.828912854 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.243944901 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.578557147 seconds)
  done (took 1939.191753841 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.131402599 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.222857769 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.180843073 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.158713124 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.135600735 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.150722839 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.154075183 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.176152563 seconds)
  done (took 50.406843401 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.09755611 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.084010518 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.551790054 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.284636851 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.128524148 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.300608221 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.261477668 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.609545692 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.302714459 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.151836764 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.164401344 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.159359713 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.108292015 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.14285333 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.988624126 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.191351564 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.101789229 seconds)
  done (took 90.73666595 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.124058096 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.133865258 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.136547098 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.603429955 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.141250268 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.363539572 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.116997039 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.101918657 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.165627908 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.769232144 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.106439109 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.253911557 seconds)
  done (took 78.157181199 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.135413086 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.134650585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.133971643 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.134988077 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.132684411 seconds)
  done (took 6.771816316 seconds)
done (took 2397.435933391 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.326701234 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.634993432 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.667551259 seconds)
  done (took 4.395669036 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.163734503 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.228395116 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.313935347 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.245687458 seconds)
  done (took 6.072973755 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.39077703 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.57817152 seconds)
  done (took 4.063190538 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.56418512 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.107902786 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.652344614 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.095493595 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.109002131 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.105292745 seconds)
  done (took 19.420558454 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.131882924 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.129852995 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.133022032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.120978943 seconds)
  done (took 5.619483095 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.094542899 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.090368148 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.104618142 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.098625486 seconds)
  done (took 18.48096061 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.483745288 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.348742046 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.860192773 seconds)
  done (took 5.801087907 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.915583429 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.480605303 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.901774416 seconds)
  done (took 6.393733484 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.055056748 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.025591776 seconds)
  done (took 5.177213085 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.259080272 seconds)
  done (took 2.355366684 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.580044524 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.587578495 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.967223518 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.98684085 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.135295852 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.425600846 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.422787671 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.395129531 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.79631266 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.621183489 seconds)
  done (took 18.013849926 seconds)
done (took 107.539438995 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.048659577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.528931453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.268563262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.852437613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.206638603 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.274942845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.105437128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.633918558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.457424122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.456737209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.351865349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.204837612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.141536996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.517687618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.142425871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.474724218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.261315748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.06076176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.4508546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.095643427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.11718345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.746788298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.059793305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.757006328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.274271863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.254672377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.240756249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.488194685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.681349831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.254493242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.269983952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.355667643 seconds)
  done (took 152.129859391 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.098188078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.115163572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.115913567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.104936728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.136522744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.115591071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.107952436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.104993385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.845645866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.841651772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.113795858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.160655088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.119039589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.111660278 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.117922822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.10459938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.057555251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.114570647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.118556318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.115267368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.115862264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.028803312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.11593213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.045281941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.056532025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.117767767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.105098838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.115221665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.115778399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.114800399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.11553309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.105232203 seconds)
  done (took 187.986867987 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.095709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.113613668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.118251632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.115808855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.156005299 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.112750149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.107592392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.104766727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.113897731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.114874722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.113672109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.112734739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.117782994 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.105838996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.116953316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.108855693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.117043506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.115198862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.113991475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.113295458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.112781885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.105799469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.113146504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.113745542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.114205345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.115593851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.10544367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.114840156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.11467263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.113973961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.11539902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.104926736 seconds)
  done (took 196.749182298 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.404721668 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.140913597 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.016924138 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.882729098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.055571579 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.131037502 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.877970031 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.409426882 seconds)
  done (took 16.035678678 seconds)
done (took 554.018657153 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.816256386 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.050283128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.289478984 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.362702356 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.725682242 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409843762 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.359047987 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.602136992 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.847803829 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564000403 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.599966407 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.331047485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.939650268 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.373863467 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.299445499 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.599090831 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.533086214 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.829338459 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.315531499 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.972665534 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.329631266 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.951375708 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62421915 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.888548606 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.60198904 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.008636291 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.240187394 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.53488884 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.362944391 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.324427613 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.13855555 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.524939324 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.339714254 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.33630776 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.569217238 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561702788 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.454062984 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.572896616 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.28349906 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.7601515 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.978930863 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.707919378 seconds)
  done (took 75.010719961 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.129646841 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.154035172 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.297078054 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.203377471 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.749213289 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.204306753 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.356127868 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.342236328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.220628295 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.339685738 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.377811051 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.779774993 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.374425976 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.750111643 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.364375696 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.386603341 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.20872431 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.725817633 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.364893677 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.350995835 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.17031023 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.293705848 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.165403625 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.320209877 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.165753316 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.179662824 seconds)
  done (took 36.098749231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.18613252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.288730391 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.390359389 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.503268634 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.361426465 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.155084803 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.477723774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.293200247 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.034739686 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.363094794 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.216357067 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.231260432 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.314227368 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.419373127 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.702846589 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.295254288 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.292773758 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.289889406 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.291432267 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.372455827 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.323439598 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.21403126 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.479440941 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.31924573 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.815227452 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.500387724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.490653171 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.734004162 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.687095739 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.275159154 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.265183292 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.460139299 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.507906974 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.396289788 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.286513728 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.157705949 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.156120436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.218437865 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.060092161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.302771945 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.475307217 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.358492386 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.537325461 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.672777932 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.234751349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.390122222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.595526896 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.225334598 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.264799313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.963057411 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.4443834 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.161803681 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.295809001 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.336975969 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.255171801 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.557709055 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.335793493 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.413942687 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.320506896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.718676393 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.21882145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.52386587 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.297636653 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.237767571 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.445094882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.349576085 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.327913845 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.561169755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.537563145 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.625294141 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.687053448 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.216920636 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.167876629 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.213932246 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.291042945 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.631284172 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.629146387 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.392744664 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.528251047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.460190603 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.698498889 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.596780476 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.138268502 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.808677613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.199167233 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.144971901 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.223642856 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.45944143 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.45721052 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.610063684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67800393 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.43527551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.620998729 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.566913023 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.554691443 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.551006456 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.141018828 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.15683945 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.382814806 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.683532055 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.219363043 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.417983938 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.797424981 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.533731961 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.450680735 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.404228202 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.548245838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.233837888 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.569980166 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.126582234 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.368599001 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.462823881 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.484220601 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.496723759 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.130471729 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.646280687 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.235593513 seconds)
  done (took 228.364572126 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.095522407 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.115908014 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.102784092 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.117387761 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.105372115 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.73456871 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.179986922 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.102178953 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.737225357 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.180437843 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.10244685 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.104400406 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.105510172 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.102269643 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.7213256 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.692037656 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.75008964 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.101844557 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.101659822 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.106657439 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.814882866 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.10316108 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.101154907 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.106875211 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.105165631 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.104515981 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.110068859 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.155681613 seconds)
  done (took 152.063409873 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.161081777 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.564843674 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.192200196 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.253751704 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.202326404 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.171619391 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.671909764 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.294521951 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.230460768 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.170227509 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.16051039 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.387669844 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.409623983 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.765798528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.292676987 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.240800717 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.822905953 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.301256728 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.167471249 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.160089103 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.325078496 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.532058605 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.452238428 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.456422193 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.320403888 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.451026161 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.239442313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.15704955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.286272782 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.655806419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.180845367 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.53900848 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.318821219 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.166720328 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.672322866 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.50963143 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.751480321 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.725807665 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.352355957 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.129887083 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.125398041 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.399479706 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.496655494 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.214707521 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.164024406 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.822039045 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.181767073 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.571123669 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.204725306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.121024705 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.261746628 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.262288819 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.428520555 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.228257585 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.34781075 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.317835864 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.683002657 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.152752237 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.227695822 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.46189757 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.147410945 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.65785457 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.650896811 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.224716078 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.171059868 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.314182786 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.258985507 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.690786152 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.785356169 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.213436157 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.506118241 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.348906117 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.138451003 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.424472642 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.335937273 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.648053635 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.74592784 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.305222994 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.268981006 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.243589398 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.443087592 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.154202026 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.72033935 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.275495995 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.141876696 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.651521737 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.54860881 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.137300668 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.155162721 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.280909961 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.316924038 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.374161956 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.476345178 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.238296465 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.053776195 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.427573756 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.47782579 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.177931113 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.290889596 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.153358413 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.575124097 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.345279503 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.14649243 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.484184954 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.565096555 seconds)
  done (took 156.316803048 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.898198587 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.211791608 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.371029615 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.835514093 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.503444715 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.634324999 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.382268826 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.234627608 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.416413035 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.373678748 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.361056119 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.268825388 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.122242607 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.915077339 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.212656162 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.32855942 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.238140478 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.763546406 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.464373874 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.167519676 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.574035341 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.903276194 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.48069458 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.55827657 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.610307383 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.683380778 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.816312703 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.309172629 seconds)
  done (took 48.746906452 seconds)
done (took 697.69736118 seconds)
SAVING RESULT...
DONE!
