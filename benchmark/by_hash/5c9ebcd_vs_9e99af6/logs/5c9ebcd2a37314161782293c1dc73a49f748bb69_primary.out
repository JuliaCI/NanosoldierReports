cset: moving following pidspec: 1387843
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.27427752 seconds)
loading group "shootout"... done (took 0.79653496 seconds)
loading group "string"... done (took 0.230773349 seconds)
loading group "linalg"... done (took 3.249728951 seconds)
loading group "parallel"... done (took 0.02159122 seconds)
loading group "find"... done (took 1.193954433 seconds)
loading group "tuple"... done (took 0.727509328 seconds)
loading group "union"... done (took 3.10778111 seconds)
loading group "dates"... done (took 0.157445949 seconds)
loading group "micro"... done (took 0.058283281 seconds)
loading group "simd"... done (took 0.367057771 seconds)
loading group "io"... done (took 1.445265438 seconds)
loading group "random"... done (took 2.358927784 seconds)
loading group "problem"... done (took 1.16379559 seconds)
loading group "array"... done (took 4.492392587 seconds)
loading group "misc"... done (took 1.112970703 seconds)
loading group "scalar"... done (took 3.74480667 seconds)
loading group "sort"... done (took 0.307923745 seconds)
loading group "sparse"... done (took 3.52792952 seconds)
loading group "collection"... done (took 34.468809792 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481512744 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075465071 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.255358621 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076969773 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278808527 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084182274 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087996633 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.074952756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.145244959 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165443341 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.218703488 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.39021661 seconds)
done (took 5.056960247 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.321908934 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033930589 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125820405 seconds)
  done (took 0.752330899 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.138641534 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.016094901 seconds)
    (3/3) benchmarking "different"...
    done (took 0.023088939 seconds)
  done (took 0.760304063 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020821034 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099327977 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022298663 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022776484 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022548125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021784102 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021680148 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021667531 seconds)
  done (took 0.818756928 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.02959725 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023323434 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021380083 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022790792 seconds)
  done (took 0.680760498 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023117228 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.094479147 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027532023 seconds)
    (4/4) benchmarking "different"...
    done (took 0.027537532 seconds)
  done (took 0.751057544 seconds)
done (took 4.707791599 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.198298541 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.773368347 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.889967824 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.180177646 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.355503217 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.293018699 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.078015336 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240898899 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.145733532 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031505099 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.179616079 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.036937704 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.524959022 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.469835067 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026495715 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.144359642 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.579486825 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039339557 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.071554064 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.217362121 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.037477931 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039149262 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.044049988 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026483968 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.136988309 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134898528 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.585566261 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.066666921 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.024567048 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.050922806 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028716074 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.03335205 seconds)
  done (took 9.305521066 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161254226 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.145532172 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.024066736 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059786364 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.051354929 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025180047 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.03050444 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023317986 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043542368 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.089040741 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.047034247 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156014776 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021514263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024910342 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.137837482 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.116371878 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038174023 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037495627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022956288 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.037282155 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.050702154 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035497533 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033177141 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032543785 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068298685 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089784859 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.045314296 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.067955139 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023126416 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034777204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054856059 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063900352 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023217695 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021745289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065350958 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.043877584 seconds)
  done (took 2.699104696 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.722265058 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051537216 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.139789197 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.131067053 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065220009 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.05444383 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.181631986 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078901768 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.055813566 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024145877 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.21105258 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.656081574 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.170153775 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.087997329 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028295192 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.179982565 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.911984576 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.972438032 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023941711 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024071377 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.134113097 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026671576 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.173836958 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.025561895 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.135981051 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.716482274 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.03003171 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.02549186 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.05370066 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.149787244 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.025198237 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.102418814 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.052395879 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.029262386 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.549955662 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.023181794 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.021960558 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.046825105 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.052139628 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023332803 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.024211044 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.035514239 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.022319934 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.079835617 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.037650224 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.545353568 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.026115472 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.724343411 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.843182956 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.033395559 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.029690075 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058766975 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020530676 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023960943 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.614667231 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.113856285 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023097977 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.297627988 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025801748 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024632881 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024817743 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056371614 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023438385 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024658995 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026615688 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.045722879 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.975791969 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032966707 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.047207319 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022468141 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023051012 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021605762 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.417519359 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029595414 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025317586 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020981184 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027406861 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023185965 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022605004 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.067968581 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.050508865 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.04757208 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029770599 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023750109 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022642576 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.545368734 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.971187766 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.02545147 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024527782 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.75581505 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.021010426 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023125681 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024718829 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.044729697 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023635371 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.020601429 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060125271 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026415097 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.13081679 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.540236177 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.026878352 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.021249174 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.427116817 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024911763 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.05526939 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.078472054 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023115403 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064718685 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023929708 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.021582704 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026926843 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020409771 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024723912 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021458112 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022273751 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021448648 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023257225 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024075016 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023072957 seconds)
  done (took 20.185120191 seconds)
done (took 34.494525011 seconds)
(4/20) benchmarking "parallel"...
done (took 0.774279179 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.212632255 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.050251635 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019887616 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.162238744 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.04674686 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.135343404 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.175956028 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.127625304 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.047194975 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.04672854 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.046895968 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.180324192 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.189286934 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.048349733 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.116817153 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.191399943 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.049091737 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020155282 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.047316479 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.04780494 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.047614456 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020103526 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.047129738 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.047661793 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.115783274 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.046557209 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019816759 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.116011868 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.049061907 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.118031624 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.048252223 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.047832553 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047930901 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.117405164 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.050180684 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.119369153 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020455218 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.050773025 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.050501213 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.051484671 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.05131385 seconds)
  done (took 3.970721371 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046875254 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038989205 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041131965 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018467933 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028304638 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038904977 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.01848255 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038452732 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041919841 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039029616 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039098852 seconds)
  done (took 1.144469367 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.042490634 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.04041138 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.042009312 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018633001 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.03024166 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.040094044 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018566077 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.03931783 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.04197289 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.03957663 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039593928 seconds)
  done (took 1.08315826 seconds)
done (took 6.871403263 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.151260148 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.122263862 seconds)
  done (took 0.960522337 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.5845535 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.209822842 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.130768459 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.253673021 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.123317973 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.157568911 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.800768753 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.15815076 seconds)
  done (took 7.153296142 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.077637859 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.143888488 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.025795124 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023896663 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023706634 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023574155 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024971866 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023693317 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022977409 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025510422 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.025085556 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023063745 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023943855 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025045504 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023157332 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023442785 seconds)
  done (took 1.374057635 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028713136 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.026367171 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027235159 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.01750912 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027515226 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026380824 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027508341 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.02979996 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.028021693 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.028667663 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.026537164 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.029365804 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.027579907 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025837095 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.028271845 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017471209 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028355189 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027470885 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029071166 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027601333 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026681772 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.025018299 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028567698 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02640915 seconds)
  done (took 1.344961053 seconds)
done (took 11.521070318 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143270364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.030519278 seconds)
  done (took 0.863366947 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.128699861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127896237 seconds)
  done (took 0.973385762 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029005408 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016243737 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032854339 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024999961 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016604186 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016337916 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.032009969 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016635752 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016286946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016513471 seconds)
  done (took 0.926511855 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019646954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023298594 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021377394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019637023 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.021281104 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017389131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019910027 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017937426 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023718048 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016931123 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020619252 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038685383 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019942368 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.039100434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019984941 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020492926 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021834548 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019701628 seconds)
  done (took 1.10327558 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018025923 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017111221 seconds)
  done (took 0.742995371 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020826972 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017282448 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018965469 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018816941 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016959353 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016391376 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016943565 seconds)
  done (took 0.824244639 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40085539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.091016155 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330180788 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.025484533 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038875534 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.236021264 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020322615 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024586287 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024280119 seconds)
  done (took 1.893165 seconds)
done (took 8.035762084 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045308718 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144365436 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.149771982 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450488935 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.035364767 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.023470175 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.058823049 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.231235914 seconds)
done (took 1.854751127 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.491101687 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.266695654 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.191784135 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024182349 seconds)
  done (took 2.190850679 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312965109 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142928106 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031616836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023832047 seconds)
  done (took 1.232301446 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022399452 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027816971 seconds)
  done (took 0.766083105 seconds)
done (took 5.397626718 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030510005 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.01709828 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023484489 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018914323 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018490262 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017879496 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017958353 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.019247663 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.017143439 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.019018925 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018960432 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018823926 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018562581 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018597298 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.0181483 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018927996 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.017177611 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.019097261 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01908937 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019496991 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.017505286 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019488377 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.019490169 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.019290284 seconds)
  done (took 1.175844767 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.038498737 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022829612 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022765977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022766432 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023927993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022756713 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022866098 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022875569 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.023252186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021995836 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02481872 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024470601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.021898168 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.024190215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021708217 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024097878 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022988501 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022862347 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021780163 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.024102036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.023653439 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023062129 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.024070212 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022953785 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.024477184 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.02416203 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021868981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.023093957 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.023014989 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.02402182 seconds)
  done (took 1.431162891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023510032 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.01541923 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015698454 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.026050283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015421424 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015611867 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.016074154 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015334454 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015702158 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016488708 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015975383 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015309282 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.016247217 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015553264 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015628759 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.01623211 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.021053186 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.037906528 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.016604799 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015930282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020872094 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.016488087 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.016044504 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.01587922 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.01620118 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015585642 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015381157 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015814044 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015448175 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.016044606 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.01539559 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020171082 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021695638 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015880074 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025898359 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020611876 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015808991 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019976244 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016269364 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015186833 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015281867 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015225244 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015388137 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015480603 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026136755 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015617363 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016518751 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015904147 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015593726 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015226383 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015336172 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016858773 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021131318 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016518151 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015221992 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016511462 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.01527097 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015980504 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015367281 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015204569 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015274584 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019894014 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016831926 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016087114 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037302405 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016770266 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026052752 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.01542207 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015835008 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019636007 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.016018609 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035795974 seconds)
  done (took 2.011705278 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.02808315 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.026021626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.035133614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025846466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019310484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016692515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019768218 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016496651 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025985748 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019970942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016362373 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019625433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025877559 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020023993 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017585337 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025892595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019980154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019131788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016375668 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019839223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017410897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019625093 seconds)
  done (took 1.193308289 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107289587 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.023058342 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.071356455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024084421 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.022434278 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.023931501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023740803 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.023185629 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023320883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024422335 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024755015 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023432471 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021561719 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024336735 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024476972 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024282511 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023473307 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024294967 seconds)
  done (took 1.282760311 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.034871796 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.02149047 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.049313143 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021453557 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021433468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.021046764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.025576975 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025233393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021095006 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021571559 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025221347 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021361214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021300438 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021789776 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021305607 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021727115 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021282159 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021662283 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.025234451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025722274 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025653691 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025121636 seconds)
  done (took 1.261209292 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037522532 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02148804 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.041024652 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.024532766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.01670407 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.016352455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.024320597 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022710905 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023768601 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.021484269 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022588981 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.016021638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024779263 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022654016 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.025893549 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023807607 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022742571 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023607334 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022276724 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.01694127 seconds)
  done (took 1.20098955 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130875715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018596775 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.01803144 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022475573 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017944624 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017872844 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022599471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017867678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.018025894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042827528 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017987746 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017933415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022590271 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020682825 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017844863 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022441527 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022420173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022466889 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017885031 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018020291 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.043124455 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017958214 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022451746 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017787687 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.01792704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017947395 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018014628 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020793404 seconds)
  done (took 1.426594331 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039915544 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015215814 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015453057 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.01945649 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019606844 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025468908 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019434093 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019379963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015073696 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015481615 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.01747639 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015147976 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015141642 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024858051 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015149222 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017461271 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024959055 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0195546 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025746885 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.027940388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017930179 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.025962595 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017961131 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015825311 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026089999 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017642258 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019631702 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020352181 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017489369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015554833 seconds)
  done (took 1.326614868 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030082133 seconds)
    (2/2) benchmarking "in"...
    done (took 0.02687605 seconds)
  done (took 0.781714193 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018852332 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.034092805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015422204 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.029006499 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025117891 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019751594 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024425885 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024947468 seconds)
  done (took 0.914798224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.12580437 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.151795481 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017898424 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017859526 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.12449221 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084960628 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.134897444 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.029110604 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031101075 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020201843 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017669177 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.136104663 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.017135589 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.031114868 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018524061 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026782817 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024376498 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034946918 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030030013 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015905205 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.030133088 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017809122 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016820754 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017719806 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.018025655 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023801681 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032891197 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029386652 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025220712 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015222299 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035508451 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016026465 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016734819 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025193422 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.126627031 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.017804093 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.057330761 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.017169544 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.021383872 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.016572801 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.029346897 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.03910777 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.031462934 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.03453863 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017686535 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.018056133 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015971109 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017834899 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020184848 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025285554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016176906 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023775637 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.016346266 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.018110461 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.027579732 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.017032613 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.021649109 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.026249152 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.030027251 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026758231 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028635397 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031681145 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.025028828 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.0251938 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.017892612 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.037292396 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.018253459 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029707755 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031138351 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017307809 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029082299 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015990121 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015165509 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016128898 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.050131458 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017539183 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016948701 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016189168 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016298599 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017753869 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025749004 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020820166 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023472536 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019232168 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032053768 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025348429 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016219058 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023567462 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034633031 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020234045 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016130295 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033382159 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020403073 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016154715 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034472854 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026763631 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017666046 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016852582 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020024435 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.02953585 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017509586 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015275451 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02456378 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017610835 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.125143026 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020681956 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024739673 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.01635371 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026833435 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022992042 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018002164 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015572972 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021397645 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017412359 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015538302 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025978297 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016552759 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031681089 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023592526 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031172554 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031557888 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027133431 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032840249 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016617103 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015661109 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035434088 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026164758 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017888002 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.03508131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016405177 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027106964 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016800453 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018115379 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025919367 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015884789 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018187963 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016944866 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023030344 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018082551 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.01830573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022679593 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025074068 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028886785 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017670613 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025371572 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017057728 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032728057 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026239724 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021683207 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019859266 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017249131 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.02873737 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023408976 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025524752 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016302922 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017285132 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016420019 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027557736 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025887939 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018219448 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026009522 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021452675 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017351559 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016644056 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017603478 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020482072 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020119444 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017174133 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024355658 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025343489 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031270243 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024588609 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025891211 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.01606189 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016547901 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018402978 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016393404 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021373624 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025896208 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032375852 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028631043 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038583152 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016833645 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026259243 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018380381 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033921486 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030022055 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017560202 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021629253 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015785172 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018419489 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025904212 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027980687 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030820546 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032054162 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021716434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021487687 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016499655 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031973789 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017059418 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025256767 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025939079 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023046091 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.01660234 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018564134 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025943757 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021591346 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017790235 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032734421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024685336 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.01679054 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031707349 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017127312 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027601819 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.01667043 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020697085 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022288889 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018913152 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026524384 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032309953 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015870121 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017105676 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032603501 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018688743 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018542386 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024707193 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032283019 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021760498 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024616292 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027432884 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027369737 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021756789 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027221892 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017983171 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.026104523 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.020552178 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.02901806 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016919785 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035678345 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015956023 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.032311428 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017534852 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.02806554 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017211057 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026270016 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017688196 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.034474483 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018481471 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017748613 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028841503 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015857011 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025917249 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016684947 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.022135652 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023905043 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.026248762 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018921799 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.02644403 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018904564 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025957428 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.168965873 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.02504142 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025123274 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021050289 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015829775 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024375226 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026646728 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024247987 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017524539 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017388938 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016402071 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.02534442 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017334981 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016836915 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024152119 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.02107961 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.022298666 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017578021 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017613178 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.017952294 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025155124 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025829575 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034397646 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024560532 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023438919 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024974522 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015773112 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031259148 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015773909 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023256086 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015076824 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022293335 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025988706 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016379324 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03521853 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017288098 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023662555 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02782262 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02438986 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.01994185 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033622924 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.01863005 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.02403064 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023525186 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020639773 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022715833 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017137513 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024043089 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.025024353 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026018828 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016376381 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023118093 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024550635 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017251427 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023556131 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017114271 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024432858 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017312855 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015167755 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.021026748 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026967372 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020914799 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021065039 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015886318 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.01489839 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015832791 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.022174762 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020642811 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024067072 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030938189 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014934404 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016201778 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015452207 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019683602 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033377915 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025033178 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023528719 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020811047 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015152661 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.01686636 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017176827 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015846163 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018568321 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015411931 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015849039 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026807492 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017658589 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021233395 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016639504 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017620814 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.026581875 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.020607283 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016593388 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023214561 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015798203 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021447818 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.01531845 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.01731324 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020815034 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0156784 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.02053006 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026709441 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.033150156 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023278386 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024878348 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017044291 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024079843 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031528051 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024336707 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016965043 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025388953 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015684381 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034900528 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025499852 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024564981 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025893711 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016989514 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033191127 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021021919 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025914241 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031429449 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016912898 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.023769719 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015937957 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03205588 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021317242 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.016014101 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024837919 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023944245 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022524828 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027835121 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016887969 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024648108 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021211751 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020803744 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017805547 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017677192 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024844601 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032401308 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016949613 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.021453322 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.02410298 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024561322 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021091703 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02862363 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024747378 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017689661 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018203075 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020477087 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017371981 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028791104 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017012848 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021738242 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021437944 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016425781 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023711882 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033323219 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025908561 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025945486 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016457726 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015854466 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034873072 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.02044415 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019808612 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.02463293 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.02626033 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028866837 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026116882 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033904411 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.017065791 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.023020209 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029050146 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017386594 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016300931 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020462272 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018064748 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025523815 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026384671 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023966235 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018337943 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023649719 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029972354 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017870372 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021583574 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.022799484 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017412083 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027095071 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024425822 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024992397 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017980117 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.01637034 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020159578 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025111895 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023904329 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025413147 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017414697 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024932598 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030780186 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024116202 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019827273 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.01643823 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020037949 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.026139786 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.024470374 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.017292434 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.022425174 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.021003313 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026291394 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026195058 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021587182 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016518067 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034119903 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025617903 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.026143501 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018454236 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018510782 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016868571 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016451695 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.02786667 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.01650848 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018258665 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021816116 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018492678 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035136887 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.025196234 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.033353905 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018533086 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.02218287 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.017411539 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026580529 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021631478 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016582184 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027102227 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015973271 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032181629 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028703879 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024204152 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016567962 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022154109 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025490812 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.032121839 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.02628633 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025623382 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.020104338 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026368513 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.018399984 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.028052928 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016574354 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015702479 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026684832 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025078388 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028915431 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016437567 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026687874 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018526736 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024903217 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.025477347 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.018695155 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018451018 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.018424817 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.026372139 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021832314 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.026242775 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021934114 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.034334095 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.01787643 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.028212559 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025906467 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.028053934 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030655037 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.029715747 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.025593658 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.017188764 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024153122 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.025479722 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.018107751 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021872647 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.020273118 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039868025 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018497921 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018532529 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031936995 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.025626606 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016862991 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.025161823 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021853412 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026932412 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017685758 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.027297525 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.02302365 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017734918 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021763862 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021958931 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015947444 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016797784 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016974817 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026673533 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.02176321 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016837712 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.185052211 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.01755636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024778386 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026716388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023124907 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017276356 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015465455 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016726929 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029534605 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032553064 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020803241 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024758381 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017522651 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.025187761 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015278114 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024694862 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.024121737 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02447585 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015787426 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016083054 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030912115 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031769936 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021121898 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032899384 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024946196 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017187393 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037554829 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024712436 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016598885 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026426027 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017606521 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015290453 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015147411 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017104324 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027013939 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015620812 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.01769038 seconds)
  done (took 15.423968993 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061621239 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017342751 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015753546 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015740751 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022913306 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016951816 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015724447 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017040437 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.017094584 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.018052846 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015802827 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015858016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021832757 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.031762617 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.024054929 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019697422 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015851911 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017130351 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015867948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017122757 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02189067 seconds)
  done (took 1.203618819 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020226576 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020321587 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019768889 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019824973 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019542388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016378215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.020004938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01673337 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020992108 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016943246 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.020603317 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01646436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.017054766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016923788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016870921 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.018484586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.02104344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.020451688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.016528402 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01975692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017609439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019532826 seconds)
  done (took 1.167214132 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018494959 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0164452 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024409167 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015263917 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015149534 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017988976 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015257643 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.020196354 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.020064309 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.020042845 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024173971 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.01607157 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.01522199 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021414759 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015358228 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.016072433 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.062242181 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016290612 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016235053 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015514759 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.01770907 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024517062 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.01550687 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015591294 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020098667 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018172879 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.01543925 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017695694 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.01614689 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020258382 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016237849 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015244263 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024232098 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023474298 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020157118 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020024182 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016547987 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016025045 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015444972 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015403089 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023644625 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.0166053 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015660085 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016348838 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024271932 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015592203 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015252727 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024310713 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015287294 seconds)
  done (took 1.693266605 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028699255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.069596236 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023693804 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.052220911 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.029196583 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020967576 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.022623146 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053932267 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016894487 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017195671 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.029590489 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.03017658 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018283658 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019553147 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.023848591 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018179429 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018741678 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017433068 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020413419 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017768218 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020413176 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023814087 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.028759713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.029815483 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019243438 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017569865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017709891 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019253016 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.029752233 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020846542 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019547388 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019953162 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.029105585 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.025555144 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018583487 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018568934 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.030391485 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018746644 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018487109 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016893562 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.018451374 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.021550872 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.025407695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.030764839 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018634214 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.025083707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018310583 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016451436 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.030119255 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018879809 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.022318775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.031169743 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019417583 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018596283 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019624912 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.029789705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018431585 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017279951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018468584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.029707003 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016708023 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019161225 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0305181 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017809651 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021257438 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.030562013 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.025001368 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019130891 seconds)
  done (took 2.510437184 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.027699516 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022857654 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02740987 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.027543359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.023118112 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.023161057 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022925876 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.023633156 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.024098004 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.026842171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.023820244 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139171873 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.020569614 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023993721 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.023068016 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022970997 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022936666 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0229478 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022959262 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022874039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022930128 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.027581383 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022979797 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.02774197 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.056736633 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.020161064 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.022942661 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.023017846 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.027641814 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.022995377 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029956885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.023178438 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.02302708 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.027869948 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030023238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.02313183 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016338011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023117054 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.023408659 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.023224005 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019950781 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.028007349 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.023044426 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019978886 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.023384184 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.023025738 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.028063539 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.030268722 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.02413734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.026228828 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.023241147 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.028082524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023169893 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.023554163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028434386 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.063350273 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030526288 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030382776 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024943633 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.03008719 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030401657 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.038138215 seconds)
  done (took 2.51661957 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030925171 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021239376 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.026781026 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015492479 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015371294 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021427785 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.01543831 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015459312 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021421898 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021346343 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022828299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021532783 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023354501 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022997831 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021589891 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023196255 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021603992 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0214012 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021378293 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.02156685 seconds)
  done (took 1.208613041 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019336941 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020903616 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016159838 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019995845 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.01621305 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.019732039 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016341171 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016326597 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016336331 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016323725 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020898775 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020799397 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016301288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020297171 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019641687 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019744881 seconds)
  done (took 1.057660073 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020537392 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026829501 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126757663 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.017154032 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0188261 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016226843 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016945131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015855712 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.01824436 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.030174799 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016969464 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.019199035 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.017084025 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015907709 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016325307 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0190596 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018271243 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.017059421 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.017035911 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127909183 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.026596762 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.018006221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019415773 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017795586 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018741526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025302392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018493976 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018965067 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017101674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019323892 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.019247077 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.028373797 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018818492 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017501984 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015731286 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016618704 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017041924 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019030501 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019616689 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.01726301 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.016014797 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018656441 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0170678 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017397237 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018155204 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019074449 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.01816443 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027225161 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016874568 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018624938 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016906305 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018045189 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017410057 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028220312 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018972983 seconds)
  done (took 2.032896374 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036238285 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.023083676 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.016187455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0157302 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.022386483 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.023629578 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022251376 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.02268665 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023168419 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.01540486 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023281961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021524975 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02317086 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022135964 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023274795 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022164771 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015434362 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023383959 seconds)
  done (took 1.167242118 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024527041 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.021130867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021257709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017395632 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017344387 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.02124579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015655806 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.017061347 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016947312 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017494589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017385191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016945851 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017163207 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.017091481 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021005706 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017403444 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016931659 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01586945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.01733308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015711366 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021398261 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015841427 seconds)
  done (took 1.173374135 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.187973937 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.149676009 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.040630174 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.035289874 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.026326676 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.05281279 seconds)
  done (took 1.26156329 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054458351 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025760539 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021990842 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047549353 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021669825 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020347183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020338899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020837468 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023840174 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029523425 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02079388 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023441937 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023626346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0254723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022299906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021787842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020647632 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020720064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022342578 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032718773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020964521 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023300334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020726512 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020418054 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020626645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025286495 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023701942 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029363597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02041929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02329239 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021588827 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020575139 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023297125 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029430849 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021956938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023599022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02047862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032050476 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021606347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025150025 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021721919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022351393 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023601857 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023379793 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023322928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020859302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023424424 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020709516 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021136833 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035059935 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022036433 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025467205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022436666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023915106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024329005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035202317 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029772641 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026110782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022781945 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030046332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02593417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023420605 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027613995 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.032015555 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024274905 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027782663 seconds)
  done (took 2.435216116 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030987951 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049786285 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020384301 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029113251 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025068193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020744557 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020709351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020517554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020468909 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022690238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061142916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02086737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025185551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025250925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020741988 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020477912 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020373777 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024923263 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022622039 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034284902 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020517169 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025142218 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025045163 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025046861 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029228682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021746815 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020481694 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020421367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020400497 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020718709 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023496308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020836909 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025162163 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022564471 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025232195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021219235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020696762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023502873 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020537268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021718543 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025306053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031799561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020972055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020849447 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029755215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020766863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020742855 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022976365 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020999138 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022917938 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029715808 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029703768 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029619469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025712964 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021142695 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021333636 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020861663 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020795244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020916768 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021894898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025514826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020833725 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037385445 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022078952 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022391005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145556115 seconds)
  done (took 2.529344645 seconds)
done (took 52.097792117 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.175125583 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.178030116 seconds)
  done (took 1.112181894 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.138196487 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.135924998 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.164890181 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.024170677 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081958551 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174775259 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.126203315 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026588402 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024556169 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.026176327 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.024191868 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025835697 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025952002 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023906516 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.0866763 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026351842 seconds)
  done (took 1.914413133 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073487256 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.276454544 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.06910954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023189753 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10482208 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029827746 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024495512 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028804539 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029127807 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023330507 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071670805 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.04687059 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.028699667 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.029017399 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024300593 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027728513 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028640768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.029113862 seconds)
  done (took 1.747073684 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.064681524 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032182996 seconds)
  done (took 0.876562078 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.139341318 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.064141522 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.10596807 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315410319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.099446495 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.297710086 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.105875196 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.101161703 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.066136211 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.098240274 seconds)
  done (took 2.162174486 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.059925955 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.055690316 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.28202187 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.055207648 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034574599 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029467919 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030684462 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030188916 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030701415 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029549142 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072905604 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028390133 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024555697 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.06872527 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.050063857 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059708871 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023944268 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029595742 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032878319 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023623077 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028516097 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.029933614 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136870432 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.031223849 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.052888723 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.029236928 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.031084072 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.030917272 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.030301347 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.031001466 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.030908955 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054066976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029697951 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037561581 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028403624 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.050378775 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.02487815 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.049728472 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.028106132 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024572134 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027336212 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.030993828 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025235611 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030554085 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.03087111 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029812627 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030338949 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.02384691 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030858115 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027556661 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024820314 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.028378384 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028730177 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029349705 seconds)
  done (took 3.029529316 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.076538129 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066965781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024459841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07452848 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066100376 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025098919 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080811329 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.061054078 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077517151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024062665 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023683101 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023625616 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031591424 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035526824 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077032393 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.070576198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025956621 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024483193 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068891414 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069098487 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023355201 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080097671 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069402856 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.068339664 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.023013187 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024328789 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022929334 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023613202 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030956548 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031532373 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023421232 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033207146 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.03502157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031157047 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02282216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023016429 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024502883 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031781759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032455481 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032385858 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030173339 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022673183 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.02299338 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023590693 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024180995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022762006 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033252744 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031471641 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.03229847 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023644242 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023865974 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023091708 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024015519 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030799251 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029567105 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031138821 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033252704 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023449147 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023369012 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024759726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033969375 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031745596 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031572031 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024438795 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032405192 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.024089743 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034225143 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.037938234 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.024091602 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.024072326 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02355197 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023461952 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023760873 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030088577 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030286113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02398348 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023878701 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02314266 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.032650075 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030688634 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.02332153 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031544501 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023353262 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024162004 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02483811 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024989536 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.033733593 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.032396353 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02414119 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023828437 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023594216 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02355732 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022786121 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031816268 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031693169 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032178124 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034283795 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024458332 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.034532484 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0328876 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024565145 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031925882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023951742 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024292341 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024357283 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031973516 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031785294 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033315045 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024127599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023574103 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032814304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035007179 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023897742 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031547961 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034367468 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.032151399 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023695497 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035073018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024201385 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034089152 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02430893 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033365224 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024246415 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032023144 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023974709 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023183274 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023957297 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.034447144 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024446937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02393619 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024481491 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024214373 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032639043 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036054904 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024779846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032879003 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032736411 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024665966 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034056471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02428909 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033893348 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024245209 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024487609 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023360141 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035787794 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023947953 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024363225 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024160585 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034413276 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024397403 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034316179 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031981366 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023625276 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034615334 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.033839678 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031799133 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.03463273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024878816 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024224231 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023873565 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024230228 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033691401 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.035407636 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025006874 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024174432 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031346357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.034550492 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023642097 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031719775 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031513391 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.031974784 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024387578 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024243344 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034998938 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.035888999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.032556551 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.034670149 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033559076 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024121587 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031978442 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034654935 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024177943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.039248002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024176238 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.035915287 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.03539403 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031517138 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034857996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.036134934 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.03521605 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.034482528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177550848 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023310666 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023363784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029888878 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.02334387 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023709557 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029642783 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023870013 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023843446 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035531626 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023623589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.03178356 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.023124262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030489408 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022759389 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023916276 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034721513 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023383423 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023812874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.02964346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023472731 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029890505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032944076 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029601921 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023249683 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023746777 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032191951 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031036842 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023583435 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023717697 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024313287 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031732008 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.03071939 seconds)
  done (took 7.892767165 seconds)
done (took 19.519793208 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.146294176 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.074463785 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.141457936 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.086209374 seconds)
  done (took 1.230770714 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.058001614 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019785494 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.142773631 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.154681233 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.020204775 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.137459621 seconds)
  done (took 1.332601247 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.262322352 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.155835726 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.164088913 seconds)
  done (took 1.380989435 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.153288889 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.287296978 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.557484052 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.146667215 seconds)
  done (took 1.950698974 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.17044239 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166996408 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.032109781 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183926566 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038968124 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016410776 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.108387241 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017308895 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052149387 seconds)
  done (took 1.638946192 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.095701479 seconds)
done (took 8.424775855 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.197961049 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.139177011 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033992299 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028204599 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.12437835 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.133375823 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.144183937 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030986099 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.134689289 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.310692434 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.186388435 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048920243 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.15564529 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043856935 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.262911717 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031491544 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029843194 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024922316 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.140716384 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.13195221 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.242144129 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.029050181 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.098091347 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.032551994 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.102566247 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.078869247 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.18789035 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.314398202 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.275490219 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.032120321 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.11990292 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.043218989 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.115502615 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.123555418 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.135159907 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.04887736 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020454494 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.242998645 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.106529367 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.323380797 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.165550233 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027703352 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.141950504 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.026732347 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.020310672 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.145558213 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033133577 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026790114 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042601532 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027305463 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.04252007 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.029166481 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.134630527 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.025075987 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093414324 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.140698831 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.183211967 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.102323128 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.02641538 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039426681 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030471248 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.158730982 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038807911 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.02616252 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032430756 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020580114 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.138699524 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.04099828 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020827162 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031346908 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029302605 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.097891533 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.154811017 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.065116727 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031918355 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.107195664 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.09748104 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046597675 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049584782 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.030832215 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020508352 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.191532257 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.026301978 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038360193 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027296656 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.053465914 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020342682 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.03596597 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.169557106 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.148754946 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087177092 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021694848 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.237486137 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022670837 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.04701297 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.022018029 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.021110302 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.187011747 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020845824 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020901595 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.031177489 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029756955 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022576201 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.168441521 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.102163929 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028992626 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027838084 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.021340851 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026692291 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021873626 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021316137 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020757617 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.256473042 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.038592452 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.020052039 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.104399399 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.119413911 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.032164023 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036786042 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.08511275 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023897229 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030320043 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027608381 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.136273903 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027561143 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.133256015 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.022553762 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.043448406 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.116875761 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.097092342 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.101725433 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.020101742 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.140263464 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.030598635 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019784633 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027562881 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047057149 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029673622 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.038046921 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.029587115 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.142185556 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.032220711 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.026164664 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.117442816 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019683656 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.106094625 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098435883 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.12872041 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.025170411 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.030810637 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.092293187 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042648739 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049142942 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042274851 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024416497 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020218824 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.01975678 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032966758 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019194034 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019900806 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033171313 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.027247769 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036979439 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.244744716 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030103422 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024500338 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.251890635 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032208081 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.09150208 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040184162 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.021116999 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.101796667 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.022105691 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040927246 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.082906488 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.02066866 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.098114289 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.021088905 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.02051564 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026486706 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.022035581 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029971331 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033508613 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.02056403 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033509669 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.028058537 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020305303 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.100745244 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022189339 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.188081464 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.099912944 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.095162554 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020629482 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038753192 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020352444 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.135710274 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.021234267 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070549262 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.112327039 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035386306 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.042309846 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.022015794 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.099456315 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034791603 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025526884 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.102150924 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.132316865 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.092669955 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027196869 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.250159476 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.030898635 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.02101477 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.02648493 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029243892 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020770572 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.100896867 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.026618917 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.02061287 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020252073 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022066111 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.01966895 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.044138671 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019587511 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028243619 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.026157584 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023344249 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021917915 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019362948 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028427647 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.099720016 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.11988845 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026582712 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040407144 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.03357145 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031674625 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.067383065 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028380189 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.159505065 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019959321 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030240622 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.041411881 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020127456 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025376697 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025803981 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.037874347 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023775252 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021658816 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029381757 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020582803 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020913432 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020518967 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.02058857 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029277448 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021741025 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019917159 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019850429 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036462524 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.02531378 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025570084 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031367975 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.040607781 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.478267763 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022002664 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.02257254 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.03291886 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025887911 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020754972 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021879926 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020295816 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022237614 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020497507 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019908439 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.04824331 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025429793 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020768582 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.040714387 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.026377188 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030434452 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.119416137 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037023705 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025796947 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019805872 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.26219221 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.094756341 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.041829047 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.040195858 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020828905 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031687886 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020850608 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.021763314 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.020756212 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.048625442 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.026678548 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.021449676 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.02046258 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.020511613 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.069062403 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.029177401 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.020253901 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.029016795 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020960437 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.021548197 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.047826516 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021315166 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020709433 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038714215 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.034175496 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.108164551 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032841661 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023696616 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.071178076 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.020068205 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020471266 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020968365 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.107685017 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.034281786 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022406459 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020711734 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.028303483 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.02982547 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073797014 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.027018029 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.024498138 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.029640877 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.020716526 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.021472557 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.048401942 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.050521981 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.199803693 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.027962446 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020503845 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020841915 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.098397688 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.028246498 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025472847 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.107932625 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022360146 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.02900932 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019957884 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.494117245 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.02493476 seconds)
  done (took 22.51068549 seconds)
done (took 23.318023453 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.156913152 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0349436 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040669584 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.029005646 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032117884 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031921093 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042469462 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029697921 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032694895 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039891065 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14251456 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020169794 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.02774973 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034285724 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028595979 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.032898546 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032697038 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.033754303 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.021486043 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.03494227 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.03329044 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.032591262 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029200818 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.032097395 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020577228 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028592047 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.151431637 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.035526357 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030775349 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029876976 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027706358 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042265788 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027717333 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027110914 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029506499 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025459558 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.035784975 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026503353 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.149958025 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025926678 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020493502 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031960056 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027225708 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027835044 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028767243 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031154634 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025590109 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033126816 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.028440896 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039713179 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150145507 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.029180591 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.030268547 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028731747 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.026410588 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029607372 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.03013311 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030701023 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025391441 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039071265 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028708199 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.028090705 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019891985 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028511976 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027169786 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027489023 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019085185 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028964836 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.020284081 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.020337549 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.029359503 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.029604815 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.027680259 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025654512 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.028354164 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019951195 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.028012021 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.039146456 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027300248 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028895999 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020252431 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025420722 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024954413 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020405034 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028602772 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031004283 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.02932241 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.021547483 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.029366591 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.040894084 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.028000783 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.020242566 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031191784 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028731863 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028489674 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019974405 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.028350437 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028459485 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027828398 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.01984234 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.01908911 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028543797 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.02507576 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028543759 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020306684 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028713939 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028620843 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019260388 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028603038 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026977164 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028942887 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030649433 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028503869 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031289165 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020621252 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019152402 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029783781 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020211096 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028687373 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027920428 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025387111 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.028265051 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.021170592 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.029487152 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02983063 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.027290916 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.021316229 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.021073709 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.021609932 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.030190287 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027570707 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019286047 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.01987894 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028713032 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028560364 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027823905 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.028228254 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028558135 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020447923 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025974125 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025336152 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028629903 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.028005158 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020225882 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.028010126 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.028013583 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028761887 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.02528431 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02867233 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020522263 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028677087 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027016764 seconds)
done (took 5.747998565 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.076897143 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.06518992 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.180279313 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144050034 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033935987 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034685825 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.026409343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.041764901 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027520946 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.047004069 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.046512734 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.044037228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.164887601 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041703934 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020721781 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032749868 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020961315 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.048519409 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147521332 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045632897 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.064373913 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019150974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036930143 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039344764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.03337199 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039771597 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.045096954 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021525318 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038619798 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038461439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.04786798 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022950332 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020864713 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040510724 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037285608 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.029688103 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.02023628 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027473866 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032847575 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020530855 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066805473 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.03971277 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027462296 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027684345 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021178713 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.035711793 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021228113 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028921267 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.03534283 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027262579 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033581383 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038136726 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022559108 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.038822073 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019244077 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028233013 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.027850095 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020075334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.02146076 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020634993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020274169 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023347275 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033765405 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.040801501 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.02467679 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028365067 seconds)
  done (took 3.606894881 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.047279852 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.067384488 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.035118049 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035639023 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.020123574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020653355 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020568093 seconds)
  done (took 1.153306007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093624346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138669421 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146949044 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148854453 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.159498292 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.14649056 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033731509 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.051453038 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.056456128 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.159553993 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.156438337 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153430634 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024984806 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.03348904 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.05365052 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.152952239 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0338933 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.029141071 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147494397 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153742484 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027206929 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052922633 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033851217 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023877573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.148629889 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140585708 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024989703 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063342327 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023542014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021247186 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021299545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.044049913 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141455342 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.037108946 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021774542 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020252384 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.138010174 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021933926 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140740957 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028995983 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.141127902 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023901164 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.02394126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02162829 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022508959 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.144050516 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022828657 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021394261 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.021121715 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143453959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.033052239 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141704749 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022950627 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026609666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028462936 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028285553 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028380501 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021701981 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143858982 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031857946 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.02328347 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.152719617 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.152644083 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142426692 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.153365297 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030724578 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142345171 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.140836234 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021351621 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.02918122 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021843749 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.152887174 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025570516 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023975123 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019929123 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028999743 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.159155453 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.159898615 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.158784754 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035996613 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023126614 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022417668 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.157488945 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.160716542 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027502214 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021910341 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021978707 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037636711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046823333 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023954432 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026325788 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021900494 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032386743 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024089067 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023486591 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15460019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.02105059 seconds)
  done (took 7.852102486 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.039550847 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.024078046 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.023368821 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.024397185 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.024274282 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.023677801 seconds)
  done (took 1.172075592 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.05017356 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.023825885 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.037236324 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.024054746 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.047963621 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141279142 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.143024458 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026141246 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.042988276 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.037112188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.142331372 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146711382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.145768294 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.025334662 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142725581 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.036679201 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.141787267 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.027403278 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033505961 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02359311 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.033195435 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022956115 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023123134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.152340641 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.018244067 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.034798967 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.032754457 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.034496209 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.033585181 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.023151482 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022942383 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016927631 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028110888 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022938553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.138403004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.02845867 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022826006 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.018463174 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.027540286 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.017708871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.142920931 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023771504 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026943548 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.018232627 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.023276883 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028421031 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.018196816 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0325102 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.139333992 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.019382964 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.018952679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.024270719 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.017961463 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.018895857 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028990672 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023222082 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.018114043 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140112038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023612401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028521826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022380378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.017029887 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022933072 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016854729 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027200576 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.018079238 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028279367 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023742588 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023490339 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022277524 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018112879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022139359 seconds)
  done (took 4.242881805 seconds)
done (took 18.937362787 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.453819199 seconds)
  done (took 1.358510326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.019843735 seconds)
  done (took 1.935408247 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.05118056 seconds)
  done (took 0.989513371 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.310515878 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.543317423 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722621514 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.09268946 seconds)
  done (took 2.586025733 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.835436567 seconds)
  done (took 1.77667339 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214720343 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.184242158 seconds)
  done (took 1.360561057 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.491795808 seconds)
  done (took 1.432069219 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.323522975 seconds)
  done (took 2.259247531 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.205829686 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.136171988 seconds)
  done (took 1.282483208 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.609287059 seconds)
  done (took 1.54859839 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.48046382 seconds)
  done (took 5.427024689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.187072872 seconds)
  done (took 1.183771675 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.192756343 seconds)
  done (took 1.142678601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.715064874 seconds)
  done (took 1.660626417 seconds)
done (took 26.883832341 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044283397 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.038865013 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.039558525 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.036438697 seconds)
  done (took 1.091139949 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031438556 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.02536034 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.0279786 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.028181905 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025594365 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027706465 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.028175094 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024401658 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025760556 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024827723 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.02309195 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024550351 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027209757 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024264768 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.02709391 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028281345 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024678096 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025226493 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026839776 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024290634 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.027464162 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024712008 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024636113 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025921621 seconds)
  done (took 1.575455919 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034827342 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026543005 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027946463 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.02498823 seconds)
  done (took 1.053157015 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033591069 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.03131406 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.040343385 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.040778124 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.031236408 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031673456 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.038415174 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.038638423 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045540375 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041615021 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022104505 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021855074 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.02099325 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.03625936 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.038147846 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016345648 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017838807 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.032006814 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.03097215 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033774551 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023963648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.01965443 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031275301 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031852222 seconds)
  done (took 1.685711994 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038188179 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019892851 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036701784 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044599699 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.044663323 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019673503 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.03427145 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045526368 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.084452877 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019906214 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025936637 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019861578 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.058073766 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019921663 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.035845565 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.067181413 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.069187837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.024314129 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.051614885 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.020218901 seconds)
  done (took 1.725606931 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.029030694 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024222133 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025714488 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.01972363 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.031075676 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.027675996 seconds)
  done (took 1.102639515 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024619065 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.022173879 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.02179245 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025978456 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021354505 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021257071 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021404564 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020150864 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020195927 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020995007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020935694 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.02134933 seconds)
  done (took 1.210059593 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166983306 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.027310453 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.028561731 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020309588 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021943652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.021046371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.036189231 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.023236039 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039415482 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020931117 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021246056 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023710507 seconds)
  done (took 1.396526335 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061075142 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065685653 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098757231 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07564402 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081180705 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051720308 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.200239347 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033692277 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.116116837 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091569345 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077976862 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046772247 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040588882 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.024160719 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056226938 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073671953 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090899577 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027284448 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075057311 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.244351609 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08891851 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.087727391 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104899361 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079229547 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047547132 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10368702 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051188505 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059390531 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07719094 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08297282 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078144069 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.058047267 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025663507 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025233124 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1157684 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.057864318 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076038703 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047930135 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060959178 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044191047 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.082420775 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024234216 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037340302 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.06650141 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042860933 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09184324 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049103408 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073954518 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036816513 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098060227 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087869053 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.177008589 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043199549 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061654632 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100348506 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071825351 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091884993 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064641074 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037221224 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.078687544 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.067446198 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060486024 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068711349 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036678154 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.288733584 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043713412 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.079790444 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071302376 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.046739164 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049741923 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065838176 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090975524 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080467908 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.072814241 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085410446 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046430628 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083836441 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.055100596 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.078615186 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057753603 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026700304 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076183175 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081540291 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.052291482 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054217783 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083274094 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047584981 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030669959 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.04468086 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.073804254 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03575226 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.066331577 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041736002 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.086392149 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091601174 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053677429 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071086024 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07476735 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033249916 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122631918 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06462687 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027521944 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074656417 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069719561 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109118398 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053040695 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029702399 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055312033 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059124762 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.115027816 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06249003 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.036781401 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074415454 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099773185 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050594466 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.259295333 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.052145261 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102188497 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074163504 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041966658 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030640689 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.050616139 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07151003 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070009581 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084313403 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052615034 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.039709944 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04265319 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081175379 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052216385 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03576452 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.077494348 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.061251609 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.030741122 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047748838 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.032718208 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.266875946 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.040799214 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095920429 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088322072 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030128659 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060407336 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05069311 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059751485 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.055119641 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07308503 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094832777 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.139413503 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04479345 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.037829982 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064085508 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09782217 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080149403 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.045542902 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.038641828 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05363776 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065107616 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.054344119 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07722185 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047664603 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065387644 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057320038 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096394593 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102290996 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056907798 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060722606 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061710152 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.079012815 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03007228 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113938862 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05943045 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078320907 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042099068 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098327231 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.071221801 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06352158 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041447056 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060035387 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.059173505 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062110912 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100543357 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.048732128 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026744834 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050056813 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105828586 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03224881 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076915024 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.045955156 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.047499029 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072868751 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.049760265 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.037286465 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022893714 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083475187 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120370035 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024997901 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074117969 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.071945348 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062540204 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.083193876 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.024795162 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089125644 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098110446 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08702506 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110885468 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.314350872 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073329547 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.070986612 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.076384565 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066794032 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03370457 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.079526227 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090502133 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048665691 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046437104 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089626081 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072321628 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.090175634 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.068465774 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076036426 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.058981421 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060517504 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058616184 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.053813017 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098123613 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076094515 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.079487252 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038509399 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067275998 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074042915 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094560408 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036218226 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098506383 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.041705506 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102618047 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.034913888 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085335456 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.031957401 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.127217166 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034906974 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.055393125 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024247034 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.027149788 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099516779 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.078563223 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061696449 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055192934 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.091804964 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094059595 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032398865 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068919095 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.07189419 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060352224 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071823609 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.066848312 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.045043441 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053178408 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064382915 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.041485389 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.03768849 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086256866 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054068494 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096132775 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038989372 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030044385 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098268215 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070152743 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051980956 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032149942 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06806737 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.084062152 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.049653112 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042887846 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080777684 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063190043 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106155018 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.048499091 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.059815644 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.238578185 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036071095 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.051771936 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.025269151 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045867108 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.032163569 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083481196 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.030572015 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.072292229 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.0234435 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084003626 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040079784 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.051307204 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058226816 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06314616 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088746908 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.048839084 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094655308 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043595167 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071581572 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06354812 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068936483 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041391369 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056578835 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058417852 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075592953 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.047549167 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076154023 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101124862 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058929804 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.098747769 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045815433 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077882029 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061328484 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.078702467 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.069099086 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152382439 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098495454 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070991056 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068438717 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.03019614 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051177365 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067399686 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.065771225 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134910005 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082861095 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026727867 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060818101 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.048849223 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063055204 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065248811 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035140479 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100334361 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057223524 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.042280784 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064893886 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.048016722 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06220816 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031760574 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058967089 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.053618622 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052254323 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05461531 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.07270277 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088667744 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069102927 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106626752 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.060245279 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.048959319 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.079611751 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078767029 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07582384 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040149668 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.04182056 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.253319522 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07124658 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.080932943 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.052179734 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063267851 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065404766 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053970741 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085342347 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060964948 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.081018492 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03526061 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.031426494 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022803359 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026275345 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077757554 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065471109 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063727193 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058365189 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026141669 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059277128 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061204168 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026120325 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039554927 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048315431 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.052724004 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.037204536 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060430251 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.070195137 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.049159168 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0565341 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059180161 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100606088 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.053797935 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044619059 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101718577 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109068884 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04608722 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051202855 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.026628514 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034124578 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079944603 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10164095 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106984484 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.034278219 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041460694 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.039275594 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0428185 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025937058 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042417279 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.044547913 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06197041 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054590562 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.070896435 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060334647 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030375391 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.063905372 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055308724 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048294664 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.062962906 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075095117 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086106815 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.101194892 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072345749 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075461939 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031803682 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.035674134 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031534118 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034957471 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063698148 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.034969887 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032231608 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109025452 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.04804338 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071125079 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073719581 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045143147 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031675569 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096240834 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.025295515 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096997294 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.026231988 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.190153779 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.037914826 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033313826 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048753705 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093240871 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060777123 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061884482 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060614629 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066433599 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143999015 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113661975 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04096382 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095175571 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029699941 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03042177 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030296324 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061858773 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043857108 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071796985 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098888569 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042431842 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055107466 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032279935 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097189062 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.050575265 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.05726474 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040681424 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034021244 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101131962 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034633152 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042330999 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044906931 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.067974031 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026784563 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056985158 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038428773 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034526115 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148526447 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.667368323 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054092951 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.029361056 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.051875625 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.098302289 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091056479 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05239293 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067589246 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.07507812 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.061273746 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049809523 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070665333 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.154810689 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.02881872 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052179087 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.05369522 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058835165 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06589244 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.052377363 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.046288379 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.052683615 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.041845009 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034576161 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072739536 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043102359 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053943637 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.063523342 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.039042139 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.04510996 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089067259 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.058992589 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.040500479 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046087343 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.067314589 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043300702 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06529055 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.02479032 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068362628 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045781235 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081499933 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.056528713 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.218937883 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080664794 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048543028 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090690501 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.061358233 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077295951 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042239512 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.033016652 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078086752 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.04337229 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031492202 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097475908 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.048771213 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.057523442 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061535932 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.049273994 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062800044 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067544133 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065784833 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.054666406 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032091397 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052814963 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.060906612 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040659263 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03378299 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.027397766 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.029722333 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06434767 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04075582 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.040854116 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071149459 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044325088 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058534213 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.054564183 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081003437 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046195597 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061780067 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06566809 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047843438 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09083742 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055911788 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085224991 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134444008 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09065617 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086828123 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090848666 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032979262 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.034827946 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023456172 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069782553 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.03465026 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.042426976 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033874803 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091096679 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.039475381 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069020554 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.213921799 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.302118649 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050212102 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053047143 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024800995 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038814166 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067272165 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041541309 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035318445 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070310734 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037961083 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.087738507 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066879135 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057243533 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053364155 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037899829 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070434842 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.062669768 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.08870504 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.057051023 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.031105352 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086098988 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.065068502 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106657523 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.030916021 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037789975 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.238786037 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057844095 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085554901 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035196886 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109750521 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096165731 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058867288 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087012686 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025213044 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043361132 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042875601 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.076242703 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038696226 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060141215 seconds)
  done (took 41.842605199 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.141534776 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.256406362 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.12986348 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.111153686 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077186385 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078492878 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.247238867 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.091992265 seconds)
  done (took 2.190122897 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024785935 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.053905499 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035508205 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.294436706 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.053898177 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021265585 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028782481 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036523466 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.02504408 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020909834 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.058852521 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.021467283 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.025146829 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.460474836 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020349508 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025770223 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.025165005 seconds)
  done (took 2.301423514 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.315662301 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.597015664 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.340008101 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.464276426 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103855721 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.562138263 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.030092103 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034581123 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.636293615 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.350727245 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099205222 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181034223 seconds)
  done (took 17.778443387 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031381978 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.157036972 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.157957094 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.029014975 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.028071844 seconds)
  done (took 1.524450192 seconds)
done (took 77.490777357 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041035646 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.124243056 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021149532 seconds)
  done (took 1.240423874 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.159553492 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.158070128 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.158040649 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.159328002 seconds)
  done (took 1.688101451 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030919549 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030228692 seconds)
  done (took 1.141968889 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.186535427 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.261576705 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.045452532 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040245054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.035515386 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.0353394 seconds)
  done (took 1.177337402 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027357283 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025410327 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025393299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025892303 seconds)
  done (took 1.161180555 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.136890853 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.020073162 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.02269531 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024476502 seconds)
  done (took 1.257694819 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040985949 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040437171 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.073007715 seconds)
  done (took 1.213505889 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039907286 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03903868 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033869857 seconds)
  done (took 1.172610004 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064494694 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050593068 seconds)
  done (took 1.179525838 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036599795 seconds)
  done (took 1.112770419 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048591655 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.054409226 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.22211648 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.186224112 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.225586956 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.207317286 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034626935 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031225342 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.032906685 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.036509839 seconds)
  done (took 2.143318842 seconds)
done (took 16.082196483 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036904875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.144279449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.272078991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.043087584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.781982038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.269984723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.686716146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.046657423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.054910995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022550924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039328513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.758828683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.689585367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.103229211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.674457956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.096574569 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.518921993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.024834959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022091022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022352978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.665257399 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024153254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022809552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022970291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.514642911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.2904728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.02525592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.093702849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024923254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.02671507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.26976042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.025458924 seconds)
  done (took 12.370750282 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026395877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076847754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027004978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.038024644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.024137482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023946679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.040747739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.02267054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065425338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02234975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039549274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021648514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026721006 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02349148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042704477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022211518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024480402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022716348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022322492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022736909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041614785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022073074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022775326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022794395 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.02265816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037359067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023692065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022168997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022428284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026765941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.02821745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023747089 seconds)
  done (took 2.027821972 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078932521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.078568774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.028118156 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.062241107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074523609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.025185123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105773728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044762127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.068133236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.023028144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039933091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02241691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.060284258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.024021232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043551385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022399992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024984837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.023052098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022370581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.023251622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.042080556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022155671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022584603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022731968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022921122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038815364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023672244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022239817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022492007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026766855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.028748386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.024759069 seconds)
  done (took 2.293417905 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.02607852 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026850868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.033125712 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.037006489 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.021829156 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.024211856 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024701873 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.021070569 seconds)
  done (took 1.297710769 seconds)
done (took 19.066475911 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.036111175 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022472751 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025457703 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046635341 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028751274 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.145997744 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.025352567 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027675371 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.02614728 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025462427 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027668971 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019999331 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024649702 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024920567 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026707138 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.02054931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.148566168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025775302 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147600017 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.149344721 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023717858 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026532905 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029168198 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147156228 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.148107381 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.14756102 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.03011379 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026615719 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026138167 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023469345 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.145609703 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.148949424 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023654829 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.144091229 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021094229 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020690504 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025160929 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022322006 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.151691798 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030282989 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023094809 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029726993 seconds)
  done (took 3.494512562 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.150441364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.157361712 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.15110826 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033636256 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029541547 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032739984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.155645097 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.030642842 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028599163 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.155358929 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024373965 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028266759 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030553327 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021391108 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.028250919 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024968209 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.031038638 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.023635017 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.028861834 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.029598396 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.156177382 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.02199847 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029236576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029682697 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024193391 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030338787 seconds)
  done (took 2.584779669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031080675 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.045336716 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.04705845 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116820669 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.065876117 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.045160795 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037845951 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.048241555 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053768523 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.022224962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.04557146 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.051573359 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051156498 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.029015011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060873184 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040818747 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.03485724 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.02323505 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028636497 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056474326 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.04508494 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.041446289 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054746968 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.042313633 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.021414736 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.03179262 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.027156114 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.039447843 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033728076 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.034533587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025422086 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025117123 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.02243611 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032461668 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025322653 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019991391 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044970189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034553026 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036255202 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.062582836 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.034120061 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.024588309 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.050329059 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.083913896 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.021069936 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.025150533 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.027315596 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.035925232 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.023618148 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.065333878 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037559287 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.021235991 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.041063149 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.023591743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.023672484 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042998133 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023238875 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023742437 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042552741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.028106823 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043524762 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027224243 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.040550825 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020718956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033335741 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022853014 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023290011 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020315995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055808463 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.029117322 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.069215556 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022768337 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020007502 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034172196 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033375012 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.02894242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020318325 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040497715 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034362098 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025747969 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.040611747 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024527549 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.02518397 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.06643205 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021173282 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.020012386 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020082926 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024876783 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025079044 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022695905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.035004037 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021333869 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.02532918 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.049687069 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021639988 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022473319 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024545082 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023409474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.021056064 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.032347203 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025383327 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023552127 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034805181 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022317373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025259098 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.037141834 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.031469138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020605247 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023589745 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.02442131 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023430039 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.02341354 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025648148 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023714218 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0272708 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.02946273 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.028048228 seconds)
  done (took 5.088933866 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.243792543 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233942382 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.023236538 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.230070717 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030850091 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.162227776 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.232871565 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.234463354 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022979288 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023638882 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.022272217 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178872694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172972168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18615033 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.164442831 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024971033 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055513465 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.181906266 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.236671165 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.232379762 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054566883 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.0295391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024614322 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023439644 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.023243451 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.031117168 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.039570031 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031268193 seconds)
  done (took 4.252417588 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.03088376 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066682324 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025938631 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.047108666 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.040028871 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022692029 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.024141572 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022867566 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039176587 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.02827517 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.02264255 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026589959 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025804521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024836852 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022566935 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028694196 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.029180765 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.021200402 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025830206 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026872425 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033579498 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046968791 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026174887 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.022031892 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025700696 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.022155802 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.028108259 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.031530578 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.022003289 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.025868725 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019316257 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030842619 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037357174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023523549 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0219481 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.023026467 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022645208 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022505633 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022352976 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020559194 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.02054285 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027780358 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.021911782 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.028181955 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.037058124 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.025421632 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.024270986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.025305299 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.025134531 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019756923 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025679368 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025792613 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.025152327 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030932551 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0251993 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.025072312 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.024086658 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037218299 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028182598 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.022236848 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021863409 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.021079949 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.025106613 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.030120386 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.039923101 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.025213581 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.021592667 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.023366502 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.024559532 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.036026702 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021972305 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.029092855 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019933889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022715599 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.02516139 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025382744 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023730245 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020752752 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022259011 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021751104 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022503475 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022257436 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.022134132 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.025610518 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.021194724 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.021737955 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.023983609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024807231 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.028356319 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021272411 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.026243513 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.024188737 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021823099 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.025053494 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.02813229 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025260338 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040429538 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030384664 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023388678 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020550676 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.038909532 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.025249598 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.02177723 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024486241 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031096469 seconds)
  done (took 3.9268669 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053156105 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024563868 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042152299 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057944508 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.03286092 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028240582 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036516854 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023910832 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.044188578 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021608763 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031866724 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021010747 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035706155 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031855802 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024594148 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.03252352 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0255831 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043495496 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037578935 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021351777 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031200509 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.035084257 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.035079521 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040269613 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039825567 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.041917669 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.035573595 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025612195 seconds)
  done (took 2.057881542 seconds)
done (took 22.480105104 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.132649446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.327609488 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.105559711 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.90107369 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.204770726 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217738846 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.315978459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.100529797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.10220867 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.20589999 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.963055069 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.410292715 seconds)
done (took 60.156452163 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.181221126 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.240186207 seconds)
    (2/2) benchmarking "String"...
    done (took 1.339817284 seconds)
  done (took 3.682729164 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.535129314 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.092105963 seconds)
    (3/3) benchmarking "different"...
    done (took 1.153180447 seconds)
  done (took 4.868006321 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.451543916 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.748670253 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.391187664 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.081862011 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.098877041 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.56725231 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.265012301 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.845333398 seconds)
  done (took 27.092399668 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.203717433 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.357282761 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.495971085 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.636209589 seconds)
  done (took 17.887784972 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.557040192 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.623318984 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.607193082 seconds)
    (4/4) benchmarking "different"...
    done (took 1.718193457 seconds)
  done (took 7.715661243 seconds)
done (took 71.079540874 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.08002375 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.387471342 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.111007111 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.286445739 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.105979729 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.182594949 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.105546288 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.11327025 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.088279555 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.089597432 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.089405845 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.095844017 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.101593965 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.14619437 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.101068457 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.134174788 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.385971705 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.104041484 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.122584 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.98874914 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.43309798 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.107480194 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.095054835 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.161915119 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.582227948 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.117191606 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.53160602 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.117486723 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.697358294 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.102243998 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.098166591 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.102363182 seconds)
  done (took 182.054575999 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.098160371 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.916337798 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.948830838 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.112100759 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.471173173 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.443064476 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.951532395 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.48888013 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.095082078 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.135073249 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.063110699 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.096335998 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.102062353 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.641824789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.143901806 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.104356863 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.98311135 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.894970099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.13560168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.008275372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.090464928 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.686024743 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.655422295 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.911790887 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.08844812 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.159296262 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.100122947 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.104413142 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.58991943 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.939861074 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.092578702 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.161623422 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.280756428 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.333531147 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.100820236 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.103169869 seconds)
  done (took 152.324793506 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.316363447 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.099288389 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.128713291 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.212409161 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.052406313 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.896626333 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.101406785 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.080120749 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.084680261 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.085201255 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.089637341 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.172462404 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.092436071 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.192562403 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.114717008 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.086926309 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.081630452 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.18343131 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.098337224 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.101080352 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.083551746 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.183663257 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.434590198 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.202289778 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.092166472 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.096660464 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.186097777 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.094737021 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.103673202 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.082138899 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.202422308 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.088655189 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.220439082 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.199977563 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.103186521 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.135680379 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.106891821 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.290753713 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.089124017 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.081806945 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.089156586 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.149476155 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.09614373 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.152584878 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.191768625 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.098252672 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.105218787 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.582381177 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.690957279 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.094131501 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.095655527 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.078015885 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.100705301 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.079850378 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.615339297 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.094533881 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.136842882 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.641608131 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.094477869 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.085674409 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.079188029 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.087912268 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.079506488 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.099196637 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.128751588 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.739530128 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.983902146 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.457111423 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.838267429 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.104026913 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.094741885 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.083524547 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.808050452 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.166751258 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.084916694 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.0918694 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.265144042 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.086236253 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.094367143 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.004320132 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.002504472 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.089985474 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.202529561 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.101997136 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.09834909 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.129143623 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.181229088 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.098071467 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.111275272 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.144637819 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.093490699 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.078424514 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.091911779 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.013709615 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.093140516 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.098290572 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.468436821 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.107613332 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.094876996 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.173234014 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.450327279 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.093836145 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.181230986 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.499804475 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.03665587 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.091354744 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.08028532 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.100991269 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.093017036 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.097510716 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.091806924 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.083221679 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.098139638 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.104882414 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.113657458 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.081300921 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.082682669 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.116244294 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.083106176 seconds)
  done (took 324.854197668 seconds)
done (took 661.743656416 seconds)
(4/20) benchmarking "parallel"...
done (took 1.088249168 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.337839647 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.110970968 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.31034424 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.364507021 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.300053795 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.262831494 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.29494256 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.384634629 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.323884522 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.252990048 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.32618133 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.262928908 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.372707498 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.338877397 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.352548209 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.38584799 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.281429212 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.786461095 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.30336195 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.260095296 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.287285326 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.280577382 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.251857681 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.315605189 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.357812776 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.292748907 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.482806252 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.326689134 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.295774389 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.335257297 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.358187817 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.370702835 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.322246635 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.339008796 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.365240591 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.354838702 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.310868263 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.379043032 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.270523907 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.311235788 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.314602062 seconds)
  done (took 62.631755346 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.499487736 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.279062645 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.396448031 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.399266288 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.036981919 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.396003065 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.490842241 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.272645876 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.274400567 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.39757763 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.400348976 seconds)
  done (took 17.953391228 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.344667977 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.295638498 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.400252036 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.404835228 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.500415548 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.416951276 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.450571035 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.272264603 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.277296199 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.401048249 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.418710681 seconds)
  done (took 17.298105225 seconds)
done (took 98.964221765 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.705496027 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.162481732 seconds)
  done (took 3.947213466 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.113589816 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.099864593 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.101781193 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.103145915 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.095678097 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.102019154 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.161930068 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.106722914 seconds)
  done (took 9.990416259 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.092661212 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.093662873 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.098308918 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.105681294 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.102031359 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.100752779 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.101432549 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.09456367 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.092812944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.094923728 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.094472899 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.098961998 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.099158041 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.097535789 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.093103884 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.112382324 seconds)
  done (took 18.65840132 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.108955927 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.096182251 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.091024949 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.103507147 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.10173392 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.091023488 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.094373151 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.117580841 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.095098799 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.094961974 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.092382616 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.094447045 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.099114216 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.09974683 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.112909014 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.092804555 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.111557991 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.09596305 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.092293996 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.093484103 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.092637842 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.109362649 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.120569308 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.104307192 seconds)
  done (took 27.489467132 seconds)
done (took 61.197678973 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.711106775 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.822414463 seconds)
  done (took 6.631323221 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.093177266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.092945674 seconds)
  done (took 3.330352733 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.099184988 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.094984919 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.09204442 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.089113636 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.104426688 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.097222867 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.099317825 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.106298731 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.107694274 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.093776918 seconds)
  done (took 12.083431225 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.094491744 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.092650727 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.099914529 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.096880067 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.104114876 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.094935113 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.103791686 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.107181772 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.097872108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.101892183 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.110367831 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.285968664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.098843491 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.327297075 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.096651922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.110678652 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.094408682 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.0936161 seconds)
  done (took 21.293840741 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.091512434 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.098721663 seconds)
  done (took 3.27171706 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.097749304 seconds)
    (2/7) benchmarking "second"...
    done (took 1.103835589 seconds)
    (3/7) benchmarking "month"...
    done (took 1.108339375 seconds)
    (4/7) benchmarking "year"...
    done (took 1.100125703 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.093855079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.092745919 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.092041517 seconds)
  done (took 8.776729695 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.574897557 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.275121552 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.324243266 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.579437291 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.789454373 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.043999001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.80730473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.029728373 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.869137061 seconds)
  done (took 16.383843594 seconds)
done (took 72.851899837 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.863919336 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.094556745 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.580773872 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.184878711 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.17188872 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.421379547 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.152471789 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.693790005 seconds)
done (took 37.255134786 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.357945548 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.10573713 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.123863463 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.126115451 seconds)
  done (took 19.449819471 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.09446231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.475672376 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.103477019 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.125737122 seconds)
  done (took 18.960929503 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.511151694 seconds)
    (2/2) benchmarking "read"...
    done (took 1.603316745 seconds)
  done (took 4.215801403 seconds)
done (took 50.076526131 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.093843562 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.094003859 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.094981187 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.092996956 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.098292166 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.101835926 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.089778958 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.097918059 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.117023176 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.110536657 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.091897876 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.092626274 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.09495546 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101770393 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.10016189 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.115435571 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.092714075 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.109456344 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.09525027 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093009624 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.095419808 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.090627587 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.100296587 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.10770271 seconds)
  done (took 27.471610776 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.158831531 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.165980029 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.173815084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.157320813 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.192454405 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.155360418 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.16621985 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.147410869 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.160290169 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.147890373 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14135014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.199808339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.145324999 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.191880287 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144853002 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.199105021 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.187245275 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141456059 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140606889 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.203702188 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.154721338 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141526375 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.189166838 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142909889 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.200896132 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.13588858 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.144931421 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.167498926 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.129736092 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.18212452 seconds)
  done (took 36.001283094 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.127836737 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.09809115 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.098240175 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.185434289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.10094508 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.108370961 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.109140173 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.094652256 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.095236068 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.100314645 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.100556174 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.100344238 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.114266632 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.093810283 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.110237008 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.09432071 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.131575868 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.270700601 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.096057422 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.09901942 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.154839635 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.095899103 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.098965169 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.113280576 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.096687497 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.09484335 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.093741273 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.093260164 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.097138446 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.101397109 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.094300696 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.143299558 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.159266925 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.095126061 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228651773 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.15272855 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.093869881 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.125990797 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.104487039 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.101610797 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.101931992 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.108941553 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.095088629 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.092742096 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.157888042 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.093691467 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.099196872 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.118431425 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.095042403 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.103621016 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.104222775 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.094684774 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.112441743 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.092219636 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.095074902 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.09550688 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.102396852 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.095633755 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.096759144 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.10735966 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.098836537 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.180285081 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.097038252 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.095362713 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.470119099 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.110067754 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.178384309 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.113581395 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.104996182 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.307386379 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.097231278 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.294664878 seconds)
  done (took 81.964430318 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.098253879 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.110247788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.170102011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.19040742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.096476627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.091769868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.095825267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.092859881 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764575888 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.105456594 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099182763 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.101720947 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774691808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.098067929 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.110973324 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.181868305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.102503196 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.105500355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.104947162 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.093394679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.109881149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.094849568 seconds)
  done (took 26.894198123 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.135992649 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.106786859 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.140066228 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.099673007 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.104746029 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.097240425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.151542889 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.113697425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140231221 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.130802751 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.131854346 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137755357 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.101710758 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132868795 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137108396 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.131208914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140129062 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.111355467 seconds)
  done (took 21.328604556 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.271794255 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269065707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.198648192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.155548932 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.368164522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333345396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200458795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270837551 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.135899392 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.26092663 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.275134327 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153941887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.343561912 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145131921 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135979943 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35708361 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180617147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.140170093 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211876406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20158323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281103157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213629507 seconds)
  done (took 28.2015894 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139014361 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171445127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.181217531 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.185829467 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.103729704 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.097561946 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.173400552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.134189626 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.111185119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.131408758 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13021328 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.100990092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.128492069 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.145168647 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.196795683 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150331278 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.150631361 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.148405117 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127490394 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.113618088 seconds)
  done (took 23.912355016 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.168354361 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17670376 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174514355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.126127728 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.095781346 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.093899097 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.09396492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.10626768 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.099897497 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.358580259 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.110549565 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.106115903 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105371393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.093351914 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.096915011 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.090642962 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.096196742 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.093870037 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.10306555 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.092789773 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368228933 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.106969942 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.093861871 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.100258501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.093054612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.098152636 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092988463 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.099269702 seconds)
  done (took 32.703548226 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165509149 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.102830199 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.104255318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.09694975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.091021253 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.17928503 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.098385156 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.107917217 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.096284885 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.106110561 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.100194976 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.094753642 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.0929923 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.151499318 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.098950385 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.092337469 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.23928434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.107026917 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167010003 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.08664695 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.1043443 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.238048297 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.113784887 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.094174978 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.105684984 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.104222088 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.111663179 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.09309638 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.096111578 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.12117308 seconds)
  done (took 52.650475978 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.114706854 seconds)
    (2/2) benchmarking "in"...
    done (took 1.115538341 seconds)
  done (took 3.322530679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.100291188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199329989 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.093864182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.298339377 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.274347282 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.271581367 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.264911194 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191188586 seconds)
  done (took 10.775355292 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.100895892 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.087403477 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.223198625 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.095266301 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.093059999 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.377160986 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 2.946159105 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.741931234 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.627357316 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.046250891 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.196303762 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.682278256 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.08220303 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.314994417 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.206706839 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.8414911 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.107813438 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.196899177 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.911810337 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.183953867 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.523283553 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154554412 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.113678082 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.093400424 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.095351295 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.01758068 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.926921578 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.427579109 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.013731315 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.186236852 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.562085787 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.148601201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.103077139 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.15834668 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.181567858 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.095331481 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.050645225 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.185721112 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.095479042 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.10007282 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.591576091 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.357523488 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.222858141 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.089226459 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.143462691 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.093871432 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.11722279 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.093603843 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.271428509 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.7331547 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.074341549 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.981114686 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220433445 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.098852414 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.386743159 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.216063759 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.112919702 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.012585449 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.269196985 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.07694895 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.480943114 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.094947304 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.884059102 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.191268915 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.097030615 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.3122739 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.929644781 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.62436468 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.613233278 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.173967419 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.44212992 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.122966467 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.095146363 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.106698714 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.938816724 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.371746178 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.111767088 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.094925013 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.100776261 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.109277322 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.176379991 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.181313506 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825663744 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.224293302 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.3002942 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.395355578 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.191908466 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.103303226 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.56824683 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.9233088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.204437025 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.492325409 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.202629141 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.212646415 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.902944253 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.232094963 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.145299996 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.181007416 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.9201277 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.3529411 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230177837 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.095296752 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.466908125 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.128968109 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.122509816 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.10166572 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.594619404 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.197788622 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.042632596 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.109576663 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.100215342 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.095784626 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.72136899 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.215588888 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.120220614 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.613648159 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.076412215 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.296263865 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.148535764 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.161485549 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.234352667 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.692321721 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.333819309 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.920785207 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.127959124 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.300586018 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.123450087 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.704810555 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.165058801 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.199049224 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.593838043 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.117405178 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.100862181 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 3.954410215 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.131956776 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.102280746 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.095674646 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.122041994 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.100435482 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.096290877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.113970024 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.241447811 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.487554359 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.210095259 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.229451762 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.207635664 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.59450344 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.068505686 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.664014921 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.214436676 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.106257679 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.444183856 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.263136054 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.602664669 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.19191784 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.097872585 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.099583927 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.842742659 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.897766625 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.159505388 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.10036481 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.721615099 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.194305184 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.113991879 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.099387981 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.486104376 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214136745 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.094610829 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.013664132 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.660481273 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.535252128 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216008467 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.316437284 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.194397442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.114755205 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.096961249 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.099151588 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791096769 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.759586697 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 5.944322378 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.713236003 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.556760593 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.141799816 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.041123127 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.150953909 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.182802777 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.189439987 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.221707024 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.096893118 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.101093869 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.094082232 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.624837695 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.83492739 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.684175516 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.889778539 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.082512116 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.060662385 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.181898104 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.844478142 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.11507351 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.612720511 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.85366507 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.168512981 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.096872445 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.120308329 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.145159002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.142806948 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.214041255 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.33918431 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.224620069 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.095526435 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.577643266 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.197419685 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.583285712 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.163498395 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.82752301 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.952850962 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.192947772 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.067615431 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.325996572 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.170482649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.093686505 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.420950242 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.186622422 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.093086832 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.963779369 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.433842917 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.925332431 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.738513752 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.385561446 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.078359556 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.547896946 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.301261261 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.215974654 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.74335104 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.162536199 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.386077718 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.138883584 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.208214883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2248573 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.779811273 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.121925854 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.434521503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.213857137 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.911194072 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.18468112 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.37269357 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.17744212 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.106704367 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.060467998 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.158367768 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.579358048 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.1914748 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.109617883 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.092561882 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.758881469 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.158586238 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.397691646 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.137272267 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.815543419 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.916405082 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.311153069 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.811523588 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.068458048 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.176920565 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.697332987 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.123756497 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.239985043 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.21561712 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.09365438 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.116869201 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.063268088 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.151088728 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.109385117 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.237917273 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.927870131 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.139069416 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.175379569 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.112466468 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.097006695 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.114093665 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.029852456 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.049143595 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.342109214 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.538442342 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.707337224 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.193871694 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.352145679 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.175978133 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821069581 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.189933425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.113475818 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.590565966 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.187852626 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.182741082 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.207455648 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.123545926 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.417610067 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.153328572 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.248573444 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.034228173 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.182327503 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.682865713 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.538447146 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.225960891 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.313040476 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.112978809 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.675812388 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 5.963238923 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.647429446 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.08315461 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.832007784 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 3.964446291 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.113043201 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.096762064 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.101860766 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.670538563 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.06507595 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.111623715 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.772809182 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.445885173 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.022805848 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.828667809 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.189151648 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.11463068 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.099387215 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.102979655 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.001649562 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 3.983006338 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.116733931 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.192176721 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.104560255 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.10502498 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.956858763 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.120634015 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.659950213 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.751944678 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.927923101 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.220098923 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.098523678 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.103931168 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.107030493 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.096486237 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.113138671 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.100937688 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.2785272 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.227261092 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.73176094 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.187977524 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.110079628 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.097526603 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.126721934 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.100652801 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.020983353 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.129402764 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.108082048 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.143503078 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.09464872 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.408793415 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.215534588 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.095739896 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.170743837 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.150228904 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.186488893 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.327846042 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.19408442 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.508940617 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.406828378 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.867517437 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.11129095 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.020797728 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.179808643 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.624697471 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.0379095 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.361908208 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.695135172 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.074934475 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.183198828 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.861928195 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.495952565 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.008280732 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.12106883 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.096062461 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.112263225 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.960318856 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.186165474 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.125102973 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.048396429 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.154914253 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.070723914 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.183172636 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.154401409 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.206304237 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.112857954 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.132321756 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.097307608 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.101497263 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.350911705 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.657326624 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.136128151 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.097810147 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.017191911 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.785174157 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.855229428 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.752427798 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 4.910982921 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20980888 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.108578293 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.20553726 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.120417507 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.502342239 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228105321 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.807364889 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.291887723 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.115621042 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 3.995098495 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.437901746 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.673452009 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.261256401 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.172130646 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.113292153 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.280437801 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.956897997 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.225366621 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.930361012 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.199343367 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.636549707 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.561422682 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.146440793 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.173173943 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.014067634 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.685026667 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.079526055 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.128944293 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.853867342 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231217421 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.217017097 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.832058328 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.230534052 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242032079 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.755450022 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.725208759 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.220179966 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.612533455 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.218851794 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.104327809 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.475873574 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.136428664 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.072553182 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.17636797 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.103748077 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.121326285 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.596790624 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.559289619 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.082663353 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.140282547 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.096364177 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.513598555 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.929829604 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.215873567 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.130293287 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.106208314 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.289267308 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.111271897 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.102414284 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.415888588 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.585019651 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.228257418 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.620456422 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.107802708 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.225953072 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.189967345 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.159746853 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.147236695 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.142850366 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.100528675 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.094759975 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.098030445 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.302878158 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.220085307 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.09938178 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.620179489 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.221699624 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.632505087 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.076583259 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.123749141 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.121351897 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.414262594 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.219447755 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.648187531 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.970084647 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.186836758 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.42881511 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.144624346 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.015901986 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.702816544 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.158281861 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.114999027 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.826944466 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.091563354 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.215969984 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.267205305 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.188180847 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.158022656 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.603691872 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.185320634 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.50673243 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.225124928 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.113555061 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.615906445 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.040084218 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.296821369 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.209728572 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.355519284 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.186033763 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.462887206 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.22550931 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.164678011 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.102994551 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.10706608 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.931278156 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.094954829 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.670243343 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 4.898088941 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.355464543 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.191555101 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.984066603 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.437664396 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.514975488 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.408393632 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.067610224 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.380141702 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.11342843 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.958353708 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.137140898 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.120953423 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.166872789 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.164460578 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.629206896 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.112494615 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.115767938 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.307995794 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.221564407 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.097899358 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.10648354 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.021061527 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.699798569 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.158008253 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.105415173 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.149471993 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.105463956 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.594475254 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.262336065 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.1103273 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.106946517 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.108015464 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.803022739 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.172478235 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.099872013 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.239159583 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.213210639 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.231710726 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791816094 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.42013811 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.163521886 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.101555357 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.105888459 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.596094481 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.427842643 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252070868 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.469816146 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.138871076 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.636447172 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.082104427 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.38947951 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.485100153 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.86691208 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.180667582 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.101538859 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.015171189 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.586536599 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.031559303 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.848194061 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.354414255 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.149172156 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.650610239 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.848171564 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.115966896 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.026091673 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.121299856 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.11092037 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.114453803 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.098362632 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.602342486 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.091060535 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.112755763 seconds)
  done (took 1374.321574215 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382028688 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.101683283 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.098126511 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.097185685 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104900645 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.098342556 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.109676414 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.108069496 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.114920939 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.107584809 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.111358511 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.112521995 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.097902959 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38705588 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.107784051 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.096988384 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.103344819 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.112387871 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.098729984 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.103800908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.101888087 seconds)
  done (took 24.857522904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.103377555 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.111946797 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.096617504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.101384058 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.113998122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.102758472 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.097994633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.09829992 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.098028562 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104672559 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.102491398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.106449506 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.100799405 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.115502959 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099681965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.113128095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.098295428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.097531947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.10813667 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.099670149 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.099467522 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.109953412 seconds)
  done (took 25.368039198 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.107054212 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.099065593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.642323309 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.180345916 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.141873012 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.187019009 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.170970332 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.19510228 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.984703941 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.983864438 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.543369532 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.144059159 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.116636446 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.177139734 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.174661156 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.098052373 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.227457676 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.118816522 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.097640922 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.103384172 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.101316345 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.121480941 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.201010903 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.098685982 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.84927011 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.218963951 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.099045898 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.099901772 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.104228582 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.080200436 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.200583819 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.116743419 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.745168844 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.581049326 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.305385838 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.994779654 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.199499345 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.111544682 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.104698542 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.105763146 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.338949718 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.874204184 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.113129168 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.099759116 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.214258952 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.168291069 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.113394335 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.478486666 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.132174346 seconds)
  done (took 86.580251042 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.116095244 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.227479037 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.174585614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.100496494 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.223198157 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.104568955 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.154976289 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.099986129 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.107375036 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.097136858 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.264197263 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275036308 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.100618645 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.101875005 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.180832025 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.101932609 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.10519733 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.107357463 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.107349485 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.11417289 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.112265176 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.149416268 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.217607147 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.271319288 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.104824625 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.096510771 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.106653888 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.098102165 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.270780091 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.116793727 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.09823712 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.100699139 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.228906262 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.21360335 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.105116764 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.098238716 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.240880013 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.113985478 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.106646283 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.100072604 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.101401852 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.100745164 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.163260611 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.24560839 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.10644204 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.20011363 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.120089766 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.101172999 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.249748362 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.100227633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.123751878 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271867495 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.109061843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.097819967 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.107694516 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.232397029 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.099983007 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.102344936 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.099725454 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.248937133 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.097814297 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.103176287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.253632348 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.124892704 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.110880678 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265837338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.203448796 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.101848054 seconds)
  done (took 79.152318733 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.105660487 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.107211804 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.099673946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.113730234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.10491245 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.100383881 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.103367417 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.107415739 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.107195612 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.104662398 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.097517622 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.098950137 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.128105887 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.104160289 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.100885416 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.09969337 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.100702224 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.106388989 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.102645553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10077173 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.098709747 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.129350606 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.106326425 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.09974055 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.462053611 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.104185191 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.102830033 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.106421881 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105826996 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.098271861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.479615884 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.106924148 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.102738044 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.100627778 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.474103942 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.106053465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.107852829 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.097308912 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.11380102 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.105904266 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.100745636 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.103277178 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.098897364 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.103205595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.100046216 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.120140851 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.098507419 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.469594994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.113890849 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.105844693 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.10112938 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.101900111 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.107532924 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.105627523 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.10954609 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.212482164 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.117045846 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.105736485 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.101475338 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.100754627 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.098148517 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.225377753 seconds)
  done (took 71.299590128 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.096709865 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.100111215 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.13228494 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.110498022 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.103473014 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.100609892 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.09762011 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.102804196 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.105565751 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.100183239 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100174299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.116098439 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116671433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099300419 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.10157268 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.107819438 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.112513004 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.114088301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.10605161 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.102779915 seconds)
  done (took 23.2215652 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.10588367 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.100532376 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.100428863 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.098981451 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.113578177 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.117306314 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.101212252 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.099471281 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.115845125 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103668419 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.099290008 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.103505587 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098941707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.10845929 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.104809605 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.098442116 seconds)
  done (took 18.781051793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.115176692 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.123855292 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.107033426 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.099883151 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.099971833 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.108447425 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.105340337 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.108006825 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.101090816 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.569388336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.106440007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.100355757 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.100345369 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.097874693 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.101824528 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.124423531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.097042138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.103151552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.124887382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.106665093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.677478719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.103282435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.10409939 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.104488748 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.108537037 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.670204347 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.117612457 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.177406147 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.188681273 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.135485418 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.100573195 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.577829783 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.114510729 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.101120449 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.1198327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.104442401 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.103870193 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.097955001 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.098261264 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.105938194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.11361139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.11379287 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.098367075 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.117467639 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.101368649 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.104089664 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.10256344 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.554825994 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.111485632 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.104812446 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.098730081 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.099818696 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.116056108 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.572147894 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.112645519 seconds)
  done (took 65.123134206 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152817273 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.155928427 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.112608422 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.100041941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.163629887 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.143060663 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.145219085 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.115342048 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.140133186 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.105308904 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.162518804 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.132778743 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.136567857 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171459961 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176134328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140247125 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.100464397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.16692295 seconds)
  done (took 21.611549013 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.107195253 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.096582044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.098957611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.112650943 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.104726067 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.112703222 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.111824986 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.098212041 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.112540677 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.116945301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.105817348 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.101338647 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.116442867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.101631806 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.10295727 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099083011 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.099186687 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.104255282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.105855657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.112635495 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.100182238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.112506154 seconds)
  done (took 25.428938166 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.134129945 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.148930024 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.101789012 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.104947232 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.103344321 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.122064949 seconds)
  done (took 7.80549841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179785448 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102617365 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.147233227 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164280137 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.102470059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.105172367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.109608693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.104864961 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.099341819 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421240956 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.102630428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.107546908 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.100299642 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101578764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101107619 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.113527539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.113622852 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.108245455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.175647042 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192854884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.109790401 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.100042417 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100597314 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103185443 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104686348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.097413522 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108586113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416580629 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102514984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106608271 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.113602034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1045316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.096387323 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417888208 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.151805011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114876047 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.109036605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178994259 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106357713 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09960267 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.146241379 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.109511767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.097994855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.113003869 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.113554949 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101824016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100702012 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106519867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101845599 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420713769 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.10740849 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.096725076 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.103537149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.111723154 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.099757555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425692363 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423814299 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.109867649 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.099782485 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420826708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.104398084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.113611088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100629806 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409635612 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106976764 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101677048 seconds)
  done (took 77.060846887 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107355575 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.145254487 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.122192229 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428140571 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.116115794 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.102975947 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098615891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104399311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.097914524 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.175042356 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1858187 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.111439693 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.104415766 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.099361888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.104569337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.102177473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.115252316 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.097450573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.183476207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408004233 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.118888372 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100528841 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101106584 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.103476237 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406784799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10952385 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107896001 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.110204573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.103950231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.120773616 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.099950714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10129648 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.105434983 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.148590566 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.104101315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107288289 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098118675 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101455759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.113582959 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.102010716 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.099425812 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.186862739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.120051877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.116960019 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419158342 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.105597416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.119326154 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.173619423 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101217096 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169793953 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404983649 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41024696 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419955497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100197364 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107376424 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.122496341 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114521778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10266425 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.102083534 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101393891 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.103944504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107225904 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408309635 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.113109088 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.102944117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.099674556 seconds)
  done (took 77.100667421 seconds)
done (took 2324.025333708 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.122295829 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.231620176 seconds)
  done (took 13.446921817 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.099606091 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.116490194 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.267888586 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.10093947 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.132055512 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.208709946 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.168050218 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.107989274 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.101286717 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.19059069 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.107194205 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.232141225 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.210755183 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.11225947 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.110414251 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.111595206 seconds)
  done (took 39.522295366 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.087114194 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.30379158 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.094953373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.859280717 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.179851013 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.215929946 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.435769035 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.346410551 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.393191064 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.585494029 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.36286263 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.594873781 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.97961754 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.217234409 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.741646308 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.821614134 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.884618507 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.943532085 seconds)
  done (took 60.145096655 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.120188472 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.245610705 seconds)
  done (took 8.477433251 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.117879891 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.147583701 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.144821304 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.130648946 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.116486602 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.132636272 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.107973989 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.119356009 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.110347342 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.118656864 seconds)
  done (took 62.356282592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.093454191 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.768634278 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.435336896 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.685757752 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.631572898 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.507377084 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.255045746 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.457445813 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.202836223 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.090543912 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.940202274 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.524525347 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.821848577 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.053804735 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.626161978 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.413412334 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.708694634 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.627244642 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.413913089 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.40817122 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.348187287 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.795016842 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.560933964 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.96955784 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.108884148 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.165400783 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.1927611 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.22608627 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.183253805 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.988984557 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.929420542 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.146079804 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.024676829 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.111155355 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.156445109 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.726023066 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.826839837 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.317664204 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.436999358 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.422210922 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.481096547 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.372471348 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.225984258 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.341501496 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32976841 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.272089508 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.076158519 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.340127692 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.193198627 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.243502033 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.665932682 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.290625932 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.241639297 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.224775168 seconds)
  done (took 149.719535071 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.089410645 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.489392798 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.252881051 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.091167745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.512600311 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.324838276 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.870246845 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.602133015 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.110619158 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.31918122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.276511591 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.229582781 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.093392923 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.10989734 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.120128255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.097641627 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.2934647 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.631220897 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.122675827 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.099119839 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.312236522 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.352061882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.245083845 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.105453504 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.268504948 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.360929765 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.57203049 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.242222007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.495115947 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.108139802 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.586970517 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.107768344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.100170419 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.050103108 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528504553 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.440661478 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.60858981 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.099610117 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.893181233 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.097921062 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.744011463 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.304328119 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.426980865 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.246757272 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.354423387 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.349090194 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.784341414 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.10117174 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.869287161 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.282929653 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.323200113 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.328586658 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.374855339 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.110028007 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.631486793 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.098170198 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.105237698 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.364341263 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.258176412 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.228452196 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.10618065 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.102793931 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.097901529 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.34720077 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.113640442 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.218496668 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.099219799 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.102810521 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.23150542 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.228429443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.256473059 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.339642905 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.35281511 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.378423955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.093639626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.338508965 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.541008338 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.340190466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.097597495 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.10736149 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577374883 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.545998785 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.262180487 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.336047456 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.413333637 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.407539692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.673600513 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.106301831 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.328042394 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.268661654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.451809393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.374786099 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.435984729 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.033251961 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.103383315 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.099295728 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.340910452 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.230911608 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.095519823 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.609791918 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.385268661 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.169804319 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.290788376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.591906368 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.208156142 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.106044333 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.737889189 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.103682055 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.322872434 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.391677889 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.112792593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.098185583 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.252168607 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.088409699 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.112719893 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.501481253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.53642775 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.113693135 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.267903953 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.092846007 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.35194159 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.907335975 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.347359506 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.108826278 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37440752 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.288193213 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.383030611 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.1124914 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.44892589 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.374073909 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.506326841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.433924394 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.104602351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.098631989 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.411477779 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.098514887 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.099061224 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.287799898 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.060059313 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.280326984 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.110646691 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.471169169 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.280708167 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.455210623 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.112370196 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.346853448 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.362526343 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.511033192 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.111638269 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.237032614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.114658648 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.1536379 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.267238719 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.119204701 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.106360358 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.94400762 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.114832375 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.271820955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.337255404 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729244393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.617256103 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.455225046 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.111217524 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614409708 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312342268 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.550968491 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.614113355 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.279340737 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.819238886 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.33785752 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.099786914 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.345925046 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.398304351 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.095191162 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.105592042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.81446613 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.204640887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.096544778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.269762701 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.762697358 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.542549894 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.316409029 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.106592589 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.441541413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.118975531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.334259147 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.598752351 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.415217319 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.11391675 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.105752066 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.09989513 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.09904485 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.31645034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.362533405 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.752528487 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.271274052 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.400694421 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.316026356 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.411439852 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.573898524 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.114164103 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.423742986 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.102017329 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.557555297 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.111955211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.2294133 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.430015711 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.100087949 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.333426237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.460939281 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.283096497 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.547373443 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.101709182 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.103133429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.716150188 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.279612879 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575807929 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.108362844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.228458406 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.491117501 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.226309713 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.313754213 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.320851577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.110447199 seconds)
  done (took 729.490938601 seconds)
done (took 1064.261624885 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.095485025 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.10546462 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.10106231 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.104979578 seconds)
  done (took 25.495283336 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.931338994 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.917049029 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.191270193 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.117617397 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.25117577 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.325889911 seconds)
  done (took 10.832098965 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.608846493 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.109691798 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.103609856 seconds)
  done (took 17.91971997 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.413164476 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.579817237 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.286340163 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.199886127 seconds)
  done (took 6.579349447 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.121658662 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.105049684 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.103384031 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.11887692 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.106895024 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.105246564 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.122195649 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.107104616 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.121397412 seconds)
  done (took 11.11150685 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.562023327 seconds)
done (took 77.606689706 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.534772548 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.422890074 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.117690506 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.361930492 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.237808518 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.433552891 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.224806384 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.120531336 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.396278977 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.5380835 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.608936525 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.297085998 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.619514185 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.557258572 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.32674509 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.132173265 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.120863597 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.174722969 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.788797081 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.311816172 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.867307568 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.233240541 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.101323643 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.132726077 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.095330053 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.186635849 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.362876559 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.094847069 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.751532421 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.122741171 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.191757793 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.610308123 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.373196655 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.390024831 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.197917703 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.115012841 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.553724202 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.10432961 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.372211702 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.565606264 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.364986013 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.237009502 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.097433821 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.417037034 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.515547634 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.125664094 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.086721917 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.257865534 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.738067874 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.288965344 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.490898105 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.114444891 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.75101445 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.177207204 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.182452512 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.115403487 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.156239455 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.575303432 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.344982564 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.402762578 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.133752372 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.098245352 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.110997719 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.12900267 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.088557476 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.3294166 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.518353767 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.202629235 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.573865632 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.134033578 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.118865145 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.146085891 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.885253048 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.172751269 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.091032744 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.200048162 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.404204738 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.243916774 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.119080142 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.196956508 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.276033456 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.104148865 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.333825407 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.403694081 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.259902975 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.538075399 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.60014708 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.584288453 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.732475075 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.106181196 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.483452805 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.654620726 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.33494017 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.104813078 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.194972104 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.259646559 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.683147604 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.617794869 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.2424252 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.79440171 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.127419171 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.143559494 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.637787048 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.460989871 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.011396573 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.148814697 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.239343641 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.101123079 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.340123037 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.10062974 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.540614508 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.633775058 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.10151016 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.162051496 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.564567687 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.100439743 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.406116432 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52868313 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.221789409 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.101035384 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.40502794 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.124053908 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.231566838 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.655623513 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.495273737 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.308862535 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.109100345 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.607636176 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.104307801 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.34877078 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.103091918 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.752897819 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.66426119 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.131139789 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.35159525 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.235398069 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.102383104 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.319779749 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.172140679 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.239602388 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.47420836 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.411734794 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.242820893 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.093992608 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.486238281 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.211217168 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.342537679 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.400120869 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.268139904 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.43256543 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.194698523 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.129442755 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.224818427 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.542917251 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.738562612 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.820064385 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.337565382 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.246312995 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.681978256 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.389443259 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.971583947 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.208923057 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.15947615 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.104114544 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.118726994 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.167526808 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.103910079 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.100482621 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.393359419 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.502208484 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.762218307 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.020238599 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.093286532 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.391767058 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.236781685 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.018397733 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.746649052 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.110217961 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.573143768 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.574128852 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.250562645 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.129213377 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.090834078 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.176843283 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.997522589 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.14685823 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.453001406 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.764791089 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.539648692 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.463846327 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.329086247 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.138485207 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.487728397 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.345891041 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.37659895 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.300618713 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.740454009 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.1864537 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.528534612 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.225641638 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.379135096 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.10355207 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.372975053 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.394412811 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.584628525 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.447364177 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.325295943 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.329500938 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.434340493 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.103168301 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.101525759 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 7.905918165 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.520348907 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.129413219 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.093459831 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.862530885 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.601894092 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.19078696 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.240387754 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.527729721 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.206714546 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.318205266 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.620910885 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.129183886 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.430373696 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.322460002 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.326246621 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.294694828 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.152806676 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.275710965 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.289758054 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.237269703 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.332968613 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.044230504 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.541801144 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.149021316 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.00124814 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.096287836 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.830979315 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.142149936 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.125368441 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.380627812 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.304004547 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.416946772 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.315784212 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.267460338 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.1042714 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.225038139 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.601671423 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.964843408 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.691664075 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.187297898 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.131152097 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.093529073 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.64041785 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.528156622 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.168984431 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.235464791 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.742687852 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.144206056 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.299865078 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.109782469 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.173708687 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.904239057 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.229190811 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.347316222 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.741773162 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.121429682 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.509053334 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.212332068 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.690787752 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.629211412 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.149532803 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.239670111 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.104266349 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 4.865652744 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.51382505 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.126906411 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.264488955 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.459953554 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.214895504 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.220011102 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.094870365 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.151934611 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.701892061 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.510627576 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.635872036 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.14243983 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.570377192 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.1064042 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.567508253 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.146519512 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.188942621 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.521015365 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.227165771 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.445533739 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.108064979 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.179569389 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.354102712 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.149416343 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.097135881 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.321387207 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.110126615 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.727187536 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.815741195 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.336742132 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.07881597 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.407004589 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.176891214 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.105149896 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.229012779 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.196302851 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.745898939 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.617137141 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.116972718 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.448187605 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.115776488 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.564851049 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.138787145 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.118613283 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.23790185 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.202294254 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.093796468 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.067971857 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.283899666 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.647916524 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.262902603 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.084207071 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.11069598 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.500102334 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.228277777 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.519170965 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.789110299 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.118228358 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.272215522 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.781229953 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.326994549 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.127666964 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.329230662 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.111200517 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.74567759 seconds)
  done (took 868.230535097 seconds)
done (took 869.531131258 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.149072193 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.489256633 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.312218709 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.083214664 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.923493227 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.750042517 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.325301822 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.340607642 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.179340395 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.347348837 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.026136464 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.918411341 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.214166473 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.221232962 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.189737248 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.232352842 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.330117314 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.34813265 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.219025522 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.215563396 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.495817538 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.196934569 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.542849344 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396346448 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.476051889 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.215115978 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.171852144 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.453314007 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.46991912 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.079927609 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.284801684 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.30531922 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.948510827 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.354867193 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.198889987 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.182007173 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.959957826 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.207607757 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.139023074 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.196610482 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.487428693 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.237924103 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.822467885 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.051483368 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.892021625 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.522990576 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.994898273 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.210425202 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.223273305 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.285724906 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.131019971 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.135168937 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.452589592 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.115445288 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.936429299 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.037220235 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.465029125 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.976536449 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.844882309 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.287061202 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.471206507 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.205655708 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.28635076 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343044531 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.224189306 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.40355896 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.536340873 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.128545125 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.312251995 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.331065236 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.355837224 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.337952114 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.217127912 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.329454666 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.228017517 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.323053001 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846546472 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.317791171 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.909971038 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.218935495 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.051295038 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.979080729 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.062453606 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.185211965 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.151068576 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.909165436 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.210221534 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.061365017 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.242798421 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.300215121 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.025403346 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.310337155 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.567127792 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.169240759 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.158595378 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.302004601 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.222430343 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.150823165 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.275055466 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.307829142 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.88567533 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.180799554 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.102463679 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.210944182 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.222002063 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.127511192 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.166302857 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.52849934 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.332892781 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.265950504 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.495299475 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.226317642 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.325738649 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.221065364 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.186245091 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.884995504 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.391662281 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.973342589 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.130657744 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.779945343 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.382067376 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.194207867 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.472588124 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.406216365 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.147576434 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.201940517 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.219208191 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.042169534 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.211488746 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.218430766 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.296930191 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.554690653 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.284848894 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.093004448 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.343173622 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.796641738 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.349666868 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.329383604 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.178853334 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.999071171 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.211664127 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.251012393 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.412959483 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.518933722 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392468369 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.419271543 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.227366587 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.406577661 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.133801136 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.223583291 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.325382702 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.228516455 seconds)
done (took 242.396190382 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490240874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.272842799 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.378813675 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.32587888 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.470282274 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.413492129 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.190440332 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.546841068 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.160256545 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.530740947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.319713984 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.006939611 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.273678462 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.348524643 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.486206832 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345302531 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.17136966 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.366620741 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.552378448 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.511734607 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.896114566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305388421 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.256521215 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.525517904 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.09343209 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.910867862 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.414803009 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.216245826 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.372501568 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.854565188 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.89116018 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.410417813 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.404731124 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.792675799 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.514474178 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.811792561 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.407948204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.902301712 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.366577827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.49272691 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.297141504 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.961369951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.864900955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.91503234 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.217311443 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.378537788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.173490717 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.992846483 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.104215422 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.820414147 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.37768563 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.910329248 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.016026108 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.369145609 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357755684 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.745445766 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.489328114 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.516337998 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.507268872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.418453581 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358012642 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.522374244 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.503680082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.226597486 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.881121211 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.406303002 seconds)
  done (took 146.438055446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.50900765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.468016072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.548208169 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.421044502 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.653291002 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.563516888 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.48513544 seconds)
  done (took 13.743892365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.169525741 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.150983009 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352293948 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349637564 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.161710111 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.289822892 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252361402 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.911436833 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.379086843 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.199588645 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.460758849 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3522731 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.830754027 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.883774992 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.262518286 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.42366111 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.15010839 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.222699113 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.212589772 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.433556255 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.906667385 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.887495316 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.309113261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.144359934 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.174191781 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.1957218 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.153044296 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.128440305 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.158482728 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.142962598 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.165112155 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.264724084 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.166104689 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.859786339 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.14671046 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.465054867 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.16693077 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.154460959 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.303643511 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.110361541 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.148405653 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.151653076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297717467 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.180258219 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.136046132 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.340585223 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.138851812 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.167041144 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.133681137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.160306362 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.352218789 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.161167133 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.134901655 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.823112551 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.37139127 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.881017768 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.232045234 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.165659245 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.152034729 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.210111366 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.148025475 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.41561814 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404887476 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.130226307 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382847243 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.468161863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.149908078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.133483976 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.130902511 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.402924167 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.155352591 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383788848 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.157038104 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.213349607 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.157745828 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.288650921 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.342438258 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.972777518 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.943272376 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.786752395 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.480115227 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.153076778 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.478618026 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.097563271 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.922061092 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.149712443 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.158919258 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.856464466 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.07473685 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.165912095 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.463178293 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.136214778 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.211496675 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.200300642 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.144332709 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.218874444 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.310868056 seconds)
  done (took 151.410382342 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.29216293 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.278953437 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.482930816 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.067206328 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.14345955 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.401452809 seconds)
  done (took 14.769819474 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.479774793 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.966283932 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.193713748 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.174348303 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.20223964 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.110231258 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.103408911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.356204226 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.29092726 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.177519899 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.106623126 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.10458728 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.108778124 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.289826293 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.111830504 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.166403406 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.102496021 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.178966579 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.186455419 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.218002868 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.450789234 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.212079287 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.222358422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.02074034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.162661253 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.155209448 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.8682321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.16592258 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.168402859 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.553470576 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.306315589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.125612156 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.95656772 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.517903233 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.873818351 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.012480674 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.300823021 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.113626199 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.161944509 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.116116956 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.122917083 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.225673648 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.189042767 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.131756607 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.494546555 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.9377233 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.172599589 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.424746318 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.119961786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.114669608 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.105487583 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.176612897 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.113973519 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.111550332 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.395998428 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.657815019 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.060647761 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.121054196 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.206758727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.03860291 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.230130413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.117568669 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.506723606 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.051539388 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.830024614 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.125159298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.030841982 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.283730091 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.224527615 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.175710149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.105223033 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.170964653 seconds)
  done (took 116.012797509 seconds)
done (took 443.480829752 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.350319263 seconds)
  done (took 7.445097086 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.190889644 seconds)
  done (took 7.385701398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.112175296 seconds)
  done (took 7.224723765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.099845943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.162865141 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.127339191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.120324202 seconds)
  done (took 25.644521224 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.717466906 seconds)
  done (took 7.820032117 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.091231137 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.118122862 seconds)
  done (took 13.325892768 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.108105748 seconds)
  done (took 7.250729488 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.535919708 seconds)
  done (took 7.654589682 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.095591532 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.114058548 seconds)
  done (took 13.344418674 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.105140903 seconds)
  done (took 7.206608742 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.391299893 seconds)
  done (took 8.555027578 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.121493908 seconds)
  done (took 7.340438871 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.170628757 seconds)
  done (took 7.273189441 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.133986864 seconds)
  done (took 7.239455648 seconds)
done (took 135.815876308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.097784771 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.10540969 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.115327228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.109970244 seconds)
  done (took 25.528525293 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.427740799 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.505789399 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.494388876 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.494023505 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406503482 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.377286618 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.43356408 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432108665 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.386497259 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.488266162 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438321152 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.494746893 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.585265961 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.413461925 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.409367964 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.59880418 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.495837061 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.433887964 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.400516571 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.411399559 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.582159528 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.58489026 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.876313597 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.860354428 seconds)
  done (took 37.134533552 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.319776459 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.469652378 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.278493383 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428065141 seconds)
  done (took 6.62050103 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.138187255 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.480573281 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.48372649 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.529016806 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.464763571 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.281150815 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.486294461 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.330060083 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.257452111 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.25835515 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.731615026 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.262736257 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.272134402 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.530505637 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.286642138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.105819675 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.114369031 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.309947321 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.484110656 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.31295077 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.373175117 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.471219877 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.46839493 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.470536369 seconds)
  done (took 34.025089903 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.863680271 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.038371956 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.494999666 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.021524329 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.829761793 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.912808528 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.389771784 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.619559819 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.382647527 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.357969177 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.850107779 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.873676001 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.257873009 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.003870572 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.869637905 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.302720446 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.286488923 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.953298169 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.530402316 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.430733876 seconds)
  done (took 38.375695949 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.112054278 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.361457358 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.35949778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.287280911 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.094564588 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.109102 seconds)
  done (took 26.427463038 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.413159703 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.264050489 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.402364508 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.368368228 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.269877143 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.242435959 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.629451482 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.338032594 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.866742704 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.773480075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.55203075 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.541020975 seconds)
  done (took 21.771780267 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.099364826 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.13720738 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.106019706 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.338761822 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.128471326 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.796915029 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.130847826 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.102815961 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.606353972 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.378390007 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.255800251 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342901991 seconds)
  done (took 43.541423094 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.291978721 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.295149925 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.40682518 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.137872326 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.47941459 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.156683149 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.4820816 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.071044562 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.682838257 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.848064276 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.63035284 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.110562816 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.639849758 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.075962369 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.114157009 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.411644811 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.926471578 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.598725053 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.418226815 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.149377044 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.068421568 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.253645465 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107121877 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.532127357 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393454418 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107195651 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.323375684 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346235633 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.098596892 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.328233259 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.096956551 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.647569689 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.282807002 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.421175266 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.498922695 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.32418835 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.119487561 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.779238526 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.668513398 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.396088101 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.247860274 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.267272563 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.345473661 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.120389105 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370259868 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.893170059 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.236520714 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.650628945 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.090798541 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.340645643 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.861505805 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.340433978 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.430800594 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.801505287 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.252153179 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.398940201 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.27531916 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.104506044 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.414893404 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.260952466 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.296290636 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.109511175 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.30749835 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.071590078 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.453043375 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.312625544 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.18431829 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.304356603 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.420245917 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.404061037 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.463956725 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.353066374 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.805216657 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.228976642 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.648207286 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.022536915 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.478938301 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.115789933 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.828256464 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.648398438 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.082591861 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.243420443 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.751450889 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.070008994 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.09736903 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272634777 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.975316563 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.074785399 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.123842201 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.272121446 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.368712977 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.22892667 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.258977087 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.291757027 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.825465729 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.086015912 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.150551592 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.345685121 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.083757136 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.667549874 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.103505212 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.136633112 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.113218532 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.703113423 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495596818 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.894331053 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.877556711 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.724798248 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.403890277 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.728401045 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268628007 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.105050673 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.462920308 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.429112871 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096956117 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.874390834 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.102099649 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.318448116 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.317187089 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.11437995 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.076764856 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.507601697 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.289495574 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098133691 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.384593522 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097191974 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.256152516 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.109745316 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.643160331 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.086814455 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.366821202 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.56708374 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.185780051 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.252864275 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.082788875 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.256289681 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.541327238 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.166902198 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.467729928 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.417872749 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.284440802 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.584995366 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.101886803 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.952473025 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.46930833 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.320339607 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.435481559 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.752525643 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.269237259 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.113113627 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.179705774 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.237124867 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.12237583 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.68209023 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.110618439 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.793194086 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.847170134 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.506890697 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.123023371 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.274852391 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.112360644 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.290556957 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.520903305 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.261354018 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.27797603 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.37798773 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.310917276 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.097483408 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.083295741 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.368955535 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.347029302 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.557453927 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.331932075 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.519897236 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.575410009 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.588186587 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.320678795 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.467766795 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.944364584 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.350596374 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.350078846 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.199178618 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.076290037 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.111999946 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.306727682 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379465421 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.345510091 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.87773018 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.915096339 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.91584542 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.216094919 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.097691743 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.07391913 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.244143426 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.470321488 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.103402804 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.612044976 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.17269605 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.458182345 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.60507335 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.1509646 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.401885034 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.696305654 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.624899064 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.462436407 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.436619338 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.081775678 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.816424349 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.733463037 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.267271186 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.105524792 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.536071504 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.72892854 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.292389642 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.112064648 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.449111149 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.044161599 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.937041018 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.606076612 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.70985731 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.138287518 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.271664033 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.1004351 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.33142836 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.71777973 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.370059978 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.278466613 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.115544662 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.533709768 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.334191728 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.440013368 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.102273282 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.108923887 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.381517847 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.411493778 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.380425747 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.54874248 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.328958578 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.768418132 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.210279441 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.739101991 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.274516745 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.143997999 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.453480378 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.256242069 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921882237 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.280255698 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.923219233 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.383724295 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.658207417 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.382270862 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.11663268 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.465907792 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.669313978 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.117948058 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.018978428 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.216298973 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.102052957 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.35612389 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.874712181 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142745322 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.234888558 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.356684441 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.322797829 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.276663655 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.478997835 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.502767722 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.412901702 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.074010285 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.271192727 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.224273996 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.411095375 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.100342772 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.382473248 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.742030824 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.530706477 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.0468249 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.580182905 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.432391659 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.616392284 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.463170298 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.304816891 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.399042461 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 1.995518632 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652521943 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.111058049 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.24754372 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.075006061 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.678507783 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538471201 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.479270592 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.483447741 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.127453026 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.506552782 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.436666895 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.287353543 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.138019153 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.375493288 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.102192745 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.400920997 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.097660861 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.959299985 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.544809075 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.108499924 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.993122384 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.334004659 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.45175533 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.266574954 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.456811383 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.25789045 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.231961073 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.560241973 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.285872689 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.249973397 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445397628 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.718791129 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.250335854 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.10652975 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.632095255 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.74400499 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.474319702 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.684711205 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.593318532 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.470131828 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.880970787 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.100286492 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.325081762 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.270472349 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.115931131 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.327549686 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.475255697 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.119842036 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.313090648 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.419068314 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.397074623 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.675132223 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.08646462 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.786582886 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.366090299 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.630742796 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.669667039 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.889971334 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.3388011 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.255441961 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.370209513 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.211542441 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.260721124 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.593660576 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.580245516 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.138985022 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985947933 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.898900924 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.159097397 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.61542516 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.09716659 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.95776088 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.269798488 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.344855771 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.33186669 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.243597747 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.074288038 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.847284137 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.890724118 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.390406735 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.26822606 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.278405765 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.136677235 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.349022594 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.619621334 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.419663289 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.885862307 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.478652375 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.286694114 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.07017328 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.103715181 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.796464883 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.46939958 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.126056236 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.397495907 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.415389267 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.120824102 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.154075852 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.109364245 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.268939147 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.92452803 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.837784178 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.338669476 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.487425007 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.672960267 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.135847528 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.888204851 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.323639702 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.462336775 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.492417945 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.940703696 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.495160074 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.404256662 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.261129695 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.080145777 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.278670955 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.114418488 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.297736532 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.88490567 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.413737481 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.097588066 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.039051179 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.723499091 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.107751329 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.201843071 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.82645151 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.376735444 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.303586362 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.108969375 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.887119468 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.484690519 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.265582102 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.081796555 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.874180033 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.0874508 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.328969566 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.097705362 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.286188586 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.949242694 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.102080772 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.944823913 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.534827656 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.138177411 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.402985802 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.075820638 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.682703296 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.248440932 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.529048499 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.048616566 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.352896197 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.620409703 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.273400974 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.110655836 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.444705766 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.236610545 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.409337528 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.378462684 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.48090569 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.501970043 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.365783574 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362440072 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.509271778 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.356452894 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347355204 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.078218356 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.116675347 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.223312449 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.497553507 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.465816898 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.106504301 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.643887903 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353390421 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.163814218 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.350981937 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.280605991 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.782678591 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.312491384 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.160992984 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.357645604 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.146662623 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.421392443 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.122973695 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.282926475 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.099189315 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.176439997 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.334037566 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.362096483 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.492110157 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.418679515 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.710888278 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.271455585 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.523286936 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.933899188 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.638484141 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.102637784 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.745188016 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.565317544 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.107279609 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.474274624 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.701493428 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.276800746 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.384114761 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.530646015 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.125632917 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.27483364 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.614733714 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.121228523 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.779917651 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.47481339 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.101835671 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.468577439 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.157085706 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.269795589 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.89961447 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.611785157 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.106187951 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.700574939 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.508575694 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.66605486 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.813601354 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.119064267 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.266546893 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.660322589 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.093154952 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.104325696 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.200158896 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.647496706 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.110258676 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.656250849 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.10913541 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.343836027 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.176162547 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.257400084 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.111499272 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.33597485 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.701775574 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.36209455 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.379088641 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.276666264 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.109099398 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.898311489 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.782677809 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.200993769 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.385170567 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.103645974 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.508957096 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.832053172 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.1074852 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.752577366 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.3034266 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.073319132 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483685704 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365964768 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.128221898 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.327700457 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09995391 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486175169 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.261712692 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.598482514 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.34687116 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.121118481 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.207161901 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.107110246 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.656857312 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.468562932 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93235553 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.103479135 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.424931723 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.102534076 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.71571338 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.757826144 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.262953346 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.197545571 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.956280849 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.822883494 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.904231572 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.35124828 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.117188731 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.316792371 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.610949828 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.077629748 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.72780865 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.133888209 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.295874163 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.433081731 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.072248672 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.277786477 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.117849537 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.084343855 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.615087321 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.106319913 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.44084165 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.076330778 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.667534061 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.123228536 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.148583733 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.324892329 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.478522231 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.10520671 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.835203624 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.279021757 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.116518288 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.110137165 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.471984721 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.25099991 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.351322643 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.46956176 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.22829851 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.528322996 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.992773795 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.709255937 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.238395372 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.415356226 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.939686766 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.666210518 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.123178467 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.710026684 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.686057642 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.258384104 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.651950478 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.348172126 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.848100487 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249773692 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.60331368 seconds)
  done (took 1945.904943674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.202691289 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.265043435 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.281552498 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.174345216 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.162332028 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.151414741 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.245497529 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.146636288 seconds)
  done (took 50.744437574 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.095769479 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.138705472 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.497054531 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.356315408 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.1270863 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.249117392 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.366930716 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.785069351 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.121637121 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.07557336 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.249058254 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.261139648 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.12258643 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.137970473 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.979763715 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.23817638 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.101287073 seconds)
  done (took 93.05084493 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.131387176 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.960415817 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.126918284 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.843734711 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.154802347 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.532882229 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.122371484 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.107823106 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.470342489 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.772911136 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.154141686 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.259530074 seconds)
  done (took 85.777833678 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.142740192 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.139710458 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.145447071 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.14309606 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.133908875 seconds)
  done (took 6.821409677 seconds)
done (took 2416.942985383 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.351074734 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.632260241 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.66107233 seconds)
  done (took 4.397966062 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.166485644 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.242449575 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.318260926 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.251347848 seconds)
  done (took 6.112941193 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.378112558 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.597183429 seconds)
  done (took 4.085668192 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.457242106 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.12557338 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.637715628 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.105020365 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.113101503 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.107936468 seconds)
  done (took 19.447652277 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.141024497 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.134102415 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.133383254 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.129471769 seconds)
  done (took 5.646512834 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.105741614 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.147902001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.108924913 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.06760184 seconds)
  done (took 18.535781281 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.432309522 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.374791643 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.863478913 seconds)
  done (took 5.79147592 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.935493029 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.266579903 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.989787433 seconds)
  done (took 6.293588012 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.393146519 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.043647445 seconds)
  done (took 5.555521982 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.276289243 seconds)
  done (took 2.384392381 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.588048924 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.602645379 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.76895208 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.831473481 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.008457959 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.408640423 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.524815337 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.349108268 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.631616296 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.648625921 seconds)
  done (took 17.462195429 seconds)
done (took 107.38839901 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.085316089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.55141989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.269046318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.900612701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.287145066 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.271269767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.138671523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.723953976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.815546153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.821789983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.923025838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.287546028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.16380384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.522339788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.175792105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.486210787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.520796642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.104958315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.296463015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.589277696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.154144307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.509582602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.673815997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.521173853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.551517592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.253338827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.10400221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.525214652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.520326293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.11791143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.269299114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.818328949 seconds)
  done (took 153.057663354 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.108475222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.122659949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.130644327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.106708131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.074585186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.134038732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.11650956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.115161108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.14985015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.146256608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.121362819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.07851112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.128687081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.106229812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.128201517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.106229563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.267549582 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.124741688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.130488243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.140076282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.12497344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.842266178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.122177511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.929920534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.265575526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.12677627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.118350702 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.136652871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.122816899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.127164481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.126044278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.111303724 seconds)
  done (took 188.818562762 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.097142173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.127256941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.142806904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.109625953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.134265968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.133004129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.108023231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.108356416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.120805135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.136045008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.125296426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.122508991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.127461476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.105398038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.140753964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.107535478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.126493984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.128143206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.124694252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.124888468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.13698033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.106200739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.13318082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.127591729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.131004809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.136448722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.106108169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.141285931 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.126215567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.122970835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.127938285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.106474454 seconds)
  done (took 197.09630087 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.421261052 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.146334622 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.05733434 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.676777955 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.044743524 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.154246195 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.673318759 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.411862112 seconds)
  done (took 13.722356708 seconds)
done (took 553.821550958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.824565968 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.038801978 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.285713587 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.34665506 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.720175217 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.434860968 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.350603627 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.581476815 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.858048809 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.566386147 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.568002091 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.338448335 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.922493548 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.347900891 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.291526068 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.609985703 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.530042388 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.824194014 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.311196719 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.989208889 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.33541045 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.968250836 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.570496741 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.900965689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.581486691 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.026828709 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.367667116 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.536450317 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321345662 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.301989403 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.191826339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.569084468 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.338986169 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.336150818 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.603524731 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.648637678 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.523592106 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.573818324 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.290245236 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.77017542 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.999828292 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.710308787 seconds)
  done (took 75.313071959 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.141747848 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.158090358 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.294717546 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.210994912 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.782665024 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.212237753 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.381947627 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.345328555 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.219292232 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.329387781 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.378790936 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.820749786 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.396960527 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.837195754 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.366306854 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.39126709 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.211609018 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.770433361 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.369791532 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.346979239 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.186904937 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.296466794 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.182065339 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.33454965 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.16652251 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.180665211 seconds)
  done (took 36.445399081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.17582611 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.330068872 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.384130066 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.386767074 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.364667679 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.138293231 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.457560198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.319716994 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.837905698 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.719701151 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.249405469 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.295757038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.339942051 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.409572982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.382098362 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.313462282 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.29699663 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.315832828 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.325238436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.352604193 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.212666982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.218332025 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.453626376 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.083678689 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.976122064 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.677708311 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.473948251 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.698465363 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.324327965 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.326894211 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.291127913 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.417349842 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.526987302 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.38331433 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.284821193 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.161341939 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.180796952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.265376203 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.114256542 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.302178463 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.431175585 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.557299768 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.498896792 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.665403683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.417045303 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.357007645 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.577078124 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.260374004 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.268509165 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.030358667 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.408078642 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.829437163 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.360136989 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.325364066 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.254620165 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.553237133 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.32217075 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.418291918 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.260314132 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.731199384 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.23113312 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.53561863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.331570397 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.445281238 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.438548817 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.347938427 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.297348691 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.677694961 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.482493154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.320275312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.723193764 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.215458299 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.184548607 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.236626908 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.335017185 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.614353367 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.055640341 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.482974208 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.525570737 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.427068587 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.393609645 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.725495654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.142868583 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.506307331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.325372111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.147863565 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.21818933 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.482759225 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.418839955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.636956172 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.674320991 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.444464747 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.631978711 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.349187747 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.728484071 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.526622534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.161529288 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.16010676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.371713952 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.679926154 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.225595247 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.383781872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.731993855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.690103356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.440756909 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.311550145 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.494367531 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.438617788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.5490465 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.14431492 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.327757633 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.249997679 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.354494992 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.424282926 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.140181053 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.648657927 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.270011828 seconds)
  done (took 237.865859592 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.100031058 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.121172305 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.109240117 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.112352198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.123440756 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.662076599 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.159921606 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.109394368 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.674619719 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.168575737 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.112711878 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.111337876 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.124225792 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.117904844 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.243842601 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.260360642 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.774999393 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.10871769 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.120485749 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.10934718 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.823217906 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.122632891 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.111678848 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.109301476 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.127261542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.115808277 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.12428687 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.131607585 seconds)
  done (took 151.200442205 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.168364012 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.527108038 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.200895925 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.256615756 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.199921206 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.171540723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.669556094 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.314669817 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.240716951 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.177167863 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.187855644 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.398834626 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.477160371 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.766461992 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.29966195 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.418295856 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.825543345 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.315404703 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.175238083 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.169601799 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.338479197 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.537195445 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.427333866 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.442017524 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313142715 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.441845927 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.238972209 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.170961609 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.279723495 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.66571235 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.190477601 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.545339994 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.319349264 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.175688663 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.662450916 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.515114634 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.741200215 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.821040157 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.359515648 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.12996552 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.127456459 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.401043824 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.459448598 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.215515747 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.160475729 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.84233974 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.190726122 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.425874407 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.176804855 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.127856245 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.270334695 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.286412706 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.418698874 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.144688375 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.340831567 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.36325142 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.77018984 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.148324172 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.164839369 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.470383314 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.146989163 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.643348843 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.745356921 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.247202519 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.182441023 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.020565791 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.262132544 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.687237854 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.796543127 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.216227935 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.508388844 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.361817679 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.154067431 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.43956488 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.340129737 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.615766988 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.743787587 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.305652589 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.263426081 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.266700368 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.447873731 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.16452354 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.727463311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.281752498 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.142645098 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.651528713 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.561503942 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.145040633 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.165536455 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.271750906 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.341475231 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.383765834 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.434758989 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.231091095 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.123175678 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.425799177 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.447109652 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.181174828 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.292122255 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.159612102 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.586393161 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.361019555 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.146321343 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.500091396 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.565040996 seconds)
  done (took 156.580078445 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.929636028 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.290741853 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.418972303 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.794974572 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.537325317 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.609163821 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.382781104 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.235235721 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.441976606 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.369497797 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.409517769 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.259950372 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.125319168 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.915506576 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.21376381 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.33577132 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.234814058 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.759755617 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.459428284 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.301421462 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.589291049 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.93097415 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.468166761 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.551998696 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.597176727 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.723286872 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.84670744 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.268098167 seconds)
  done (took 49.126199088 seconds)
done (took 707.629866302 seconds)
SAVING RESULT...
DONE!
