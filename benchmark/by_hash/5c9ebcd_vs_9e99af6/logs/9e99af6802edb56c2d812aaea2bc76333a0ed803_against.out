cset: moving following pidspec: 1388708
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.238560142 seconds)
loading group "shootout"... done (took 0.826464634 seconds)
loading group "string"... done (took 0.219391465 seconds)
loading group "linalg"... done (took 3.182383919 seconds)
loading group "parallel"... done (took 0.02192134 seconds)
loading group "find"... done (took 1.16125237 seconds)
loading group "tuple"... done (took 0.719463163 seconds)
loading group "union"... done (took 3.14989742 seconds)
loading group "dates"... done (took 0.159577151 seconds)
loading group "micro"... done (took 0.058721336 seconds)
loading group "simd"... done (took 0.372759554 seconds)
loading group "io"... done (took 1.416924918 seconds)
loading group "random"... done (took 2.311876752 seconds)
loading group "problem"... done (took 1.148666099 seconds)
loading group "array"... done (took 4.436817822 seconds)
loading group "misc"... done (took 1.111238151 seconds)
loading group "scalar"... done (took 3.503520901 seconds)
loading group "sort"... done (took 0.311359331 seconds)
loading group "sparse"... done (took 3.530972814 seconds)
loading group "collection"... done (took 6.044152436 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478988341 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.072451272 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257355167 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.07481836 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.274137278 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084047162 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.085819667 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.072736645 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.131503162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1582451 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.214742676 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.383945219 seconds)
done (took 5.019764473 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.301840247 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032655113 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123786134 seconds)
  done (took 0.746040759 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.139423413 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.016221048 seconds)
    (3/3) benchmarking "different"...
    done (took 0.023141975 seconds)
  done (took 0.771081582 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020698086 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.098805552 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021793252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022137201 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022024509 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.02138237 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021223329 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021188504 seconds)
  done (took 0.829836912 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028795548 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022463305 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020680066 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022035623 seconds)
  done (took 0.683056335 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022657272 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.091546012 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.026538847 seconds)
    (4/4) benchmarking "different"...
    done (took 0.026401789 seconds)
  done (took 0.752841162 seconds)
done (took 4.707301516 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.194786097 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.775714866 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.870133044 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.175572707 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.339863112 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.286754661 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076625997 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.228989639 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.14701198 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.030856586 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181892451 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.036126831 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.509064 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.437805363 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026628649 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.142637282 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.577890816 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038678292 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.069822358 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.202706505 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.0356015 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.03956518 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043528745 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.02779393 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.106029237 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134127167 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.587048443 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.065105667 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.023927407 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.048517724 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027022492 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.032198017 seconds)
  done (took 9.159058323 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.160369857 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143317848 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.024867989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059537368 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.052815092 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024817283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029948977 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023258059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042230857 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088154408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045808141 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151084455 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021036117 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024332869 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138769443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.115500939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037427589 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036873174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022309164 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036641476 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.048544343 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034703563 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.03233843 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031947577 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068474653 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089462237 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041449465 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.067425612 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022650595 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.033820461 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054488772 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.062962972 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022780886 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021313906 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064063428 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.043522041 seconds)
  done (took 2.678531345 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.642447342 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.114965246 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.139919576 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.179981333 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067584255 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.054036877 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.173155782 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.074036137 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.054039005 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023880295 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.195936393 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.635775186 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.162178085 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.024307809 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.027629702 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.166917731 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.88812765 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.970572623 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.024480439 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024189653 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.130325209 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026393826 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.173688143 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024968779 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.133214627 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.698886258 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029555282 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025038748 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.050665519 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.253634024 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021063608 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.093108168 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.046421104 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025115375 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.560447689 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021848262 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.020054411 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042132206 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.052758958 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021870787 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.022876878 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.030719187 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.020966914 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070829266 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032767463 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.484942867 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024804337 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.665530353 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.692464819 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.028911792 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026005307 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.055891503 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019807373 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023216615 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.5501596 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.090730472 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023274524 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.290229605 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025478288 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023895331 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024214957 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.053973148 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02279947 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024664386 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026670937 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.04177785 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.982540104 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033224272 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042724921 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021870368 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022621967 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021186798 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.390438524 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029326825 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025010113 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020447437 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026145598 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022569349 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022255826 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.061043444 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.048209034 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.04559993 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026064769 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.022940613 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.02203023 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.53946174 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.949993152 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024861829 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024149848 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.510206219 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020548437 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022477187 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024224861 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.044287726 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023149764 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.020146895 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.062753301 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.02515668 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.127632086 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.347053509 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.026199051 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020798126 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.352836667 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024454745 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.058848771 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075511043 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022649964 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064042063 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.02342151 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020455955 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.02663129 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020500409 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.02457133 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021775757 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022316977 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021386006 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023106971 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023856435 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022752304 seconds)
  done (took 23.185083446 seconds)
done (took 37.260051687 seconds)
(4/20) benchmarking "parallel"...
done (took 0.807156153 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.186134577 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049055872 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.01989049 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.143267991 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043520057 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.116217325 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.158000024 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.115332075 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045321325 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.044145385 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.043506313 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.151332301 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.160001442 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.046180602 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.10019773 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.164634877 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.04503461 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019559845 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.044495366 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.044685197 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.044451393 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019521126 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.044016657 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.04429024 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.100132321 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.046073327 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.020353481 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.102204116 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.04617678 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100123895 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.047711708 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.046860733 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047585559 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.103943827 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.048205478 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.103864926 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020940938 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.047873265 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.047596517 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.047752169 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.048262443 seconds)
  done (took 3.619201486 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046379547 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038692757 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.054312668 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018183839 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028018401 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.03843788 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018158098 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038039019 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.056108707 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038666698 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.0384479 seconds)
  done (took 1.145947494 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041280675 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039021876 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.046789983 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018012062 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029748955 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038983639 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.01810795 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038941382 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.054870119 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039208572 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038958141 seconds)
  done (took 1.097217458 seconds)
done (took 6.516637789 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.148859633 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.121590171 seconds)
  done (took 0.938994701 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.572196708 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.211991419 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.12773451 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.244153925 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.120338431 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.14940879 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.663330978 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.154586797 seconds)
  done (took 6.967297932 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.079383749 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.141185797 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024646836 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022785231 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023012962 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022799134 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024357256 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023166278 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022403748 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024767817 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024523737 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022587251 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023370082 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024579966 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.02261956 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022775205 seconds)
  done (took 1.359439948 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.02771999 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.02544413 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026523666 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016887876 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.026705437 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.02566746 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.02712639 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027856606 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.02601295 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026308883 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024293312 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027284809 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025808501 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024712394 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027545159 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017134661 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027496061 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026706574 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.02849516 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.026955656 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.02597463 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024220349 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027911506 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025758246 seconds)
  done (took 1.309807705 seconds)
done (took 11.254481947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134494409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029252479 seconds)
  done (took 0.841600653 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.123610764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123826607 seconds)
  done (took 0.947553283 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027963422 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016335039 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032363463 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.0250093 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016646487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016117654 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.030699409 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016293036 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016287968 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016270183 seconds)
  done (took 0.913281004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019233409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022542081 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020604089 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019056924 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020549188 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016854992 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0193245 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017345619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022581548 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016588591 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020026683 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.039093719 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.020434572 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.039316794 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.020219784 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019974814 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021215471 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019111738 seconds)
  done (took 1.091468971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017706905 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016736916 seconds)
  done (took 0.738929108 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020288046 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016836161 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018643977 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018677128 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016742622 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.01619305 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016613593 seconds)
  done (took 0.810581275 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40081172 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.09058538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323881374 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024817992 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036837928 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.233716546 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019801153 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023928396 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023851452 seconds)
  done (took 1.869102456 seconds)
done (took 7.906398982 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.044800496 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.146153673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.147089316 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.436602287 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.03454527 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022601069 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.057036382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.22493972 seconds)
done (took 1.815320494 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.270404156 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.260641468 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.183029085 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.020942682 seconds)
  done (took 2.162492303 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313027831 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.138904037 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.03139539 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023274472 seconds)
  done (took 1.219235603 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022160738 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028139419 seconds)
  done (took 0.76086743 seconds)
done (took 5.131021028 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029022858 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.01665102 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022612184 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018240028 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.01796787 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017351268 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017378827 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018238052 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016440828 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018377864 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01817297 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018167113 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017927282 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017851524 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.01736434 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018142659 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016303642 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017807063 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017814644 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018025875 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016406654 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018161869 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017381445 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017874086 seconds)
  done (took 1.132975159 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.037253124 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022274166 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022261108 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022103637 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023198613 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022177793 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022121558 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022088942 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.02231636 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021085057 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023198726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.02318911 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020936923 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.02335198 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021086792 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.023332935 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022347896 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022177482 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021153615 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.023429343 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022221923 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022364528 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023839079 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022298251 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023453119 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023390276 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021188773 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022664667 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022439766 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023308551 seconds)
  done (took 1.393584303 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.022943717 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.014902371 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015202494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025295515 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015041914 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015078934 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015527472 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014841221 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.01525223 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016086946 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015583284 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.014973057 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015753483 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014972621 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015137322 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015598087 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020349262 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035971871 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015451004 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015086351 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019883623 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.01535861 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.01512834 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015101797 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015428469 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015040142 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.01483846 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015308751 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014985488 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015532973 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.01500577 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019750546 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021173154 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.01543595 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025693589 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020386602 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.01585112 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.01973221 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015875499 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014878967 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014862221 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014851953 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.01507256 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.014931286 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025495416 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.01521173 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016049108 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015364441 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015143002 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014793266 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014948892 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016424858 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020654215 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016068167 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014855796 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.015968674 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014888204 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015605588 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015002799 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014895532 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015420598 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019313749 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016374226 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015749083 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037069078 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016292284 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025748273 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.01526915 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015496686 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019279347 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015590969 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035292523 seconds)
  done (took 1.978046734 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.026978549 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.024834263 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033915096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024688227 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018381806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015872087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018885077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015866131 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025030696 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019314077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015907518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018790337 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024912616 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019204065 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016859154 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024899778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019503585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018990699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016147895 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019239578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017037789 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018932449 seconds)
  done (took 1.166923854 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103766002 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022647826 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.068115717 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.022206314 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020897282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.02189693 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0224254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022271923 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022490114 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023559063 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023493475 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022465361 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020539433 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023613042 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023681657 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023467082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022629748 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023761025 seconds)
  done (took 1.251108601 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033842613 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.020951235 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047825126 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020815908 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020838245 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020397817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024624697 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024301249 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020742799 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021660613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025430413 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021383573 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021327397 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021775064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020929571 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021328957 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020690054 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021050073 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024432731 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024878373 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.02481388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024258389 seconds)
  done (took 1.234644434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036268972 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021039312 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039621418 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023157162 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015430058 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015408907 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.022970965 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.021791703 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.022832578 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020817694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021994132 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015501043 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.023982687 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021988391 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024279638 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022347974 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021372964 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022780005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021655278 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.016171644 seconds)
  done (took 1.165249253 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125749633 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017561699 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017214576 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021437265 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017187384 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017252258 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021595907 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017257377 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017280115 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041638882 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017427959 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017213574 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021979522 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020155774 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017299627 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021646854 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021676655 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021765677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017410663 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017245118 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.041387548 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017408214 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021512787 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017196296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017193472 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017149369 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017220955 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.019977882 seconds)
  done (took 1.392899345 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.038348646 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.014777717 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.014946791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.018741271 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.018722783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024497214 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.018716798 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018702154 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014730493 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015112603 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.016976808 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014698684 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014717449 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.023926584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015043272 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.016994193 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024062814 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.018868234 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024738943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02669047 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017027673 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023967486 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017094797 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015242837 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024988547 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017036369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018817845 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.01968199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017006052 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015031954 seconds)
  done (took 1.291630798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.02919584 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026134431 seconds)
  done (took 0.765625376 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018224807 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0327426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014786004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028339647 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024126186 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019262568 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0236077 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024010759 seconds)
  done (took 0.890366326 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.12470965 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.148191818 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017391043 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017422556 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.124420685 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085653948 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.13553355 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.029326922 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030897047 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019925594 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016938992 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.134103257 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016583059 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030747733 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017917497 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026190239 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023729061 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034353687 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029554893 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015550788 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029143443 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017062977 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016219376 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017120787 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.01744273 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023191279 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032034248 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028872785 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024620061 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014864521 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.034763117 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015572127 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016120213 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024507076 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.123787814 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016140122 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053448485 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015950537 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019780037 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.01542106 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027413297 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036374961 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030028789 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033909687 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017725064 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.018066104 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.016179325 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017866134 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020267994 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025553605 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016099226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02348498 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015525227 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017118304 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026377717 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015854707 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020018927 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025432466 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.030013721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.027158596 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.03065942 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.032402271 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.02497187 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023961266 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016595625 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035757383 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.01723357 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028973234 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030483064 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016788276 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028299143 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015572921 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014862687 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016014167 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049492406 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017192758 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017070426 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016428392 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016489456 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017522548 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.02582291 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021285506 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023927527 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019281881 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.03206978 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024933939 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.01569241 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022419956 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.033726179 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019812995 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015750937 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032494525 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019693261 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015499509 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.03341705 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026176779 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017172803 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016510689 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019922973 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029372287 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017496786 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015182115 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024468066 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017627874 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.124473009 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020792196 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02424458 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016012632 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.02628702 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022237566 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017599807 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015231827 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020913096 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016937881 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015213597 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025565736 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016210563 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030683346 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023268454 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030972128 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031231762 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027035284 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.03313986 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016976884 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.016016972 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035595809 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.027024797 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.018095283 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035446007 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016856117 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027235051 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016304237 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017616958 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.02541675 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015493363 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017720689 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016347138 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022559339 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017819154 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017855415 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022194915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024774052 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028536703 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017286198 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025132218 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016593901 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032725374 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026120407 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021198904 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019584958 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.01698779 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0282912 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023155938 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.02533163 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016387794 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017406965 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.01645105 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027837112 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02661054 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018750002 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026218669 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.022003454 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.01789945 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016788844 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017454347 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020320677 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019584699 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016946997 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024294568 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025125529 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.030343156 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.023345944 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025268356 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015673933 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016037213 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.017770387 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.015950633 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.020958334 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025318426 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032339941 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028927688 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.039107402 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017518742 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026519982 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018147041 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033733657 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029838531 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017373051 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021311809 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015656212 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018160086 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025786139 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027746281 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030526485 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031477549 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021353039 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021261686 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016229839 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031640727 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016825866 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024785141 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025660085 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.022389887 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016257358 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018331786 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025693538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.02152612 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.01757867 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032446469 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023989165 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016319419 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030843064 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016639482 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.0269913 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016226795 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020222521 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021862087 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018368697 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025843212 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031599289 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.01561551 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016710936 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032026229 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018360344 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018067993 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024586342 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.03208319 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021430105 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024317673 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027084088 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027011339 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021207521 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026718284 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017630729 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025868311 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019708266 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028181404 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016509765 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034806564 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015543452 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.031680724 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017057869 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027775835 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017028218 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025854322 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017339155 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.033781452 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.01795015 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017460128 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028331091 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015696646 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025629576 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016326964 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021770062 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0234818 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.025926077 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018228457 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025788919 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.01807339 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025327167 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.02139047 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.025279081 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025500653 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.02120372 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016162402 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024496746 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.177827162 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024068561 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016994166 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016783305 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.015967019 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024885344 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016844589 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016386968 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023746438 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020806839 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021902751 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016854349 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016889047 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016730344 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023875148 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024947893 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03332557 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024175237 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023093546 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024600036 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015328702 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030817117 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015627916 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.02322916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015135566 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021315551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024756375 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015745179 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034295185 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.01697796 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023510753 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026924044 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023890563 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019580661 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032817344 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.017947046 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.02355496 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023054462 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020254599 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022312147 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016671165 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023673867 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024986302 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025686396 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016000314 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022822254 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02425691 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016680522 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022397935 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016544943 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023750571 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016885934 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015012786 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020509995 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026101149 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020585346 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020749346 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.01554327 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014563929 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015451374 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.021307805 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020302514 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.023872675 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0304068 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.01476647 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016062333 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015197132 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019533308 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.032840828 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.024706509 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023359089 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020578466 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014827541 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016436729 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016620906 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.01535871 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018170219 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.014925632 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.01524721 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025663989 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.01675059 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020238151 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015532871 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016248785 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025077778 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019159234 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.015789386 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022396689 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015202626 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.020920607 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.01485784 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.01662726 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020317997 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.01522014 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019520243 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025446655 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.031561557 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022430839 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024288336 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016344405 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023414163 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030771913 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.023003052 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016347057 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024778804 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.01518957 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034133094 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.024825133 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024111648 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025141348 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016430014 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032350656 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020643756 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02554098 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030887626 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016482543 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.02285789 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015678317 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03158717 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021001021 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015643216 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024295498 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023589503 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022006568 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027099551 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016332619 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.02392285 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019960613 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.019912659 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.016993681 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.016952461 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024216304 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.031795109 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016461995 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.021600314 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024016054 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024401536 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021153568 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028278146 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.02439393 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017089217 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017751416 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020013113 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.01683174 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028028007 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016467669 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021171658 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021313284 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.015969194 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023058991 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032605288 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025341867 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025723652 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016359288 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015968507 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034498327 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020323263 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019337381 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024190773 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025988219 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.02822054 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025196207 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033000726 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016504986 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022504537 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028245656 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.016929979 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.015884196 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020264249 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017663839 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025044402 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025592144 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.02332176 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017824722 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02309509 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029510133 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017341699 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.02094158 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.021714307 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.016738673 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026255575 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.023858603 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024709403 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017775764 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016062614 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019933306 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.02494239 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023497557 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025054268 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017034635 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024508711 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030174378 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023582692 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019640432 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016096598 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019413015 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025127295 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.02243961 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016022416 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021138382 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.02000852 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.024452074 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025346018 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021005258 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.015991069 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033133176 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.02453898 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025165782 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018077177 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018166357 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016601868 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016184078 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027257854 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016168376 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017767185 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021201019 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.01783492 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.03414592 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.02461257 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032529081 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017843872 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.02200029 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016438421 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026349586 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.02143088 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016446293 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026915647 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015890749 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031899607 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028020357 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.023302251 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016168935 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021566267 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024756998 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.03175208 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.02619545 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.026114491 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019735271 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025812033 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017843098 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027205449 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.01610699 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015406988 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026252795 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025509371 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028867238 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016337726 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026380016 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018196332 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024502546 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.024934782 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017986845 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018051914 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017882118 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025753923 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021653902 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025833391 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.02153442 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033618588 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017393618 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027396913 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025178026 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027197922 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030193017 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028710438 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024851338 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016701747 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023779211 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.024904993 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017392709 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021539156 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.019838802 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038857889 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018146324 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017968633 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030831777 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024760545 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016517538 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024269632 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021517414 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026370079 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017272498 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026622969 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.02200621 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017468819 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021250115 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021305896 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015431384 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016163734 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.01648134 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025953023 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021351241 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016425004 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035751438 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017783633 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024849387 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027521658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023619098 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.018050659 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.016129298 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.017783694 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029888215 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031978116 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020558569 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.177076053 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017220121 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024748636 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.014921102 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024490924 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023778242 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024334775 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015534511 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015817728 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030659156 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030994001 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020689178 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032428811 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024755097 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016972011 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036875136 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024598698 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016280152 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.02602895 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017127127 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015057756 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015033679 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016971331 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027366777 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016117632 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018010478 seconds)
  done (took 15.144759355 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.060566557 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016565754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015377714 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015377071 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022020237 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016409598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01537195 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.01648052 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016545549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017523503 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015415796 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015380272 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020619451 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029748264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022598993 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018742344 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015546889 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016573905 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015603584 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016965382 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021387176 seconds)
  done (took 1.193506591 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019750665 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.01942363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018793273 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019004748 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018373666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015591092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018755292 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015533308 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019232294 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015934193 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019199053 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015559196 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.015924939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016001571 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015922911 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016973004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019236158 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018932772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.016154763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019227217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017110699 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.01891669 seconds)
  done (took 1.138784685 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018080585 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.015992453 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.02401017 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015155243 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015043191 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017609397 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.014969601 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019763879 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019699443 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019638798 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023770175 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015745193 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014942482 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.0209575 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014870053 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015566171 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.059865509 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015766999 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.01578843 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015195101 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.01703664 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.023999006 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.01541022 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015384143 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020093925 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017661124 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.01506388 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017182375 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015547923 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019730734 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.01576536 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.01487644 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023883563 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023104145 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019760581 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020031113 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016244282 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015760885 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015109672 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015085621 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.02330221 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016175317 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015302223 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.015996473 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023631724 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015140666 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014857785 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023767258 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014909146 seconds)
  done (took 1.660433822 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027154426 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.067654458 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023010194 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.047720067 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027858054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020140927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021900501 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.049096531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.01676724 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016821583 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028874871 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.029285261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017624226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018660844 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.021908377 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017644464 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018105934 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.01679921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019586855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017110873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.019712425 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.14126215 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.028492059 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028935522 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018444423 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.01695042 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017116269 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.01841225 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.02855091 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020113021 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.018728219 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019276505 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028094178 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.023020408 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017225989 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017441002 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029092208 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018254543 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017833181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016230849 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017273257 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018514522 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023103248 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028603432 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017528129 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023872514 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017430763 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015657698 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028644302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017418242 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020692534 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029919405 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018810711 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017889953 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018786226 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028274477 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017865281 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016581151 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.017870826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028682967 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.01610582 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018307327 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029346845 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017063374 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020199167 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029336543 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024104229 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018732711 seconds)
  done (took 2.550672126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026607494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022285024 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.027054306 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.027244223 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022546866 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.02282532 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022670893 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022300362 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.021964385 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024795834 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022343977 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132785528 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.019645991 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.022954128 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.023080082 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.023084307 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022594433 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022407212 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022243284 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022049088 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022055771 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026205859 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.021975361 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026283565 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.054975425 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019308469 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.021885663 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.021963025 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026395113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.021948667 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028676364 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022050925 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.022016773 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.026559616 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028609601 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.021981341 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015771062 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022397173 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.02237043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.022414813 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019327607 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.026843814 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.022128578 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019255176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022332719 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022147275 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.026928709 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029170905 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023099047 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02499385 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.02233219 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.027310773 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023448284 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.02368138 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028812319 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.061823168 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028962114 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028967438 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.023925736 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028908281 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028913208 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.035870587 seconds)
  done (took 2.433204971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029826532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020792439 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025913179 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015176917 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015003604 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020615409 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015019305 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.01517296 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020916837 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020879753 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022738561 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021610336 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023361951 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022432196 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021546704 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022582342 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020694446 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.02067189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020562686 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.020611995 seconds)
  done (took 1.192957263 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018689025 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020236916 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016283346 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019801947 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015865353 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.01899185 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015691834 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015714799 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01562718 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015775568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019931317 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020149326 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015970629 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.019965951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019169675 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019207654 seconds)
  done (took 1.057442701 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.019927317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.025368531 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121366198 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016378748 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018135883 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015721941 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016497344 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015399321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017555144 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029276766 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016402196 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018313854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016485468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015367808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015847658 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018378817 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017544635 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016453525 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016445484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122771798 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.024812801 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017097731 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018455783 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017108038 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018081341 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024379455 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017631316 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.017993248 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016346464 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018374241 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.017957724 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027187179 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.01803914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.01682295 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015239962 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016129314 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016504021 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.01831142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018376098 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016458164 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015507187 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018106954 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016580963 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016805534 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017509586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018364229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017503112 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026430922 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016220648 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.017946406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016414093 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017413584 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016910067 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027777571 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018433299 seconds)
  done (took 1.973655115 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034993299 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021382838 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014845082 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014745144 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021047502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022341675 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021300522 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.021826306 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022372591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014840978 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.02250057 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020833541 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022520799 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021429804 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022628352 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021455357 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014926061 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.02226576 seconds)
  done (took 1.143533466 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023625581 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020263734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020796681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017143298 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017088002 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020758294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015433048 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016521121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016510827 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.01682942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016872499 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016430182 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016448453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016587083 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020173959 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016841661 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016475135 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015429789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016824161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015288209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020602438 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015393377 seconds)
  done (took 1.146091255 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.18175922 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.142721375 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038484398 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033646566 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025320709 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051197175 seconds)
  done (took 1.233370398 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053675303 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024676711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021521618 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.046915583 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020785653 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019491914 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019463428 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019690371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022604329 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028076853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019751581 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023066986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023318869 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02512908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021858679 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020974181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019885194 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019868184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021733765 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030881213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020012683 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022203559 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019904228 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019959513 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020385084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024983221 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023287705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028978885 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020425291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023027548 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021294809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020151195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022297272 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02833048 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021474119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022606048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019865948 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031046549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020793371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02418512 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02122644 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021255111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022512037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022146793 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022633082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020366415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022727552 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020075608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020137132 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.033263313 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021217606 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02433918 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021542337 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022733798 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022962943 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.033168417 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028541038 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025484402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022852842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029998887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026346543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022546914 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026180203 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030226597 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022987368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02620081 seconds)
  done (took 2.362665001 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02977434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049982671 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020651428 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029091336 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024910593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020290183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019977944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019793325 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022132896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059014372 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02002832 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024029045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024171079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019882871 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019645003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019743914 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023974788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022117332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032843665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020038598 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024742272 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024734617 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025032278 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029201481 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021894102 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020199045 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.01997743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02004334 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019779226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02239457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019925223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024055102 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021968054 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025255591 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021027141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020592186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023081903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019975221 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020890275 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024309652 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030253171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020030872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019947895 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028439517 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020813133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020557106 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022490215 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019968335 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022201141 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028494781 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028434005 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028350865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024912983 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020489665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020577604 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02007046 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020245614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021207678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022105957 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026065438 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021044257 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035537429 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021245905 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0212183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026635471 seconds)
  done (took 2.372904425 seconds)
done (took 50.969686644 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213971995 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169377846 seconds)
  done (took 1.131877627 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.132088687 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.130850644 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.160547181 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.025210245 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081369152 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.173711681 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125585254 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026048841 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.02376455 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025085676 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023323476 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.024768079 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.02499886 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023330644 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086409083 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026035116 seconds)
  done (took 1.881037791 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.072406585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.26739851 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.067124309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022903465 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102815732 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028659532 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.02386283 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.029252515 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029080938 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023189819 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069723868 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.041190297 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.026802036 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.027788318 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023876149 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026710627 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.027626728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028052697 seconds)
  done (took 1.709865824 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.089065645 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032441553 seconds)
  done (took 0.906378891 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.135941531 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063061578 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.106027843 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.307413473 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.095217377 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.287851821 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.102333681 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.09823915 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069038179 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095699977 seconds)
  done (took 2.120954745 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.05896651 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.054282933 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.275714879 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054241398 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.035118999 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029708251 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029862292 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.029329568 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030209894 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.030047246 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072603243 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028691962 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.02432612 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.068497806 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046865949 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.058259244 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023559033 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028703754 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.033230656 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023377735 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027658765 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.029187524 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128220279 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.029120499 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.047849515 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026572625 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028128854 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.028931103 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028900119 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.02990688 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.02989241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.051401173 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.02853184 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037718342 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027526941 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.047762638 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024150125 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.047511459 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0267217 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024054237 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.02648034 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.029971342 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024581521 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029651217 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030207258 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029633635 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.029051617 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.02327899 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030371199 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.026824718 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024292715 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.027731996 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.027868374 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.02828333 seconds)
  done (took 2.96467557 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.07519385 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.065917197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024234791 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073191229 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065348887 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024096052 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077343897 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060448549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076450428 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023540039 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02318496 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023174996 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030404849 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.034485311 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075944428 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.068937449 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025086493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023767256 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.067615241 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.067867508 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022556912 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078552435 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070020397 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.068258026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.023539518 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024573159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023678686 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024160247 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030322394 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030587871 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023074469 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032081201 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034321353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031942581 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022374603 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022520587 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022541815 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.03068046 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.030908581 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031048861 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029041798 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022349261 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022624323 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023088306 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023639545 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02208806 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.030961569 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.029961218 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.030897971 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023482249 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023515525 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022474144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023406954 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0296152 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028518819 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030074674 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032773934 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023941992 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023338772 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024774866 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033598035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.030882612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030691164 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02382637 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030484031 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022681508 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031457683 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.035808716 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022723184 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023299767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.022929269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022799544 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023213395 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.028786412 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.028859228 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023296368 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023117408 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022582631 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031071339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.02922007 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022710406 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.030487836 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022350917 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023023365 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023278601 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023514011 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.03095194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031043165 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023635319 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023604319 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023384819 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023306103 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022672438 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031340966 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031213608 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.03236961 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.033045289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023969366 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.03324531 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031933555 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023964431 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.030647397 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023522572 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023913726 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023918217 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031059064 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030536248 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03220055 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023774971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023155553 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032370323 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034549699 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.024197979 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031301569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033920991 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031106842 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023278812 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034276005 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02390671 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032843197 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02383937 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032223007 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023809571 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031310373 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023695197 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.022865849 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023580685 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.033410874 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024013268 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023499808 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023948746 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024011481 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.031458206 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.034464537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024902228 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032079371 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.031444822 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024106865 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.03243017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02380743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.032430011 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023743118 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023977341 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022785907 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034463474 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023366584 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023881597 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023546902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.033075498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023288393 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.032855975 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030541781 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.022930453 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033124962 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.033040529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030648366 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.033542412 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024349358 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023691883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023319762 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023658946 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032396485 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033949809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024446487 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023595866 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.030068975 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.033012732 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023186557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.030768133 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030556245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.03095963 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023829665 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023790649 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034040372 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034884672 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.03117114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.033150585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032408963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023778859 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031124234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033258159 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023672712 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037780163 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023575075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.034435834 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.033490109 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.030364684 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033313798 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.034776909 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.033607243 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033247071 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.035268424 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023186025 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023596671 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.03128685 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.169075091 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023703082 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029206841 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024338758 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.02452829 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.036049408 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024159646 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.031167313 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022663607 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029473812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022329093 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023281656 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033070379 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022788018 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023216594 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.028386765 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.022771328 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028206177 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031100626 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028239633 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023157694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024018492 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032067553 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031054116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024025195 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022949711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023400734 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.030048537 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029466873 seconds)
  done (took 7.704339258 seconds)
done (took 19.196205776 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.134634303 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.069633133 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.129153905 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.08045032 seconds)
  done (took 1.176337802 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.05506026 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019428223 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.137469729 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.148074408 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019785573 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.131616306 seconds)
  done (took 1.290825815 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.241757138 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.14466896 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.148822318 seconds)
  done (took 1.318887488 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.147772489 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.276889637 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.548360472 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.142152598 seconds)
  done (took 1.912712615 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.17033515 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.159246053 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030319921 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173188121 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.037199021 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016068462 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.09940235 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.016844043 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.049127973 seconds)
  done (took 1.606214847 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.08977501 seconds)
done (took 8.174398625 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.204981583 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.134454847 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033603002 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.027749411 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.126559572 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.126966082 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.146469603 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030162679 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.139111756 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.306921652 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.188026471 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.049213581 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.149678691 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.045869851 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.262188003 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030714754 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029364953 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024549561 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.139258708 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.135532019 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.235673681 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028187917 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.095251616 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030310902 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.100406844 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.077965183 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.192816841 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.313804482 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.270910205 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030990077 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.121978196 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.040514589 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.113684193 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.125310223 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.12921243 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048695302 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020134693 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.238193535 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.099003783 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.320932128 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.169211426 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027160362 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.140548643 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025273854 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.01944945 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.143307847 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033709712 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027011967 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043865974 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027968543 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.03946716 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028613957 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.138808386 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024104051 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.097863598 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.134902005 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.186164258 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.105969052 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025947064 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.037137998 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029940769 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.160158533 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.037386063 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.02565005 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031911421 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020317634 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.133006493 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.042510597 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.021048931 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031901749 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029642549 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.097845678 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.149950223 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064146425 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031914407 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.106174334 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.10075639 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046467399 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047457605 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029901937 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020058925 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.197093082 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.026158329 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.037689298 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026919995 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052785078 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.01985984 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.034217183 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.172574812 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.148573541 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.085721898 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.02125656 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.232629439 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022103567 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.04475092 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021307974 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020646375 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.192786265 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020483272 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020627628 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.031154449 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.02947029 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022800183 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.171690552 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.101137817 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028610273 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.02774253 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.021550698 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.027356755 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.022374803 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021610549 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020877404 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.095640379 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037593529 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019861375 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.10230889 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.288090489 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031572579 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036609919 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.087900411 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.025078837 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030873587 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027479453 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.140699568 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026806106 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.135866836 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021749881 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.040991903 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.114552606 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.101309082 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.100478026 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019961478 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.146052475 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029663073 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019184818 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026908314 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046321237 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029089204 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036414783 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027790048 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.145357985 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.029655131 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025370819 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.114325864 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019024401 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.104861717 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.101241684 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.132473049 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024748202 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029420398 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.096658567 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.041812788 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.048864042 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.040349398 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024351325 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.01969 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019380525 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032639919 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018812365 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019578404 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032317646 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026168009 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035419536 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.234243423 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029562748 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023891169 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.245573006 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031625145 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.089273444 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.039163906 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019903555 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.099400633 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021471847 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.041436954 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.082761843 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020198126 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.09945385 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020544406 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019968897 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.025793573 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.02157762 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029335912 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033034332 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020417564 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032915991 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027678381 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019900982 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.09947686 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022039366 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.193248422 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.09831983 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.093331768 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020095277 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038417267 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019711762 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.135744934 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020309998 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.068003005 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.111385254 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.03655207 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.044877203 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.022147548 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.105210878 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034910926 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025155788 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.104305872 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.133479607 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.091754659 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026602823 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.2401441 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029292793 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020420105 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.025853417 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028786997 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020347602 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.10304174 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024890031 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019382429 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019691733 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021887741 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018950272 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043803713 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019318386 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.02797939 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025643934 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022955799 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021977659 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.018985189 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028480913 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.102680448 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.122037428 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.025955296 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040716016 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.03211529 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.029999008 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.065929598 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027890101 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.16468495 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.01993474 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030617361 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.041731891 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019953964 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025706794 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025678825 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.037488724 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.02366934 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021274366 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029058126 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020210985 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020252006 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019948627 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020135274 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028803122 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021336376 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019447526 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019588569 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036034491 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.02484133 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025598584 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030787315 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.041584153 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.470048311 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021538677 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022481531 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032588286 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025465093 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020268719 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.02137507 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020000287 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022223942 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020148016 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.01953174 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.047471195 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.02581316 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020690494 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.040456843 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025880356 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029847836 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.121956786 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.03683217 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025656033 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019391856 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.254187528 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.093096604 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.041509159 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039545406 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020509685 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031231522 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.02048242 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.02095752 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019491372 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.04654321 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.026259861 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020527469 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019550208 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.01973718 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067438227 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028848564 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.01983303 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028469802 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020278095 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020280567 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.047673535 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021702928 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.021539751 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.039069214 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.03374754 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.105354829 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032223995 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.02348354 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.070250973 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019574503 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020128267 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020444016 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.10729205 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.033901444 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022554895 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020797041 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027859538 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.02942677 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.072499432 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.02669018 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.023857202 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028188662 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019949803 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020779746 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.046712889 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.048533944 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021500838 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.024017116 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020084008 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020595667 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.09602452 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027794453 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025128426 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.10840073 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022606121 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028202537 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.01949848 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.668333738 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.025992568 seconds)
  done (took 22.373281097 seconds)
done (took 23.172583511 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148129207 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.033188386 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.039941995 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028336799 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031635769 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031446113 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042309648 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029412674 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.03231471 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039951355 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.142958028 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020032933 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027757965 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034047495 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028467298 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.032310024 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031032121 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.031997083 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020425135 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.032003232 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030688344 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.03077842 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028739006 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031406889 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020782078 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.02843191 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146441355 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034744081 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030128056 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.02927347 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027452748 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041691105 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027401837 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026774486 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.028832715 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025037735 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029340384 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026086917 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.150285201 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025610502 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020202448 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031295718 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026842113 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027371267 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028374315 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030715737 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025096932 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.032187964 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.02805045 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039306462 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144151406 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.02863172 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.029801072 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.027914594 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025218709 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028968487 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029765146 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030013808 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025028009 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.038639825 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028090928 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027445776 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019412286 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028079805 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026991585 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027217217 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.01877441 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02842224 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.01963561 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019499779 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.027993147 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.027957113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026474782 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024637444 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.027781427 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019420309 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027311057 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.038312931 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026410293 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028119454 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019859097 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025108698 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024811422 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020224511 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.029272399 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031072018 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028876298 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020146083 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.028140521 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039201902 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026114279 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019505178 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030330858 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028167003 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028013357 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019534063 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.027938648 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.02793684 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027423284 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019490175 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018701548 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028030225 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024676604 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.02790179 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019889113 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028130587 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028014627 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.01882543 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027965982 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026639848 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028300693 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030349487 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.027912203 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030580693 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.019899041 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018714923 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029229919 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019758967 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028204445 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027751058 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024957858 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027248467 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.019990253 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027256156 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028046593 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025532838 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019901682 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.019900945 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019774866 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028009364 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026618504 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018731534 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019392054 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.027973209 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028014773 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027486395 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.028148396 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028101033 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020030462 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025890666 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025439393 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.02873717 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.029312016 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020531402 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.02863241 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.028005444 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028625234 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025201243 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028474628 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020135936 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028085448 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026857698 seconds)
done (took 5.621698716 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075297613 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.062978168 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.172786503 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140714214 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033207032 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033605556 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025211078 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.041871614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027706812 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.047088403 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.046004786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043050594 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.157605598 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040625658 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.019953623 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.031588149 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020393681 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.047635129 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145704029 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.046698422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.064679085 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.020875476 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.037795481 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039252673 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.032233225 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.038428537 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044085722 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020953608 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.037621895 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.036913357 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046619156 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022423297 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.02031295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.038843043 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.035908031 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.02856647 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.019719604 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026612521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.031439833 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019787176 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062631828 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038412431 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026494783 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.026597072 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020658059 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.034571385 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020832892 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028273353 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.033736001 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026627622 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032489587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.036357574 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021964517 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.037571478 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018920301 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027231924 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.02690104 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019772866 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020679279 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019776192 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.01975927 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022779531 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.03240933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.038166293 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.02391243 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027376911 seconds)
  done (took 3.527335788 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.046062583 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.066042543 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034244116 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.03470468 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.01964871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020186671 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020168908 seconds)
  done (took 1.135220791 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09148484 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136798768 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140202779 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141566618 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.155453203 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.139468927 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033209315 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050097185 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.055224093 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157735143 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.148777558 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143257559 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024275044 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032631945 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052831206 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.145864068 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.03324939 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027814839 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138226066 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14575426 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025659334 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051759106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033281343 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023282895 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.146055834 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139150772 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024336272 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061836274 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.02304534 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020817055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020750679 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043110144 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138874204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036067309 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021107934 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019914226 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136841039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021412829 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138849206 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.027954791 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136870215 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.024324913 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.02451636 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021942136 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022735881 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.137645019 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022406309 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020908449 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020386931 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141323968 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.032227491 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139820001 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022606788 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025801943 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027876101 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.02777611 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028037814 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021190589 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142031078 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031099111 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023215777 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.146566384 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144091906 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140218096 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145656874 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030328732 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141398822 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.136987648 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021305411 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029233621 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021906485 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147881906 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025336403 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023510339 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019491452 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028230482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.151627435 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.151587107 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.152737208 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036469994 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023457934 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022409568 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.150833264 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152685691 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026589417 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021344345 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021753546 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037982646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047500062 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024701339 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026555837 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021454023 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031833735 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023914498 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.02307781 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146925338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.02074868 seconds)
  done (took 7.641983168 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038546361 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021407385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.020974202 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021374275 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021590121 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.02138922 seconds)
  done (took 1.126034714 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.060331665 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021835705 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0216085 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.02194703 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044305691 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130449889 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131516826 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022966243 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038064596 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033475676 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131001864 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.134111284 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133222818 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.02288616 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.130555486 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033359752 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131855164 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026637855 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032567426 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022917041 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032084736 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022434064 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.02312933 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.149546112 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016748419 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032750133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030777873 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032619535 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032113954 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022301608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022205374 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016390487 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.03124715 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022347555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131947614 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.032257133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022161925 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017599285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025749075 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016545437 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.134602537 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023190535 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026050022 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017535679 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.02250565 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031721333 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017726601 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031561305 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132064179 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.017857418 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017530405 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022153345 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016761466 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.01766085 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.031868529 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022551603 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017520698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132530321 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022832379 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.03184045 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021792533 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016487211 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022761279 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.017029266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027549243 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.018636249 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.03318728 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.024022548 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.024221236 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.023063602 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018627071 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.023081426 seconds)
  done (took 4.020744342 seconds)
done (took 18.354422365 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.455437655 seconds)
  done (took 1.364912376 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.97373288 seconds)
  done (took 1.887219939 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.049842654 seconds)
  done (took 0.988749261 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295344643 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453478825 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703437295 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.090590798 seconds)
  done (took 2.465716967 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.840283823 seconds)
  done (took 1.77706923 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.206622963 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.175227946 seconds)
  done (took 1.340466632 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.476148597 seconds)
  done (took 1.415057798 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.300363148 seconds)
  done (took 2.240352924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.1924176 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.132428321 seconds)
  done (took 1.2708637 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.599520274 seconds)
  done (took 1.529220472 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.608732853 seconds)
  done (took 7.542348431 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.182642238 seconds)
  done (took 1.194707005 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.194402581 seconds)
  done (took 1.191357736 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.684661327 seconds)
  done (took 1.671010855 seconds)
done (took 28.812878903 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043342934 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037083961 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037234439 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034342995 seconds)
  done (took 1.08648787 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030234656 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024700804 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026902532 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027252761 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024798209 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026596142 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027565923 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023863915 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024811771 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024163097 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.02289611 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.02403444 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026440202 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.02402979 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026568728 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027734843 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024222373 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024737453 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025829203 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023733519 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026529705 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.0240186 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024085722 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025327235 seconds)
  done (took 1.553617128 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034071584 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025464622 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027288205 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024381668 seconds)
  done (took 1.051183197 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032526817 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030788879 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039459318 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.039002392 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030094316 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030637451 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036844037 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.0370329 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043680712 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039639495 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021714282 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021383754 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.0206016 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.033880532 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.03607683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015743522 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017031747 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030580457 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029532929 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032227125 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023465765 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.01928041 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.030198556 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030292634 seconds)
  done (took 1.660599204 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.036965907 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.01942601 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035067645 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044172395 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.043769558 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019316657 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032941605 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.044238492 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.082340601 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019358722 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025803169 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019423655 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.056481192 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019273689 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034085996 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.064618441 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.067344645 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023451998 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.049737243 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019326276 seconds)
  done (took 1.69789693 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028499951 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.023528798 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.024805067 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019000602 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030026205 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026512449 seconds)
  done (took 1.094523895 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024035008 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021265367 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021110982 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.02543994 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.020934204 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021016157 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021052768 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019919996 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019747973 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020545406 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020742653 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021706423 seconds)
  done (took 1.195260643 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159782723 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026402528 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.02421586 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019745576 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021434168 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020528194 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.03367744 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022804147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.036749132 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020449028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020748455 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.02286294 seconds)
  done (took 1.375900313 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059163626 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064273665 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09547662 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072518797 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077732051 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050708484 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.196188306 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.035409021 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.114167345 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088489804 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074924691 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044901186 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039254525 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023305088 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0535505 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0701812 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090643718 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.02723959 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072539799 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.231561868 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082705763 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.083410378 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09933295 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075793487 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045297732 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099494174 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050228397 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056151309 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075267991 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079680959 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074097149 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.056587726 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025683448 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.02580983 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113793606 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.056562789 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072044846 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.046593259 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058425638 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042586036 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080745541 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.025108217 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038444238 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.065655711 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041351737 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088331251 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.050094166 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071795433 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035476486 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094308028 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084105129 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.171577502 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041632278 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060644129 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098245944 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070452294 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089851704 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064818037 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03770857 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.076050299 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.065822973 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.057963911 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065480378 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035456975 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132856024 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.200360538 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.077000463 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066227709 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.044065791 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.047969522 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063239991 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087167785 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075944479 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.06923678 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080911722 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045205692 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079885489 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.052557326 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.076933134 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055373595 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026134412 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.072409055 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080492097 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.049847079 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0533263 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079620322 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046254409 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029547982 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.042630785 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.071207744 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033919251 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.061531228 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038543165 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.082260959 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087068489 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051441625 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068053718 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072057114 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032093566 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11629445 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.062056675 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026736082 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071556276 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066531169 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104840854 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050278211 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029326538 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.054464713 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056501441 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.112896529 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057564976 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034879626 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07137549 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096712574 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049656199 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.250295486 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050765112 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097899831 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070947476 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041580048 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030451138 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.050183686 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068767012 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067085661 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080494526 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05128066 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038558162 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041335776 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076481352 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049330459 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034132515 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074779118 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.059643587 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029724165 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045453366 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031786015 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109811505 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.042647434 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.254997334 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084619846 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029811514 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059949227 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050736396 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061141021 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.05481289 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070421883 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091374829 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.143063488 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042855424 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.036021189 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060808568 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093068232 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077257846 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043851891 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.037544515 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053039209 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063968345 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052363665 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073261093 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046056961 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062440998 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055054406 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090085939 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095824208 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05562748 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058934048 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05940961 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.075037332 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0289298 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109988066 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057362772 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076197772 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041107098 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093966956 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.069842272 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060642128 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040483854 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058328716 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.056270737 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060893842 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0963361 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.047504726 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027160974 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049223703 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102600441 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031672609 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073346239 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044371186 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.046661887 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070185679 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047526626 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036619164 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.023120679 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079172074 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114580478 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024489325 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071509672 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.070323202 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058978489 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.078789559 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023948447 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084287191 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093156362 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084067343 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106477553 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154113181 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078750255 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074136786 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.238408783 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065452679 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03343207 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.07685063 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084911243 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.045537994 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044463372 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086797571 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072058601 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.084815212 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.064794608 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072754836 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.056561869 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05808917 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055374021 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.051923502 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092815786 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074921595 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.077183253 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037203161 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062914139 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069563337 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088922989 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034988971 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093296412 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.038333475 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095484552 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032627711 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079762794 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030349632 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.122634154 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033529995 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.054340397 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024027702 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026710995 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094840695 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.075569196 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058565071 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053148204 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.088311447 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091458759 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031859056 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066254471 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068266057 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057968667 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068712862 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063336016 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042911481 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049573736 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061183113 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.039398205 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.035451794 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083019366 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051472023 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09150358 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037985732 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029320295 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094563208 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067348017 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049347882 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030887262 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064312761 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.08228642 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.048281719 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041506227 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07851403 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062617805 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100194339 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.046424081 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.058348203 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08281913 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037209106 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.051893539 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024437268 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045177969 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031400567 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088226903 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031724122 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.233017851 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.024241922 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083776701 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038863007 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.050263514 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.056340688 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060397211 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085899404 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047149359 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091593541 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043529389 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.070102012 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060725419 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065643691 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.039446543 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054813005 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056434195 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07322859 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.046047623 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072023928 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09248086 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054518657 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092438302 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043579749 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076569621 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060430349 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074936325 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065767882 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147031128 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091975059 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067350923 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06662676 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029465301 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048777083 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064097322 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062763075 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127708057 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078410198 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026308304 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057705676 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047425695 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060619459 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061931138 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033934393 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096273428 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054774351 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041596277 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062223261 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.042980089 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058281885 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030352256 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058206452 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.051286071 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050105015 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05310868 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069637925 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084583987 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065211318 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.102186112 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.059917875 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046931447 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.074800139 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075504544 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072882156 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038811122 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039528283 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101061186 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074439471 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.082985054 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.055277606 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067610826 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068547516 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.212749222 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082656385 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059344416 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.07578374 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032884504 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.029780457 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022284432 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025671155 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074816493 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062664245 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060837806 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056731066 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.02583333 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057738024 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060503059 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026529867 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038566244 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046233682 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.05100456 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.035142558 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057043198 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066434061 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.046539523 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052996852 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055155296 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090654893 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.051181354 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041142058 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093524949 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101425553 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042644498 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046959791 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025424452 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033126597 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076534988 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097631351 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101211696 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.032891752 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040211687 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.038736181 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041044946 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025504136 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.041913601 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042589693 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059017545 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050819663 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067772408 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061186984 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030681248 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.063504465 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055078841 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047191243 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.061567131 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.322606007 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.080129363 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.091340091 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067083311 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068862552 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029909329 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.034089842 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030710819 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034040082 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061229756 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033602382 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030873763 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103357561 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046475222 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06685098 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06895553 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04276762 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030038237 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089707383 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024338555 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091292021 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025485174 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035186685 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036976478 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034605968 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051872286 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100140265 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064441237 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066559487 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064015574 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.22379863 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140344278 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10712776 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038171439 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090706553 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028722423 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029587803 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029464713 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059423371 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041901362 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068841202 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09516892 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041972103 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053659195 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032562829 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095215481 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.049302173 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055130801 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038842594 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.03274906 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092710316 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032915935 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.037715224 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041685487 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062806974 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.025648074 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053366185 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036438479 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03320535 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144599259 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.666585235 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052232098 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.029364765 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.050434174 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.093557658 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085933933 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049489839 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064164591 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.071752789 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058173053 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047869135 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067479083 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.153479036 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028091098 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048875346 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.050777346 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055938476 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062584151 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.051129998 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.041818273 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.05108456 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.041159841 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033433116 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06774636 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040411492 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050554147 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060180892 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037262438 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.042617586 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087027421 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.058291676 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.038438022 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043894454 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.066024603 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041726014 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061956428 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024077273 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064573469 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043891087 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075624957 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.054543795 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066020167 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081124894 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049030988 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094568889 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.065214019 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079951257 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042479002 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032840366 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08363938 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.19962882 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03101494 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096211584 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.048323586 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.059157568 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059821414 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.048962444 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060732892 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064863178 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064565381 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052246935 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031588752 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050325918 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.056746882 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038148378 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032030571 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.026011039 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.028904601 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059592799 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037096315 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039241145 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067210975 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041062123 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054321065 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.049899958 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073348108 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042483258 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057503884 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064284478 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045893888 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084584803 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054861969 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081092378 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128353233 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085778083 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082924614 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085823918 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032161194 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.033371229 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.022998989 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068871221 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034982937 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.041070464 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033034735 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085730271 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.03847644 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065208872 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.210326547 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034350822 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047214985 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050341856 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.02386711 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037228457 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06324874 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040458145 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033793699 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065959114 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035689864 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081751661 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062398936 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05275226 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049050998 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034456361 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062279965 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.059194977 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.084173323 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053023628 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028606005 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080854703 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06133091 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098541964 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.030032739 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036229061 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085302313 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060594586 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091570473 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036341614 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118278454 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.100911061 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06143166 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092093214 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025882568 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.199859918 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041937599 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.075531653 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03715794 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057339897 seconds)
  done (took 40.510687945 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.106435749 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.255618457 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.138147495 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.114488321 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077716376 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.079545122 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.247211439 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.091149487 seconds)
  done (took 2.171419199 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024765923 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.052602451 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.03523949 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.287630315 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.054772339 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.023009715 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028924491 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036381426 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.02102986 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020345785 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.054457423 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020592385 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.020967974 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.437353353 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019886462 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.024876969 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.021045537 seconds)
  done (took 2.257118955 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.30084661 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.649887292 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.171245653 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.639519149 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.105625482 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.56212505 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029773982 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.03433168 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.670627609 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.356013943 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099014519 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181984012 seconds)
  done (took 17.858298314 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031664651 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.152515205 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.15127046 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028825372 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027723341 seconds)
  done (took 1.523160314 seconds)
done (took 76.043017444 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040478874 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.121648637 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020900591 seconds)
  done (took 1.239847483 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.151567722 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.148948061 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.14942217 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.150296979 seconds)
  done (took 1.651726088 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030522585 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030608709 seconds)
  done (took 1.120541777 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.176783067 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.277677177 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.043892633 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040166249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034902689 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035156899 seconds)
  done (took 1.180299313 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026656229 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024553179 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024697776 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025116122 seconds)
  done (took 1.152712169 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.131359228 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.020864485 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.023081324 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024656578 seconds)
  done (took 1.258665778 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.039890684 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.038948176 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.069002786 seconds)
  done (took 1.207316164 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039275836 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038382696 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032979706 seconds)
  done (took 1.165892693 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.055686712 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.04708812 seconds)
  done (took 1.154908407 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.035652771 seconds)
  done (took 1.093210086 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.044684369 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.050380317 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.212496991 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.176303016 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.2134381 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.196045654 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.03277801 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.029886097 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.032597801 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.034606514 seconds)
  done (took 2.074463471 seconds)
done (took 15.891302495 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036173986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.141721466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395877272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.042462661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.782618307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.392828833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.687211276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.046144861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053485395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021995702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0383426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.758778404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.687543543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.10542572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.672886127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.092027855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.518476266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.024957628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022705593 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022949974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.665404471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024338358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02286212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.023193293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.514417973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.289516456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023417027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.090034304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024342043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026052486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.270637539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0240223 seconds)
  done (took 12.590697747 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.025988726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.07588025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026716575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036419026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023662059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023684794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.040082177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.02210717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064108183 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022022543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037891902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021524696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026277934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022981745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041240115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021675224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.02368416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.02258903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.023019667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.023171575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040888425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022187229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022723526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022517462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022244106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037034881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023249556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021937043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022368084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026167712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.028028898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02457485 seconds)
  done (took 2.004884112 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077748807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077024931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027204723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.060597041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072354566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024701424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104862784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044306763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067119344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022577154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038251278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021790497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.057679451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02335104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041571775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022116508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024251766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022284669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021673127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022102808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040221974 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021713426 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02217997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022360259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022346334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038315687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023331755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021967542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022184869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025902456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027929242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023711819 seconds)
  done (took 2.264207907 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025681855 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025879972 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.031471284 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035111798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.02074342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023905357 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.025140972 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.021047091 seconds)
  done (took 1.273547105 seconds)
done (took 19.220321917 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035762373 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022183218 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025259397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046554976 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028776539 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138504997 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.025044388 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027417942 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025723302 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025076837 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027221078 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019624685 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024761617 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024615774 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026268756 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.02034833 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142316361 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024862275 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139283796 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.141166875 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022980929 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025884299 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.02864648 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.140070501 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140422373 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.142508029 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029882298 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.02637882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026000149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023333026 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13781539 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.141066765 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.024239978 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138003543 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020880765 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020301153 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.02477754 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021723428 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142783551 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029468759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022581889 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029434366 seconds)
  done (took 3.421952928 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.143989868 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.150460254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.143163745 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033612307 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029576106 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032167024 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14806577 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.030079374 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028256599 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.147643253 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.02410898 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028449184 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.03036673 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021278898 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027806316 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024804538 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030167251 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022109434 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027711381 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028238477 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.147511984 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021515924 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028665249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029081939 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.023753153 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029852728 seconds)
  done (took 2.527813045 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031084916 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043110632 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045729432 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108497382 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.062460969 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043788629 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036809228 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047898151 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.05553036 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021667985 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044373714 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050160454 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.05100187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028181498 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060041685 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040077383 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034257912 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022838646 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027534493 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.051715011 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044631275 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040492512 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054534216 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.032665264 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.02016396 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.027653112 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025619738 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.03693222 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.031819705 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033290111 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.024683448 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0246655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022041215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.031813755 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024719513 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019630743 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044850476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033597061 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036676628 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060559058 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031822164 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022488847 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.047459802 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.080466937 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.019898343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024042152 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025497369 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034662277 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.023322434 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.023375127 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036394525 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020760646 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040195762 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022588772 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022495703 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.041712393 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022698493 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02349669 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.041861416 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.028253741 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.04352741 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026936624 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041356584 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020401114 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033212427 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022818184 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.036026554 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0273993 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055512033 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028766668 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.068365029 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022382029 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019656601 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033474381 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033367632 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.021898806 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.05277273 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039252676 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.032708619 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024868801 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039714433 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024013954 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024489393 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.065346786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020421558 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019470163 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019426976 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023843662 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024621993 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.02206341 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034139541 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021239304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.025580348 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.050747229 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.022194632 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022645585 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024381344 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022848574 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.02060689 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030644478 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024293306 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.040569654 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034082891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.021879123 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.02493033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.030119741 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030443563 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.019760918 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022395851 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023473177 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.030544778 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.022682494 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024687751 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.022871281 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026513668 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029165028 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.02819062 seconds)
  done (took 4.995541309 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234551098 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225363177 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022991701 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.220774532 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029774276 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.152589029 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.226725539 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.224182663 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0221757 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023380438 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021831274 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.169707223 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.163488307 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.174289857 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.153827861 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024167944 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.054479257 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171595719 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227076044 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.221216669 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.053260916 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.02875869 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024582135 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023336951 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022688802 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030759449 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038575305 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030080749 seconds)
  done (took 4.127230719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.029724086 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065866639 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025523294 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046411016 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038804588 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022306805 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023535404 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022399995 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038369377 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.02742086 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022198812 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025885836 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025179667 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.02402234 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022110668 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.02806275 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028362466 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020696073 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025477706 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.027172483 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.032854198 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045715655 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025710231 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021611282 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025282755 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021741721 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027671552 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.034576993 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021664222 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021550189 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018905715 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030382186 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036978812 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.02296417 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021390611 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022356342 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022031971 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022029078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.021877382 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020156381 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020157401 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026995146 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020625223 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026487019 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035256088 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024150242 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023512176 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024303551 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024424549 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018892942 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.024848778 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.02520908 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024607681 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030316115 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024115834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024481421 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023443966 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036581939 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027923072 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021312599 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021123028 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020323751 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.023780084 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028059144 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.037933899 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023862658 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020294829 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022173149 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023557541 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035195057 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021290569 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028310061 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.018991674 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022013054 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024387852 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024774849 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023246128 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020305655 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021488926 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021262629 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.021941674 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021577565 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021074271 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024374494 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.019909128 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020338612 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022443837 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023519204 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.026784896 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020582115 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025336137 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023341007 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.02051557 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024223046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027171941 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024646877 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.03936815 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029374672 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022619488 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019727375 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.038477687 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024623028 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021414279 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024155154 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031137091 seconds)
  done (took 3.828320467 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052187746 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02401205 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041748153 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057852192 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.03250344 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028077675 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.03582746 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023664028 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.044305991 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.022089405 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.032428428 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021040424 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035606897 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030934676 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023972342 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032136 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024862073 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043523244 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037109315 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020936919 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030689965 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034383244 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034515631 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039980632 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039333652 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040825342 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034222519 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025152314 seconds)
  done (took 2.04581777 seconds)
done (took 22.007099605 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.149833314 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.303689284 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.099039517 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.70605239 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.166925149 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198681328 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220405212 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.08404052 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.077833101 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.17948623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.752559785 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.288952079 seconds)
done (took 59.39953629 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.24195398 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.240653265 seconds)
    (2/2) benchmarking "String"...
    done (took 1.328967925 seconds)
  done (took 3.676169314 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.523964261 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.090498869 seconds)
    (3/3) benchmarking "different"...
    done (took 1.118904198 seconds)
  done (took 4.829723379 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.368767157 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.074855824 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.401469733 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.083120098 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.088079129 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.753894625 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.254455071 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.776337162 seconds)
  done (took 27.520948849 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.144618513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.341152829 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.486891581 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.584247132 seconds)
  done (took 17.72699991 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.536399698 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.615218976 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.60884833 seconds)
    (4/4) benchmarking "different"...
    done (took 1.702391097 seconds)
  done (took 7.667169507 seconds)
done (took 71.199664118 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.076582575 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.364619373 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.120298977 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.265242013 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.137753529 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.186530431 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.085082726 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.20435973 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.092893246 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.086574071 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.08475666 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.088932895 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.100208226 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.150189352 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.090770822 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.125102432 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.372479743 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.097718273 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.115573791 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.867129105 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.428874512 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.089518591 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.094190176 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.170355452 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.37321432 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.137692636 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.54191599 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.09204059 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.699147622 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.103143607 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.098267673 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.092074363 seconds)
  done (took 181.708562357 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.073629555 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.000056491 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.960754563 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.096855068 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.487396766 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.442413494 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.959038726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.513109634 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.085749918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.12116786 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.17161845 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.083190708 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.169048778 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.655431359 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.124239501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.09968488 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.012255693 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.926169843 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.135730822 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.041692248 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.093850226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.659659143 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.620455213 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.950816301 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.094397928 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.147269277 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.097071634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.128526247 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.590269218 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.967509958 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.086451718 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.119135819 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.288014821 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.3223497 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.092031516 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.10404348 seconds)
  done (took 152.606227318 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.261100753 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.080654646 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.123109464 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.231101656 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.055064227 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.952660687 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.158520867 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.135575332 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.077852172 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.082701801 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.075439256 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.142336203 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.08510043 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.219108504 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.114212339 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.087802859 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.090305822 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.204293125 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.0988314 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.078575253 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.082064835 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.205185327 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.435551614 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.217807226 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.102137063 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.082727736 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.212237702 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.095915757 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.076226558 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.081327368 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.211713789 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.085328715 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.210408163 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.231382666 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.105142012 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.13518921 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.094418623 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.303833369 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.086499084 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.072788081 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.104335195 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.130478166 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.10320668 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.169550753 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.191243461 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.102764053 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.105819377 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.568583554 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.680195709 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.086995875 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.081956867 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.072263989 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.083252633 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.092158584 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.52254437 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.089097083 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.109468751 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.736042878 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.096659866 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.084454953 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.079038592 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.082331479 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.085150926 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.079307482 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.110790602 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.759532589 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.238089592 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.435391741 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.826053513 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.086038797 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.077663712 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.078256299 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.268952275 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.153240172 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.078215698 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.089040472 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.253465609 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.086644132 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.086577046 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.998719601 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.003821613 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.093820068 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.213129295 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.085018767 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.079127216 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.122534249 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.220609015 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.101777888 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.093084683 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.137590423 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.086824035 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.07326844 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.08447255 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.008993203 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.092316979 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.086175381 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.490333521 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.086593313 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.08004976 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.184147967 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.455492581 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.081651644 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.164427084 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494662139 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.074450519 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.087522882 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.081624077 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.101251584 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.088483052 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.111340011 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.088527666 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.076344485 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.076020351 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.084182524 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.100375942 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.156491386 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.147753812 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.115126568 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.088100676 seconds)
  done (took 324.583739891 seconds)
done (took 661.3536917 seconds)
(4/20) benchmarking "parallel"...
done (took 1.075605794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.547549954 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.086750692 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.299225696 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.582296471 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.488217253 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.443271249 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.465822404 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.678669721 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.608690302 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.448067673 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.474335874 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.489525817 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.55310953 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.64079356 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.506830456 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.571843991 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.486086875 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.797648866 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.497340281 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.493694621 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.472567965 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.260847681 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.466819063 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.496160198 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.511655016 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.468780023 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.498834868 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.564825159 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.496873208 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.507765645 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.532790838 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.54301672 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.484155219 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.520214728 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.541571428 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.516309339 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.319008211 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.644669397 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.45939318 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.462384515 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.485198922 seconds)
  done (took 69.498453047 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.500267866 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.281946094 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.410307812 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.403815612 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.867030213 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.403915057 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.48682248 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.274704898 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.285299316 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.400264797 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.406822664 seconds)
  done (took 17.8329851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.337341384 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.295450609 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.452295132 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.409167932 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.490872517 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.412129495 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.436837122 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.2717098 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.28850276 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.415526889 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.429682268 seconds)
  done (took 17.343471652 seconds)
done (took 105.749662018 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.709619508 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.160249644 seconds)
  done (took 3.956712056 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.106595629 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.102399343 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.092694833 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.096910721 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.093735776 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.102379449 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.146150333 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.106643121 seconds)
  done (took 9.92346022 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.086839514 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.100141743 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.100721094 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.09515136 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.096247613 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.10020727 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.096384717 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.086246155 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.08978743 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.086639177 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.096182182 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.095950695 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.100895222 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.090148405 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.106162473 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.097191896 seconds)
  done (took 18.606082017 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.098432696 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.089573742 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.091707373 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.088297714 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.098822765 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.083792308 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.093711403 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.108564187 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.08796973 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.090214347 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.087052753 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.090827872 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.094708862 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.105253942 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.087432893 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.096331126 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.099152362 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.085805803 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.094751154 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.087068239 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.099777331 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.09756129 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.099058862 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.096521735 seconds)
  done (took 27.343974314 seconds)
done (took 60.932134736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.700562441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.870157061 seconds)
  done (took 6.659882597 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.086240363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.095187575 seconds)
  done (took 3.329932255 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.091969196 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.089354241 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.089400863 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.087520607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.10866642 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.097299756 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.102065001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.091712879 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.10920386 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.092420092 seconds)
  done (took 12.049830235 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.089341101 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.090104873 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.097120929 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.100714878 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.097087319 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.091488479 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.105245248 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.090025466 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.08953803 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.111760866 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.092617783 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.282883573 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.099107028 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.315136752 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.092807747 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.108940374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.091318151 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.089370319 seconds)
  done (took 21.215059484 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.094596653 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.089728391 seconds)
  done (took 3.270110071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.101439993 seconds)
    (2/7) benchmarking "second"...
    done (took 1.09105322 seconds)
    (3/7) benchmarking "month"...
    done (took 1.10223479 seconds)
    (4/7) benchmarking "year"...
    done (took 1.092271489 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.087432006 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.090911291 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.123088836 seconds)
  done (took 8.781266555 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.532692573 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.262143824 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.314283376 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.557659732 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.737329898 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.035126258 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.746407688 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.033216221 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.877768379 seconds)
  done (took 16.179546094 seconds)
done (took 72.563770834 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.859046569 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.088933813 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.548979354 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.167970235 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.155507163 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.41992717 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.120174033 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.663456196 seconds)
done (took 37.109992667 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.106902488 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.087051115 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.113118575 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.119803837 seconds)
  done (took 19.405893378 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.096366305 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.650462835 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.122415529 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.157946977 seconds)
  done (took 19.189493762 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.498674484 seconds)
    (2/2) benchmarking "read"...
    done (took 1.607105978 seconds)
  done (took 4.220854748 seconds)
done (took 50.023091605 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.091106375 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.091832965 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.087138514 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.087817252 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.0936012 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.085814963 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.100876412 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.088359434 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.109501173 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.090820964 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.08938572 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.087537661 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.090162158 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.093605002 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.085290273 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.104575111 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.093406159 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.102266414 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.105911151 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.09049586 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.086908112 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.090544187 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.104099937 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.091708714 seconds)
  done (took 27.338153743 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.157937502 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.152161781 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.168701212 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.155443023 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.185024664 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.159790984 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.160731095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.138746064 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.168737901 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.139064756 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14854708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.191212329 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.127895653 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.182101673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128550773 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.194858742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.17061325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140625724 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133662232 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.195887181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.15318788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128962871 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.179643796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145567464 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.192686093 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138143917 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.141595907 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.155066982 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136729658 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.177158075 seconds)
  done (took 35.836154283 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.122119167 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.093658242 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.088293772 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.184863171 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.088236845 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.101567907 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.102101599 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.086473573 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.087918836 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.087774089 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.095190517 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.086798204 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.103800431 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.088924537 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.096181562 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.101820781 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.128959466 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.271416891 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.095944085 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.107828645 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.148889558 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.10176905 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.090274349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.102090692 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.089665418 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.088788173 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.089199684 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.091118635 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.095203323 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.089370102 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.097268319 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.144720266 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.131226031 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.100171558 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224650585 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.145511962 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.090933664 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.126303044 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.08933909 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.107494828 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.090244088 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.099967913 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.08997421 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.089959532 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.157290566 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.091481059 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.103480039 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.100224638 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.096593562 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.093598824 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.097435651 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.099566644 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.105169649 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.086919388 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.089122863 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.097698136 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.0954867 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.106557054 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.090436873 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.095158726 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.097057532 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.172386245 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.092962562 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.090004788 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.467622872 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.094838596 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.165276756 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.093705291 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.106667394 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.307964501 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.090876358 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.298000207 seconds)
  done (took 81.599382739 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.094726707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.109030353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.171198433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.169239368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.100401179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.091987123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.087668266 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.087801054 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754803636 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.098236719 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.101035966 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.091724878 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768684813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.097667523 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.100535075 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.165798695 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.091382645 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.098928343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.096820612 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.101066158 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.097270551 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.100083161 seconds)
  done (took 26.756128298 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.130357177 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.109516741 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.129542123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.103127699 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.102573519 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.100355998 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.132035153 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.122655155 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13218697 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.126555108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.128348685 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124200447 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.08974212 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13674337 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.128898929 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.112922428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142592333 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.103893585 seconds)
  done (took 21.233413327 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.264360992 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.256051053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.175551076 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147343277 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.354201356 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.342508636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197014312 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28474393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.132917864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.254781895 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.291358818 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149240012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.337915815 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146211497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133961126 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35273646 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.175059718 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132893666 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22091255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201034432 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.280605371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229113446 seconds)
  done (took 28.15242853 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127439056 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.161956512 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.170492974 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.17964253 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.092475889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.099261965 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.152012204 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.141419335 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.106054425 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.135499087 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12499395 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.08998171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.116856717 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.159329437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.178927898 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146405892 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.180998912 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.143135646 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13495544 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.088162779 seconds)
  done (took 23.822032492 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093017073 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097668472 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.090314939 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.096670514 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106840984 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.089291594 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092003665 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.102314134 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.097166933 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.358693577 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.106565738 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.096640566 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.095096556 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.104693062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.089299069 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.088720166 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.102094633 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.091237953 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.093874765 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.09535779 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343327554 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.114182614 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.098096563 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.088839728 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.090925378 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.090122604 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.090421121 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.094456683 seconds)
  done (took 32.277554824 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151702729 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.10140871 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.101235968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.090908285 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.087694704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.170944876 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.167028269 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.170199128 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.127093399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.169540407 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.176474854 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.113310383 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.089723211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.150975899 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.093030148 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.089372144 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.223395146 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.096473211 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163158048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.077250535 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.114663077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.225099357 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.100425721 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.096068584 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.082582916 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.099636571 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.09368996 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.097151812 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.097754766 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.088882184 seconds)
  done (took 52.800021878 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.11662697 seconds)
    (2/2) benchmarking "in"...
    done (took 1.107826389 seconds)
  done (took 3.327203384 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.086590396 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198471674 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.089842898 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294750012 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257693459 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.288864688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.259968519 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186906563 seconds)
  done (took 10.741308097 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.107495744 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.246650957 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.221424418 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.090785993 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.091433701 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.396192957 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.122328109 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.919354178 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.764007032 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.088784898 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.213135471 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.712235562 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.086615421 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.4806686 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.212199956 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.900417162 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.233278799 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.495002729 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.029190607 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.188981973 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.710698879 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166929962 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.112480198 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.095564821 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.088968087 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.024873349 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.831586005 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.702941621 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.162729072 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.197883135 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.739549671 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.147924055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.100029687 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.277921799 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.184176771 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.103296411 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.180233353 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.173568554 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.08802402 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.088999521 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.603945984 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.738511185 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.275155521 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.246364648 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.162302557 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.101679938 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.102858995 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.092389561 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.318839264 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.759401271 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.068449846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.031865351 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225106711 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.09889516 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.535495027 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.202945052 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.089896082 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.025058562 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.55440514 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.25365428 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.467343619 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.20040458 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.032864131 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.192542681 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.093240108 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.319653543 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.924788682 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.811634794 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.751933763 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.180444852 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.438698827 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.235853434 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.092290872 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.092950707 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.070967497 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.394961019 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.114764458 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.091632583 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.088488405 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.093176569 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.277067073 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.195974252 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.895485927 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.226911812 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.306124573 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.472339102 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.20182198 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.110256154 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.681369084 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.936988633 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.196437811 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.519442215 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.394270455 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23034441 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.034093569 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.329180712 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.123718709 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.088924448 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.903310934 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.510093394 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228439529 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.093988811 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.464572078 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.12908642 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.105719251 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.095469863 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.737413992 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.19315657 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.245875983 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.118145257 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.107015981 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.103832086 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748717331 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.230579084 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.191418395 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.686973557 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.075675233 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.439092151 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.422942115 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.244801604 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.351230467 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.945877326 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.347696231 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.910446487 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.111893172 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.388740546 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.122334861 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.685367866 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.275789324 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.204539284 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.863492191 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.104313239 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.106117799 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.141663318 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.120025037 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.089416798 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.091215175 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.093294905 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.097601007 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.098552061 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.209806035 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.410989874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.627159758 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.211859645 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.297123022 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.209761255 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.688111108 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.398083212 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.728079682 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.228877097 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.091157592 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.564743721 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.424630311 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.702261885 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.204205405 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.104091775 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.090874114 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.914154733 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.036256277 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.169430365 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.11280284 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.731037474 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.203324344 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.108366832 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.09717921 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.597257877 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237602776 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.090728022 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.138106914 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.780585122 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.667887126 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200160824 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.452196611 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.209929904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.096594192 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.099171347 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.106435311 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.847383043 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.772110284 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.112335047 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.723246771 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.767358834 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.139409219 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.172065738 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.160426423 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.308827327 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.271402961 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.233598148 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.091691863 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.091284045 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.096019679 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.626667958 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.936722003 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.833164335 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.995485157 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.10099553 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.083205167 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.199131993 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.735065569 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.268331826 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.742945105 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.98053021 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.182971405 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.091588692 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.091956069 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.349439194 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.240917016 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226699098 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.423218633 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.222906363 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.092068187 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.672397256 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.201164634 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.677632367 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.183476863 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.890950673 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.105824455 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.192235478 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.19940883 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.587142463 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.158588109 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.0947722 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.6620622 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.167593024 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.09552683 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.090160134 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.535275044 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.980217073 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.799282642 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.523635231 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.134335918 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.679081945 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.318020083 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242977181 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.902696805 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.165918065 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.379223838 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.151370975 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.34987405 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.215112611 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.676105524 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.282480015 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.92340653 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.195849675 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.076619414 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.202231887 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.464592322 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.182002227 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.095123543 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.214466171 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.170775966 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.680944433 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.192233076 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.302862859 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.356104336 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.908617946 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.163627546 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.37985681 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.142321226 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.962214283 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.044974179 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.397545217 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.956753638 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.088432337 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.190755873 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.824901374 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.257745537 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.351922713 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.222398658 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.105599826 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.109049288 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.18792772 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.158911217 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.094952614 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.441574331 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.988328952 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.159202869 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.1974074 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.108172934 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.103766239 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.2376902 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.151448961 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.224449684 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.450407625 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.67832661 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.827809838 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.209706875 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.650212459 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.145639705 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.816050117 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.216176681 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.118095197 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.685153203 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.194346121 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.359001653 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.224359074 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.185024636 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.586305132 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.295681827 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.347842848 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.165862669 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.202270565 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.801654637 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.654117977 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.298858626 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.291823193 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259771905 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.685496782 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.104776228 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.660752238 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.086594791 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.824544209 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.115896892 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.139006386 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.106350859 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.089580855 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.667252175 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.062167895 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.115902497 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.848748602 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.592020874 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.147311231 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.88682976 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.202082651 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.107015468 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.091594946 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.09949639 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.039437097 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.125682443 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.276665444 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.17782982 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.089618223 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.098287742 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.035403494 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.30787359 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.785687348 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.885159852 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.011519085 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.237885897 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.092656952 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.090758144 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.106903487 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.112806102 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.104767973 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.093960553 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.390387793 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.225063887 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.762737809 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.208837322 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.112798351 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.237443637 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.133842352 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.096943379 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.169844707 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.121224861 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.208086312 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.178601706 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.09605701 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.534375305 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.230338954 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.069202153 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.333032023 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.356252261 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.284288902 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.394019262 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252935285 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.55077897 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.427394393 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.876570618 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.109371047 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.035136779 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.193512015 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.790135328 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.049587305 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.488618888 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.779853066 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.086298219 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.334630236 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.923328227 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.510553868 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.199265226 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.128172086 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.092654897 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.104949103 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.094781501 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.351423227 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.137110097 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.313267404 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.221218698 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.098578091 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.331137321 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.159761813 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.117224629 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259175291 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.125247638 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.090967949 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.092083244 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.488293844 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.852750861 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.122803914 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.103613794 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.021230486 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.909811434 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.926977995 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.767819318 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.032087043 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226555735 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.092294939 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.286116557 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.146206222 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.646261751 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212974931 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.833670856 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.574432657 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.157090367 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.193101885 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.472550827 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.74888857 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.420179966 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.185721691 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.090790171 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.36683326 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.022146973 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.230045666 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.034078341 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.385591176 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.666487638 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.581320023 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.303838292 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.181301271 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.019062929 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.705348993 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.094613656 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.114295826 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.89952204 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.228618723 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.351448252 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.961512496 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.305836603 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230787263 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.769746985 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.795255674 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.23076847 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.67061815 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.227461344 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.101739049 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.602721535 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.120891468 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.203838467 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.194162731 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.099170887 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.108247713 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.697365737 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.699402257 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.273866685 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.136570448 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.091562927 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.621016501 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.936171487 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.200652615 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.107348548 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.092633672 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.3173515 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.254725351 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.0922922 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.544047771 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.734711079 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.229482601 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.622821277 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.196682656 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229322843 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.311241421 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.420613962 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.225970761 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.166413187 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.105778324 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.103444778 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.103080477 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.539938308 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.222706019 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.093538268 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.671934578 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.243756605 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.676525115 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.178383834 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.279360248 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.141119426 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.541538983 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.234279435 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.633224638 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.010270622 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.194074598 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.402511101 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.154591252 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.166139963 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.748843601 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.17672469 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.091569554 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.970461624 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.303812895 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.312380634 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.40723052 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.301667524 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.155262538 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.732448781 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.168135344 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.638116094 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.21329742 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.098047877 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.634167733 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.167716175 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.437095545 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.209524795 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.471872225 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.173528652 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.470003223 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.320956955 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.191461791 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.094914183 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.093795232 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.035808656 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.117046883 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.685486567 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.042981646 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.486191976 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.191323256 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.975197618 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.644786405 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.621122105 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.404957472 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.227132789 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.309649765 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255858246 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.024370403 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.365117351 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.117800874 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.258359424 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.182879561 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.802549806 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.117964062 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.093770105 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.460761198 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.224960416 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.092514502 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.095571539 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.01710119 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.836501021 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.161732921 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.311192023 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.155516203 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.099393588 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.676393039 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.356023666 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.141935894 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.092995626 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.106701258 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.922552004 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.166687469 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.091315422 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.362359959 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.217618847 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.34337559 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878227764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.50076321 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.187323046 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.091222614 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.093030698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.648092427 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.586320707 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.22346438 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.463640829 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.144527586 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.644243945 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.08883203 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.53645107 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.610575548 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.02606959 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.185966372 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.108620735 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.151816108 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.761058223 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.136972824 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.866421083 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.499107804 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.152880048 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.830823823 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.990410955 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.12402097 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.195264461 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.112131091 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.093395671 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.092425298 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.109578767 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.640349269 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.105461452 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.109462796 seconds)
  done (took 1409.609075922 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367343183 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.099553754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.100173237 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.098646001 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.09369223 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.106982125 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.115106199 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.095183873 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.091902014 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.08869829 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.09639061 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.096924015 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.089726559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.377983876 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.10625516 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.095054194 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.092189063 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.090961455 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.092239094 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.094753958 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.117202879 seconds)
  done (took 24.690349095 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.096820329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.105842097 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.098374654 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.092287004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.092977993 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.092042184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.096401529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.098230199 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.100519761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.091659102 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.110219562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.095099015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.104298852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.090890091 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.091281165 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.096633458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.100854041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.090768326 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.098490842 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.113395342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.096799176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.091288285 seconds)
  done (took 25.227288709 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.090874802 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.10856275 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.787781284 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.187216457 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.099298435 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.095664596 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.098821795 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.2727777 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.073590058 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.999769022 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.551370163 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.155128422 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.142462854 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.328910323 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.191981331 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.098503357 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.219411867 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.091289823 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.09527082 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.095241304 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.113613988 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.258287928 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.197492888 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.09189689 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.89401472 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.234265701 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.101989977 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.1002094 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.096866252 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.103297791 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.202481543 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.107713413 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.89732663 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.771296461 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.337956514 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.007239597 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.225211505 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.108486601 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.108455934 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.094948037 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.327095697 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.883321582 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.11993405 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.092239231 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.428668469 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.183768468 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.093701186 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.47878793 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.15642313 seconds)
  done (took 87.684477751 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.109695541 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.218330246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.145763598 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.097583221 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.235258453 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.098367993 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.164953863 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.114369305 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.092052365 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.094716225 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.227196941 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.249639414 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.100971211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.100707576 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.172942058 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.100706165 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.100809729 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.092157937 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.097874756 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.104680643 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.093385977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.148050474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.218331087 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.25066347 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.102737233 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.107358577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.0998937 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.095264557 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.252076999 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.105938844 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.104904928 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.101472921 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.235271478 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.18580124 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.095618674 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.09482348 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.22520209 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.100182566 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.104773114 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.101340683 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.104005117 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.092922465 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.163306189 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.23416468 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.10793996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.248749931 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.105562434 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.095335407 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.248510325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.093767741 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.100136114 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.277250133 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.094978735 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.096173938 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.094732083 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.22337628 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.098964029 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.099541866 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.092603653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.25864346 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.105232999 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.096502744 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.250696939 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.096195681 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.099322957 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261319466 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.20841189 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.093707563 seconds)
  done (took 78.770808363 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.092186344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.095856583 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.096161768 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.102071653 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.101254491 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.090972278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.10048555 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.092390766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.103353096 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.101664547 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.095617397 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.095367715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.090924322 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.099252632 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.09144572 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.119020185 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.096878169 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.115059527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.101679269 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092742617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.101595847 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.095171331 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.101709953 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.098255162 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.473099038 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.097445138 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.109593468 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.099080466 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.094088967 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.098466908 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.455015887 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.105608917 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.100446755 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.090438742 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.458813748 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.106849455 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.093551958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.098505108 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.099304346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.093026884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.092517029 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.100396723 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.091517443 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.098286473 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.118086278 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.093870724 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.097811067 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.457496119 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.098074522 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.095233525 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.103783935 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.099860528 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.099175098 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.098890375 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.093603767 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.200275343 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.094856646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.101976197 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.101061806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.10211559 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.092663259 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.197514287 seconds)
  done (took 70.872243876 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.107415842 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.099222404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.091531553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.095033155 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.095767097 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.111469784 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.093959391 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.101482843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.112612867 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.095605514 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.097858765 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.094632485 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.092992971 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.097980508 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.10018595 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099049717 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1014683 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.10322015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.094747723 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.096831342 seconds)
  done (took 23.081150829 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.092856818 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.10997041 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.10242737 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.091708551 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.103865995 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.102185455 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.096564177 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.094633121 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.095332466 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.093512215 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.097515495 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.10149803 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.100078925 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.09893023 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.110997885 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.106500587 seconds)
  done (took 18.681626552 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.096984564 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.098761335 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.099786637 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.104862037 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.097375465 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.096484655 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.109586455 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.092858183 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.095320682 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.559984424 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.096681246 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.110580971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.102423493 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.092872735 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.103432083 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.104075267 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.095879058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.094699913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.100276316 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.093058828 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.668305496 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.11368858 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.09375955 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.11296235 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.095078075 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.685356991 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.104526471 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.099986316 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.101664765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.108182749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.100308781 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.576131163 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.103402388 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.096247968 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.092881712 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.1067199 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.09959594 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.096617449 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.108215702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.096066202 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.116024005 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.169133536 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.165439458 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.110791155 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.097268987 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.100413375 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.093561063 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.556032946 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.099009514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.114991512 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.092868395 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.10671771 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.096221833 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.578044301 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.105164171 seconds)
  done (took 64.794519705 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142217856 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.161141709 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.09929104 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.095252427 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.148445536 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.140285141 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.142582499 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.107113036 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153972369 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.097154775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.167163855 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.123680384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138996168 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.147703191 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.160236063 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.139684241 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.09390754 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.186677564 seconds)
  done (took 21.53919673 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.112920203 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.097177274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.099302322 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.102741591 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.096931285 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.098135666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.091318653 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.10987629 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.093376473 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.106039914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.099769702 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.094106338 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.092049421 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.097944455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.096588198 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.097068674 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.111117517 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.099398528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.103941164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.096863034 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.093915258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.094902302 seconds)
  done (took 25.28438883 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.12832524 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.13872656 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.100018177 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.102702205 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.103462455 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.128940675 seconds)
  done (took 7.787937661 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157134984 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.100481032 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.143267388 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.148045441 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.110158706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.095306223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10537075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.093998196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.096261669 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402134142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.112232195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.09978287 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09843137 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.096628937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.104447156 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114072697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.095577257 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09390024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.137904577 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180178446 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098637924 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101655885 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092408643 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.109011965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.111240569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.094003823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108722037 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41718561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.105955866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098343558 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098594366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101950116 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.096123983 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416321337 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.149901125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.096673274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.093206375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184169047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.099739826 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100751342 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.145567892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106695194 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.104181341 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.096165313 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.09742738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.091691586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.09974573 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.096773629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100603773 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406249027 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.117625486 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101234542 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.097269202 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.092868743 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.112691254 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404942258 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412970146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106288617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09692565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416838696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.094814077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100972093 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.094321956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406784958 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10068066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.098732485 seconds)
  done (took 76.668842733 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.113203057 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142167691 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.097021767 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403772829 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101257998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098858522 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.094500416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.096652408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.103236785 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16532893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.18415526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.093394864 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.094112435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.109734109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.10056253 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.096283105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102455888 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.094296767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163072076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408160393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.097002542 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.094250806 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.095095364 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.109498395 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400734147 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.096040183 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.110780216 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.103022707 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.09399695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098055467 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.093498033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.097985004 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.097070638 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.13881786 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.093049554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.099876421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.109357935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092901962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.09189836 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.095943143 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107726772 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188181332 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.104566072 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100848393 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401436388 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.106382964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101452351 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.153479505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.093964646 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156426711 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398105926 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40270195 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404505651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.121892124 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092770505 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10632577 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.093360218 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09498923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.100067447 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.102633162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.091356906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.116122369 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428338761 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098112312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.091952007 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.093041339 seconds)
  done (took 76.605813565 seconds)
done (took 2356.261930802 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.136309232 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.238509261 seconds)
  done (took 13.455975813 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.106793535 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.094524933 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.246178983 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.095848256 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.119094813 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.182052938 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.172584763 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.102799418 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.096033512 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.197202498 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.103852783 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.223340602 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.206066543 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.120406927 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.110655655 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.101903582 seconds)
  done (took 39.435220285 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.095492379 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.276317815 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.063510404 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.839138019 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.096550698 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.172726359 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.415485832 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.3842255 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.400998863 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.592559407 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.427132168 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.794096307 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.246119899 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.203787334 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.712470513 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.806252417 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.885091513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.939646132 seconds)
  done (took 60.447712962 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.10240011 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.254473392 seconds)
  done (took 8.468778719 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.12387639 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.128062043 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.118360511 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.117164342 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.114946084 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.123791334 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.123684982 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.127289325 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.120282102 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.124807339 seconds)
  done (took 62.327130884 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.019365824 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.886542986 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.531032988 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.720409007 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.662719596 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.489195079 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.26266999 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.930310599 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.181559214 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.083232608 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.071325142 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.509293267 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.83058701 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.060969387 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.607134486 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.419608957 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.727564201 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.639910755 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.429095392 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.45679975 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.341103006 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.800733574 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.55433979 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.956960368 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.112302775 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.170097468 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.231396505 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.197895234 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.175194218 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.017027058 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.986561576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.120313268 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.060883811 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.113843118 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.026601375 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.742260782 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.803948938 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.3053292 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.438284588 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.406699873 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.503625925 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.38633367 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.221222552 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.392899412 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.320941735 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.300995167 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.05239687 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.352087082 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.190607643 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.213397606 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.533631408 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.292855527 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.240371824 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.219930118 seconds)
  done (took 150.408696253 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.084858181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.483764326 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.262017808 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.085684653 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.508353419 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.312341351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.846469662 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.591502294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.108473906 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.30228694 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.263235038 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.229100181 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.098309249 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.093007804 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.094036937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.096429526 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.29484417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.68713036 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.166174173 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.104767603 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.330971055 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.338800057 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.229049049 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.095643574 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.279878036 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.352801588 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.559359024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.234363922 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.503167296 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.086683079 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.581476548 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.101832417 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.111322326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.054038627 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.512659626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.423336784 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.608178218 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.095037572 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.864942934 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.094773311 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.765409831 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.29623123 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.427725288 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.237012446 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.354706096 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.329870124 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.693555056 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.096742084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.86944066 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.294123802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.319490285 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.311359202 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.375207756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.100286085 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.650563847 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.101950811 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.102524676 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.363467842 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.257929595 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.215082394 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.087845371 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.101957408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.100996591 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.341527437 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.089162927 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.216493365 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.106477278 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.092119909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.217098242 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.217272599 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.246191625 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.343617443 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.350704521 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.332273612 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.087110087 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.331160437 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.529383702 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.335798754 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.116787137 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.09622364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560766173 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.54539814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.253419153 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.334983299 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.406754625 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.407494216 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.670860638 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.085915052 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.323281374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.280289811 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.484133903 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.353901409 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.434895591 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.005832162 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.089335669 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.09405252 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.359648131 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.222860139 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.104105418 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608710192 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.362012739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.190261499 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.277890219 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.576992153 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.212809031 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.087074756 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.65463426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.100792491 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.331267838 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.391410146 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.097689305 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.09338327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.271229134 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.074627023 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.091652778 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.514075994 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.549382639 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.166767145 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.255309978 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.099848483 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.368455325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.938125435 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.33489636 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.092792206 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372323285 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.304854392 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.366751818 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.101633813 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.352521396 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.370716754 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.494101614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.435375688 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.107071147 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.102811873 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.405373484 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.088497803 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.103138725 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.275861496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.997135651 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.27313632 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.100701507 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.527573215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.257230559 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.442181911 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.103751926 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.342124852 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.340904167 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.503255033 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.109432671 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.234723088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.100245368 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.180667392 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.265835055 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.086495765 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.097156212 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.941655878 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.095350635 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.247527878 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.328896559 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732583888 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.602435226 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.457406768 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.085701893 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.602316788 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.307790848 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.550608406 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.625211002 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.266216008 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.812485573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.330101392 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.093888613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.341025371 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.409221611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.107457909 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.091662017 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.800596653 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.198183146 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.105593275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.258851955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.749398163 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.505205809 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.306135896 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.099801204 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.431135422 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.117928422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.282450903 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583931159 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.414704719 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.094792363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.090857065 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.105167378 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.105374031 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.306860259 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.353178449 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.752007771 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.254113593 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.396830887 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.311137596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.412122728 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.573349201 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.103076861 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.427398286 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.091555435 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.547073366 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.095793298 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.229975184 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.402768237 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.088209331 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.384856268 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.458889224 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28349588 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.563657382 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.103605827 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.096886424 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.698646014 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.282252099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591853919 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.103695868 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.253754189 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.473218858 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.231525094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.299392903 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.309789154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.103464119 seconds)
  done (took 728.248541912 seconds)
done (took 1063.895717386 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.095632975 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.10234935 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.093892037 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.1130336 seconds)
  done (took 25.512195248 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.944900431 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.92553317 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.193753638 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.111784306 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.254796386 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.323763763 seconds)
  done (took 10.850962851 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.613762215 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.093540547 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.094674087 seconds)
  done (took 17.88659035 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.41455471 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.585705003 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.27786779 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.206562541 seconds)
  done (took 6.575399817 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.111360522 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.102036565 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.097526375 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.105836589 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.097494595 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.102657498 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.093337386 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.110889781 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.09981619 seconds)
  done (took 11.025104738 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.551251695 seconds)
done (took 77.491943881 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.484765168 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.402754424 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.097601286 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.313018064 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.229342531 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.468810394 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.208130207 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.136676968 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.442602432 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.549646138 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.636146224 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.382798745 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.538968406 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.603436817 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.331715249 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.130474089 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.129593194 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.156389702 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.840654134 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.325489039 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.098970721 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.243389335 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.083973496 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.124184829 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.077487132 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.175579953 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.346459446 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.094902381 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.393610013 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.122799569 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.188591538 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.57936575 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.33038681 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.422958069 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.19210103 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.052230552 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.542659797 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.140279685 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.348643464 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.674766446 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.39774534 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.229802353 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.093067286 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.405382194 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.542616917 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.112869298 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.086195101 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.261528234 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.696631871 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.280548247 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.476811093 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.107442101 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.718157282 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.169917306 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.213596939 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.084362472 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.126138364 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.619533485 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.315809566 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.389205911 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.11828172 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.106259905 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.108535849 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.135889161 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.089534918 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.29173822 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.505683605 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.203094653 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.57118489 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.118757942 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.138599994 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.125957252 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.902870707 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.182704771 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.090115862 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.117531378 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.418045751 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.251691009 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.093622017 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.202143274 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.233262816 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.103860669 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.307406908 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.441392457 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.256830227 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.53752144 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.629388774 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.50056434 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.732709649 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.103337318 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.330213825 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.627612099 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.356377433 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.094562815 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.172552582 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.275561158 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.536831982 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.708213973 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.23972606 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.783009116 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.133247159 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.129860485 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.621155659 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.514315044 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.984565645 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.139025481 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.230328842 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.096339727 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.272351949 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.089875341 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.534405994 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.621189497 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.093873416 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.156653768 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.59035324 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.100344563 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.423817877 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.430573778 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.183389671 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.092356582 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.329840976 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.119142046 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.216450901 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.722172238 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.474661515 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.302468817 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.094194972 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.568415553 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.104896297 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.388177704 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.110955276 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.720450824 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.6565682 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.122740371 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.352541479 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.226466712 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.098436342 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.255005284 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.152294483 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.232189182 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.406676128 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.401070557 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.277495634 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.089436771 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.424429647 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.447694585 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.360852468 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.440659819 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.265769186 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.362966033 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.212574736 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.111681071 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.209961197 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.535899209 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.724744379 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.817737827 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.355810289 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.232810515 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.681262679 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.49782938 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.01293342 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.206611878 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.14222672 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.113666725 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.114985173 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.168478224 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.090266941 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.087740403 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.333096494 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.477202842 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.849640642 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.010594191 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.957391046 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.418803739 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.236806854 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.101795301 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.691620004 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.097498477 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.570157724 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.547371203 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.301259247 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.122044799 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.085583297 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.208667135 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 2.013415017 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.143152077 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.468956061 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.802836889 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.559786485 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.55705671 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.366488586 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.133052366 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.543969102 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.335941213 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.373260493 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.321309863 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.743828574 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.181726456 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.510298157 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.216341411 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.36950438 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.09367677 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.266621567 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.339392666 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.578647108 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.468669139 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.322994691 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.338368595 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.440362464 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.092522058 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.099482182 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 7.908844333 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.340521465 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.123542637 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.09008046 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.810164934 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.519819076 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.09832947 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.233626881 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.558959294 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.198610755 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.267772201 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.659356328 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.117108373 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.396055132 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.325722141 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.260825042 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.320597941 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.145922378 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.239389747 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.326433234 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.231959643 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.33987911 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.159041295 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.44157902 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.10157418 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 2.970939689 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.086892548 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.74482641 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.134363148 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.121763619 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.370395613 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.340630994 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.408104842 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.303758956 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.265496737 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.093278619 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.207618086 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.694527023 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.031696766 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.886247078 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.075768605 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.12393677 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.085423599 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.657876577 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.549758212 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.161109623 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.241145587 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.695618883 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.139889448 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.328196193 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.110932519 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.101290655 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.004819526 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.228218956 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.33663233 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.830382541 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.103427273 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.453723463 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.207183535 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.643859349 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.741161962 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.153921287 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.224610705 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.097355001 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 4.913399704 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.489175665 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.126303252 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.281677658 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.467625846 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.20906583 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.212401686 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.088237806 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.149424999 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.662152216 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.493173043 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.590945795 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.131220955 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.525289153 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.098351787 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.538498102 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.138509406 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.194654341 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.54948005 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.26693141 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.483821732 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.106102588 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.137315455 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.347186644 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.149710457 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.08806502 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.242537609 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.089605492 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.739356362 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.878856865 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.332523124 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.060125625 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.328968234 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.153877804 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.05968883 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.228144942 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.183564792 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.72941266 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.578592283 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.113526084 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.400837723 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.134940889 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.577017799 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.130478497 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.124869485 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.223836701 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.195447643 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.085605871 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.113332585 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.309271698 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.600630176 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.267539401 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.100276873 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.104693092 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.445412831 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.235460303 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.444960792 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.880746613 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.111011492 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.261518646 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.71952901 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.346411535 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.12168592 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.323975177 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.100840576 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.730222263 seconds)
  done (took 866.422127764 seconds)
done (took 867.734468827 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.139573386 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.484606588 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.305271594 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.07064387 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.899475231 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.742009546 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.31997189 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.336086976 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.170136742 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.331776303 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.993101404 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.899711595 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.193565408 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.213433313 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.179848348 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.197464443 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.320231933 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.349303661 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.211367701 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.906143462 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.473904153 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.925054017 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.550091466 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399486111 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.472473884 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.196530503 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.166049682 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.447126328 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.45540797 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.085571877 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.316967326 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.304642816 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.933881204 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.332760228 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.190390896 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.177881287 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.973934559 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.198037919 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.124034227 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.198891434 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.473543819 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.223994321 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.804886532 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.966357879 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881839587 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.53233275 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.982016686 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.203599191 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.203519644 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.268199962 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.140870578 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.117088204 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.455854938 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.089583841 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.945481081 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.955987393 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.452518734 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.989852928 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.847818338 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.294627607 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.469034317 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.202614374 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.265496712 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.327401388 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.222119065 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.388461181 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.521032581 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.130428772 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.290317637 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.339043833 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.344667026 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.32103937 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.219191873 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.317131809 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.219316381 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.327593193 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.821629867 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.303828011 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.898566443 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.206318276 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.063390665 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.051257017 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.058473929 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.18391507 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.133245413 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.892189293 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.061552097 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.059857558 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.225260907 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.29347229 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.979504922 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.306880334 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.564733025 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.16042249 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.13853638 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.291780853 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.058608544 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.131504627 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.28000411 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.301558509 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.895589183 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.161676102 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.096617805 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.198154745 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.204014205 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.133127314 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.165793402 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.516204898 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.339001979 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.278146388 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.470665898 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.230204143 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.331393889 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.214466738 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.167712685 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.878631751 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393805677 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.99805172 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.133201286 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.773542267 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.394194059 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.194680292 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.477732253 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402768877 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.15209209 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.189115106 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.200988098 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.043070719 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.201507209 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.197472371 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.272214844 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.569401373 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.27288429 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.070691474 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.333573367 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.028755643 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.347611411 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.336614007 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.175336009 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.983199301 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.195416279 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.244453742 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395440362 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.482349849 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.345723821 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.39171459 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.232266253 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.34540448 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.133875753 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.226582365 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.324976925 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.220473934 seconds)
done (took 240.457720895 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.446350083 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 3.45165952 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.452471188 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367179121 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.448543485 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.377426036 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.179880019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.570761922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.179074893 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.519613471 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302888062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.261254221 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 3.50043272 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341588746 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455328015 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.366207418 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.162148114 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.355641075 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.57761619 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.49820284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.122447458 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.317325106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.240726576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.47464295 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.094846459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.108567975 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400750544 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.221100738 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.37965637 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.099911682 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.135739823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.358843638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.39916359 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 3.229984917 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.499924824 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.10707588 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.399763375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.162889999 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.351745564 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443523611 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.288648751 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.884458319 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.112674627 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.13960266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.219552921 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.385439143 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.169623411 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.33909205 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.097159257 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.116622634 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.372432813 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.148556735 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.231639303 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.398145139 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323650063 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 3.241516912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.496552106 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.527416461 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.493653911 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.41412402 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.352936831 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.516325903 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.478574344 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.219566863 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.125352482 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.404287651 seconds)
  done (took 124.957887201 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.497212798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447945857 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.533930641 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.414628466 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.638676363 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.574357706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.489542348 seconds)
  done (took 13.690740315 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.166936142 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.158921143 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38628984 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356381552 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.154142468 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.274470757 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.235027133 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.131237527 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.385495156 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.190478456 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.481586475 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391813832 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.073905677 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.107871686 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.245208636 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.385309116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.13796093 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.214791493 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.209119044 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.405785606 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.116944634 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.112895467 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.319560231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.124771271 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.156860456 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.187465273 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.136982811 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.125304903 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.153660817 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.128598882 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.160726712 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.254701145 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.141807261 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.088904211 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.137124965 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.462248816 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.146281395 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.16568639 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.299286019 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.095223232 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.142771453 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.156277925 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.287641336 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.155598161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.133393796 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.329739225 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.133771038 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.157714649 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.141259941 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.139786747 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.354664592 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.145716617 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.133358497 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.074860504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366930108 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.101819152 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.220044236 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.148239088 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.136552883 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.212220287 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144299366 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406861262 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362493829 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.129884585 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395221517 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.472704579 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.147950527 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.133949406 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.125359478 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.39247322 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.154780929 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369414527 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.15070823 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.203572956 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.156272148 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.271852262 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.349710992 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.955229389 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.934981043 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.055935323 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.475266624 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.127248365 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.458611249 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.082288449 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.064016404 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144876019 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.151404023 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.808954662 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.061306903 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.152118248 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456645593 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.145043621 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.200554052 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.192409443 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.129799005 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.22418259 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.318402069 seconds)
  done (took 143.015154235 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.273884867 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.340194679 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.483140584 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.094640373 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.172332662 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.393207863 seconds)
  done (took 14.853146962 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.572436903 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.957214217 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.183407533 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.173765803 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.209331755 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.106390139 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.097638927 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.313845598 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.34239596 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.196522879 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.180959185 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.172066691 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.108041626 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.282347802 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.099048391 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.152437236 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.10122463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.170027576 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.15755285 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.206834392 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.31633056 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.211282717 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.215006061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.825635413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.169227063 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.16240316 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.856797881 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.156178742 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.153018287 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.477102216 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.306301827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.115660403 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.825629755 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.242521105 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86774397 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.836661359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.288746307 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.111258229 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.174877107 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.100803279 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.111210021 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.213049844 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.180864113 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.108667785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.490306554 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.747359197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.154017425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.418558857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.10772561 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.11143775 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.10455107 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.179505106 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.113606857 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.109773194 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.493508253 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.677610401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.072541096 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.108271334 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.202509991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.835120131 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.215767398 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.11736055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.524319437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.042785078 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.097211445 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.122015447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.837691074 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.283634283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.231280538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.160901121 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.1017965 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.164388027 seconds)
  done (took 112.766959021 seconds)
done (took 410.374912161 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.363205748 seconds)
  done (took 7.448773175 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.188999242 seconds)
  done (took 7.386696813 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.089261849 seconds)
  done (took 7.199991286 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.096422429 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.164007426 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.116179751 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.130118378 seconds)
  done (took 25.648965574 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.746492255 seconds)
  done (took 7.839092216 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.10038347 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.112800482 seconds)
  done (took 13.313524927 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.139423278 seconds)
  done (took 7.258517262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.305679624 seconds)
  done (took 7.427982601 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.11042086 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.125205701 seconds)
  done (took 13.376545841 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.09309388 seconds)
  done (took 7.191909198 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.306301543 seconds)
  done (took 7.45255557 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.089038828 seconds)
  done (took 7.308898772 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.151746698 seconds)
  done (took 7.258694313 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.099562319 seconds)
  done (took 7.193063701 seconds)
done (took 134.402886191 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.085031772 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.091009621 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.093962238 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.108231394 seconds)
  done (took 25.474500971 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.432838208 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.428733119 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.420339344 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.479653996 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.370927978 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.364829617 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.430854701 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.441374337 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.370957042 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.485061876 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431545753 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.578997727 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.48018851 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.409104813 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.412931694 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.477422666 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.49318001 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.426475929 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.371275668 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.408752713 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.489501215 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.491970541 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.856334205 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.845038416 seconds)
  done (took 36.495047515 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.307604237 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.54870098 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.267102881 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42540715 seconds)
  done (took 6.641795208 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.143043548 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.491314907 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.460158036 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.514986379 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.461094232 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.280713684 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.455731218 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.318131015 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.250103774 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.240467314 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.759251818 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.323038414 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.294076359 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.519781017 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.286395891 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.102915981 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.094777381 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.278077547 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.47053937 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.306284279 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380796397 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.457730291 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.467423863 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.475064436 seconds)
  done (took 33.933977584 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.869236103 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.029361704 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.459847455 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.038935342 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.804837751 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89707393 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.388986142 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.630870062 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.376635378 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.343488276 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.921973974 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.834167121 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.246877485 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.992700815 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.889159146 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.291541734 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.273350227 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.952624444 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.524053348 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.403827715 seconds)
  done (took 38.266860115 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.086553885 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.35590178 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.342263073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.2650258 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.097686801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.095260658 seconds)
  done (took 26.339197988 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.420850885 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.246737897 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.394437175 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.36601837 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.26355306 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.248694522 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.661139887 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.334921727 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.863425537 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.794596453 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.58536713 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.531545026 seconds)
  done (took 21.80612358 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.095624649 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.142047761 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.095834844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.281179864 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.979852652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.981511859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.424811465 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.101325551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.229021996 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.314575894 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.960874492 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.272669475 seconds)
  done (took 39.994883372 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.293315854 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.278139948 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.399016077 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.221468237 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.457245112 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.141192204 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.467359286 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.545179165 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.692270634 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.892020952 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.649222564 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.11212276 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.647243919 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.085586797 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.838744094 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.405171763 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928197954 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.150389054 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.411829359 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.150122363 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064484271 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.23821879 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099249585 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.540783053 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370814427 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096648463 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.323476101 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.338483279 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.088336249 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.342175408 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.104614675 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.634978881 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.279021384 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.402974235 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.521862148 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.29684773 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.112314997 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.889044861 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.654616044 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.395772346 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.236995196 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.260789296 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.353929685 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.106675712 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353921996 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.88010559 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.279205067 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.647590907 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.098178825 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.488836285 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.862175273 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.990630011 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.552558066 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.063263621 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.249265032 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.395297902 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.263941179 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.167688979 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.405671783 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.427245292 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.12225848 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.289564443 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.297109677 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.067967688 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.484045569 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.319449875 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.23041592 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.292636606 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.408620168 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.398433142 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.438257136 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.503741762 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.803600861 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.225278366 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.637594708 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.011651977 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.457813331 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.111917909 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.817886656 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.649073484 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.074617319 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.215278122 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.854926291 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.0819287 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.095746772 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.273187189 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.972421202 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.069943099 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.121579845 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.430151732 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.357025717 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.226971289 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.244517902 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.283111062 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.83275707 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.081481469 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.210075099 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.333042885 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.066065963 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.667325806 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.096488739 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.112124525 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.097401733 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.721195747 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.493170019 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.896368059 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.87323451 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.706356061 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.39801894 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.716623404 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.26005301 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.936919153 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.441058821 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.446798474 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090569693 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.853682875 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.097259306 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.494868276 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.325277425 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.098365278 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.069189453 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.480760733 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.278652416 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.088516466 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.366000018 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.092486448 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.248349486 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.091913973 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.693001583 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.070705302 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.347131445 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.565713403 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.203886532 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.245652893 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.06681973 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.250816427 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.559309557 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.161263437 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.431284871 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.415220736 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.299948567 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.557305372 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.083188914 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.927087573 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.456238723 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.325081021 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.446360907 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.763562739 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.263952691 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.116823748 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095243393 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314429413 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.114355213 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.680477823 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.095001263 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.883399366 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.081699414 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.401661904 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.103206433 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.259015529 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.09410372 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.301108938 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.52147504 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.261773121 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.282841042 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.368983867 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.288269754 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.10138515 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.082129918 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.371812203 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.332849629 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.549563629 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.337946384 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.534635648 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.553535831 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.57443266 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.311750527 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.440266488 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.964149553 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.342547858 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.345127145 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.128579492 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.184010643 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.6585508 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.438748664 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385383223 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.337517324 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.875374482 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.02042822 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.025174196 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.188765425 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.108276834 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.069840241 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.242052761 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.478737949 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.0906982 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.596403053 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.174522183 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.491618062 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.616793956 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.137999772 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.391688598 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.724809796 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.622745544 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.45682517 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.431264233 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.088348561 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.925863144 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.709493868 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.245074123 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.107408608 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.511652115 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.736412332 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.278818427 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.098545836 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453158828 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.033685054 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.948291638 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.615389482 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.658377093 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.142934109 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.26603354 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.668767751 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.099351287 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.931207464 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.383268026 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.425498343 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.109986942 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.541642239 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.335913122 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.428315998 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.091575352 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.105829079 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.382921009 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.403821333 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.37324635 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.54466765 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.321846462 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.795584825 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.201842876 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.718198376 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.269401636 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.131110106 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.616147757 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.223315966 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.926108565 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.32960057 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.997721604 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.520836 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.659383928 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.367933806 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.089942313 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.456972535 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.68114727 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.096432655 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.083737515 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.238532313 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.10558544 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.319627134 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.989473517 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150194621 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.656497976 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.786736025 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.333915776 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.264680441 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.470651347 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.498988082 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.840633816 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.072650426 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272552241 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.251660795 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.412178823 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.093397079 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.379104666 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.747662129 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.549683983 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.050439128 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.577500668 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.57640662 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.727613107 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.464252518 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.303927631 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.400225823 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 1.992341055 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692475835 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.107680999 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.251348305 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.065096114 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.692979589 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540819206 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.481269267 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.455086418 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.127726973 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.503392562 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.43165621 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.437508137 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.135731859 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.370741323 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.089599654 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.38032525 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.090500522 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.042143594 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.524493001 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.102049611 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.108885967 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.328156176 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.435051826 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.250078218 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.466753437 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.260010132 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.232392846 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.544191982 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.269986719 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.25219573 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.440606251 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.754146824 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.301251859 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.127856915 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.263929303 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.744110928 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.46177196 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.671791091 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.598263463 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.418594773 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.88027521 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.100297262 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.322751983 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.25882539 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.093843929 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.320521233 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.482524806 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.122792779 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.303416706 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.402835272 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.441705853 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.656693935 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.087197403 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.786045196 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.528438413 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.618709209 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.647406709 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.886287422 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.413850416 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.245464644 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.532186173 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.187732323 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.262803528 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.562185021 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.55993778 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.13887228 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955389672 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.890285715 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.306094163 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.639755959 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.482785313 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.699626124 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.267735604 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.333328155 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.301169534 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.24760763 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.079770748 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.930653031 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.90116749 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.378441275 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.264075493 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.278545322 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.291613042 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.448975603 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.588064493 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.416468879 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.900835654 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.459580513 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.287038746 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.06342719 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.101638294 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.814830146 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.451853149 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.121043473 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.382856253 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.448920841 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.121493062 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.131083411 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.200305385 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.403299894 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.948813073 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.836418902 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.345150954 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.490062582 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.661970991 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.125020821 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.883756786 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.30374236 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.449874226 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.488832776 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.8994457 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.526126223 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.392052784 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.262974684 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.074735255 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.28551247 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.094365776 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.292970159 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.938708212 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.395653506 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.231452377 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.042491616 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.70540708 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.093446516 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.170652142 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.807791948 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.378709886 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.302129638 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.092926705 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.941591594 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.474597151 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.252214158 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.089788218 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.860305889 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.074751037 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.327190018 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.102728168 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.272637665 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.965406522 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.25678272 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.871826708 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.548434188 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.141551767 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.373798123 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.091717499 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.699920344 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.247175137 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.552295876 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.059738753 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.344935611 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.630521022 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.268452412 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.100296716 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.431072363 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.239090189 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.408542156 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.362037292 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.474263742 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.49585303 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.372764447 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35726312 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.493608888 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.341903025 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343017471 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.064658445 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.102175833 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.221328758 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.500107698 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.468141156 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099584341 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.660044175 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360238978 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.288506923 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.347242356 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.279657759 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.765603749 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.311805224 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.308836851 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.338839298 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.143135931 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.422370255 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.096436666 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.383642801 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.095792594 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.159776578 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.325437808 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.348385453 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.482035269 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.407684463 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.716194773 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.268421856 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.51686265 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.92777252 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.661848693 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097058574 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.72991847 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.571052435 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.095435723 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.47649193 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.693299575 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.275089464 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.383123595 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.537836966 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.125621139 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.362332235 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.604936 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.117173859 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.783696127 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.474947362 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.099663692 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.473635687 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.136354771 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.261639247 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.881367125 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.599360454 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.098786255 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.721828392 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.519828052 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.672700527 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.384964988 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.110088181 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.273648449 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.701084252 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.08002128 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.112663821 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.175845377 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.653507792 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.100327544 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.669203081 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.272169262 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.334246955 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099094235 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.245231918 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.098930709 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.311163558 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.70594255 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346805159 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.388888298 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.267971 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.101689174 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.981215745 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.804212675 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.212409407 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.372753229 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.090262529 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.482032045 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.874767674 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.099899206 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.730680657 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.28333289 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.075719973 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494803038 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355026261 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.136242066 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.289350099 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107489475 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471682669 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.326780949 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.678415604 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.34426981 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.103471028 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.224805085 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.097110998 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.641622345 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.473117124 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928827875 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.093419678 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.414650143 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.09642683 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.736390461 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.76924158 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.259050662 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.30234988 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.010491296 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.811650154 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.888140634 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.368028477 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.10365566 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.314843051 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.602189517 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.07916059 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.730081547 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.104705599 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.294811595 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.418414934 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.06821679 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.281458298 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.12113076 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.087160997 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.595316114 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.100342671 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.455680267 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.070666477 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.652283589 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.108698715 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.278911301 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.334472757 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.458495937 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.09984703 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.085973419 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.27434205 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.096400485 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.095224537 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.454477479 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.250319827 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.346908962 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.471581132 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.37650297 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.536201388 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.015282355 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.725004565 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.248450358 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.422012434 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.932774849 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.659459034 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.296126037 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.711716204 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.718354222 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.244205817 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.645359168 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.349562916 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.824540389 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.245248612 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.57447424 seconds)
  done (took 1945.459209555 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.096094125 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.238366686 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.178549809 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.140121954 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.159906758 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.14287996 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.253345913 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.121908785 seconds)
  done (took 50.434793304 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.093133693 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.134167614 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.507148823 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.34975812 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.10028853 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.261685554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.35179372 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.801746013 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.12561724 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.088095551 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.264035789 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.269446242 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.117257391 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.140002508 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.964432506 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.248597483 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.098678076 seconds)
  done (took 93.058887879 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.144620835 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.127870312 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.121188104 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.852595198 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.112001304 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.516772044 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.112875043 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.105271164 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.55673311 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.77827114 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.170479638 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.241823239 seconds)
  done (took 80.973389543 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.139799544 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.134761046 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.142741116 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.135579666 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.128926026 seconds)
  done (took 6.788075828 seconds)
done (took 2406.888434136 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.372370191 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.581473348 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.646215577 seconds)
  done (took 4.320396327 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.161052704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.235697524 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.315144416 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.264288665 seconds)
  done (took 6.091768651 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.383893838 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.592217272 seconds)
  done (took 4.072640158 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.583636043 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.110503177 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.655250855 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.097067479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.116339495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.101463705 seconds)
  done (took 19.440150136 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.122946897 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.123471008 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.130031633 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.123179737 seconds)
  done (took 5.608984111 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.09256118 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.122431058 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.100824727 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.050451717 seconds)
  done (took 18.463861967 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.553947871 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.369228 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.868040908 seconds)
  done (took 5.895203835 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.910419066 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.245298997 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.892386448 seconds)
  done (took 6.146637798 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.039514913 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.326205207 seconds)
  done (took 5.466481211 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.272057264 seconds)
  done (took 2.382538949 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.59064077 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.585652082 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.766335407 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.825704995 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.007696072 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.394337481 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.522664824 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.359301979 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.632445841 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.678919168 seconds)
  done (took 17.462425482 seconds)
done (took 107.163271596 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.160037553 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.513604949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.264938773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.888149837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.276084076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.265995957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.128544863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.716317359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.80636196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.806043766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.402158726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.277786533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.158728448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.552630552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.16194155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.460288271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.513547894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.165008084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.146712955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.749316027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.149500843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.497814514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.147629285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.508759154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.532045554 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.259265577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.042679353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.477033683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.367118068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.06563245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.2668913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.957114347 seconds)
  done (took 153.783007872 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.095874591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.119638638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.116892312 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.094324527 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.057731641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.118274205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.105759178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.100776855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.132892661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.122189182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.122214894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.059701169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.120459921 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.103435655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.120232413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.109743453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.249627002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.114182637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.114592491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.125658731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.123371553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.824101276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.128390564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.837161537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.238481592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.134081066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.108736709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.128974623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.114830534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.111838724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.11826866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.099375166 seconds)
  done (took 188.389455611 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.092088025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.116347256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.125436708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.103946149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.113865109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.185395661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.098835478 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.098427232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.122946753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.115332231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.11957755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.122648766 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.122313685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.108621749 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.124014241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.110854749 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.120699464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.128418556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.123945846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.114898884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.124871893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.097496964 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.113177798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.113568677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.115117369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.121996412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.106375441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.118232403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.123647972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.119052031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.127497169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.10705274 seconds)
  done (took 196.877736237 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.396489891 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.141650959 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.042116749 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.857381599 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.002653212 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.13078077 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.853330646 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.408091259 seconds)
  done (took 13.954086599 seconds)
done (took 554.119081266 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.806732251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.043292716 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.279931271 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.389662818 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.701961618 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.432116569 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.377525384 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.554220509 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.841874354 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.542538162 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.587888914 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.334836405 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.9192195 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.371509253 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.279013222 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.580498816 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.527850865 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.833747924 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.30487146 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.947148521 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.323552977 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.970627949 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.58715591 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.894529535 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.581383403 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.00889444 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.257045968 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.539939636 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.378395244 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.289278898 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.159335594 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.522835454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.332170637 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.332377634 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621013784 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.609651344 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.491110744 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.579439278 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.284579586 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.779980656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.97614308 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.718868406 seconds)
  done (took 74.982805734 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.124181356 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.146842507 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.298353268 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.212414056 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.827946753 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.201365814 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.359021509 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360933249 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.211337658 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.343901281 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.388100009 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.864945479 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.376638531 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.800791402 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.365270576 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.389965996 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.212042652 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.782535726 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.377121364 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.349474821 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.167207789 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.295152947 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.170565772 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.337790874 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.173064841 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.182851471 seconds)
  done (took 36.449748639 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.169388525 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.318211097 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.371440416 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.227799184 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.374552728 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.17073481 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.504388307 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.313402092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.690929123 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.288524022 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.236171335 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.288519208 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 3.028849686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.387952864 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.407436491 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.304051424 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.334016181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.289072001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.328612546 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 6.105369897 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.239169417 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.220037442 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.431601631 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 6.129391614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.766867639 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 6.122822504 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.218267147 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.75590144 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.342323074 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.299899684 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.260900601 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.409738798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.571606139 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.398225851 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.281902534 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.153046598 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.153381107 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.224660918 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.798371498 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.293012464 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.425417337 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.611053491 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.504078704 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.685939213 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.462757208 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.356522142 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.65664113 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.224490326 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.261487845 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 6.093367953 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.421535472 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.815218721 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367983997 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.321470169 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.268873987 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.575070971 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.332407923 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.539365775 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.25862436 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.721068511 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.218689577 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.53712075 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.321626416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.472694032 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.429050504 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.34264069 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.316211526 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.710525167 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.491027413 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.348760539 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.73328964 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.207419855 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.171359039 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.214543847 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.328082248 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.673586191 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.072189012 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.488786079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.582160121 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.435259423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.409136266 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.765195012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.123369944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.465606115 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.324101857 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.154398978 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.21506058 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.448399815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.413646147 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.649382951 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.694514623 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.578641698 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.624166262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.301196626 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.825855381 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.638595747 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.146375218 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.160383353 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.375974253 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.698697674 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.226961255 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.32888062 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.727853737 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.512280936 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.366052544 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 6.105675602 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.416494972 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.483140731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.528109829 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.142351457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.373217326 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.271194455 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.44647084 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.468078825 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.1296296 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.684606237 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.231282794 seconds)
  done (took 252.776090343 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.086952233 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.117136666 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.097302001 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.108426191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.099492685 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.646965701 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.14622653 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.098086623 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.653290484 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.162114218 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.097633079 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.095964683 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.110542888 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.116581 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.288033049 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.327764668 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.772893657 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.112313919 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.095775261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.100147146 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.942452684 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.10517872 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.102725148 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.101210576 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.119224589 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.111016137 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.107277719 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.106750091 seconds)
  done (took 151.129411187 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.165098369 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.51857434 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.185247733 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.242610849 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.211919781 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.190207868 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.663558386 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.299413197 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.237147918 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.183120924 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.180376501 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.406616453 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.46882889 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.753382103 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.293350949 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.405595927 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.811521723 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308443744 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.177917066 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.174013358 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.314619453 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.51445305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.430712627 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.419705273 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.299210604 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.441021051 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.251371317 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.160922192 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.272913966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.652620278 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.183436897 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.524250079 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.310405647 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.160098776 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.658497544 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.508050872 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.732513388 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.808534297 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.348347735 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.137708825 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.124768823 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.40790262 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.453063669 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.220453522 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.1516347 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.826628391 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.186730237 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443302812 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.181028057 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.11822054 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.272616127 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.281630369 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.40768533 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.07591451 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.34706792 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.308555279 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.75347596 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.15645513 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.166122673 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.45414821 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.131556032 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.64252686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.653721031 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.237882086 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.182538823 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.043256218 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.247436966 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.680783819 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.791126321 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.209499304 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.511813179 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.361317612 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.130999259 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428162782 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.338782619 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.602899851 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.736676864 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.301693287 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.261607072 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.241026057 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.432883812 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.152704021 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.725862982 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.263590678 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.149979309 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.651386924 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.54577665 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.134148709 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.159202253 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.27264212 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.33234941 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.386165015 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.424726514 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.234491295 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077841283 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.42450191 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.445551561 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.17691848 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.295994317 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.157810077 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.551193239 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.357336109 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.146670338 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.482054581 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.5670724 seconds)
  done (took 155.732332185 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.896362529 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.223108964 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.380102528 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.7062846 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.51373687 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.590354662 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.373068648 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.227858162 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.408502701 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.36957292 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.378805173 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.254885421 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.120366969 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.908183431 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.207655022 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.33064768 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.227202357 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.713565036 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.462996596 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.212738364 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.6236312 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.880938846 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.474383002 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.622138981 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.553529904 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.628712908 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.803101817 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.264965461 seconds)
  done (took 48.478117153 seconds)
done (took 720.650819089 seconds)
SAVING RESULT...
DONE!
