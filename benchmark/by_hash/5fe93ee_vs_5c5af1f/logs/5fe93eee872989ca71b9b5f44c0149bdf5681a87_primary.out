cset: moving following pidspec: 649292
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.209885624 seconds)
loading group "string"... done (took 0.265860336 seconds)
loading group "linalg"... done (took 4.032434042 seconds)
loading group "parallel"... done (took 0.025798143 seconds)
loading group "find"... done (took 1.418942146 seconds)
loading group "tuple"... done (took 0.970133422 seconds)
loading group "dates"... done (took 0.248161071 seconds)
loading group "micro"... done (took 0.061569379 seconds)
loading group "io"... done (took 1.387436524 seconds)
loading group "frontend"... done (took 0.011979396 seconds)
loading group "scalar"... done (took 4.973541913 seconds)
loading group "sparse"... done (took 3.461219145 seconds)
loading group "alloc"... done (took 0.015266212 seconds)
loading group "broadcast"... done (took 0.375666017 seconds)
loading group "union"... done (took 3.763967469 seconds)
loading group "simd"... done (took 2.868284329 seconds)
loading group "random"... done (took 3.241353619 seconds)
loading group "inference"... done (took 2.057472936 seconds)
loading group "problem"... done (took 1.180389021 seconds)
loading group "array"... done (took 4.8669051 seconds)
loading group "misc"... done (took 0.905260852 seconds)
loading group "sort"... done (took 0.358347287 seconds)
loading group "collection"... done (took 6.386701198 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.387332029 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.187702531 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130671616 seconds)
  done (took 0.998475163 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.14718029 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.022181326 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022165278 seconds)
  done (took 0.8692483 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.02248094 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.085094433 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023529512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024206092 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024140366 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023532825 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023459147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023620818 seconds)
  done (took 0.906781077 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.032859739 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.021065112 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.022064541 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.021117288 seconds)
  done (took 0.774839878 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021534838 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.076703814 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.02085161 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020719598 seconds)
  done (took 0.815920894 seconds)
done (took 5.576361141 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407296063 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141485292 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034130584 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.159018286 seconds)
  done (took 1.449316136 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.023277743 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026438665 seconds)
  done (took 0.733734106 seconds)
done (took 2.861796484 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.59008211 seconds)
  done (took 4.264917379 seconds)
done (took 4.943695626 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163121524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.022344218 seconds)
  done (took 0.866877203 seconds)
done (took 1.563987438 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.724920793 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.824195105 seconds)
    (2/2) benchmarking "String"...
    done (took 0.896264351 seconds)
  done (took 2.418714834 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.990243427 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.722649624 seconds)
    (3/3) benchmarking "different"...
    done (took 0.74110934 seconds)
  done (took 3.137402286 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.694323095 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.172006518 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.971665776 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.684082806 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.69352303 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.194884673 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.335190234 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.032254695 seconds)
  done (took 22.769675523 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.970753367 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.917101021 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.971923838 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.968215003 seconds)
  done (took 8.555965421 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.99054984 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.954541286 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.954340563 seconds)
    (4/4) benchmarking "different"...
    done (took 0.777393313 seconds)
  done (took 4.368611356 seconds)
done (took 49.421141623 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.651373728 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.74789679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.718637711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277502809 seconds)
  done (took 16.078644419 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.909875711 seconds)
    (2/2) benchmarking "read"...
    done (took 1.040684652 seconds)
  done (took 2.646491717 seconds)
done (took 19.408846491 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.899021247 seconds)
  done (took 7.581724573 seconds)
done (took 8.265140999 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.807846541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.031796288 seconds)
  done (took 4.522568455 seconds)
done (took 5.221360844 seconds)
SAVING RESULT...
DONE!
