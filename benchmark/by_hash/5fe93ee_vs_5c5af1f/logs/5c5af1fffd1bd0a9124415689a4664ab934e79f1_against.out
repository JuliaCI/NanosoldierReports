cset: moving following pidspec: 650681
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234288515 seconds)
loading group "string"... done (took 0.26487798 seconds)
loading group "linalg"... done (took 4.052347089 seconds)
loading group "parallel"... done (took 0.025803592 seconds)
loading group "find"... done (took 1.424901121 seconds)
loading group "tuple"... done (took 0.963746747 seconds)
loading group "dates"... done (took 0.24578106 seconds)
loading group "micro"... done (took 0.061893188 seconds)
loading group "io"... done (took 1.398784649 seconds)
loading group "frontend"... done (took 0.011732473 seconds)
loading group "scalar"... done (took 4.962471971 seconds)
loading group "sparse"... done (took 3.470789617 seconds)
loading group "alloc"... done (took 0.015296951 seconds)
loading group "broadcast"... done (took 0.374448445 seconds)
loading group "union"... done (took 3.759626416 seconds)
loading group "simd"... done (took 2.948490204 seconds)
loading group "random"... done (took 3.177570474 seconds)
loading group "inference"... done (took 2.054267316 seconds)
loading group "problem"... done (took 1.185768141 seconds)
loading group "array"... done (took 4.892884532 seconds)
loading group "misc"... done (took 0.89423792 seconds)
loading group "sort"... done (took 0.356943618 seconds)
loading group "collection"... done (took 6.551564637 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.384177862 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.186890917 seconds)
    (2/2) benchmarking "String"...
    done (took 0.132227876 seconds)
  done (took 0.993326824 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.145927498 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021989859 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022686149 seconds)
  done (took 0.860531356 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.023023605 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.08442545 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.02372494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024685807 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024786617 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.024384799 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.024252192 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.024110205 seconds)
  done (took 0.901480975 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.032849585 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.021053851 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.022163163 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.021895423 seconds)
  done (took 0.766294065 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.0214136 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.07676247 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020523101 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020606705 seconds)
  done (took 0.806540842 seconds)
done (took 5.527892893 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.408660472 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144462611 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.035581833 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.166792083 seconds)
  done (took 1.453430198 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.023452159 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026630289 seconds)
  done (took 0.728401522 seconds)
done (took 2.852399268 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.582990348 seconds)
  done (took 4.249905982 seconds)
done (took 4.922305229 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164352525 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.02226003 seconds)
  done (took 0.859937588 seconds)
done (took 1.585688173 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.710227429 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.819242369 seconds)
    (2/2) benchmarking "String"...
    done (took 0.881795446 seconds)
  done (took 2.4115788 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.985231224 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.71544514 seconds)
    (3/3) benchmarking "different"...
    done (took 0.733465706 seconds)
  done (took 3.10986346 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.721381567 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.198841871 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.964605829 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.676595477 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.686510938 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.187758552 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.345811218 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.013738624 seconds)
  done (took 22.751277184 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.995827213 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.939731296 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.920389002 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.951319532 seconds)
  done (took 8.527817216 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.98392929 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.951474423 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.949247978 seconds)
    (4/4) benchmarking "different"...
    done (took 0.77088991 seconds)
  done (took 4.374626372 seconds)
done (took 49.349431827 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.67557274 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.822153719 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.705931371 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.37092417 seconds)
  done (took 16.249523632 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.905416982 seconds)
    (2/2) benchmarking "read"...
    done (took 1.033116647 seconds)
  done (took 2.622393058 seconds)
done (took 19.547933303 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.828988377 seconds)
  done (took 7.504496728 seconds)
done (took 8.180422216 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.785509324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.066914595 seconds)
  done (took 4.527691787 seconds)
done (took 5.250391019 seconds)
SAVING RESULT...
DONE!
