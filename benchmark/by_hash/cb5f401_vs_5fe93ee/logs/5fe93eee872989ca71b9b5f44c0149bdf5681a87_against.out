cset: moving following pidspec: 2590617
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.209687423 seconds)
loading group "string"... done (took 0.266503179 seconds)
loading group "linalg"... done (took 3.993483861 seconds)
loading group "parallel"... done (took 0.025752026 seconds)
loading group "find"... done (took 1.420121485 seconds)
loading group "tuple"... done (took 0.966731435 seconds)
loading group "dates"... done (took 0.247715273 seconds)
loading group "micro"... done (took 0.061964096 seconds)
loading group "io"... done (took 1.380756686 seconds)
loading group "frontend"... done (took 0.011811281 seconds)
loading group "scalar"... done (took 4.954192126 seconds)
loading group "sparse"... done (took 3.452997648 seconds)
loading group "alloc"... done (took 0.015160391 seconds)
loading group "broadcast"... done (took 0.375467638 seconds)
loading group "union"... done (took 3.759081201 seconds)
loading group "simd"... done (took 2.85980108 seconds)
loading group "random"... done (took 3.126696715 seconds)
loading group "inference"... done (took 2.044626361 seconds)
loading group "problem"... done (took 1.306630527 seconds)
loading group "array"... done (took 4.772092615 seconds)
loading group "misc"... done (took 0.898148727 seconds)
loading group "sort"... done (took 0.356085896 seconds)
loading group "collection"... done (took 6.374546397 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.387124663 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.188620507 seconds)
    (2/2) benchmarking "String"...
    done (took 0.134638203 seconds)
  done (took 1.031108101 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.147791891 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.023023511 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022782053 seconds)
  done (took 0.901240314 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.023636601 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.084861215 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023767192 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025173405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.02523025 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.024838526 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.024262917 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.02445923 seconds)
  done (took 0.939432456 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.033311534 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.021391803 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.022501586 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022044388 seconds)
  done (took 0.804292351 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021802017 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.077066516 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.021324964 seconds)
    (4/4) benchmarking "different"...
    done (took 0.021439702 seconds)
  done (took 0.845529187 seconds)
done (took 5.761409745 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.410129765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145741538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.03341892 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.164129825 seconds)
  done (took 1.490492809 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.023368411 seconds)
    (2/2) benchmarking "read"...
    done (took 0.02680755 seconds)
  done (took 0.761829098 seconds)
done (took 2.957556794 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.516822154 seconds)
  done (took 4.217826028 seconds)
done (took 4.923447176 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16636526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.022729395 seconds)
  done (took 0.89725435 seconds)
done (took 1.656831335 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.766616499 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.855498732 seconds)
    (2/2) benchmarking "String"...
    done (took 0.930608097 seconds)
  done (took 2.522312735 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.017938976 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.752985356 seconds)
    (3/3) benchmarking "different"...
    done (took 0.768616838 seconds)
  done (took 3.249670623 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.687106105 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.234950603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.992281848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.710639316 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.720619261 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.223914057 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.318343883 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.085330654 seconds)
  done (took 22.99711113 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.014923478 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.975534039 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.963563601 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 2.011678308 seconds)
  done (took 8.72140455 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.020598098 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.980990553 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.981274204 seconds)
    (4/4) benchmarking "different"...
    done (took 0.803716829 seconds)
  done (took 4.557332067 seconds)
done (took 50.278760072 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.710048139 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.787055662 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.742755588 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359627678 seconds)
  done (took 16.310568976 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.937130651 seconds)
    (2/2) benchmarking "read"...
    done (took 1.067287108 seconds)
  done (took 2.727231637 seconds)
done (took 19.748004998 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.904757143 seconds)
  done (took 7.615859705 seconds)
done (took 8.326568255 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.818959265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.096908617 seconds)
  done (took 4.625971734 seconds)
done (took 5.342579582 seconds)
SAVING RESULT...
DONE!
