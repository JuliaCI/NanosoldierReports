cset: moving following pidspec: 2588876
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.193915822 seconds)
loading group "string"... done (took 0.26458663 seconds)
loading group "linalg"... done (took 3.970818454 seconds)
loading group "parallel"... done (took 0.025928995 seconds)
loading group "find"... done (took 1.407963088 seconds)
loading group "tuple"... done (took 0.947717445 seconds)
loading group "dates"... done (took 0.247148238 seconds)
loading group "micro"... done (took 0.062655351 seconds)
loading group "io"... done (took 1.376747729 seconds)
loading group "frontend"... done (took 0.011800047 seconds)
loading group "scalar"... done (took 4.911799162 seconds)
loading group "sparse"... done (took 3.473767704 seconds)
loading group "alloc"... done (took 0.015019291 seconds)
loading group "broadcast"... done (took 0.371711784 seconds)
loading group "union"... done (took 3.693910939 seconds)
loading group "simd"... done (took 2.950613837 seconds)
loading group "random"... done (took 3.141650764 seconds)
loading group "inference"... done (took 2.03686791 seconds)
loading group "problem"... done (took 1.150306102 seconds)
loading group "array"... done (took 4.788471385 seconds)
loading group "misc"... done (took 0.861639809 seconds)
loading group "sort"... done (took 0.352426565 seconds)
loading group "collection"... done (took 6.41292386 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.393089642 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.191251146 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130576512 seconds)
  done (took 1.014426948 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.150869054 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.022115974 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022024595 seconds)
  done (took 0.884116629 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.022451996 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.086304038 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024396514 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025239522 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.025107644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.02442606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023604175 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023626609 seconds)
  done (took 0.924875133 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.034084968 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.02196219 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.022578915 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.021697881 seconds)
  done (took 0.790292584 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022453238 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.079631836 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020880392 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020998282 seconds)
  done (took 0.830941147 seconds)
done (took 5.673420067 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407256755 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142866787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034894096 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.161691612 seconds)
  done (took 1.466225935 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.024599994 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027696339 seconds)
  done (took 0.751695076 seconds)
done (took 2.908379796 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.515016828 seconds)
  done (took 4.202986738 seconds)
done (took 4.895582783 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167641699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.021605003 seconds)
  done (took 0.880991715 seconds)
done (took 1.626244674 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.807778224 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.834564072 seconds)
    (2/2) benchmarking "String"...
    done (took 0.902322579 seconds)
  done (took 2.449479843 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.001568568 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.732816121 seconds)
    (3/3) benchmarking "different"...
    done (took 0.750418495 seconds)
  done (took 3.177616807 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.696210627 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.263901794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.98252169 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.693484099 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.704767687 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.204805666 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.349041748 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.032013083 seconds)
  done (took 22.925972697 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.977011617 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.93921584 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.926399406 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.957178445 seconds)
  done (took 8.537948486 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.002835453 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.965138343 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.965625283 seconds)
    (4/4) benchmarking "different"...
    done (took 0.787224769 seconds)
  done (took 4.457601399 seconds)
done (took 49.814007565 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.630340305 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.779846589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.728600403 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.371697732 seconds)
  done (took 16.203945731 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.918283069 seconds)
    (2/2) benchmarking "read"...
    done (took 1.053314952 seconds)
  done (took 2.679121667 seconds)
done (took 19.577574 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.864213552 seconds)
  done (took 7.557201661 seconds)
done (took 8.25146134 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.829503649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.062474952 seconds)
  done (took 4.5847117 seconds)
done (took 5.325789069 seconds)
SAVING RESULT...
DONE!
