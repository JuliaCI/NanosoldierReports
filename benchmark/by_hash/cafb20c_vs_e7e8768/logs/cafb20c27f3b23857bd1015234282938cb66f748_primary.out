cset: moving following pidspec: 2944863
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.776107684 seconds)
loading group "string"... done (took 0.306469954 seconds)
loading group "linalg"... done (took 3.929208922 seconds)
loading group "parallel"... done (took 0.023592395 seconds)
loading group "find"... done (took 1.442187331 seconds)
loading group "tuple"... done (took 0.954091191 seconds)
loading group "dates"... done (took 0.257279511 seconds)
loading group "micro"... done (took 0.063898609 seconds)
loading group "io"... done (took 1.514964379 seconds)
loading group "frontend"... done (took 0.012506023 seconds)
loading group "scalar"... done (took 5.200019319 seconds)
loading group "sparse"... done (took 3.978486097 seconds)
loading group "alloc"... done (took 0.01644343 seconds)
loading group "broadcast"... done (took 0.400012993 seconds)
loading group "union"... done (took 3.765712253 seconds)
loading group "simd"... done (took 3.181384285 seconds)
loading group "random"... done (took 3.866122328 seconds)
loading group "inference"... done (took 2.616034399 seconds)
loading group "problem"... done (took 1.092134746 seconds)
loading group "array"... done (took 4.840102013 seconds)
loading group "misc"... done (took 1.020442123 seconds)
loading group "sort"... done (took 0.763339827 seconds)
loading group "collection"... done (took 6.5060829 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.403965608 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.024620518 seconds)
    (2/2) benchmarking "String"...
    done (took 0.024687386 seconds)
  done (took 0.74668571 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.021847771 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021657423 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021406453 seconds)
  done (took 0.736588938 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021556697 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158545511 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024008074 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024729282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024851009 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023918275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023991925 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023565854 seconds)
  done (took 0.975144517 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074707555 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0238327 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020835177 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020866004 seconds)
  done (took 0.812783941 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021568001 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.039074728 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020302921 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019842936 seconds)
  done (took 0.773482224 seconds)
done (took 5.22984228 seconds)
(2/4) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.261165362 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.004087743 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.168757363 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.022384866 seconds)
  done (took 1.906156387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308066675 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.052950228 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.040885548 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.028977922 seconds)
  done (took 1.110497753 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020906987 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028216365 seconds)
  done (took 0.729384737 seconds)
done (took 4.679439886 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.705734417 seconds)
  done (took 6.378742645 seconds)
done (took 7.053771484 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161432859 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020129443 seconds)
  done (took 0.860665871 seconds)
done (took 1.594620574 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.849417601 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.79646358 seconds)
    (2/2) benchmarking "String"...
    done (took 0.885873891 seconds)
  done (took 2.376932735 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.983417664 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.720317265 seconds)
    (3/3) benchmarking "different"...
    done (took 0.732724493 seconds)
  done (took 3.114745388 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.72770724 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.64136116 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.901365701 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.642387648 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.130369703 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.763410648 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.401042994 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.482611412 seconds)
  done (took 20.64233621 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.884648429 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.986141294 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.937666652 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.95812273 seconds)
  done (took 8.554917806 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.99106176 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.869223657 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.871454698 seconds)
    (4/4) benchmarking "different"...
    done (took 0.768170544 seconds)
  done (took 4.199381466 seconds)
done (took 47.204587787 seconds)
(2/4) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.684191484 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 5.527362107 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 5.600827572 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 5.737291564 seconds)
  done (took 17.566591605 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.679875215 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.817107476 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.685287118 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.020940809 seconds)
  done (took 15.882223719 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.871704136 seconds)
    (2/2) benchmarking "read"...
    done (took 0.957469607 seconds)
  done (took 2.514161046 seconds)
done (took 42.32614179 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.060599489 seconds)
  done (took 7.739810002 seconds)
done (took 8.41917702 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.664260588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.885867349 seconds)
  done (took 4.228181462 seconds)
done (took 4.908596973 seconds)
SAVING RESULT...
DONE!
