cset: moving following pidspec: 2771324
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.344915401 seconds)
loading group "shootout"... done (took 1.113618289 seconds)
loading group "string"... done (took 0.693199107 seconds)
loading group "linalg"... done (took 8.818664543 seconds)
loading group "parallel"... done (took 0.226326564 seconds)
loading group "find"... done (took 3.645823941 seconds)
loading group "tuple"... done (took 2.311371902 seconds)
loading group "union"... done (took 13.584850546 seconds)
loading group "dates"... done (took 1.726987311 seconds)
loading group "micro"... done (took 0.232907187 seconds)
loading group "simd"... done (took 6.56149919 seconds)
loading group "io"... done (took 1.417167545 seconds)
loading group "random"... done (took 12.390764853 seconds)
loading group "problem"... done (took 1.7686685 seconds)
loading group "array"... done (took 35.960487422 seconds)
loading group "misc"... done (took 2.123215694 seconds)
loading group "scalar"... done (took 65.427406719 seconds)
loading group "sort"... done (took 5.26563137 seconds)
loading group "sparse"... done (took 18.466884445 seconds)
loading group "collection"... done (took 25.259831591 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.445091206 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.114250128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.162260521 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118419726 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233133599 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.125732312 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131971321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112180915 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.090926449 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143307517 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136884257 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431774668 seconds)
done (took 5.631478361 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.306824379 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241790341 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162382036 seconds)
  done (took 1.51435767 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.091336531 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.05797908 seconds)
    (3/3) benchmarking "different"...
    done (took 0.064868551 seconds)
  done (took 1.320884601 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.063196923 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140334895 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064255972 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064786783 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064449392 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063989615 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064022006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063926641 seconds)
  done (took 1.63294207 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072037189 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065616143 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063541391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064990788 seconds)
  done (took 1.37730482 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.065660009 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.119712259 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.062547573 seconds)
    (4/4) benchmarking "different"...
    done (took 0.062190392 seconds)
  done (took 1.418881879 seconds)
done (took 8.760275101 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.174513462 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.789081543 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.857738537 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.145052593 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.317523271 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.347646458 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.120815608 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20356439 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.11604027 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075346261 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.160484698 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.080317687 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.485974372 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.48744557 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071200786 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.187428319 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.621198913 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084706192 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.114551576 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.231079645 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081794278 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.082976019 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087981073 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.07131697 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.162612189 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.176986698 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.629943692 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.098959624 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06861031 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.189761643 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.07025214 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074555741 seconds)
  done (took 10.612666113 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115230998 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110887963 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066733407 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.103428198 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093550293 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067952267 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073277652 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066725557 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086098362 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131129415 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090016281 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122632074 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066063596 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067665262 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099052769 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.161041606 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082536571 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0807639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066873039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080042111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.093495219 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079199375 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077097874 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07680289 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.112458223 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.135307925 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.086933328 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117886311 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066560741 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079321609 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.095121597 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.108239598 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067231998 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065142548 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.108723425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.084577657 seconds)
  done (took 4.428068937 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.032291215 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099384994 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.105579357 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096367946 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106989798 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.094324535 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.147231746 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.121793335 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099467013 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067246488 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.175021412 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.695163355 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.134106564 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.097935778 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.073801979 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.14667113 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.365392679 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.920238851 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07264736 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067881347 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.097636377 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069895787 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.140139646 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066658283 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.178460848 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.648734418 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.193845586 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06849351 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096461395 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.107998305 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064310592 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14073578 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093653344 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068538417 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.5818284 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065965595 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063225965 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.084894115 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.100155418 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065499083 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066500789 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077352698 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064592122 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.118317005 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079897745 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.553418528 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068896268 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.641965598 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.332448241 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072891882 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071375786 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.104816007 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064126716 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067324107 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.644548863 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.153292636 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066893513 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.29111569 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.070509947 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067809218 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068673025 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.100252341 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06698056 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068214457 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072553057 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.084770735 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.013571874 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.152528302 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.086861374 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.065828886 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066279159 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.064924358 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.430676353 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.077112814 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069662168 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.064562778 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070813482 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066666286 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066123503 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110815839 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.094428905 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.223300517 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069560291 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06621603 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065311415 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.533190526 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.990222734 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06944975 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069835111 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.506210465 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.064506702 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06553226 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067133057 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.08824827 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066166115 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062952016 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100837636 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068252354 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.094380916 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.593722242 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.067351845 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.063092229 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.506284291 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069960304 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098763582 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123647965 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067120951 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.106397455 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.067231099 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064429778 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072978318 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064044524 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068891768 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065242926 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065985855 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.064925143 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068258479 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067787809 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066818743 seconds)
  done (took 23.338353735 seconds)
done (took 40.523858079 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.401494073 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.078219055 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.078123057 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.077975705 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.077911235 seconds)
  done (took 1.877031388 seconds)
done (took 3.136317368 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.267260347 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.092432818 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.063260147 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.209662864 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.089166681 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.180900536 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.223245932 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.172554493 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.090669137 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.090391106 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.090957314 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.227716352 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.239503293 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.092280897 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.164237292 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.239364711 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.092617481 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.065048054 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.091495469 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.093956486 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.093113418 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064894164 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.091521744 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.093178639 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.164448358 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.091083225 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.064077406 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.166967993 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.093454025 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.169240802 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.093600833 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.093148746 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.093862911 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.166870041 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.094456543 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.166806192 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064761092 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.097479958 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.094721538 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.096343347 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.094784381 seconds)
  done (took 6.329221764 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.090066706 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080263391 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083348914 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060806923 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069967896 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079966916 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060934556 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079891035 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097385216 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080567541 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080291676 seconds)
  done (took 2.114637384 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.083907838 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08106394 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082428884 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06045265 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071643872 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080912307 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060618667 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080960274 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084502563 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081880205 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083914642 seconds)
  done (took 2.042852323 seconds)
done (took 11.66604985 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.196756399 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.094312913 seconds)
  done (took 1.513103202 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.565448838 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.196924207 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.101324911 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.225488232 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.098032151 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.124408019 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.296144119 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.123490841 seconds)
  done (took 7.017042557 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.124955698 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.098308187 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.068551681 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.066930523 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.067482603 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.067472146 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.070147982 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.070440105 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.068048144 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.069555883 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.07045407 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.06818933 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.068332935 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.069273233 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.067166041 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.067378233 seconds)
  done (took 2.51170073 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.072670737 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.069335363 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.070743909 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.060951751 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.071828822 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.071588461 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.072523361 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.073455102 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.075563204 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.074240087 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.071971544 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.073279013 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.07215123 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.071735754 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.074482525 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.064456599 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.075716813 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.07508603 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.077638258 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.076190061 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.075751712 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.073904542 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.076213466 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.072497042 seconds)
  done (took 2.957450982 seconds)
done (took 15.23163504 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.190199079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074662495 seconds)
  done (took 1.470574943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097254653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098546156 seconds)
  done (took 1.409115707 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075915986 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061093514 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080279229 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071967489 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064351762 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06269065 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080239131 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061443143 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060755311 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060736843 seconds)
  done (took 1.934320564 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064647446 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067851567 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066177351 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064468463 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066596203 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062122045 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064774639 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063363692 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070992541 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062987079 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06708787 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085550063 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066387473 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08724324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068496292 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068313545 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068116862 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065666989 seconds)
  done (took 2.48268564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063547873 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06203976 seconds)
  done (took 1.361102498 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066580458 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061482292 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063642196 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063492977 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061298418 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061463615 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061921161 seconds)
  done (took 1.663553454 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.449688801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.197414829 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.439838669 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070736888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08676668 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277613443 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066475815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070377622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070306356 seconds)
  done (took 2.961867339 seconds)
done (took 14.529138068 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086041383 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.187990729 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117589721 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.433566128 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08136098 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068600992 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.098228543 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221443958 seconds)
done (took 2.551139101 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.328950108 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.545825612 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.314848855 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.154888921 seconds)
  done (took 3.256886008 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.433278111 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.172193629 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077269935 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068136964 seconds)
  done (took 2.000804837 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068060524 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072407384 seconds)
  done (took 1.392102651 seconds)
done (took 8.232626133 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077402347 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062323916 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069816049 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065712922 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065489681 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065475975 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.066266337 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067065021 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063888525 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065902461 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065159826 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065451384 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065205196 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064953581 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.064183108 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064965853 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.066042493 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064468294 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064194705 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064664084 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.062979618 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065983699 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065226615 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065853231 seconds)
  done (took 2.827141522 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08358764 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06748158 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068181086 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067842775 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068136339 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068074539 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068502866 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067393506 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068853064 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067458206 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068766427 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06868629 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067835549 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069464738 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068268647 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069391898 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070281352 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068005706 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070365035 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070124526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069413166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068299134 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069478096 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070799468 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069957862 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0730918 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06926508 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068926823 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069516075 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069968755 seconds)
  done (took 3.345000684 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070365491 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061253975 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061492215 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07155741 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060834564 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.06115796 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061950414 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061496637 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062421901 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.063510782 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062631903 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.063058956 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062879019 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.064564305 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062786404 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062899776 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067443296 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083687265 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063524393 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061740269 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065497953 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.065520328 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062566022 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06227314 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.062759617 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062428589 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062069546 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06325551 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.063405554 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.064478642 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.064928049 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067686887 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069776935 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.062898987 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074169047 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068872882 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.061993793 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072544389 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.064665862 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062442278 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062222677 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062577381 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.062952909 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0627226 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073887696 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.062930276 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06482115 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.064501761 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065536928 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.063530686 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063131768 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.065516073 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068994984 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.065492114 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.063564238 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066263664 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064163311 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064079212 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.063007623 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062844421 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062327177 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066230739 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.063918787 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063196692 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084616247 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.0651966 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074260198 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063486112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063779631 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068379545 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.065399415 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085286852 seconds)
  done (took 5.99926091 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077837988 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075708966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084205248 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07535303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068227887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064267753 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069086459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066823065 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076012127 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069898579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065630273 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069227438 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075615399 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069829894 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067123844 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076809819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069979001 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06974387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065937403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070576388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067168253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07084642 seconds)
  done (took 2.871526874 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157913402 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07098343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114453571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075531848 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072795581 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077819439 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07104244 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071823853 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070599197 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071148021 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070282635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070243384 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073054792 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070419735 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0706671 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070420021 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07159466 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071834689 seconds)
  done (took 2.704883392 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083541064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071158839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101338841 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071351888 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070269517 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071355175 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07519113 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076462412 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071897927 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071488156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076238331 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072208594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071027847 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071569293 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071502832 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071524479 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071451946 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071464554 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076204071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075702432 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075813469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076610441 seconds)
  done (took 2.939447634 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087558991 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07178976 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088770112 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082946243 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063979975 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06378456 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073861049 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.072249433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071808536 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069486705 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071893102 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066963736 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074155339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070997282 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07305174 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071291183 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070498329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072041211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071211985 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066002373 seconds)
  done (took 2.765599786 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111838661 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067875962 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067734453 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073704702 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068409245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068382029 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074014691 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06813685 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068176686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094537611 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068825909 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067628731 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07389609 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072473358 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068691059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074880988 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074286868 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07475631 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069366401 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070910737 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095867245 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069622149 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07635802 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069704276 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069505174 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069622527 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070068874 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074143408 seconds)
  done (took 3.387742847 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070776016 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068491804 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068969716 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068634098 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068917506 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068728561 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06939379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068974953 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069979171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069346292 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068479699 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068125682 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068637408 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069060453 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069571301 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068444253 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068836527 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069311061 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068755861 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068717508 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069565052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070132125 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068846071 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083091356 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064257519 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066267891 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065343084 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064879644 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064393627 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064784229 seconds)
  done (took 3.374680222 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074726506 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071098704 seconds)
  done (took 1.473301339 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06381682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079345386 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060826711 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074154971 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069428149 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063874022 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069875276 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068956581 seconds)
  done (took 1.859086852 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.093799403 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.118838896 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062552798 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063832858 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094106032 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133655887 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.103769221 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.076085585 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077376309 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067033885 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062735971 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.102682834 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061689483 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076642526 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063072742 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071780383 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070977894 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080496798 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076575812 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061083634 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076549761 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063767916 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062889401 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064357072 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063752928 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070784614 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080315168 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076962332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072687706 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060168338 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081614582 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06095135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061688091 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071192667 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097185219 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.062527262 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100302953 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.06224352 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067199925 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061345293 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074699207 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083661146 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076751533 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.080840972 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063626551 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064300788 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061931724 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.064491846 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067381521 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07191168 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06134005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069419623 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061207599 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063405434 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073419052 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062255356 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067015394 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071621285 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0759782 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073205133 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0750224 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077923319 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071198763 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070861308 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062552232 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082039659 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.064249935 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076076773 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.077949031 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063590227 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076427757 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061734963 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06056722 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061980284 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097236892 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063974165 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.06328799 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.063083786 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062905496 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.064604924 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073748037 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068730916 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071754148 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067198772 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080723805 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073309605 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.063753548 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072261191 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.08350239 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068060064 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064093163 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.082663182 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068315811 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063474475 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083719133 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074978834 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.065752809 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065113116 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068388286 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080102755 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065837739 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062794562 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073699679 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.066589458 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.097470145 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.220378122 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070649517 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.061320019 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073461142 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066900166 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062305868 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059940333 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065971753 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061447105 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059158932 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070853382 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060911838 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076020906 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067768265 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.076124798 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076576696 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.071838977 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077145437 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.0606228 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059771452 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07887293 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070227077 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062447675 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079590125 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060631626 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072146251 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060696235 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06172177 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.0704089 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059421311 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062031219 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060651859 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066643786 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062661936 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06391943 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068863706 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071987679 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075426535 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063242149 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071803247 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061968002 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079441274 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074358151 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07002228 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067718236 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.064648307 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075607039 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069804176 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072581467 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062250137 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.063301958 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062435385 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074351506 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073247512 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064041885 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070536742 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067820497 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.063582523 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062034531 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062291826 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066594966 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065928412 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062393969 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069728821 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071874519 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076918029 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070295913 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072467215 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06053652 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061328648 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062597428 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061564491 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06678341 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071935363 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078063441 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074130584 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083857673 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062168284 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072314721 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063243312 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079310824 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075585534 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062570914 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066423923 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060332064 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063081713 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071620846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077028931 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.076576242 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077722084 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067255933 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067617192 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06268309 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078728733 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.063502946 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071928416 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.07291042 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06994544 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.062934108 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064649524 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073087247 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068212408 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064008282 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.079856708 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071874998 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062635276 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078116261 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.063257323 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.074889325 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062951302 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067760191 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069083085 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065716418 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074489237 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080358913 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.219841815 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061692422 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076958635 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062434993 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062279994 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069492069 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076694531 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06563225 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069238076 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071708377 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071125046 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065573909 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071019713 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061226365 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070233862 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062901679 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07231255 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060485146 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07886623 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059314584 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.076606959 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060857492 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.07177092 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060938105 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069914296 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060998357 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077833568 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061785977 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061214918 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072497567 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059420964 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070236451 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059678832 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065614558 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067494341 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.071044183 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063653756 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072118638 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062739084 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071453688 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066323102 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06980836 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.071217917 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066179136 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06083243 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069375088 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073242963 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07092894 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062660931 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062923773 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061976895 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072097968 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063335171 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063127269 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070873875 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067248295 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068454027 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064062188 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064036327 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063395127 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071334486 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072277817 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08109398 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071649336 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070419156 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071907254 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06126213 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078942192 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.062201783 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07026659 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061966772 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070694915 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074891773 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.063662569 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082811461 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065395398 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071584564 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074955985 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071159757 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065786023 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081112723 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064920813 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070184033 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070251764 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066690184 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068839604 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063443594 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070794081 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072229353 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073554393 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063287608 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070511226 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072541316 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063904156 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071543858 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065156936 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072726858 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065167513 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062099953 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068517118 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076619304 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068965518 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069542052 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063775726 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06251674 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063491555 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072735341 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0692225 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073524057 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080549041 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062472696 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.064746262 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062722088 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067153978 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083675873 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07512147 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072816539 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.228168265 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060701478 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062445516 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062894068 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060910052 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063837741 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059816895 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060168712 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072471399 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062097164 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065795957 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061431696 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061576017 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071337325 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.067782404 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061190918 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068217192 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060360053 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066230805 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060484274 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062593696 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06647479 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060674762 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065607306 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.072661319 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.078546341 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068381142 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071688738 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062087402 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069535036 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07700343 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06873604 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062370128 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071612947 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060827583 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080508136 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071529715 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07056064 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071705277 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062749281 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07853628 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066155685 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071938865 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077880554 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063039009 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068460299 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060820874 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078601627 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066916289 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061204107 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070292694 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06974926 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068574783 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074398251 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062767333 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070486977 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066196485 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065802931 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.064404561 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.064248293 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071636101 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079089761 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.064154969 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067787076 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070155362 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071236988 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066723849 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074855683 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070524178 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06313809 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06363574 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066068072 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062192502 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075557088 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062967863 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066714898 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066634168 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062521512 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070039211 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080175552 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072921801 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072292657 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061366394 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061059819 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.080780375 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066167099 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065246604 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070380907 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072843104 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07475445 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072389048 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079205953 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062082957 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067800492 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074408966 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062429859 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.062338873 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067197795 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065319348 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073597178 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074598273 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071835935 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066212087 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070778798 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.078112313 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.065281651 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069020585 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.071024467 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.065012031 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075644403 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072574186 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07318051 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065747078 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063208627 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067476961 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073413952 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072377864 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.230349777 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062316103 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067496145 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073280977 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067953035 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063363574 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059492485 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061920841 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0706314 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065990133 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060204479 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065942456 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064870914 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068206544 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070677328 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066187935 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060121983 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077970844 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069274827 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070392211 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062377314 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062121338 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060184276 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060399327 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072674868 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060636482 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062152646 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066020151 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063006237 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07900533 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06982283 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077770807 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061619102 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065668564 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060529896 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070441869 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066160054 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059923335 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07102545 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059533153 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076964308 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073262454 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067546279 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060601656 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06635357 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070428678 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077686355 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072338419 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070881152 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064965293 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.0720568 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063635573 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072982525 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061663592 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060966521 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076583006 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071628935 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07399064 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061819424 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.07417471 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.064623305 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071389824 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071480312 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064653776 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064191345 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066205732 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073950646 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068277798 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073021642 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067805194 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081585523 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063929852 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075080724 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072533408 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.074842034 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075647431 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073051077 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069435982 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061277419 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067906818 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068454062 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06082413 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.332764578 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064025877 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08245938 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061512301 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061218742 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074524838 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067243903 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059731522 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067385316 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06481916 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070316471 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060883665 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070874367 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066758611 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.0619245 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066096871 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066221582 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05989777 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060651169 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060942968 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071430924 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065721242 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061538457 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081684391 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.064045519 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070951727 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073579547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069038829 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063658557 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060538039 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063020904 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075867964 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.234156768 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063165611 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067845976 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059957177 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068228067 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057469799 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067659182 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066923811 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06741308 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057734819 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058468296 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073667432 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074158677 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063420686 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07505575 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067718608 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059531834 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080300948 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067907148 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059684315 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069492112 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060283365 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057620953 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057439673 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059721676 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070117059 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057859774 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060392643 seconds)
  done (took 43.407221238 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102034715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059490292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058141797 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058001229 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064973687 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059430843 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058379446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059490406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059464271 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060545039 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058241506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058226886 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063790342 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073491139 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06625729 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062054263 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058278624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059513129 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058354521 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059525666 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06468209 seconds)
  done (took 2.674000143 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064683502 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062136818 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061420153 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061720916 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060816378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05838064 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062369464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058426772 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062308775 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058797984 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062325082 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058623136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.058945209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.058891387 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.05893331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059971261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06246438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061681158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.058498519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062102337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05990471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06214281 seconds)
  done (took 2.671026356 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062901902 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058991144 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067345355 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057559766 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057370751 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060660238 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057611592 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063081261 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063014818 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06302736 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067782581 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058782679 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060700648 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064369389 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057824179 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058992927 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102879917 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059389666 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059252417 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057930851 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.060778681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.0678032 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05801475 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058143778 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063348405 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061574594 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058494763 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06118358 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059228706 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063453119 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059645476 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058225896 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068255511 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067472933 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063494292 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063374872 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060207102 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059425178 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058411015 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058461546 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067571959 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059975734 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058657508 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059908518 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06819775 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05868349 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058251719 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068213022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058256861 seconds)
  done (took 4.383262426 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073702424 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.118644525 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066048035 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103795091 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07268033 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065702608 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06907175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105222377 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061314356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061511778 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074418068 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073717775 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063445883 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066925895 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067763459 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062455013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063377912 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062264547 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066522228 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063428516 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065553358 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070067033 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074179338 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073154967 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064067141 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062221457 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063274577 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065597774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072974667 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068346052 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065955988 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064876096 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073343592 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067826705 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063097306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.063834688 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074043514 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065571384 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06538223 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061981308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063023614 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064799241 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068155117 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076157288 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063656701 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069400795 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066026208 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061567178 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073682078 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063352533 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067250612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076875113 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064680891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064370336 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067569425 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074863084 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063417307 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062279669 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063796441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07521961 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062141445 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064408113 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077418086 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063619344 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06668881 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074840247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068508176 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065794009 seconds)
  done (took 6.172865392 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071326995 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094994092 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075369389 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075486447 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070543498 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070723381 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073822142 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071092376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070278641 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073276627 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070453111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134399154 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067679627 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074271626 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072457441 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072041516 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07277046 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071293455 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070729737 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070528106 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07057449 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075184194 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07049142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075265578 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077117951 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069060784 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071977073 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07161942 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075640528 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070537092 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075405929 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072161956 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070984433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075301382 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074961148 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07017612 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060923022 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070519746 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071345774 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070758723 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067044753 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075694068 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070493618 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06714016 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073770902 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071675532 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075678663 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075443378 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072311736 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073522107 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070651128 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075742825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073379225 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0712676 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075956766 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078857721 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075698872 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075948381 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070736147 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075727572 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075892026 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078885025 seconds)
  done (took 6.020821523 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076472287 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064507868 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077602627 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058533675 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058649033 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068509865 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060971968 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061487112 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068325261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066121506 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066538698 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068326327 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070174047 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067159629 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068177603 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06999434 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068252438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068165802 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067443941 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072016289 seconds)
  done (took 2.74653752 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.065577351 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066169218 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062791665 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076958988 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.060220771 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067624178 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.059580352 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059308972 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059215013 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05914186 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063582941 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063493822 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058985323 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066925454 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062451917 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066382119 seconds)
  done (took 2.412864099 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064219125 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067769562 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.096056962 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062274518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06167587 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059212426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061297124 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060886315 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063192986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076923727 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062393917 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.063951973 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061428923 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060453156 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061554374 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065097957 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063860111 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063510645 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062252596 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.096069384 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07167649 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062822619 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064325311 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062445584 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063620963 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07103461 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063993772 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063773807 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0618383 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063910288 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063612334 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072911674 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064930664 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063640674 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061255812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061524169 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060665791 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06260137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062489154 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061551821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061406106 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064741081 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063691916 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062844539 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063505806 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064138702 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062990022 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073069616 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063030939 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064440944 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062411195 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063648122 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06309431 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074065667 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065233382 seconds)
  done (took 4.946768643 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079766906 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064802241 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058736969 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058589579 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06422985 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064822894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065010221 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065471552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065477452 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059063883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065261784 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064576326 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065181966 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064770497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065476327 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065047538 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059564116 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065274095 seconds)
  done (took 2.579541743 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068669347 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064074965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.064439737 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060389542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.060290672 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064894625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05925992 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060384369 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061037696 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061125651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061036966 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064001212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060731411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060827075 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064862361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061018588 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060757362 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059650191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060976272 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059502424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065686587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060251475 seconds)
  done (took 2.74733083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.117535459 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08287328 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.158491987 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079222352 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090069119 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071400924 seconds)
  done (took 1.984687587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095308783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09707019 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06462272 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064381644 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068600015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067394904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067727427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067544149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070412672 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073004971 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067395583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070775297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070439943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072638743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069315592 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069190208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067509727 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068069024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065621475 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076105556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068728615 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072200044 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068897173 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068615687 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068643117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073346338 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071410599 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073995463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068014897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07168578 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069991763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068034731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071494069 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074050717 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06512392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071149562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06800131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076059115 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069899827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073591988 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065408911 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070448619 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072199096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071829974 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072724075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068836927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071848424 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068778138 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068986569 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080995234 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070567504 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073470977 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07051134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072498146 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072026713 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080739378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075107103 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073899674 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070490865 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07484483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073812242 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070540675 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073791157 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074991043 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070582778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074113859 seconds)
  done (took 6.138785722 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105541499 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065094476 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06706371 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072545048 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071871564 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067431372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067747268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067815908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067535825 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065191804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103217539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067937488 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072353953 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072415963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067814787 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067594159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067546596 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072955514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065510996 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080163994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068286113 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072869122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072765079 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072847641 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073927629 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06978553 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0680569 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068066499 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068030631 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068035414 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071215414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068442154 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073083583 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06594681 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07410329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069921235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069461334 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071899121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068888132 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071479376 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074944154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07775828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069588557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069160095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075010071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068770963 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068768329 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065851492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068640334 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065943032 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074989943 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074851551 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075009858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073612718 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068926048 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069184513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069998236 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069919592 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069949076 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071542434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0749333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069316086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106467765 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071222967 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070092218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074759103 seconds)
  done (took 6.173409664 seconds)
done (took 129.859654818 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.261155269 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.219041974 seconds)
  done (took 1.860634193 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.104841217 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.104241314 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.128417675 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.072469923 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.131022497 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.223745024 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.174087784 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.076524794 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.072394278 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.074051487 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.071274814 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.073416202 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.073612049 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.071119687 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.134467771 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.074440992 seconds)
  done (took 3.083179028 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.122720638 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.215538938 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.108571775 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070067661 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.154941155 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078496941 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.074290147 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078159398 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078149926 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.071265808 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119919688 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.085603031 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.077250289 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.07884277 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.073044636 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075723879 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076329245 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078792905 seconds)
  done (took 3.150649666 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.137839173 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.081850367 seconds)
  done (took 1.655383456 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162339983 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.109364567 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149277151 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.358400704 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.143529924 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145641638 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149789666 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144181603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120348117 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141820999 seconds)
  done (took 3.051926077 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109075268 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105760479 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.333381451 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103645305 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083132822 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077446566 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075012388 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080601514 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075712642 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078179915 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123598215 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075239796 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071559271 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125359819 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100542203 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107380207 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07248051 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079450469 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080719298 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071009906 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076192494 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081695815 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.18322602 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.0806802 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104433169 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.076902046 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078998582 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075848369 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075807172 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08003603 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080235985 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.104342123 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080819879 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086516868 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.078743579 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.101153334 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073708765 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103611469 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076298091 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074519755 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077271065 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080515049 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0737525 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.080072213 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076853161 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079277528 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082313584 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072494041 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07714833 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076556985 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074567764 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078195702 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078346296 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.079876999 seconds)
  done (took 6.340923853 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.125459062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.116590812 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071445435 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1211908 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115033206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072048336 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.129204832 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109301442 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.128007554 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071297568 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071411246 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070785514 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079311265 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082940609 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.1247792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.118477358 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073887853 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072351671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119559462 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.117344543 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070307106 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130258558 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121188315 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.116746072 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070156244 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071189398 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069525521 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073518345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081897765 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078228096 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070009902 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081247896 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082084551 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0776558 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069526161 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069820556 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068759188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078354491 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080366187 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080276796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077070646 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069062437 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069776363 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070485177 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071157703 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069149063 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080539335 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079309764 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080194636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070802375 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070574278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070548979 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071502103 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078355993 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076870205 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079218066 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08435883 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07706705 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070951404 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072504262 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082138127 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079606765 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080695156 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071591448 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080166974 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07022682 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082445374 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083775173 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070008059 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070303242 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070037967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070261687 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071833054 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078758199 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078852109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072790165 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073009302 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071647163 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081577358 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07894404 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070818477 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081720371 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072063892 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071561203 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071662569 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074205948 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083709741 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081953061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073538416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074312946 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072159013 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072112636 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071521014 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083247221 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235428934 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081644284 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079636075 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069981911 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079814756 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078322755 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070118949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076029862 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069090053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071058567 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072362412 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077646549 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075608011 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077198865 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068881511 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068798271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077393811 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081091541 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069240536 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075171022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077276926 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076356788 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068980151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07947555 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071576169 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080242867 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069834604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078774988 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069208032 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075619401 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068987558 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067585934 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068446632 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078731172 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069742401 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067920539 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068774988 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068210154 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076282063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079276418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069140424 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076646246 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077588811 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070972647 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079263467 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069769843 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079715393 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072115641 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070507019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070221166 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084179898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071374588 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072986842 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072887555 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080073899 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070544531 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079885147 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078475394 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069811595 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081436852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079941391 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076385762 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079211952 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07007133 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069322023 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070027478 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071254257 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080428687 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082589621 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072897152 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0722182 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078613754 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082125792 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070806797 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078294736 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078858034 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079176136 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071534989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071366553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082088043 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082744224 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079395272 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082538911 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081127154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073155684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080630152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08345817 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071986197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087072605 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072935121 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084599652 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083873711 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079090588 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08325759 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.239954659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078743897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078540561 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080638969 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069003228 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069698721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076132435 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068848164 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06921767 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07601435 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07088554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071537886 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082894276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070336147 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079804214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069226589 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076941396 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069132658 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070491258 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081044694 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069410188 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070535489 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077512277 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069898532 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075985781 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078871107 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07651231 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071989692 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069445798 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078390329 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078312885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069446674 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069329733 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069576339 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078487067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078010653 seconds)
  done (took 19.282019367 seconds)
done (took 39.8572926 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.201666246 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.120029628 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.210335325 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.13960905 seconds)
  done (took 2.132941838 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.103745548 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.066392343 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.109445086 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.119607481 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.065899553 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.105141254 seconds)
  done (took 2.050895518 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.260721888 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.186222538 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.190204224 seconds)
  done (took 2.123414265 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.179917859 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.324125546 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.588439636 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.179244195 seconds)
  done (took 2.768496775 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.146410708 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134039994 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.078488243 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148019606 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.085890179 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.062530178 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148752905 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.069298171 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.100705746 seconds)
  done (took 2.514347302 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143859342 seconds)
done (took 13.23221213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.316313476 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.110331014 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.08148982 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.07385568 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.195591694 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.16241647 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.255499434 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.077594961 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.25501709 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.347570747 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.213069692 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.095479795 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.125898578 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.09187679 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.29137297 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.078963571 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.076269867 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.071978206 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.195365604 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.1771443 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.211381825 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.075889242 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.142022231 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.077770801 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.154813808 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.127906189 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.23341452 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.338267856 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.304442748 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.077865242 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.177870743 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.095255395 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.168370932 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.195336442 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.162851648 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.101320487 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.067221346 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.273451257 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.153473974 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.336498432 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.201811148 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.073844362 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.191743235 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.071649643 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.130730032 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.113542993 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.080206266 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.073657789 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.091200964 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.073261905 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.088053617 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.073842333 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.20464431 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.070464979 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.141765458 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.167421834 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.21563347 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.21131463 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.073072983 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086416464 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.076987092 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.217803916 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.093314557 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.074335301 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.081408199 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.069638595 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.16717329 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.088597743 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.069718712 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.078951632 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.076824038 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.158908169 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.125182946 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.115243848 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.081630841 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.171548249 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.147729675 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.098228689 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.104775188 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.079359708 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.069865806 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.221645792 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.073892426 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.08786608 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.074541647 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.107692496 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.070539046 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.090788677 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.207465976 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.203457272 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.131771207 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.071032754 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.28454618 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.071823556 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.102209677 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.135225666 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.07289218 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.220932538 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.070179472 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.070658307 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.080116258 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.078065754 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.071527669 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.208930163 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.157419378 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.077495862 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.076441843 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.070355881 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.077708694 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.0718652 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.070137107 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.069581347 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.152068672 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.091855939 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.07067899 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.160464194 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.183224286 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081213977 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.089832946 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.136487604 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.073838183 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.079401324 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.079379283 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.185131509 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.081872476 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.193439602 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.073660611 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.095806861 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.177472857 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.153163541 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.165177789 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.074448541 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.219786488 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.083688467 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.07339963 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.080735546 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.103642542 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.083040565 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.089359343 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.081451703 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.220066477 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084121771 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.078484464 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.176635266 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.073369174 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.170267749 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.152224598 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.190707357 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.078150961 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083552253 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.217866818 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.098882364 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.100512859 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.096535373 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.073878988 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.070028664 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.069322868 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.084143096 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.069181101 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.070452429 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.084249709 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.075741476 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.069117535 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.562124104 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.079764534 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.072520075 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.242087268 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.0824125 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.142581099 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.092533266 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.071103394 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.161844628 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.071658245 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.092227721 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.217722462 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.071146401 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.150149643 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.071230605 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.070244001 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.076904093 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.07202472 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.07866143 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.082395931 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.070461593 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.083939803 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.076637121 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.069374828 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.157296046 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.071191208 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.237402927 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.155935354 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.160795295 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.069635633 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.087410526 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.069259953 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.188712289 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.069393024 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.120587237 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.167218202 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.084944553 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.089372225 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.069770833 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.144471326 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.082582983 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.068298349 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.152386179 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.182516043 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.139828204 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.076021453 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.215164031 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.077187061 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.067313379 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.074640999 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.075796822 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.068507436 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.146415227 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.071578892 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.067455886 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.066746192 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.068913152 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.066667034 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.093534238 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.068116469 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.075282898 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.067730044 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.07004493 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.070453657 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.067356793 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.074259479 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.146106221 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.181356079 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.072948341 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.086762164 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079417958 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077816747 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.192925711 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.074075385 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.191890051 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.06794374 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.076083824 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.089148516 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.068105608 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.071879166 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.065376115 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.083627443 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.069027794 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.068200081 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.074641021 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.066720946 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.067469026 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.068140328 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.068300093 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.075108332 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.069620942 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.067399684 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.067435443 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.067121646 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.072282212 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.07226515 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.077735798 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.087078812 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.224310832 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.069273867 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.070642089 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.067532545 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.067668776 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.071933356 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.069538702 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.256711409 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.071419253 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.068936112 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.068360202 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.096411484 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.072184779 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.068205615 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.089184283 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.067168857 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.076207984 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.177729379 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.084691231 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.071431183 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.067023336 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.234419339 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.152906571 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.090147851 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.087194072 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.06675709 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.076034981 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.068836891 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.067759411 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.066516142 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.092765411 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.071448627 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.066272886 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.066724751 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.066753098 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.190339499 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.074744909 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.066964994 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.073884121 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.068551343 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.068284724 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.095401908 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.067991813 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.06818955 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.086609879 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.080375642 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.148896483 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.080027233 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.070563183 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.196145731 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.068474708 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.067411036 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.067294264 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.16094612 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079683637 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.06938523 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.068137017 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.073834297 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.075811657 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.254425013 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.073813919 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.070111546 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.075125711 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.067693049 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.06740206 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.092569127 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.095260178 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.068767293 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.069397909 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.066902528 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.066334861 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.139250306 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.073470606 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.071061136 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.153678329 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.069415323 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.074019719 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.067027999 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.219482802 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.071491945 seconds)
  done (took 39.471551855 seconds)
done (took 40.975573635 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130254216 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082417671 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078640033 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075504163 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080023537 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079524772 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079249043 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077601593 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.083201416 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079310619 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.109388097 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067975886 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075077747 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084897381 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076645194 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.084845875 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081550592 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.083161077 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069138632 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08355705 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.093616105 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081638229 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077434412 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083433871 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068456641 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075671344 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120009193 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084459664 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069089494 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074059275 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072663587 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081279359 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072151964 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071407155 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073971598 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069411537 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082162435 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070411012 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118826177 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069476406 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06458431 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076658479 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071329733 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072109802 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072750127 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076183231 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069579086 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.080020109 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063834536 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075404633 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119492041 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06971507 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.069097144 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072596648 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069531831 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073891142 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069018258 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075806856 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069268663 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.076437199 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074734408 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072220543 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06409581 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07313279 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07143363 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07155205 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063090966 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069511227 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064133349 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064081379 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063366634 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07267354 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071025034 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068970106 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0635175 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064240257 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063811011 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076330594 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071709404 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073485877 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064871102 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069797859 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069064367 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067488407 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069659571 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076056796 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.063713781 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064845253 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063532815 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07914 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07087572 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064436725 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07651019 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069780722 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069708014 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064395839 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063935371 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069789689 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072805847 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.064812572 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063664542 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070082426 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069635543 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073826451 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.065102125 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069992457 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069933569 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063708543 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073670932 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071939561 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073776497 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077659743 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073915244 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.078158836 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.06538517 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063445961 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074461341 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.219859588 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069306863 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071119781 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068812505 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071957111 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.063822662 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062301304 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068328687 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068856378 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063462596 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.063562826 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063466383 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071962103 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070261065 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062105774 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063239206 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071781928 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071715189 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062414988 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062495315 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071949814 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.063764148 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069126556 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068390215 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071996937 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.062711853 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.063638559 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062311804 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062619546 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062225187 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068342815 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068445085 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.063627736 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071707789 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07017319 seconds)
done (took 12.922492275 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068273398 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.108906017 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.117539159 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.111575867 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081370173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069017832 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070042878 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086397001 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069430626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.093248093 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092167656 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.09115306 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.131056052 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064740117 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066033671 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067533077 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065643347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078682072 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.11605933 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090507121 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109985181 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066537313 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.081734403 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087126406 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082947514 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08667994 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067679886 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067279748 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069637716 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085711934 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092901226 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069554346 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067962304 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.085635783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.082875527 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076098298 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068434164 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.073665552 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069288634 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068056003 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068536948 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.085914789 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07387526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07553135 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067846953 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067766269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069828015 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.075096966 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080859852 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073140316 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.080177022 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.085022228 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068247315 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.068482367 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066747912 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.074896701 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066374192 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067329438 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067531109 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067808558 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067301525 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069650274 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074689245 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0784173 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07041578 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.073839007 seconds)
  done (took 6.760764448 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085910063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094386396 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079787692 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080039515 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064898751 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065338854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065657061 seconds)
  done (took 2.214596679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068255357 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104488207 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111862571 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.112183528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.121723599 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110467983 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066168089 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098410356 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064739722 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106426281 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.120187081 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.115040658 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068738132 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078123034 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066136321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.11820144 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066747413 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07335483 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111235457 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116840918 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07063284 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096710653 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079958803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066734514 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.115458768 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107731495 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.068360697 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06680549 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068421662 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065931628 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06555623 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.089225656 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107305665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082068483 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069346242 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.068156637 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.106336017 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066970437 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.104252072 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073195392 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104303214 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067823472 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068179425 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065872304 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069440149 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.110013975 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067170206 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066637411 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065215727 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107644581 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064800453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106085859 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067567724 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070378978 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072460327 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071923781 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072683038 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065667307 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108307793 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075558179 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067187667 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11804268 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116900452 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105340766 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117717139 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.074936708 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108902503 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105610621 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065688164 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065484656 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068025524 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.120557037 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.071167188 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.070159056 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071713596 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074700482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.114091995 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.126389905 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.128148183 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082879208 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073665565 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068748884 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.234471678 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.123672746 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071533053 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06518507 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065824193 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064571536 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069883848 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066673577 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069760529 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06477246 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074934564 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067935433 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07057661 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.116287306 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068684732 seconds)
  done (took 10.045501565 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069518845 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066703912 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065347799 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065334703 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065588338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065270628 seconds)
  done (took 2.040076644 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093659403 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065506478 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077051745 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065258762 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.087225147 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107140118 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106459076 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067385411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085899046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080589552 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108789124 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110972692 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113933486 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070494918 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110810205 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068787363 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111683726 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072792269 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080087908 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071495084 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082903464 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070874469 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070528939 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.118793681 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070546306 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069153227 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070136488 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080192285 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079265351 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069503848 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069324155 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070449991 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079395236 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070248006 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112573698 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075997705 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066802433 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07155431 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070608356 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071105649 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.115897648 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070004661 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072385113 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072759943 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070094411 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078021259 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073163885 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072253787 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111909111 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072801433 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074447756 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069220808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070729472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071616396 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075337879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067664756 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071685746 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110822317 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067917849 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076210833 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068763667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070886892 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069784578 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070751314 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07362877 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074324021 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077893003 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072532683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070162093 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068162674 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075725038 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068137341 seconds)
  done (took 7.327738294 seconds)
done (took 29.98042727 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543448225 seconds)
  done (took 2.162004267 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.012066694 seconds)
  done (took 2.668944977 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.493769105 seconds)
  done (took 12.165801887 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.343801518 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.419056884 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.770946892 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142329544 seconds)
  done (took 3.386646799 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.869979749 seconds)
  done (took 2.576982588 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242040778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232286154 seconds)
  done (took 2.199193625 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.463134413 seconds)
  done (took 2.161243323 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.311965363 seconds)
  done (took 3.015108737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237884083 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166155376 seconds)
  done (took 2.121785383 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.659456442 seconds)
  done (took 2.354414378 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.84948199 seconds)
  done (took 6.578361851 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.344128936 seconds)
  done (took 2.116286561 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242539873 seconds)
  done (took 1.967729681 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.624528653 seconds)
  done (took 4.34650391 seconds)
done (took 51.509876207 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088443417 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087796266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087625722 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083053059 seconds)
  done (took 2.054529472 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.077090721 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.072032759 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074996052 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075352278 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072530128 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07438408 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074877919 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070873618 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07250879 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.072115149 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07065073 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.072459934 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.075801103 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.072270369 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.074710096 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.075275052 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.071280042 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071699651 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07342666 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070702197 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.074100084 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.072133669 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.071370925 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072680818 seconds)
  done (took 3.469224805 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081665035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073021054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076193373 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072033226 seconds)
  done (took 2.043332676 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.078520817 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.077273486 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085987258 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09136315 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07746432 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077795262 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084847718 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086533904 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09319404 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088561606 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068807333 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.068960755 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067478712 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087089735 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084918371 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063259145 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064462797 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.078498545 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.077872179 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.081775959 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071427692 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066736678 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077630854 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.078657271 seconds)
  done (took 3.607677142 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084929501 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066532177 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08316932 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092898981 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09419891 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066268912 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.081239269 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094501289 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130929099 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066763476 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072323499 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066820952 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107282594 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066852636 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082976844 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11364973 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116632101 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071396377 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10143133 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066852616 seconds)
  done (took 3.468220813 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0797474 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070433419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070456177 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065749461 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076808341 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073236737 seconds)
  done (took 2.176133503 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07008176 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.068116669 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067375131 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072265437 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.067986391 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.068354329 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.067344932 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.066099474 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066187325 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.067334841 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067698949 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.067675988 seconds)
  done (took 2.541731536 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.22245174 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073721209 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072451374 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067836641 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069613666 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068109178 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08308132 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070344707 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085021011 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068732824 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067956291 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069840678 seconds)
  done (took 2.764491258 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.108113464 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.112307593 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14603762 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117823401 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119306865 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096936867 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.166661338 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095177986 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.167610315 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.141019953 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120155049 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096547962 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088312723 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070992392 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102435094 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122628416 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141358307 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074601513 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115578355 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.21640954 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136134721 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138414932 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.150766658 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11913697 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095257786 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.150407929 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098375537 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10814136 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128707883 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130888296 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121433461 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.099385562 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.072758571 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073118636 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153879349 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.111876875 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.127813657 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.095561338 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.109247497 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.091711884 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112954679 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.072547845 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087134362 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.116396941 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089184034 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137279617 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.096108891 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119800006 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083251281 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.309737515 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128156308 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.137903514 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.087053365 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106361274 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139694192 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11376173 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135841768 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.107121966 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083186333 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.120196367 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.105641529 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100712393 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108636942 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08040067 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.178670043 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089422287 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114457546 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113379158 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.096745698 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096689842 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107904618 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.137979489 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.130134286 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129757768 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143212035 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.097979133 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1236746 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.103953121 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.132362643 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107403156 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.073950122 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.125980039 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132502806 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101883614 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103445301 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135599121 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095805667 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079994205 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104713823 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.123512742 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082576289 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118074536 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083713655 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.113758411 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142881814 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102553055 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114967543 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122851349 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.250243217 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154253122 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.1092486 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073312009 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.117348964 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113017935 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157363646 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095559501 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.076576292 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100957852 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104172058 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.153523881 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10878617 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081946575 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111786147 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141603068 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096547043 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.214630129 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095754934 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.142865412 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111836055 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088100298 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07525043 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.091499427 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115886048 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110919639 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115863267 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09672499 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.086471537 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088339211 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118745934 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095981438 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082678154 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.116594226 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.106537477 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076621778 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09129631 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.078755072 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.145191603 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.080520487 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141960903 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129734088 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079000324 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110879967 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101532338 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112801293 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.101014686 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.123745198 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147202008 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.193089627 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.095300522 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099640443 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112995108 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152509311 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.303759857 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093128397 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.077462725 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102402435 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113463179 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.100060284 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128490204 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.098871701 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108965379 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104539735 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.142156454 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.145798104 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100053288 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102622589 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109509382 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.123873941 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077528871 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.158740018 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104768996 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119713328 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.086492638 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.142964818 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.114578435 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091817552 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089172996 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102781315 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108594971 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110939772 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.150070703 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.098899149 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.078323309 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096490845 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.149006688 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081570123 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114179212 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.09499687 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.095728599 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.122854934 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098230676 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083865923 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.07006626 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132474491 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.165047046 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.072459676 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.120359008 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.115745709 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108985901 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128622212 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.072118236 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124837453 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.14675229 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123117221 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.320746099 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.169203361 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121820665 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.121005097 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114672817 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107318277 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080312115 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.127693588 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.137525939 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098048378 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093486591 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137859807 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.121077346 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138617181 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118861907 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122730613 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.108203195 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114936466 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106136453 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.10758292 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.150865842 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126788587 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.131416412 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.088671993 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108393871 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.123713704 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141419066 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084629996 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.146939658 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088947751 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124369589 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081296264 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.128267441 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080166068 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.175398874 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081771114 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104352661 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.071584279 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.076308949 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.149517427 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.118711732 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113277882 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106630811 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146072761 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.143947321 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082374289 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.112859117 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.122584781 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105716781 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1227751 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114189966 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.263589822 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096200251 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.110662249 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086906653 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.0835611 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116512916 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095348926 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127233849 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085025385 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076166842 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141655599 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106069078 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097003856 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079344962 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109196604 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.125410518 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09428 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087936128 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115978058 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106992158 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.14338786 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.092619475 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.098610746 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.126043227 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080729897 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.093565673 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.07003549 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.086943038 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.078080392 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133057961 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078443698 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121195721 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069978686 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.135250625 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090858464 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.095731797 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105976409 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113070302 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132035142 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09763359 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.146949635 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092717993 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.124901103 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111194925 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098331846 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09233442 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106994805 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104122794 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.129923459 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.099996729 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129729245 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152543281 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108141204 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.14930728 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094750251 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127988792 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11239587 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.300203138 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112523201 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.168287475 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139943754 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114054329 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115046734 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076726154 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09797876 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106624337 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.115203619 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.177730492 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12820286 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.073788781 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109559478 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095424671 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.109947766 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105044326 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08347636 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146887539 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103768023 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.089610547 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114382649 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093378409 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106586045 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078661876 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103774908 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.108397314 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09586317 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100751574 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.121474069 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.132556423 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116913006 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.150055378 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.104118078 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.09499347 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.123579808 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1145144 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113830369 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088354605 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088993192 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1440228 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.127591692 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.133636189 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.106375955 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116551721 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.122892457 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108366056 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135758339 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116939569 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136183549 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085594481 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.248606007 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.068603577 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072085952 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.124808898 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10821324 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11204197 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098735812 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.072784611 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10336852 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106996649 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072252518 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088012398 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093898042 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096089649 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.092855015 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111057259 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11277716 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.096810438 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104545227 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099655334 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.147308516 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101954559 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088578458 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1446206 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.151111867 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088968336 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095255682 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.073619151 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081431982 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114936318 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154766278 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15703286 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080989635 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089922067 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.089769149 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090208452 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.073652888 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.090806049 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.092567625 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109806873 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104916477 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.117640405 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109186964 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077958649 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105424268 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102281069 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095841617 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.112157401 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.127022972 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.133169921 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148859752 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119938869 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11406199 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080049977 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084118447 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078809667 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082520611 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106611083 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.082151714 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079585935 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.317474544 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.09368047 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10623686 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109186611 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088591455 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076369061 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135529668 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.071214391 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138054856 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.072306913 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083315093 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083897878 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080630296 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094851788 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138602676 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112673149 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11276525 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108253121 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105139684 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.162544449 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.16020063 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082300251 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.143557584 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074714497 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077306927 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076685279 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113248325 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091772483 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.119086446 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146625082 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09330898 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10553055 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079990527 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148698902 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.101465698 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.107592424 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089589152 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.080661281 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148374989 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081897383 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084415983 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092406886 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.116163706 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.075291901 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109310056 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.088922008 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082830075 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.171288986 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.71576078 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09533679 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078794735 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100289425 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.149916372 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140809907 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101264433 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.285064281 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121594327 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.103582452 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.098664298 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110577393 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.194095889 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076828343 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096779996 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.106887931 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09982884 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104191178 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.101586319 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.091045381 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.095668466 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.09067894 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082422969 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114338781 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092114736 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100387723 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.115191877 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086979772 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090813146 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.130542945 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102518645 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084667126 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091691427 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.104864018 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086508556 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101742117 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.068848665 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.11384209 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090932139 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118679694 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.098278291 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10865524 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.131216849 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094706466 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138143767 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.107802309 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.123322861 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086951899 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077833665 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126982751 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.089805514 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077183125 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.147286731 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098063624 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.105253917 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104970606 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.096928166 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114937792 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11926121 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114342106 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097941818 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07912418 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102720274 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.274528323 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085039442 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077156505 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072445289 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.074814896 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104730004 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083611237 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.081231918 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112302261 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086559875 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100692107 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101194659 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120241328 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08576781 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099586847 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108692112 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089423066 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107498927 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098743402 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.126124374 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.171326745 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122080445 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127032646 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13203858 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075715916 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07402742 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.06719308 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.114150497 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078361142 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.088404624 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080369498 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134392177 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.082001809 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113038195 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.243657152 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080491242 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094822292 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097032121 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.069153456 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.083203375 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108129718 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086687536 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079487443 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11972108 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082937906 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.130033487 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1126159 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100322356 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.096581661 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081270576 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115455628 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105286155 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132058674 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095867175 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075990998 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126749044 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105041189 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.142063212 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.07318991 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081473689 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.302213053 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101929018 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128453265 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078045194 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146186005 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.14169987 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.098353146 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131628621 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069183237 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086069781 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087743724 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.124126772 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082011617 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108999626 seconds)
  done (took 70.365432178 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.182266163 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.177248686 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.121249196 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.132822307 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.289305367 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.29891814 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.151861434 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.123251504 seconds)
  done (took 3.273921604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.069973128 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081684874 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.079440732 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.240653976 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.095807869 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.066127498 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.071235019 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.080430245 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.065821655 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.065362885 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099899651 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.065681151 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.065938189 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.52485687 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.06654048 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.073291742 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.067654936 seconds)
  done (took 3.682482989 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357101033 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.612413036 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.334159799 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.638790826 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170823072 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.723511731 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074285417 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.081640754 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.810366496 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.409444876 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164244258 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091697888 seconds)
  done (took 21.344380147 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.077367836 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.117417946 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.116650512 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.072574791 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.072047247 seconds)
  done (took 2.281055332 seconds)
done (took 124.823410138 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.087582983 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.179694021 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.59928354 seconds)
  done (took 2.668112394 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.120560636 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.117731767 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118089473 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.119956336 seconds)
  done (took 2.317394298 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076157482 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075306403 seconds)
  done (took 1.976459008 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.228663163 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.214914698 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.090931469 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084785629 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079605705 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079768091 seconds)
  done (took 2.077414028 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072885758 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070125301 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070498986 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070984177 seconds)
  done (took 2.117184497 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.170404007 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066297227 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068385822 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070475091 seconds)
  done (took 2.202114896 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.086229107 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.085484933 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.115476135 seconds)
  done (took 2.123994828 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.0851243 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084025554 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078138901 seconds)
  done (took 2.085080718 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111471787 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.0974585 seconds)
  done (took 2.038931597 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081111397 seconds)
  done (took 1.937334624 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093630513 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099702109 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.184456798 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.152379451 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.189658006 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.17274037 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076893284 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077832963 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073737114 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072219528 seconds)
  done (took 3.036635707 seconds)
done (took 27.031058752 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08974711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.217194139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.32163124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089984046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.656686041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.317420987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.737818251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095722311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.101238794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068782822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085513637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.634740721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.734866865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.155808513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.721124228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.139226959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.810401409 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070762437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066622529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066951421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.714946414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066461686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066671669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06692201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.803755053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.33534679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072061015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.137320231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070966319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074501353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.317950209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074736012 seconds)
  done (took 14.833418494 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077582286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127691762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073025075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084844895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070335214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070261458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072053172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069800712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112659259 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069481169 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085798618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068438568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074075661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071783836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089368286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068497214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070006706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06889861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068975192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068767021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088036814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068420908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07016267 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070091797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069277375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082621572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069824266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069704202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070364428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073918248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075375348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071450011 seconds)
  done (took 4.334824644 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131945815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15080272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075943853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111208882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122037376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0720401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156724298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094662899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11795755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070832792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087039822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070257775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107867776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070774731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094900829 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072609593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075230459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072947069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071778143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071555542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088795347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068893438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069548023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072612086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072484617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08837058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070754275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072019229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070429318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074903037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075541698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071146777 seconds)
  done (took 4.71123718 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071751923 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072305436 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078388864 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081544899 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066967837 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069226654 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070409035 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067400637 seconds)
  done (took 2.513263954 seconds)
done (took 28.268093052 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081054522 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068577567 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072040626 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089091548 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075757076 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.1159621 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066139583 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07633138 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0730402 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072592193 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074174773 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0689796 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071941894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066302149 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073874432 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067603275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.115294895 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071037535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.11630159 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.118146393 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069147729 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071891087 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075317759 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.113703907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.115127693 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.114194774 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075793994 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072851202 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067146876 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070254299 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.177921624 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.190180103 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077000136 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119313927 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066588994 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067004849 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071026944 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068959893 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.115784417 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075464587 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069404383 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075524619 seconds)
  done (took 5.545536615 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.193224163 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.201639217 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.192909964 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082453642 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094773695 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082326167 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.197486715 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07969913 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078891364 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.199155081 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074522142 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076845629 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080158732 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070697721 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078044755 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074809843 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079572269 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072896784 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077759974 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078076199 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.198058039 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070670482 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081089077 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077769193 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071610837 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078763246 seconds)
  done (took 4.666760607 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076656389 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.09083089 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094513164 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150603043 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113356469 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084697962 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085329689 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095805163 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104271494 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070107997 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092349209 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097308161 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099111709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0763142 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110066868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088526283 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083555178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073356505 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076416531 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104052081 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14312762 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088672873 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103245513 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.09064176 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068848287 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079019867 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077630501 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086038423 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077562422 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082631177 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07353943 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0732062 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070110215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081213204 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073869606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067452651 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092955589 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083496556 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085146834 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.110596937 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080267726 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072212553 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098970032 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13690352 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06971732 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072390986 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073833301 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082956752 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071448869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101131486 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086134399 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069224499 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089257593 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07149236 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071217557 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086186429 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071515688 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07167152 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081511824 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076562101 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091455447 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07510377 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091148109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069529839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081675572 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071465914 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071986615 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068804277 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104855556 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07733065 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.122942725 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071027143 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067679863 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083264371 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.085221091 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076979716 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069622354 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.09024401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082288678 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073691709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081176794 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072475659 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072935375 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107180595 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068369986 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067362415 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067393351 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072304147 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073263252 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070046855 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08336148 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069607219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073117817 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08590619 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069321606 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070026232 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072282475 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070882491 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069723099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08165536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075296458 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072270865 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082904523 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071962141 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0736482 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085624862 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080005984 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069740539 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071492886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072888633 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072684899 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075153255 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073870316 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072258863 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074904836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077693308 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076931372 seconds)
  done (took 11.543360652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.211694342 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.198745557 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069825956 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.194385761 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078142808 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.12776683 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.19622569 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.198727138 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070200653 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071006152 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068812286 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.141811269 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136373503 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.148604724 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.127485998 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07145343 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096514152 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.147826424 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.20197593 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.194661118 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095649113 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078134055 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072398942 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074702837 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074766012 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082383097 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085612881 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078752043 seconds)
  done (took 5.369970357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077519238 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.115153568 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074748536 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094437362 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087012117 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069563934 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071925651 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07127224 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088236018 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07548715 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069089536 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074327801 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073076906 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069592991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070664312 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077577469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076137403 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077205636 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073319583 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07437408 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081027587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.159411484 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074957652 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070256967 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073300362 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070565536 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076939328 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078264809 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069686288 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.075222242 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066050545 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073935266 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084056764 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070135794 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06881109 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070900783 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069605031 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069520317 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070591622 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067691523 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067728687 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075368693 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068608566 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075320505 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084263788 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073345518 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071363978 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072745042 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072427331 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066610808 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072959667 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072915298 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072414541 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078506952 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073258992 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072305357 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071991779 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101820802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076598677 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069649591 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069341149 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06826992 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072179699 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078379919 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087434519 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072425311 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068356159 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070006103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07689649 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085066105 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070043236 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075499181 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066685228 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070413836 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072905181 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072561472 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070751814 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067848948 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069496446 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069850931 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070678362 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069080839 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069674098 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072685453 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067200357 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067938538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070243804 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073612192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075119923 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068107954 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071946 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070984782 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068244965 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072408117 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075688608 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072799163 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090868573 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078109131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070073563 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067485079 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084924601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071342158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068567225 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073033542 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074042342 seconds)
  done (took 9.835389031 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098903318 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069717864 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088956393 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.100871436 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079201348 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073656401 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082726194 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069191849 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090829844 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067354452 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078199992 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067470348 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083278037 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078633049 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072260881 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080138288 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072136404 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090512115 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084066136 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067351995 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078214077 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081844518 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08147737 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087827273 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087113322 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08811751 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081320627 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071277823 seconds)
  done (took 4.210007562 seconds)
done (took 43.080206153 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 7.01392696 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.220050328 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.998381631 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.487093323 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.056166446 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.079745086 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.137479644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.99170272 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.675580885 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.964243479 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.631494804 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.520069183 seconds)
done (took 69.751636636 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.932060888 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.039986993 seconds)
    (2/2) benchmarking "String"...
    done (took 2.126901935 seconds)
  done (took 5.999013749 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.331148127 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.888114786 seconds)
    (3/3) benchmarking "different"...
    done (took 1.927650348 seconds)
  done (took 7.966314559 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.157554647 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.697396227 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.16674177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.887139809 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.895414104 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.377966295 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.022551909 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.602443927 seconds)
  done (took 33.479262694 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.90056054 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.278485795 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.289839287 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.326602112 seconds)
  done (took 21.771605517 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.356654005 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.282876002 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.269716152 seconds)
    (4/4) benchmarking "different"...
    done (took 2.395239094 seconds)
  done (took 11.25931471 seconds)
done (took 92.540628384 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.92577715 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.225592572 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.965518437 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.137422186 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.033113721 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 7.080925682 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.996927949 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 7.007576495 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.982676821 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.989213905 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.990316906 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.985114286 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.901330812 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.930129121 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.978251956 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.977793782 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.257761552 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.937415527 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.959467609 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.735125769 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.313840587 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.979287687 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.965298324 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.062631374 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.442713857 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 7.014429586 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.461567839 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 7.004742774 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.600446739 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.968880684 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.90491051 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.897824958 seconds)
  done (took 210.48090178 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.891230371 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.770093843 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.734369278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.915050786 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.222714706 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.237732564 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.733460135 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.243620139 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.894931429 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.930419617 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.83161316 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.891512504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.981635847 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.441604114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.924351685 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.950517714 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.742694193 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.642353522 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.930694325 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.813539128 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.893620779 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.441605197 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.418001267 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.68079311 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.906218701 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.934264149 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.899597885 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.909660015 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.378937636 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.729798277 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.915715182 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.986390908 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.101028683 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.126484519 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.895163453 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.92967614 seconds)
  done (took 181.704564178 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.158980745 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.94265777 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.973224226 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.039449563 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.884057273 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.757125373 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.942780314 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.954526584 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.96138203 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.971158236 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.977761191 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.048713406 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.96912393 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.069278013 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.155134382 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.989501675 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.991323125 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.57556794 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.996863709 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.96381082 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.979579228 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.110095313 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.313628339 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.306435771 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.976975585 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.988563802 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.088489496 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.998028754 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.984340618 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.983200755 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.185576222 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 2.057952667 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.11502822 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.069623848 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.986776268 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.047381714 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.988945035 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.183096809 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.985896641 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.983363607 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.978691304 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.012931826 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.980290906 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.960790382 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.997415785 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.900801255 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.911850393 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.34719146 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.485199751 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.901442276 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.894515282 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.893379308 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.902563345 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.896465619 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.003375338 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.901004916 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.927060587 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.443114136 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.897141616 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.893503067 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.893682723 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.893883818 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.893750586 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.899978607 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.938709282 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.477838828 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.604244577 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.251212828 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.629150334 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.898479106 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.89509403 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.894564647 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.582318447 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.962701499 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.898408333 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.894282627 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.071783905 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.899337947 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.894917961 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.999990752 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.915357267 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.899867424 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.004871068 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.899286386 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.895212013 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.331289621 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.146670368 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.906370931 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.915739357 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.028615163 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.937885872 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.933616203 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.981286847 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.889659288 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.929903532 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.945404365 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.267928525 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.932363014 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.931666787 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.442775486 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.38289201 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 2.021309085 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.099444748 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.418983489 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.901009262 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.002011963 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.012471257 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.005787092 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.991077703 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 2.004661951 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.031879718 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.980198918 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.987729499 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.998324324 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.984707541 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.989352048 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.990792474 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.997491757 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.971164598 seconds)
  done (took 427.798695634 seconds)
done (took 824.082409041 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.520617769 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.628928298 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.55833556 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.612427177 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.572146782 seconds)
  done (took 14.803978303 seconds)
done (took 16.726358543 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 2.303302081 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 3.324663839 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 7.051860429 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.526673731 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 2.130567472 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 2.106324474 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.131774234 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.211911206 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.149353093 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 2.098154794 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.17081759 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 2.113739629 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 2.243541579 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.222730308 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.242425378 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 2.257154958 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 2.194362375 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 3.701268516 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 2.241824595 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 2.182957637 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 2.210472699 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.20087993 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 2.149770151 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 2.23137328 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.251672063 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 2.199195376 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 2.410944644 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.241348355 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 2.204691734 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.247598549 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.26407122 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 2.254014571 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.210314606 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.224846503 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.260648522 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.26634401 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.217002059 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.243516013 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 2.168399332 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.216311596 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 2.202732255 seconds)
  done (took 100.342594071 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 3.220166212 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.186248842 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.270805656 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.272330958 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.697718004 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.287186893 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.389274334 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.095331443 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.075706948 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.187254302 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.21814937 seconds)
  done (took 27.85616628 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 3.049664719 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.167772241 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.306049145 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.28144095 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.471593329 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.234422574 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.246896221 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.075656953 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.101301653 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.279457167 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.201811755 seconds)
  done (took 27.268911011 seconds)
done (took 157.355687005 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.498682762 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.988910321 seconds)
  done (took 6.37929773 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.973464049 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.946383829 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.938640469 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.961172601 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.934273531 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.948451452 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 2.145181988 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.988889304 seconds)
  done (took 17.703500391 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.985263876 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.976351908 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.986309801 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.984215173 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 2.011841862 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.983189488 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.99290352 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 2.008761526 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 2.025617922 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 2.028796944 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.993678438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 2.003547998 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 2.009989564 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.999189518 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 2.008819475 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 2.008787389 seconds)
  done (took 33.900514256 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 2.008077215 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 2.006180185 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.995776321 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 2.003959075 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 2.002313612 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 2.016212303 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 2.00951773 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 2.001068405 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.986059549 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.99987862 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.996129653 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.994653301 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.976795275 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.984053138 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 2.005908509 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.937060103 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.910643785 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.905883902 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.905826495 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.905752945 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.906018769 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.906417183 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.983038721 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.996566856 seconds)
  done (took 49.273797212 seconds)
done (took 109.195526027 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.552606492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.930355779 seconds)
  done (took 9.400868566 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.980184935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.981081837 seconds)
  done (took 5.897919404 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.940740701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.94443877 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.942851559 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.94963769 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.94567303 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.93993337 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.942174321 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.940596097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.953531752 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.956727631 seconds)
  done (took 21.348379111 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.978529365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.979092239 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.983865201 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.980121262 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.994355859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 2.008864735 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.980593084 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 2.004090052 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 2.009561199 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 2.030435324 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 2.020888502 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.193420071 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 2.007302575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.230782198 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 2.009776331 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 2.013828994 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.999388185 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 2.00394168 seconds)
  done (took 38.321320399 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 2.01782963 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.996164455 seconds)
  done (took 5.948094105 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 2.010800413 seconds)
    (2/7) benchmarking "second"...
    done (took 1.995397465 seconds)
    (3/7) benchmarking "month"...
    done (took 1.991668469 seconds)
    (4/7) benchmarking "year"...
    done (took 2.002453185 seconds)
    (5/7) benchmarking "hour"...
    done (took 2.004392048 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.991965008 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.980785716 seconds)
  done (took 15.903596519 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.450037273 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.055037802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.096384377 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.379372528 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.519081293 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.852186176 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.556488773 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.934285985 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.788675721 seconds)
  done (took 24.551614197 seconds)
done (took 123.289240846 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.578708226 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.932047183 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.547138855 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.09142785 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.011847002 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.268409921 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.964043607 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.513002901 seconds)
done (took 44.822078899 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.139440044 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.985659147 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.066988582 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.040621804 seconds)
  done (took 23.037798457 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 7.014686584 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.675940955 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.043130219 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.022497795 seconds)
  done (took 23.768692448 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.530529375 seconds)
    (2/2) benchmarking "read"...
    done (took 2.512539744 seconds)
  done (took 6.985126778 seconds)
done (took 62.845823386 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.984916993 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.995865286 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.995934652 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.990781339 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.990652391 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 2.009163304 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 2.033872129 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 2.004450204 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 2.096967483 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 2.104790272 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 2.086333279 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.999369081 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.990948761 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.980192919 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.99970874 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.999810792 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.99315263 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.975825112 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.980699808 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.001299326 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.996165644 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.996254372 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.990136759 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.978672505 seconds)
  done (took 50.099196691 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 2.083077633 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 2.087245809 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 2.010512544 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.988557534 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 2.012233389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 2.02618741 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 2.062322158 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 2.029718926 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 2.06402053 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.962698963 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.950202047 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 2.00609638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.946734254 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 2.008834472 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.992942943 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 2.041091736 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 2.020318692 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.976517455 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.94757337 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 2.012423129 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 2.001700524 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.040677942 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 2.015503901 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.023326379 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 2.080325658 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.996497829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.996151127 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 2.009867287 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.991175817 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 2.045303654 seconds)
  done (took 62.366746689 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.978006163 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.949215504 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.951171225 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 2.045966678 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.972960896 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.965415766 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.987371122 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.992158737 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.995509425 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.989700162 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 2.011430657 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.961348273 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.938293857 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 2.015314347 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.986049946 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.986781186 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 2.044867493 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 2.205827779 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 2.033739896 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 2.024311512 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 2.078236647 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 2.012658274 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 2.012817411 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 2.004605723 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 2.013922775 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 2.006919501 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 2.014248874 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 2.017593881 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 2.013053181 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 2.014938833 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 2.013158401 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 2.069833918 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 2.051180545 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 2.011691773 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 2.125744681 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 2.079355219 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 2.021850535 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 3.516004311 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 4.085766086 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 2.044711153 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 2.015328214 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 2.013519256 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 2.01804375 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 2.017641076 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 2.083875526 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 2.017735569 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 2.018579085 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 2.000372502 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.998974256 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 2.013894725 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.990645698 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.989169227 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 2.038808983 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 2.011346699 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 2.000831329 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.994678459 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.991885437 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.990945607 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.9977676 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 2.00926364 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 2.009116697 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 2.081333094 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 2.01792477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 2.009054603 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.389605519 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 2.002463345 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 2.074804677 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 2.008115611 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 2.009611045 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.225927796 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 2.011348388 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 2.216116903 seconds)
  done (took 151.396214558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 2.007755908 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.014891653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.096896036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.095598995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.012040207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.008522136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.011157263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.011649339 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.67980213 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.064235116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.111104686 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.099343632 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.704129441 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.987805889 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.001260832 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.086063998 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.005846035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.008974586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.999008033 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.998570714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.984897986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.005702065 seconds)
  done (took 47.936133009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.021244278 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.999554447 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 2.051881031 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.026468285 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.022172433 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.025537273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.016300613 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.01709164 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.050472135 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.055968072 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.996787521 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.962243291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.935851397 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.952971929 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.959102741 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.999878874 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.956145058 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.998641782 seconds)
  done (took 37.990586009 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.121432491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 2.098503761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.998023256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.958749873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.172958479 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.146921152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.028347492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.1047672 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.95655424 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 2.098751945 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 2.10585133 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.956994624 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.148044537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.956880037 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95619792 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.173422382 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.998891654 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.95653588 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.030597139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.028412971 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.122241099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.030488282 seconds)
  done (took 46.997696365 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.953904511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.96863133 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.986651859 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.987124254 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.918494157 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.919376009 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.975287398 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.960457721 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.934018119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.961396236 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.955304981 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.919525658 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 2.004600959 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.974411149 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 2.005362992 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.955667091 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.9706225 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.974051264 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.961370786 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.920623847 seconds)
  done (took 41.055603178 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.9209703 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.920381885 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920722943 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.920571726 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921021602 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.920949348 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92397681 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.921376102 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.921356857 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.159040994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.920795088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.921236096 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.921912579 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.921136585 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.922003956 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921928116 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.921707246 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.921673677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.921019663 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.922432515 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.161578786 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.921898431 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.921640902 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.921566101 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.922496718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.92246027 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.921721458 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.922525065 seconds)
  done (took 56.132611233 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.979600401 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.959855068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.960146634 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.039584836 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.039662632 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.957195923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.039709161 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 2.039986841 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.961204448 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.957441898 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 2.008029238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.957403472 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.959977452 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.957276621 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.960728152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 2.007583385 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.969299225 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.040183214 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.997474793 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.961090432 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 2.007954279 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.958227982 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 2.008071657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.965868824 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.96100873 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 2.008334508 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.99678391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.084086137 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.985318525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.96216663 seconds)
  done (took 61.543231101 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.94339124 seconds)
    (2/2) benchmarking "in"...
    done (took 1.946383388 seconds)
  done (took 5.742276084 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.922538252 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.026492941 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.922969598 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.116410937 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.087543226 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.097267093 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.084207778 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.012870836 seconds)
  done (took 18.122923473 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.923947951 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 5.404138652 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.932457642 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.923717432 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.924432601 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.450103009 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.847901496 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.78630076 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.698390702 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.787091904 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 3.086705313 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 3.455755356 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.953514095 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 3.25901719 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.03150396 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.754754761 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 4.14369559 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.423752662 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.942876607 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.033609377 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.653152138 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.00701955 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.924857989 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.92701209 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.92500223 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.858414094 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.905338007 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 3.33535442 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.056450445 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.034797303 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 4.67797533 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.987713112 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.926767766 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.163445546 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.028217844 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.926551619 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 4.073875395 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.018872464 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.92740167 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.925963667 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.678140624 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 5.558273852 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 3.162043276 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 4.13313431 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.00046397 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.927309352 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.926385571 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.927218609 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 3.185803952 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 3.548905836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.964844277 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.921743179 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.05513882 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.928420151 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 5.500703534 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.06068819 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.928302971 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.856272946 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 6.558801226 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 4.138475566 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 3.269388096 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 5.143356398 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 4.024098621 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.041639167 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.92909049 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.135211473 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.803768752 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.740798543 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.657266887 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.026457749 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.479556202 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.936743076 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.928318851 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.928196781 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.899974455 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.299284708 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.959223783 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.928636064 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.928332802 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.929504979 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.184380614 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.032551226 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.755318116 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.059610085 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.119982063 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 5.444046948 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.042595567 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.930144463 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 4.574670003 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.782855908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 3.092545114 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 5.621356704 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 3.107743951 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.059604136 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.925547458 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 3.162879172 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.962169084 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.930510383 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.755661551 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 4.436737004 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.072630103 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.930184339 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.281507917 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 4.020980663 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.964667236 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.930545493 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 3.62566014 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.043327531 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 4.043291254 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.961845016 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.931421486 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.930939702 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.533597457 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 3.100246949 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.963314488 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.43066469 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.967156511 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.369507882 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 5.378495631 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 3.113865412 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 4.307633215 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.875599147 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.180871629 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.809505711 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.966398162 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 4.299071986 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.913684915 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 4.581871738 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 4.207961168 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.043086884 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.791030199 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.983380126 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.933344109 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 5.084007863 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.993087891 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.93337454 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.932701519 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.933364592 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.933399605 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.933889621 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 3.046073479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 4.291951089 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.617481742 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.067090744 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 3.169653836 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.047187838 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.777766969 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 4.119448898 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.616688246 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.064895322 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.934462554 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.552354105 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 5.334243862 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 3.624904172 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.048620913 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.933990268 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.934564555 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.75655564 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.920075648 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.020995478 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.934780957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.569370197 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 3.108480821 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.968424087 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.935624265 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 3.384402722 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.065531427 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.935504817 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 4.049574636 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.693749494 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.681475776 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.074979642 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 3.240937376 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.045095521 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.935464016 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.935891168 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.935185218 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.714086591 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 3.57129448 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 7.169713938 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 3.535361995 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.786706842 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.009327173 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 4.090459389 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.017978664 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 4.197294536 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 3.139058692 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.069442677 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.937297586 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.93589178 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.936845425 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 3.432108132 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.89671231 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.926610404 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.918844304 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.960704294 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.983448713 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 3.10031833 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.787160858 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.945514599 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.653635981 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.877858625 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.029984954 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.938056697 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.937483711 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 3.082795255 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 3.106381437 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.070365044 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 4.368532744 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.085331248 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.937874677 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 3.583590858 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.053235946 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 4.609294157 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.033523317 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.760221111 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 4.019577124 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.052725577 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 4.074818006 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 5.578992743 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.041686153 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.939064173 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 5.645719636 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.058978507 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.938566217 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.990706735 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 4.476106776 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.873194365 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.676948642 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.460393312 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 4.035573613 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 3.468775047 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 3.172371516 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.073294978 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.759025092 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.030200895 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 3.181349609 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 4.058721037 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 5.545536844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.948185015 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 3.713276725 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.947482943 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.556082256 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.076240037 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.94610457 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.052094845 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 4.403990955 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.047382797 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.940897192 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 4.121904064 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.024593898 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 3.593175118 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.056373825 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 3.0554428 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 5.260417544 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.809852843 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.031384248 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.190577541 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 4.053614953 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.89053273 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.877457098 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 3.259732242 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.839887805 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.948985277 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 3.104691401 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.739509582 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.114943492 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 4.254527927 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.071203508 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.941576945 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.942554658 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 5.100403634 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.019023029 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.943072649 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 4.267226507 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.891511588 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.997560719 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 3.107398554 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.975900777 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.942727722 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.166916266 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.07090388 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 5.225742445 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.407485623 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 3.497355633 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.732785179 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.058601915 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.610191634 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.049084279 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.649654328 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 3.115281374 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.976526304 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 3.609674589 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.059248983 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 4.210041577 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.077117697 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 3.056579289 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.668523089 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.046243262 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 3.208377143 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 4.077400279 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.056069468 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.704086643 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 3.459516368 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 3.177401873 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 5.3549247 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.964728736 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 3.480564135 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 7.059828478 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 3.506081577 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 4.002442673 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.696303275 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 5.115195515 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.990302639 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.944954362 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.945145488 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 3.492225902 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.975478608 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.979559193 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.720568783 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.51495902 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.981340776 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.680436177 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 3.118243637 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.978486074 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.945031323 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.946001271 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.876042585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 5.126590689 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 5.299963528 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.062200397 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.946943148 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.946048492 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.909860199 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 5.293234563 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.7302161 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.816597489 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.88252871 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.078001149 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.94791121 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.947293983 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.947528139 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.946636059 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.946481807 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.946187692 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.342284935 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.107125306 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.600090266 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.164114801 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.046806037 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 4.160003224 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.007254749 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.983126873 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 5.215843967 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.01745874 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 3.052796959 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.052110107 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.982597922 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 3.370304266 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.103808505 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.987556774 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 5.346730395 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 4.21628883 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 3.161240897 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 5.506015477 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.970063148 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 3.348716769 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.267868872 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.791741581 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.983213029 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.882042102 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 3.113598291 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 4.776206123 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.939620837 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.491800499 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.567355108 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 4.070680835 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 4.301502299 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.836204512 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 3.340277077 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 6.235135542 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.006331001 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.949451444 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.954058758 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.051660376 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 3.497225311 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.354487396 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 5.63964308 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 3.503934497 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 3.327128939 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 5.753313722 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.406896153 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 5.591381287 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.328497562 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.333262324 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.314182136 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.307378661 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 4.79212054 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 5.240446551 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.390185335 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.320360472 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 3.262131802 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 5.32955179 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 3.203598976 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.962728506 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 6.312743568 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.447252165 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.315161333 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 3.515218545 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.367296958 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 6.212805379 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.324645625 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 3.095625852 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 3.626801829 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.350994953 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 5.536809307 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.726261669 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 6.169234241 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.715861273 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.422453646 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.315296702 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 4.717100006 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 3.282190976 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.454405562 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 4.199239392 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 4.648815549 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.877897701 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 5.873232126 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 6.712660834 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.420889467 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 3.24959393 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.979703801 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 4.403754804 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.360413314 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 3.162755196 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.45439289 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 5.617452434 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 5.27905353 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 3.5809882 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.45593803 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.992169806 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 5.15602236 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.448149665 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 3.909129839 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.452478904 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.32051275 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 6.022670713 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 3.404195275 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 5.616910579 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.418682906 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.316102389 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.322241381 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 4.001672919 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 3.891756469 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 5.538053946 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.384998386 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.315167188 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 6.214108375 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 3.045693107 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 3.518786401 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.356466813 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.31988006 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 5.824429908 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.343174058 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.325981291 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 3.72822478 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 3.908843256 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.44914583 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 3.849925692 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 5.559007783 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.424373749 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 4.354765625 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 5.620704442 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 3.407560894 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.371592838 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.206444097 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.214360953 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.252286387 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.744119855 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.403869046 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.236561282 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 3.851864826 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.41837648 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 4.082031857 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 4.180563668 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.499726248 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.309825282 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 3.677557795 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.395369697 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.775225984 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 5.284789851 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 3.437443331 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 3.559867626 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 4.441720621 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.42509725 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 5.033225636 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.367018191 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.268757653 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 4.218465431 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 5.627388135 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 4.638137509 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.661236723 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 5.560631314 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.35492475 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.955063793 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.366504576 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 6.151476281 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.253970951 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.293117011 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 3.791771266 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 6.544587745 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 4.717833262 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.404635413 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 4.753318308 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.344680759 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 3.601808096 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 5.656646406 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.352883533 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.280668211 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.2641197 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.291811058 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 3.308188549 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 4.947351483 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 6.250659045 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 4.756059735 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.386721923 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 4.113618573 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 6.942284468 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 6.012187612 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.648069706 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 6.555388345 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 5.790622671 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.276510403 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 3.228866781 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 5.653558269 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.386658782 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 3.4443419 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.327197714 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 5.084822364 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.362291043 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.280049144 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.712758443 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.424836398 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.270875159 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.268937242 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 3.223139338 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 6.171875355 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.356930491 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 4.503188764 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.341836068 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.277841398 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 3.886357313 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 3.516677315 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.304886725 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.273937288 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.267610695 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 5.124944106 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.409854018 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.279073989 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 4.612285551 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.395373418 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 4.6145858 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.151769787 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 3.805655219 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.35040707 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.298526217 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.289170846 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 4.023890232 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 5.960996757 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.301672894 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.639589893 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 4.40366412 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 3.832303416 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 4.352008687 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 4.793862998 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 3.791791769 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.293764836 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.375344416 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.29823357 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 3.354083645 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 6.218059743 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 4.367324629 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 3.038519722 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 6.854475769 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.364777279 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 5.11461786 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 4.274528706 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.310849224 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 5.480000419 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.302171674 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.278971725 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.292004343 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.261533808 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 3.789132571 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 4.363876076 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.32386214 seconds)
  done (took 2008.450951018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.533048594 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.273140771 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.26782278 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.27577042 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.290300824 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.293470882 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.27700855 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.275433384 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.25626307 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.254037311 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.282161706 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.294903349 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.296274252 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.507583632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.246729604 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.293518855 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.284716819 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.311202466 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.286754553 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.250900273 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.274010487 seconds)
  done (took 50.498018229 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.280866397 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.263038028 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.253839127 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.288186417 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.288047431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.273122861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.270123167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.258657642 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.276136782 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.302431638 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.298427639 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.256044362 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.271429054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.276320248 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.275021133 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.276100399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.282173251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.29245051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.294073964 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.262807916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.269260338 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.275429482 seconds)
  done (took 52.293849774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.300726182 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.278751934 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.997300946 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.393758782 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.287258177 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.298595406 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.275744125 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 3.481750338 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 3.307480649 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 3.174939429 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 4.805119006 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 4.423041856 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.337865657 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 3.440376356 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.364754697 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.281362573 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.397477461 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.298185085 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.284090296 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.255679227 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.266072671 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 4.541834903 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.41707587 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.27354733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 3.087243902 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.421221502 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.292650099 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.285244547 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.262474775 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 3.300143732 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 3.431754903 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.334629579 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 4.172836232 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 5.075154745 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 3.595419453 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 3.209683859 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 3.481567907 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.294872063 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.254724869 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.302072239 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 3.530697896 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 4.159174331 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.282013645 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.276204489 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 4.607594974 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.407022865 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.275948953 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 3.650252459 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 4.417055972 seconds)
  done (took 147.797848159 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.338744652 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.418086501 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.321940589 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.263239013 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.42345432 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.304905144 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.341462075 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.256416205 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.274424121 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.278645888 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.430922469 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.454717173 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.292183079 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.264776891 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.372204464 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.267564987 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.277245919 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.320032714 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.251229721 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.260860415 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.274680026 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.321067703 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.430725654 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.453631123 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.283613135 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.278062217 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.257600077 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.265992922 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.442889856 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.280345654 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.293293539 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.290106862 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.396137494 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.382836458 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.291958375 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.298474056 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.435730805 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.28147449 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.251330509 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.263270215 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.317924277 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.297534594 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.314492255 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.406120976 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.279707994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.437731064 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.282587178 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.265207842 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.399290659 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.292068387 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.302888944 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.473903935 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.267430973 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.253436848 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.262797014 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.416687807 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.323512509 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.286922885 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.256729033 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.424342128 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.297394667 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.303100487 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.454261943 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.273297994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.274125263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.455792479 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.398980861 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.296330753 seconds)
  done (took 160.415608911 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.265284448 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.427059869 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.477569805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.468853282 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.410135467 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.409818724 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.424736429 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.432692653 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.429767418 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.410315464 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.418271244 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.394769898 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.402181864 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.39184687 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.42208824 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.396278914 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.400212877 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.39550955 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.455469619 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.432115692 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.387012999 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.45644733 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.417007273 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.479421356 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.647207276 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.400503267 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.439448491 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.404038243 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.457677536 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.41524237 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.641798985 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.4449886 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.432045527 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.467623205 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.625611761 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.405621511 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.302550228 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.425680934 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.427618954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.447399805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.377785584 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.444312862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.430677242 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.39968304 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.414366198 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.428030502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.475939557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.643373724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.378339128 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.430204225 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.396243799 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.452299868 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.428881074 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.414596816 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.486861535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.386422771 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.479949355 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.475170523 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.381170528 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.480507288 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.32200077 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.201317802 seconds)
  done (took 152.922983967 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.113786459 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.043406687 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.101027779 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.038375506 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.033743695 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.102104398 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.025978442 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.052652526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.03548198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.019638459 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.029381578 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.122940264 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 3.381071618 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.034602622 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.128946113 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 3.636076044 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.467228659 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.456914167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.321541398 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.320838201 seconds)
  done (took 47.514197114 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.27581974 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.245951629 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.238317997 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.386707908 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.268960928 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.411576868 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.228622016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.252886785 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.264649368 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.27014421 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.233780699 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.218074341 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.244159167 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.437548463 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.211721174 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.391594301 seconds)
  done (took 38.757248405 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.247008714 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.240929818 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.218915088 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.220424201 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.231932815 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.261540228 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.258447502 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.260751729 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.232913119 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.68017537 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.249967107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.241681357 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.271311821 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.25570914 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.244251971 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.228426188 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.22246179 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.275448519 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.265348283 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.249879794 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.815706452 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.257923093 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.162906918 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.133593847 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.145416651 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.695573752 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.133728572 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.14725677 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.126997941 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.133004253 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.143093712 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.599978831 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.14154461 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.144505739 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.140091126 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.127558054 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.136316925 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.14637351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.123464346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.134555519 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.148444146 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.102298595 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.055404643 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.045377116 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.042752155 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.040573342 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.045414177 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.492452964 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.981426677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.045729437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.045485498 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.043973225 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.992695941 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.453800979 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.037375217 seconds)
  done (took 123.721838281 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.021202666 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.027831967 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.977188552 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.022535568 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.086738817 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.016647985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.021025455 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.022451125 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.283804028 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.355869158 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.418024114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.372541763 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.401132079 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.413587991 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.421873839 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.406407785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.362873216 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.425289351 seconds)
  done (took 42.013269862 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.361372021 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.35944026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.358783923 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.360635087 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.359381995 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.36124419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.358828948 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.359784091 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.359489419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.362917267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.363713399 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.361654403 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.363815789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.364937028 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.362738713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.357167566 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.355928985 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.365196242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.361849081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.363904583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.36220686 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.364222072 seconds)
  done (took 54.234639328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.983954169 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.967482938 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 3.135283945 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 3.560362839 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.624374066 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 3.178700769 seconds)
  done (took 20.736904789 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.449479342 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.425377802 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.405451651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.410670187 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.430254928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.438642988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.436195957 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.45098303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.425534298 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.663278267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.447547339 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.428838033 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.421657008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.49381776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.422574185 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.432400608 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.459640814 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.44763708 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.412960987 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.451141807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.456266156 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.433582294 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.456619001 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.441188891 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.458547352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.498619991 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.427369169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.670770094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.449496061 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.434529199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.429190904 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.46389795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.431875584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.658478145 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.414618666 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.431010211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.453138042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.453987311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.428443542 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.493313111 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.408947263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.42950756 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.43047641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.45949513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.43414304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.458834848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.452061363 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.466207297 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.457417401 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.663435655 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.438328758 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.487036652 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.434819568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.439625035 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.433459533 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.653536226 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.66600129 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.490038109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.433752405 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.675153412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.496397958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.433267716 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.48660385 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.668906213 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.433551923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.49394897 seconds)
  done (took 165.45157169 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.489668161 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.407929482 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.459633227 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.67293471 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.492726885 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.453922029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.454800201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.456830509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.457475983 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.429402694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.460205138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.459861909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.493693663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.497343659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.463321959 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.454086643 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.455497508 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.489852859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.430805802 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.662023932 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.451704783 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.49579789 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.494877384 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.496495471 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.660413359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.452434675 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.457149462 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.451536455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.453223601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.450889265 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.461766137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.461097273 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.497848164 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.40922764 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.492686786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.46026915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.450304112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.458768338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.452003554 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.446957396 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.498745181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.457793632 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.452692948 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.448260395 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.662295417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.458554665 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.461635532 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.420203154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.424376547 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.30180627 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.435058697 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.517419643 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.560552567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.39376618 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.368977285 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.448834368 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.392886831 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.342352158 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.35615269 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.400530122 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.452728942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.4113807 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.589691447 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.376886964 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.378404871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.410960894 seconds)
  done (took 164.81410503 seconds)
done (took 3810.94070522 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.301862197 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.444253064 seconds)
  done (took 16.949687698 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 2.30167807 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 2.271944406 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 2.445753178 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 2.332737826 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 7.310096796 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 7.341040482 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 7.364854406 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 2.29029745 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 2.327341912 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 2.406871029 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 2.306015183 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 2.442140027 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 2.395922154 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 2.30267641 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 7.358674413 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 2.30249473 seconds)
  done (took 59.773275622 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 7.291176007 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 3.871037299 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 4.379215138 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 4.023144371 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 7.327249342 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.027178601 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 3.442087885 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 7.085265644 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.59229132 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.765868174 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.546595602 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 6.211296054 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 7.25087131 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 7.337089552 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.923922547 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.744877699 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.81395216 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.945729224 seconds)
  done (took 82.795556683 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 7.325104495 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 2.415186637 seconds)
  done (took 11.999336437 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.339752344 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.30921301 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.301998411 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.318276465 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.313500274 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.327779297 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.316092993 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.310330235 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.332341397 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.33285489 seconds)
  done (took 75.417447161 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 7.306061019 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 4.890771476 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.84067505 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 4.488629849 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 5.293104663 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.830262868 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.468497322 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 3.063541372 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.378780894 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.325549197 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 7.495183738 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.697867327 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 4.260493762 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 4.41026217 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.853769828 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 4.208062077 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 4.309278562 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.722546897 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.676548617 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 4.709388793 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 4.058335661 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 7.257778786 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.662182927 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.107571292 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.328037301 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 4.872578417 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 3.815788685 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.493102271 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.363937321 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 4.284775043 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 7.427707331 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.51786681 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 7.179806956 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.459923791 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 5.736524446 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 4.000392224 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.996878066 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.521524103 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 3.803527686 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.691523089 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.748326737 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 5.221021785 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 7.412998224 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 5.192647886 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.497547259 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 4.582597802 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.211047191 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.5568109 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.397416401 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.502862657 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.927005737 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.476273474 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.517919753 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.444726115 seconds)
  done (took 228.719628985 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.315303762 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.806270326 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.493044285 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.323011046 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.66268889 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.525656214 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.087086343 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.750177008 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.323903393 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.517612242 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.453010298 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.463429807 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.302796397 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.319223241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.302047201 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.322033178 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.465564458 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.754562026 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.317521412 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.305407187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.513557225 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.571976161 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.424106818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.322727261 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.480101344 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.53245107 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.739639955 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.426891678 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.696085686 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.330771599 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.726739257 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.309215574 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.30959412 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.292905242 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.692339605 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.632295491 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.760538117 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.282384723 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.990786089 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.294661602 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.934827057 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.467629984 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.645449939 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.462657967 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.452428705 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.535833258 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.98701406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.317879912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 3.03342421 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.488163112 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.51544477 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.517545882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.604015563 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.315847599 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.754951755 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.328290853 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.298908916 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.587979847 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.473425421 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.441025556 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.314863782 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.294560879 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.305786181 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.564594967 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.342059695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.426640232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.297692767 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.312905745 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.440778429 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.436054337 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.454662103 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.535683654 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.561161559 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.314672553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.608873397 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.542447386 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.738688389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.570703996 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.319362805 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.323405984 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.723324098 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.764668269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.482881262 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.541188778 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.623347125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.613136411 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.839867534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.323088199 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.530893497 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.455904357 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.689180538 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.476813789 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.696022674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.161037419 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.308451118 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.31244637 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.671494558 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.420883745 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.321521633 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.859819771 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.557408083 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 4.409734117 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.503277261 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.773063595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406531391 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.325766702 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.903606542 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.302519795 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.520444867 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.583310901 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.329867705 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.317978711 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.474649664 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.263897987 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.339208238 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.587819769 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.71915165 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.338285049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459400846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.304737182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.549278993 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.041592169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.561909041 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 7.119679012 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.57730497 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.50515678 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.470907099 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.317305448 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.555468542 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.557599987 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.68333057 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.619192551 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 7.324288968 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.301334906 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.600109614 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.33857577 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.307494337 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.488575384 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.21414829 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.491796163 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.322654138 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.710287403 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.469771184 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.707623461 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.319728563 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.549707458 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.570530492 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.761929464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.335004588 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.456917824 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.309096835 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.341475754 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.472127566 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.341165857 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.314853266 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 6.207708274 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.19588203 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.312803011 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.41990469 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.904397598 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.537762414 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.527911098 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.411507581 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.878111682 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.607382331 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.898059114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.874498953 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.443488557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.281795369 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.292248169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.287272856 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.524394163 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.54006626 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.281970188 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.27584593 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 3.004166519 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.731598858 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.294421025 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.4563607 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 7.027094081 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.641070306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.483667951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.251563298 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.658989921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.298109583 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.607984789 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.808658252 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.405343434 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.154537097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.151350415 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.156282984 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.160571607 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.373431444 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.387526315 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.893337982 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.294966237 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.419823588 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.291327864 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.37724156 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.54522145 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.078064701 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.265546444 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.037196034 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.47549509 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.011532609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 3.212871256 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317178066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.005924816 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.307903976 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.349637907 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.236705378 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.465076896 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.008280732 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.368522647 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.265796962 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.479048021 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.823923343 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.290937253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.320034792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.412744178 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.124531709 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.208928678 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.284912613 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.959740057 seconds)
  done (took 992.004760465 seconds)
done (took 1469.890764399 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.036879961 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.177924226 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 7.39144009 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.392514835 seconds)
  done (took 30.998913669 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 3.345973732 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 3.439130643 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.56337845 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.398143355 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 3.740816557 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.438732978 seconds)
  done (took 20.246054012 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.392848911 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.395108203 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.393514588 seconds)
  done (took 24.496203116 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 2.696989336 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 2.814883357 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 2.553399512 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 2.50195912 seconds)
  done (took 12.887461312 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.426956712 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.417557527 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.39395298 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.416508948 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.394465296 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.394489296 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.424889354 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.422104941 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.394973455 seconds)
  done (took 24.011672729 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.973687614 seconds)
done (took 121.548346194 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 2.669325028 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 2.690966466 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 7.39214616 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 2.657646836 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 2.538187268 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 2.753073463 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 2.504740535 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 2.41473843 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 2.704653377 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 2.805521422 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 2.91221803 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 3.506555852 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 3.86040692 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 2.832061885 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 2.687888836 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 2.415768707 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 2.404484326 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 2.464007407 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 4.181102073 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 2.575138741 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.995521134 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 2.521641615 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 7.156473587 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 2.418627815 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 3.335213308 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 2.54505674 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 2.664235959 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.401639884 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 4.855375062 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 2.408318927 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 2.50203696 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 2.873682601 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 3.613411375 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 2.752397461 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 2.53586574 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 3.311928327 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 2.823710453 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 7.400677268 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 2.650959155 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 2.778709504 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 2.688634843 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 2.515783198 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 7.395765506 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 2.681995526 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 2.816338396 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 2.404501164 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 3.413663504 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 2.559333185 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 4.061470818 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 2.548427508 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.821957086 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 2.393523737 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 3.088994483 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 2.467814586 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 2.530020889 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 7.562277765 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 3.330930759 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 3.880597326 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 2.549139947 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.711329409 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 2.413782301 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 7.394116294 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 3.385333594 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 2.411250621 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.393503258 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 4.091209685 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 2.664674543 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 2.221418104 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 2.502315516 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 2.127633062 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 2.284699755 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 2.301336757 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 3.003950979 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 2.442382216 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 7.405338941 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 7.439165439 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 2.632930963 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 3.472592548 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 7.484940153 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.321429478 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 4.644537321 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 7.313448457 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 2.586356528 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 2.626832556 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 2.459840612 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 3.776400483 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 2.844037542 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 2.698041637 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 2.760897669 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.360221123 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 8.837991976 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 10.292312596 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.447133038 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 7.315359654 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.467030206 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 9.205092569 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.991679597 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 2.792638293 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 2.472085117 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 2.857573176 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 2.332977676 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 2.352446806 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 3.818969263 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 2.668119628 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 3.114007765 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 2.361401015 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 2.492629824 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 7.334229737 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 2.586467333 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 8.29402931 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.418378181 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 2.844621268 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 7.317627262 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 2.35893863 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 2.899526946 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 7.341956243 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 2.675385106 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.730608453 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 3.460958691 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 7.347748251 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 2.573473434 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 2.34747393 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 2.435694552 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 3.87709071 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 2.685437281 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 2.5371886 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 7.343228188 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.912913024 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 7.327648648 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 2.551871844 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 7.328458019 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 2.901404832 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 2.86917604 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 2.345039912 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 2.59018709 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 2.448163578 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 7.347357229 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 2.633395052 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 2.375966098 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 2.554750409 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 2.64537564 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.661068526 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 2.505908612 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 7.327329915 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 2.68780749 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 7.338392059 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 2.563268944 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 2.683212876 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 2.482782929 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.640465586 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 2.432682744 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 2.33693639 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 3.232847701 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 2.772085817 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 3.016957103 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 2.847046668 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 2.534060747 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 2.469538494 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 2.865586375 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 2.566335494 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 3.140171722 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 2.445153885 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 2.384014954 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 7.351141566 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 2.346247514 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 2.380909111 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 7.34098578 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 7.337779671 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 2.599363655 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 3.6286508 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 2.820509174 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 3.182925532 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 7.346309684 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 2.625726272 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 2.488840118 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 3.274904244 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 2.898395796 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 7.307796015 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 2.61211828 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 2.861388667 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 3.457978621 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 2.379072994 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 7.353352387 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 7.392882372 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 3.080621593 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 2.360912175 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 2.579355317 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 3.992881703 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 3.829663785 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 2.766878399 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 3.630682823 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 2.372140829 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 2.687869261 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 2.595944783 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 2.632076259 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 2.535687112 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 2.799350278 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 2.481938705 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 3.723541308 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 3.38402775 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 2.643264775 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 7.3554736 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.7211039 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 3.68775174 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 2.77544384 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 2.684505772 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 2.579571694 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 2.495466495 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 2.630591159 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 7.337595149 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.332191725 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.80537016 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 2.644759708 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 2.364634239 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.347296255 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 8.820940777 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 3.168401746 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 3.311410823 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 2.43105363 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 3.821175453 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 2.484548021 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 3.505701293 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 3.858599699 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 2.337158791 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 2.637928469 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 2.492994024 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 3.568517933 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 2.603531996 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 2.359924231 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 2.469844443 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 2.549699758 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 2.500152547 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 2.545270624 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.313165315 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.666498053 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.326317936 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.714932656 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 7.35954748 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 3.333544388 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 2.351667795 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 2.333193701 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 2.599587425 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 2.50742741 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 2.673495667 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 3.485857476 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 2.512958039 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 7.328524497 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 2.486819946 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 2.738231109 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 3.12628967 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 3.875050381 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 3.325966833 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 2.348318213 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 7.353562709 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 2.765217479 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 2.784365677 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 2.391334782 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 2.458577963 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 2.863977075 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 2.374481771 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 2.501991419 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 7.3294059 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 7.366324008 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 4.270864148 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 2.469742602 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 2.591639919 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 2.817230614 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 7.309897303 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.954422404 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 3.462687378 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 2.770474503 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 2.8559344 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 2.397521554 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 2.445739532 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.335577173 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 6.356859303 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 2.74505486 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 2.36987957 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 2.53857506 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 2.709800244 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 2.444717648 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 2.491120269 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 7.356564175 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 2.377072394 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 4.002409483 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 3.651157624 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 2.848873082 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 2.347360401 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 2.726637052 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.354372393 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 4.181603307 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 2.359054729 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 2.447927637 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 2.715219188 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 2.489729965 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 2.721737655 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 7.340735509 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 2.446665603 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 2.599949502 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 2.352953915 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 7.345276269 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 2.562522735 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.334409466 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.639629858 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 4.399956579 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 3.502908392 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 3.332287114 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 2.605759217 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 7.346307677 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.426043473 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 2.515025963 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 2.479671545 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 2.956385473 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 2.834229257 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 7.334623371 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.544779613 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 7.40345512 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 2.703403363 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 2.349618525 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 2.352583475 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 2.474774031 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 2.417442224 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 7.351490973 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.832651552 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 2.555756202 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 2.812668929 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 3.54843506 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 3.256133875 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.343373669 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 4.100392997 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 2.496778688 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 2.62380956 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 7.05832562 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 2.367025593 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 2.489398175 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 5.966587408 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 3.532193065 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 2.385888272 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 2.641477542 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 7.344851352 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 2.89822635 seconds)
  done (took 1290.765903916 seconds)
done (took 1293.221100184 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.527471847 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 3.707806806 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.971450266 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 3.226143908 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 3.172027072 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.989321905 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.933228398 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.557151163 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.457181843 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.92510293 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 3.261819712 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 3.167419887 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.449854547 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.422222088 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.35043085 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.398300338 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 3.406957251 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.354130647 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.288155077 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.903501462 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.488818566 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.889978366 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.556902864 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.747279282 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 3.822878482 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.533083594 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.674187553 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.862609622 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.847003486 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 3.358392713 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 3.542252764 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.698442059 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 3.162742331 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 3.536212875 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.410048769 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.379295928 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 3.172883191 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.378991739 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.521705741 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.389415743 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 3.659727094 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.435852146 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.972085059 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 3.158246534 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 3.098635826 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.72755488 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 3.178144299 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.429558579 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.421165757 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.734230968 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.540642783 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.554413669 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.730302021 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 3.290333395 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 3.123809395 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 3.136465015 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.733871353 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 3.181247801 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 3.005820315 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.745793315 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.925558173 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.414683432 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.603867563 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.466201625 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.291147612 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.487574924 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.611524506 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.423916817 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.596261181 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.80876195 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.437332356 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.405166467 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 3.296061496 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 3.374409789 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.298526231 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.750853646 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.923496643 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.864459689 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.92517284 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.191864302 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 3.034144871 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 3.010872975 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 3.046039733 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.180773499 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.279441524 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.871455288 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 3.031569176 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.972950378 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.234975052 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.434755853 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 3.038590008 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.605985657 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.54472021 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.272631153 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.212123058 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.710010662 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 3.010163451 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.211462262 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 3.35019039 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.425038029 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.853168934 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.271653503 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 3.014358804 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.116325009 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.128820912 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.271631943 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.272373653 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.447114327 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.250539501 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 3.195654002 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 3.399521139 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.1571127 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.250706695 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.178629521 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.126640241 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.875564163 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.324942588 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.908312499 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.242688161 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.987100594 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 3.71123804 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.514562603 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 3.797993707 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.716816527 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.609648803 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.517945197 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.525394585 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 3.360182993 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.525585575 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.527075389 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 3.605360383 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.873901328 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.842183099 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 3.380093002 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.643960918 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 3.116854664 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.658713677 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.646258766 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.522997889 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 3.322904205 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.519517377 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 3.725826742 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.721690881 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 3.798849185 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.663594279 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.716998251 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.564142325 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 3.665764669 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.609883078 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.582756543 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.648090094 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 3.547012055 seconds)
done (took 424.605721676 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.788771391 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 4.761306555 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.705443552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.710209566 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.810748765 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.785350051 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.492304513 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.864344654 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.537006165 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.841892215 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.664955329 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.556579228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 4.787361652 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.624434011 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.778130552 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.672006768 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.537325567 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.684106933 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.886818098 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.780776745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.442933091 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.67217479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.575362438 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.837192042 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.425350937 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.438209629 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.779446572 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.552292742 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.688554809 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.437960094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.442498914 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.688220999 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.776660518 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.535796651 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.845778005 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 3.422365807 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.81772254 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.521886334 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.785378827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.784669667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.701486273 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.21359761 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.434714554 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.46916877 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.580865305 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.776039111 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.497729362 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.670798703 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.425961764 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 3.425946415 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.690193674 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.48792321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.557611885 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.753188644 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.621320342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.535849242 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.910339005 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.93914202 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.781917575 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.738572768 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.789431224 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.8381602 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.841692896 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.604816369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.446662269 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.706335708 seconds)
  done (took 214.530820289 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.82234064 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.71974748 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.827136411 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 3.878974009 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 3.006877724 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.883093573 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 3.918838987 seconds)
  done (took 24.404336369 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 3.492999059 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.463776641 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.665796285 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.719734219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.481256835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.606122868 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.561344133 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.44413545 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.69752417 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.517077558 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.791348881 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.71724129 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 3.388293038 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.434563765 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.559695099 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.712144286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 3.441597994 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.540769167 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.538659011 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.732641966 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.442731586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.42211152 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.767631287 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.556893953 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.478369756 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.514072751 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.476895072 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 3.449806195 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.515251143 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.466325369 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.491580068 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.592610345 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.473798979 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.422896552 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.494249435 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.794792643 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.478354394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.524997328 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.609555879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.43464752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.429055087 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.450525837 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.540802208 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.2866541 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.192698297 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.543290743 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.352468254 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.392178216 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.368816941 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.469679845 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.659871708 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.351189893 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.414118382 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 3.319550342 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.663267345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 3.340659525 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.466391758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.385316534 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.397585571 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.480354344 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.378024924 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.646984772 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.614988588 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.385389459 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.636715782 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.679602404 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.374945107 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.395105278 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.390231887 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.612848592 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.40137748 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.627210472 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.420748864 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.459882205 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.443850853 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.537298778 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.581639211 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 3.187190792 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 3.159733682 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 3.333820668 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 3.374457222 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.389312338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 3.70585446 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 3.341591738 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 3.315523922 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.400123363 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.455078676 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 4.031876287 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 3.319508577 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.406698639 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.727053981 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.37872493 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.464101564 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.443708745 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.412391861 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.489676666 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.620601573 seconds)
  done (took 269.49332054 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 3.788979302 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 5.035028612 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.594034581 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 3.637503937 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 3.796190879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 3.981581867 seconds)
  done (took 25.113786197 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 3.75892613 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 3.268968513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.47680931 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.407206129 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.451905547 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.405096956 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.395282724 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 3.637761663 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 3.569419518 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.4651829 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.395819587 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.411403002 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.3857295 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.549246618 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.41249798 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.404608177 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.396696083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.402433263 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.422782884 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.490512531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.570359182 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.459852231 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.468496624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 3.326028502 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 3.498543842 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.464302406 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 3.386741404 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.383147775 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.401779813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 3.845289448 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.622946201 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.407177345 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 3.310566056 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 4.823401572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 3.217073148 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 3.380776596 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.570477674 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.45673924 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.475996332 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.417530025 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.430934491 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.47508303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.440845894 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.44128868 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 3.794878256 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 4.294701358 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 3.528596437 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.71417083 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.410538836 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.42868867 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.428695035 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.436166479 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.425704721 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.434605018 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 5.298197566 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.837787541 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 3.45074027 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.432042705 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.457962564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 3.337919279 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 3.54586971 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.455748007 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.806280703 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 3.393237759 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 3.381382047 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.444574785 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 3.360420776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.572752528 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.513701341 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.437058448 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.429596687 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.430448917 seconds)
  done (took 210.233041849 seconds)
done (took 746.12890828 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.434616305 seconds)
  done (took 9.732800651 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.509520526 seconds)
  done (took 9.901205069 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.963012889 seconds)
  done (took 15.214468095 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.454826838 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.40918361 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.383358992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.393721284 seconds)
  done (took 31.94858295 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.605106948 seconds)
  done (took 9.891657488 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.398490947 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.35527755 seconds)
  done (took 17.120653125 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.477211559 seconds)
  done (took 9.772966113 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.970277483 seconds)
  done (took 10.298468175 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.391695646 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.359412605 seconds)
  done (took 17.062401205 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.353736999 seconds)
  done (took 9.63942493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.210060489 seconds)
  done (took 11.59861102 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.381683299 seconds)
  done (took 9.710087316 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.469712049 seconds)
  done (took 9.73428199 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.255924325 seconds)
  done (took 10.540613892 seconds)
done (took 184.430078415 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.376181372 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.355645803 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.365896686 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.372781254 seconds)
  done (took 31.741311229 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.698727734 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.703451447 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.702284248 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.717259019 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.595897316 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.648558204 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.708762432 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.685210613 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.638614313 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.729161623 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.696033815 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.854573346 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.746401814 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.66606635 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.641911757 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.76381156 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.748134117 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.692547295 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.647356833 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.64866377 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.870312093 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.856436797 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 3.12203239 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 3.115151794 seconds)
  done (took 68.172798918 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.563872924 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.71968506 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.536938871 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.713110625 seconds)
  done (took 12.829747074 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.40934022 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.723700369 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.720869219 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.691539886 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.73528406 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.561487655 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.687641221 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.553230429 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.535906548 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.577267704 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 3.026939919 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.491272523 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.519081993 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.74730979 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.568238093 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.400367349 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.36866646 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.539667315 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.712139401 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.574658942 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.650387969 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.726038267 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.716201127 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.707965611 seconds)
  done (took 65.236862289 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 3.134576589 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 3.311292747 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 3.704907549 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 3.293345501 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 3.107219815 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 3.155506678 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 3.633307936 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.900857974 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.612515178 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 3.598551349 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 3.101758739 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 3.158124744 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.528705605 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 3.259611103 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 3.139779973 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.555713327 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.534839192 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 3.269015312 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.963294287 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 3.671446925 seconds)
  done (took 64.934530422 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.389616792 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 7.357223352 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.663158266 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.532705352 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.372238271 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.401425442 seconds)
  done (took 37.001352112 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 4.4679869 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.531739765 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.703156383 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.680592774 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.490045187 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.49481335 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 3.011936298 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.598121718 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 3.190947958 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 3.112737813 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 4.038670504 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.852496802 seconds)
  done (took 38.481355119 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.368938795 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.382376322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.377126527 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.471737057 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 3.294546529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.234951984 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.702088267 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.344932884 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 3.581935313 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.590231337 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.236742554 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.549624654 seconds)
  done (took 56.438776684 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.617304778 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.742844722 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.672108362 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.256185417 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.862773245 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.428201677 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.829835109 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.875737043 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.180739505 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.196834356 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.851260811 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.465964873 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.869100324 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 5.310832257 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.402653439 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.693505885 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.202168216 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.872414623 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.776956745 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.433565034 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.325086597 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.516731504 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.376425944 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.914083886 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.702632551 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.376847024 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.496555991 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.614637157 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.442004542 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.51536777 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.376692599 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.926408038 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.599751893 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.686949157 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.897634359 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.446772614 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.393467888 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.637548924 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.960579216 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.647991419 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.499220277 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.491870241 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.916836893 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 3.465085709 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.611598803 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.177866213 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.432272439 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.97130533 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.347070308 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.530303617 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.25186557 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.246089178 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.822971184 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.238190317 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.535534223 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.662374685 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.538864953 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.637235308 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.622203115 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.477141757 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.549906001 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.442954841 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.61711858 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.334192537 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.908496394 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.719106974 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 4.807481938 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.680896199 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626454617 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.776715626 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.761065784 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.53510686 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.136166181 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.524297807 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.934194652 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.790855147 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.777976055 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.391709011 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 4.148396372 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.893687464 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.32174805 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.486181114 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.882672714 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.333448486 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.379637634 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.541914091 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.946232321 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.354166796 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.437195784 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.490615475 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.699847863 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.481759799 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.520759117 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.63211902 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.079122119 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.357586324 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.246830219 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.682050546 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.321004452 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.902364973 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.359689303 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.391993514 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.379186643 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.007330574 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.758905379 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.408243483 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 3.139240855 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.161882519 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.775954091 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.908906585 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.557341442 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.365086128 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.795656785 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.72399277 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.370770121 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.098063998 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.632598752 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.529926504 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.651267978 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.388325286 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.281785122 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.643319434 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.451453739 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.277573876 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.808355085 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.488218649 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 3.607793632 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.467139162 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.270681113 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.359155951 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.5440455 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.859789346 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 3.573339217 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.420513543 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.265752054 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 3.473553008 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.808305 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.426975754 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.663884481 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.779828628 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.947863475 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.812347486 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.291844324 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.198811597 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.822548991 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.620957289 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.654448115 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 4.464714187 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.474598031 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.432900405 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.336620979 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.467037335 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.344307815 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.881841288 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.332772748 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.878265429 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.285226972 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.665754078 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.354176741 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.16814266 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.387788886 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.504084916 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.908271299 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.28203662 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.371387228 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.509650906 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.571758889 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.206693484 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.183257404 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.58141709 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.422618129 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.73707344 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.58864873 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.879433557 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.431461968 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.591450814 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.269559977 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.443687281 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.80586249 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.3360235 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.399988892 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.668215337 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.121711311 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.072447392 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.194918218 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.470268242 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.270649446 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.764359155 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.080445254 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.655130367 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.100104479 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.019969388 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 5.420408391 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.598248497 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.900146209 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.464012088 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 3.021115357 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.537578766 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.828854785 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.728562581 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.482329003 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 4.161601709 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.512147171 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.819221195 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.82324598 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.763011438 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.42331553 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.453870179 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 3.927968763 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 4.974587559 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.591646789 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.908707554 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.72400577 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.482955641 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.45801994 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.796485976 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.473656957 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.075272344 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.731731959 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.288440487 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.990031132 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.654612889 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.453766128 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.47592491 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.650460802 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.598769314 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.568224962 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.336604235 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.109749365 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.729941186 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.784545414 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.452397784 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.384871595 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.613269697 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.653271475 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.714630267 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.830964041 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 6.014355978 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 3.098089098 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.476292808 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.167285128 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.539521842 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.427156167 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.077904901 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 4.715396752 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.322297701 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.618814036 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.989588473 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.576410377 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 7.571592832 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.685018448 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.395630565 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.883652249 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.987571934 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.396069375 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.391877243 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.515921606 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.388512243 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.815961999 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 3.266334813 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.605018491 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.567049337 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.63904961 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.651087079 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.607630437 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.797786555 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.854431502 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.750886094 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.342547599 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.500627217 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.453281343 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.783081149 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.416571645 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.710525901 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.129500252 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.064613144 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 3.203495989 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.912330834 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.638934131 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.563745526 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.833767359 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.644383093 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.716384915 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 3.340286059 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.022228127 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.378163477 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.514773345 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 5.348914524 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.478747309 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.686388311 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.769622783 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.849186528 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.475690228 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.887652111 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.845003707 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.51163423 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.526447635 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.668885255 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.436412668 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.637560038 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.380157073 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.706158183 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.848443245 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.408534269 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 7.044630113 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.557335329 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.69603208 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.556403464 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.115020811 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.412854246 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.520729142 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.881484625 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.578486782 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.521186912 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.736590264 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.504729322 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.412843643 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.4692397 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.448993295 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.971172695 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.878593727 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.989660513 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.973304095 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.764426927 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 3.156968745 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.396628859 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.554911567 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.526094198 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.260968009 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.561616532 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.774564157 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.397840341 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.645141325 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.70031338 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.478144545 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.913336992 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.388269319 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.968608433 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.483152557 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.896642881 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.95737159 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.125536599 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.883316385 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.714633071 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.916589449 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.400670083 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 3.528180285 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.644880228 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.152471131 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.316848938 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.242424027 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.190073838 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.574782543 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.794487235 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.564043131 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 4.223973775 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.562503772 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.599171703 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.535327703 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.544061214 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.33309422 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.921887792 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.164678852 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.666643177 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.554823695 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.621194359 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.567734774 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.765383316 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.899296871 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.639327313 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 3.04411109 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.747184927 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.509254696 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.169577949 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.197019866 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.463628902 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.691805445 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.298932126 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.575519287 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.613739566 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.229108713 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.186988445 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.567823804 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.968980665 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 4.144028239 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.053460735 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.643312998 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.821322459 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.80803371 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.335323102 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 3.104246493 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.489847123 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.732579853 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.737790798 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.274492951 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.763396761 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.606746287 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 3.393505433 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.16469184 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.471584124 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.26998873 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.315305429 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.690055641 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.37569394 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.214737317 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.208009053 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.68510879 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.149969088 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.097729683 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.656594777 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.287190002 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.267534081 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.071042957 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.598444326 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.466771635 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.243578156 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.027297213 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.822317672 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.023055318 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.216000128 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.121068392 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 3.249689383 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.887171875 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.148578617 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 3.678515903 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.591674992 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.212711834 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.258796414 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.023894037 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.836718581 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.052078778 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.739408407 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.889924935 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.312008233 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 3.587798169 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.501112865 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.414859049 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.770579462 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.65647742 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.745192513 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.74665423 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.932774299 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.864498513 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.790734947 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.688904015 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.904139471 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.459267595 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.689034477 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.344701285 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.341004909 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.529821428 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.700652352 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.727217566 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.386386492 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.881959577 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.650529796 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.62135748 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.495309411 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.480140658 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.955837269 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.591174237 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.604851278 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.495699344 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 3.570309764 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.602417011 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.324193614 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.636923151 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.253375128 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.149562647 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.222937414 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.315519482 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.457565518 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.379404109 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.690347747 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.282823598 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.763845855 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.388034966 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.003827516 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.540531019 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 5.571017149 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.863786941 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.478421269 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.939420061 seconds)
    (484/608) benchmarking "6d"...
    done (took 4.12485476 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.696468565 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.741323182 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.462430414 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.768902986 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.656817771 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 3.94830507 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.478941653 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 3.079876751 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.951890389 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.482249568 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.932649863 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.552275083 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.630444474 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 3.218824316 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.960809103 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.47931403 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.301908719 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.499369338 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.923030465 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.082529264 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.482361301 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.611093238 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.269583851 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.444862162 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.482117175 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.543517657 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.007962171 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.490176795 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.9912389 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.683340556 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.623352098 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.482184666 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.611613815 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.482068575 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.62325196 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 3.071595637 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.718776141 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.747230612 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.698773496 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.485909231 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.018346413 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 3.16197437 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.888537894 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.667855799 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.775827987 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.826671206 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.105459351 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.770452647 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.039192568 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.840998331 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 3.682244492 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.916766413 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.732420779 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.502955001 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.71477656 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.479589113 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.796402154 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.75784509 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.048117859 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.731656657 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.714686501 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.648288999 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.479594931 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.010486926 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.937640411 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.347534241 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.481475187 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.762279315 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.432630897 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.280486635 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.945646097 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.567466402 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.580422385 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.324362164 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.91530163 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 4.750192052 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.529909569 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.391021058 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.602554863 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 3.941834839 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.370736769 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.1929481 seconds)
    (567/608) benchmarking "2d"...
    done (took 3.256791988 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.553560961 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.744899348 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.362375146 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.648272707 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.399494272 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.358147383 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.877285905 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.483338666 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.795175609 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.397950475 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.917522541 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.386051844 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.578751815 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.556635866 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.862202123 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.409785819 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.367950547 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.58299186 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.403442239 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.429203877 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.713657411 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.477523476 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.675750027 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.860942286 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.705631346 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.705603601 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.306438697 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.229383571 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.379523538 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.719757163 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.431913096 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.965456711 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.573787372 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.907680412 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.209543101 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.385818975 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.960402252 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.645348567 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 4.120957686 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.521352837 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.917280559 seconds)
  done (took 2717.813112254 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.416726159 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.480835548 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.441662786 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.423447873 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.572922696 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.579645601 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.438969242 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.448052386 seconds)
  done (took 62.145512048 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.406358843 seconds)
    (2/17) benchmarking "4467"...
    done (took 5.420026436 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 6.929207125 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.58963129 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.444819454 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 6.653784006 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.7611274 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 7.016235334 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.569282442 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 6.5024841 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.478310425 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 7.394681847 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.604866437 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.397031018 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 7.198342722 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.894923075 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.451114283 seconds)
  done (took 115.069533697 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.458690603 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.208723082 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.404450324 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.734095855 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.475344565 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.661896715 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.391510181 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.436622774 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.477928631 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 9.08618114 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.455576182 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.427289747 seconds)
  done (took 94.559244705 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.434500729 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.451037832 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.442566254 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.461595882 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.431504497 seconds)
  done (took 14.558264149 seconds)
done (took 3381.407479626 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.7096934 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.879591163 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.943095442 seconds)
  done (took 8.181184517 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.481143079 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.559816713 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.661356604 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.552748985 seconds)
  done (took 12.606799153 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.694857613 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.909979588 seconds)
  done (took 7.913982256 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.879807418 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.431176413 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.972558229 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.44010791 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.405418561 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.407734832 seconds)
  done (took 24.593790946 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.444153098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.446267119 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.45390017 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.435938178 seconds)
  done (took 12.111365259 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.399123823 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.451549219 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.388039676 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 3.495719433 seconds)
  done (took 25.05093919 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.624136667 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.473644731 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 3.183659738 seconds)
  done (took 10.611772491 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 3.220031208 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.799713351 seconds)
    (3/3) benchmarking "Float64"...
    done (took 3.177873832 seconds)
  done (took 11.539310169 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.385412782 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.364561275 seconds)
  done (took 9.093438755 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.555331464 seconds)
  done (took 4.861135913 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.898163498 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.898925863 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 3.242032457 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.26921246 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.454076739 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.728146943 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.782507812 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.729783967 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 3.108173329 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.951018603 seconds)
  done (took 32.421157214 seconds)
done (took 177.296040805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.358089278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.852752088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.602709008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.065037358 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.532630448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.610516255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.51797992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.869554215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.709900492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.727385698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.559368216 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.521005956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.459948417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.828237113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.500806839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.746363205 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.57343342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.337656811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.928285381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.228290391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.505949541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.709758801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.28234075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.683575174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.585452357 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.551651076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.485472348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.772635648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.188745828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.501276478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.569036515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.440191538 seconds)
  done (took 194.119133557 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.425783697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.41710041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.417897738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.407622841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.242447895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.388010967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.41091497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.436134675 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.105277517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.102745972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.441514566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.233343475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.432303298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.433476209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.423617065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.413593049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39815098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.395609075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.426064192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.421477425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.408272803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.050076141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.43010875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.051952326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415104026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.43937586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.423224597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.445792886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.442932499 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.4255964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.451717068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.390797205 seconds)
  done (took 230.080587038 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.361255624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.26492273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.22705602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.417037877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.523853834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.477593855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.403069607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.396450645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.391890079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.408011315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.356585687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.366905305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.371049385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.379958147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.404786882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.362082737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.393725933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.379932533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.375906502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.272362556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.248144771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.277509806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.272814148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.246649911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.25956809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.275083055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.159680166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.147646065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.095104092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.158839268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.109951233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.114826082 seconds)
  done (took 236.21827461 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.390177246 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.149552639 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 3.084202393 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.422689294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 3.029567464 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.113608226 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.42055781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.389284303 seconds)
  done (took 24.024134819 seconds)
done (took 686.777798788 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.801984831 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.008895847 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.566502916 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.735207633 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 4.137884476 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.774622708 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.736751041 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.973246891 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.301683731 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.972694909 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 3.293702133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.681030015 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.453776929 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.48477165 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.54278368 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.82913358 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.812499657 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 3.095747194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.707520181 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.240105404 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.624316338 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.428348871 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.997686933 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.357153184 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.164874882 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.438075756 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.578266728 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.86251112 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.604299051 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.682569324 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.471774464 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.915218147 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.642866561 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.604896786 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.830307884 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.924825399 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.803005453 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 3.94683767 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.56646777 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 3.273116204 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.292424695 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.062126205 seconds)
  done (took 132.297857746 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.212954836 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.421375792 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.582633595 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.505457639 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 3.044371463 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.394905852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.353189957 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.318093585 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.233971705 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.376208474 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.344073721 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.791522539 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.334599311 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.750883517 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.336217428 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.392357696 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.1945272 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.71677074 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.337947072 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.34468962 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.221054384 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.295563653 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.15582656 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.338301579 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.481340105 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.564193612 seconds)
  done (took 65.221550378 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.58892383 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.700385331 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.858317111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.908044258 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.757484221 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 3.581351771 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.937613606 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.685417212 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 4.576741532 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 3.999730908 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.611234559 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.687024491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.703382316 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.882299687 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 6.15164848 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.665152677 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.688718401 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.662164879 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.715196906 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.800793795 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 3.783421262 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.602866093 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.946550758 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 4.733471558 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 3.199716358 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.709194523 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 3.969200882 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 3.157251183 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 6.137274675 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.643839398 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.663697481 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.929744691 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.982034218 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.867609597 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.693029408 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.560917172 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.557402964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.660093846 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 3.479921624 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.660446761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.937327559 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.612321673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.977630325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 3.123377477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.549864974 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.758557598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 3.013281165 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.675405824 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.668332839 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 5.141830096 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.900991503 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 5.517458899 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.678313657 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.728149564 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.660837477 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 3.933952643 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.734847021 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.849206293 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 3.737800712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 4.334604786 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.60593425 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.927407256 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.713715847 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.540237371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.836413388 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.758228773 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 4.752324292 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.783880857 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.982756095 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 5.913906334 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 3.27861483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.620008656 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.568417064 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.616917419 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.712356843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 3.053355079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 5.566653918 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.759169406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.010077103 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.940552069 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 3.856453219 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 3.167214878 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 3.586524076 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 3.772655879 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.674629289 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.553332434 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.649218899 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.879530704 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.9224316 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 3.03536342 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.107992374 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.835054412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 3.914538411 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.779426983 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.749753524 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.855426891 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.548409239 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.421769466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.766516595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 3.091499737 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.55045981 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 4.739233908 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 3.165330531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.813211234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 3.934863071 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 3.516558904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.868136988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.476227082 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.90171388 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.43701387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 4.674945942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 4.792754144 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 3.795819708 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 3.838847638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.461051338 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 3.011976646 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.602825969 seconds)
  done (took 393.744801806 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.461053032 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.408196354 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.42153549 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.42630212 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.417967223 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.997715976 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.510749432 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.449912921 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 3.024469667 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.522265106 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.424958917 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.440673948 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.435709964 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.443116741 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 5.008491964 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 5.00044364 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 4.219498643 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.450126818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.452234686 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.447125035 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 4.156576759 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.441612749 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.443359522 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.430563592 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.426089993 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.451857439 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.443871879 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.442328132 seconds)
  done (took 190.570465335 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.502462486 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 3.258050004 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.514619238 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.579065933 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.835005959 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.505377124 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.793260572 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.595027295 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.514749527 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.476373571 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.512992592 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.716230772 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.795324296 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.941757874 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.582781386 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 3.070142604 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 3.105792412 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.639040233 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.481045874 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.506393215 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.652820261 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.738615417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.610510293 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.888377037 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.669854714 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.993470451 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.87680277 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.495978625 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.617150049 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 3.35274957 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.541952942 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 3.493473336 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.617646538 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.474488305 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.733711874 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.91196443 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 3.186103543 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 3.133415518 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.713218803 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.452941613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.453282096 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.776922659 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 3.006279817 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.557256966 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.478186195 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.901496572 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.481205355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.664980914 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.665107029 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.456303098 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.580890413 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.596918793 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 3.055124096 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 5.254685492 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.689464063 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.592546655 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 3.103136496 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.820428956 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.494773529 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.883917258 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.468961056 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 3.347592776 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.612829121 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.572263058 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.497555047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 3.350403983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.599316259 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.900061285 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.872257413 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.484899363 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.896713116 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.713602374 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.460307582 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.637974056 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.637611158 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 3.368767695 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 3.185029327 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.620722123 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.635141688 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.571611918 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.67082045 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.451207414 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.805791677 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.584945547 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.46837556 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.870715789 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.907428437 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.468374862 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.505082528 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.63116419 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.643507965 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.718707786 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.982656514 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.575890351 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 3.107785377 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.698748742 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.879657824 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.525010124 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.609078646 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.456860117 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 4.746819051 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.711677597 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.488340101 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.81187636 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 3.033577549 seconds)
  done (took 294.763219782 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 3.250694074 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.558320787 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.720435215 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 3.112386883 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.870853235 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.434990192 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.684154767 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.551397621 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.800368954 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.710090704 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.738124579 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.565012524 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 4.222881786 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 3.28495595 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.567575551 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.658473046 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.527623756 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 3.082594393 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.824706314 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 5.296071117 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 4.050381613 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 3.208314138 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.827692832 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.861108427 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 3.023696907 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.983687585 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 3.169404839 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.631295854 seconds)
  done (took 88.56356682 seconds)
done (took 1167.220209361 seconds)
SAVING RESULT...
DONE!
