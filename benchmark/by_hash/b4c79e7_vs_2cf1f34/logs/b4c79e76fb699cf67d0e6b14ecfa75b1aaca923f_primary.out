cset: moving following pidspec: 2770248
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.118373068 seconds)
loading group "shootout"... done (took 1.084938833 seconds)
loading group "string"... done (took 0.677026021 seconds)
loading group "linalg"... done (took 8.885251163 seconds)
loading group "parallel"... done (took 0.22121753 seconds)
loading group "find"... done (took 3.510844709 seconds)
loading group "tuple"... done (took 2.205767294 seconds)
loading group "union"... done (took 13.27009049 seconds)
loading group "dates"... done (took 1.723912578 seconds)
loading group "micro"... done (took 0.21208538 seconds)
loading group "simd"... done (took 6.374008789 seconds)
loading group "io"... done (took 1.457899149 seconds)
loading group "random"... done (took 12.34218859 seconds)
loading group "problem"... done (took 1.589811046 seconds)
loading group "array"... done (took 34.112611243 seconds)
loading group "misc"... done (took 1.949879215 seconds)
loading group "scalar"... done (took 62.017913574 seconds)
loading group "sort"... done (took 4.885497932 seconds)
loading group "sparse"... done (took 17.893020391 seconds)
loading group "collection"... done (took 23.536995789 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.445609179 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.114812696 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.163415005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118713077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.2343192 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127487246 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130600398 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113478844 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.089212997 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144038874 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136964886 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431655045 seconds)
done (took 5.674603037 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.306946818 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.242590776 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162220405 seconds)
  done (took 1.552082219 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.091791366 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.058292719 seconds)
    (3/3) benchmarking "different"...
    done (took 0.065127933 seconds)
  done (took 1.358932468 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.063371908 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141787515 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064534075 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064860131 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067443223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064257422 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06435749 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064430194 seconds)
  done (took 1.676154511 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072616225 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065932201 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063849925 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065243227 seconds)
  done (took 1.412060059 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.066044943 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.125438794 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.062798349 seconds)
    (4/4) benchmarking "different"...
    done (took 0.062493499 seconds)
  done (took 1.459088789 seconds)
done (took 8.990076922 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.174974675 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.788703596 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.860933394 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.14612251 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.319504924 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.348149599 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.121767372 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204579083 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.113914565 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075689029 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.161739201 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.081050149 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.487650994 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.489617008 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071562816 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.187951908 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.624073395 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085684104 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.114884725 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.226878888 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.082271592 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.083577553 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088416757 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.071700627 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.158053791 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.180683318 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.631260185 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.099124397 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.168090322 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091595003 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.070503237 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07510361 seconds)
  done (took 10.665494091 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115604078 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.111279847 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066882405 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.102535673 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093892559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068048706 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073404685 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067768193 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086643939 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131765179 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090391428 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123282288 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066399051 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06786312 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098173047 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.161012027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082581235 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081200051 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067240184 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080558152 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.094098528 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079332938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077343731 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076998832 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.112517102 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.135331475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.089303114 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109066964 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067066653 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087301542 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.095038252 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.108569459 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067393278 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065379111 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.109017652 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.084752971 seconds)
  done (took 4.469349054 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.038265011 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099557057 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.106180292 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097199413 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107459915 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.094565902 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.148293513 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.122126685 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099846624 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067484484 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.176110606 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.698672516 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.134816876 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.11631577 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071277878 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.147323491 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.366621941 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.921059652 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073061233 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068228788 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.098414543 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070223699 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.14090152 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067087835 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.179058347 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.648247878 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.192176487 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068478309 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096393137 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.111154129 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064482845 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141338209 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093832314 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068800379 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.582922529 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066099026 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063489545 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.085004573 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.100294387 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065806873 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066527587 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077437174 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064687445 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.117797401 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080254609 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.556928238 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069446904 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.64580013 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.334845189 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073708399 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07209018 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.10203321 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064350178 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067653566 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.621858323 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.154787919 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067151594 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.291349079 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.070767547 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068199817 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068926586 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.100991044 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067424372 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068371603 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072848941 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.085395106 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.016812967 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.152493278 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.086938339 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.066495875 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066386703 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.064903624 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.427227507 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.07717754 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069785622 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.06474444 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071032263 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067134348 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066480772 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.111752614 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.228931145 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.089912137 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069390642 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066246629 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065365618 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.58221825 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.985922134 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.069849362 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067228911 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.506831672 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.065359162 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065924608 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06744499 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.088475196 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066445457 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063136065 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101280552 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068621658 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.094555508 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.59473885 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.067635795 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.063484152 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.519947817 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070499518 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09971745 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.124105582 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067607301 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.107556743 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.06767272 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064845793 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073440342 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064426003 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069198615 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065567316 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06645545 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.065311177 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068725403 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068328305 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06733588 seconds)
  done (took 23.476758252 seconds)
done (took 40.797157825 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.404432633 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.07851469 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.078776643 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.078716179 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.078540458 seconds)
  done (took 1.919715954 seconds)
done (took 3.217113599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.265455259 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.09311074 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.063643256 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.210005979 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.0897107 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.180532223 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.224364169 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.172913036 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.091288571 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.090934475 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.091648269 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.228344024 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.240386811 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.092847758 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.165733419 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.240252705 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.095144112 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.065623224 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.092222846 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.093575809 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.093764008 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06620382 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.093481838 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.093901967 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.165779765 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.092083072 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.064593559 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.166409529 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.092895061 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.169064524 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.093964073 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.092904359 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.093621137 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.16738564 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.095243655 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.168054477 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.065545171 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.094564508 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.094917397 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.097041892 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.096588074 seconds)
  done (took 6.386521087 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.090709997 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081056845 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084444845 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061800604 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.0708363 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080797103 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061558739 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080496591 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098574529 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08127942 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08109547 seconds)
  done (took 2.161211181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.084898218 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.085010349 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08390626 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061431237 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072526794 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081775409 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061486026 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081814203 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085422534 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082781402 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082668591 seconds)
  done (took 2.088675644 seconds)
done (took 11.853057125 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.193594382 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.090669403 seconds)
  done (took 1.497998859 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.561226664 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.193254836 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.100027414 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.224387046 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.096431845 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.125755039 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.311684851 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.124733263 seconds)
  done (took 7.0089994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.124310798 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.098583575 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.068439339 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.066702796 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.067441007 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.067482749 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.071868338 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.067640373 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.066979036 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.069456561 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.06943019 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.067274441 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.067964234 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.069506795 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.067430024 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.067871542 seconds)
  done (took 2.511561175 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.073042937 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.069858574 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.070890116 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.061384568 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.072254574 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.072114915 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.072862941 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.072577367 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.072129537 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.072033149 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.069082491 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.071842915 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.071111117 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.069728038 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.072216688 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.061574614 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.072343307 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.071706432 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.073646752 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.073785673 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.071832215 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.070036605 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.074917611 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.071712696 seconds)
  done (took 2.948653708 seconds)
done (took 15.196714438 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.191622688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075481434 seconds)
  done (took 1.489012414 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09724964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095789074 seconds)
  done (took 1.431201258 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075570695 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060058572 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078326045 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070055809 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06098701 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060597063 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077814753 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061362043 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06097772 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061363482 seconds)
  done (took 1.906342712 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065057854 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068228156 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066259831 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063841979 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06649865 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062170287 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064641893 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062576704 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068659532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061264245 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065119881 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083646807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065056033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084043533 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064920446 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065524268 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0672901 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065580429 seconds)
  done (took 2.448807877 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063770086 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061424958 seconds)
  done (took 1.366645347 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0665538 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061433127 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063492696 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063310654 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061183641 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061068031 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061692774 seconds)
  done (took 1.674341183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.444558263 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.195092152 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.436002123 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070566899 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086189221 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277518265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066027583 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070254835 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070455213 seconds)
  done (took 2.954640997 seconds)
done (took 14.512207794 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0880874 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.188264283 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116256628 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.432402362 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08048744 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068048293 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.097267244 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.2208298 seconds)
done (took 2.545386728 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.324487192 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.375373494 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.316123313 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.070333299 seconds)
  done (took 3.008070793 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.432948871 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.170070564 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076361024 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068349765 seconds)
  done (took 2.00929919 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068100648 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072000988 seconds)
  done (took 1.396279937 seconds)
done (took 7.99792228 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077441855 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061769391 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069073855 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063633522 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066202616 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063150209 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.063267324 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064175537 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062065329 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064300594 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064277655 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064380996 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063994478 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063942818 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.063484627 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064603219 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.062276347 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06399959 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064013844 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064489801 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.062767596 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065233549 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064165602 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064720258 seconds)
  done (took 2.789652082 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083321279 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066190274 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067288882 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066865817 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067386766 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067299496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067492567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066370685 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067711408 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066434282 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068412457 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06892505 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066639675 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068298375 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066581834 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068276224 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068088045 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066799268 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066653966 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068395842 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06793874 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0672095 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068783213 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068855871 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069192406 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069135522 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067662876 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067719603 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068813899 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069251837 seconds)
  done (took 3.306640904 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069829238 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060574611 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060857225 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070806467 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060460169 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060594951 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061098776 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06033725 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061258447 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061985412 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061583545 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060779126 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061841759 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060704068 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061012055 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061562416 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066096955 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082881309 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061487463 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060917808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065690527 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.061212696 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061162715 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061080194 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061742198 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06139057 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061430609 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062004616 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.061975344 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062667859 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.061980403 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066518731 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068863339 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.061844905 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072741918 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067276283 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.06193866 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06926826 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.063082621 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061979589 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061792524 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061762416 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.062010665 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06178857 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072976144 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.062223186 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063364761 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.062775079 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06226164 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.061563284 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061980656 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.064151752 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068185972 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.063621336 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.061814108 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063467376 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06183511 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06319795 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.062139353 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06193395 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062138297 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066131533 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.063579339 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062955343 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08415224 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.063824739 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073292094 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06217951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063062933 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066546133 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.063204374 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082769781 seconds)
  done (took 5.885321293 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077597052 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074021968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080434075 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071679609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06539219 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062336523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066018234 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062389909 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07248153 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06664217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062630037 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066054956 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0722191 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069437786 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063977723 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072522383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06673059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066096636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063286549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069114438 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064619792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066981406 seconds)
  done (took 2.790368522 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156827309 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068245621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11278343 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072623145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070775009 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072598632 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068403011 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068382459 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068651203 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06946714 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068650356 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071061101 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069012747 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069348938 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068936006 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06926134 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0695584 seconds)
  done (took 2.653110816 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082265724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067612533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096408692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067596691 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067404188 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067672884 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071898758 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072419171 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067860893 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068155608 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072532946 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067989787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067991639 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068202163 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06788022 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068064739 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067831245 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068263075 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072534501 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07241281 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072957231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073775516 seconds)
  done (took 2.841596726 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084100553 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067311234 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084886965 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068792082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06186684 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061973796 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.081278138 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06797376 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069411651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067488248 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068020401 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062487133 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070256514 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067637837 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070485525 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06792109 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067875057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068159279 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0676954 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062559241 seconds)
  done (took 2.66109866 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108525837 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065227851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065045024 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082284347 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060686761 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060769865 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065603429 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060805331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060743364 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085002636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060915327 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060786964 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065613013 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063811076 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060865718 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065465779 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065514414 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066383501 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061497585 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061297002 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085703957 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061609102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067913289 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061684229 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061627559 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061873542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061911292 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065049005 seconds)
  done (took 3.147509795 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065371888 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061662014 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061578983 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061425862 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061455318 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061248901 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061298839 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061637204 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061788326 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061898888 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061528879 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061532555 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061437976 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061601324 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061567728 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061477112 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061649265 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06194736 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061835239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061756074 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062647646 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062007319 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062695546 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065606407 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064008554 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063087496 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063141267 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063296551 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063199095 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06266549 seconds)
  done (took 3.163308798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073629336 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069060273 seconds)
  done (took 1.433653751 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062072687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075448016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057305965 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070344442 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066220584 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061541024 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06696683 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06675917 seconds)
  done (took 1.8096677 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.092087568 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.114171827 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059578651 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.05985173 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.088957558 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126743593 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09998065 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073463993 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074134053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062692903 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060094285 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099288813 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059256278 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073354183 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06075545 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072119956 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06771131 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078402892 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07341859 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058414951 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073048963 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06078975 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059606447 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061170774 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060968596 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067535842 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076578088 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073254193 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069150207 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058070226 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079679358 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058987558 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060178023 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069064423 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091461716 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059282993 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097223164 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059629304 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064169444 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058826 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071924407 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080699455 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074110434 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077884612 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06075418 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060981256 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058632422 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061131471 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063159644 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068848145 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058789406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067019378 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058467286 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06052651 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070185321 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059629792 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064357125 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069038268 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073546495 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070457597 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072122812 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075548074 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068810068 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068335394 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06040686 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079963707 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061063952 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073289251 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074761619 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060507994 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073169316 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058804792 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058103306 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059042177 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094334054 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061185265 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060715304 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061359127 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061393219 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062560524 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070129624 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065071628 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067774683 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06316213 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076466691 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069584197 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060097489 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069547059 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.080210333 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064739894 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061153923 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.078905323 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064957641 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060607739 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080872252 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071889521 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.064064465 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064098895 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066270883 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078252118 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065044065 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062192711 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072780028 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.065570942 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.250292481 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065383432 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070241363 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.061377705 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070412798 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064278856 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059842956 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057535973 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063315214 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059078178 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057011208 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068018643 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058259409 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073101208 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065198259 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073331665 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073754726 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069301018 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074798508 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058202215 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057150436 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076719959 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068083983 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059423078 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076710497 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057796829 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069216619 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057817724 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.05943378 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067923655 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057241588 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059736398 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057978934 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063697131 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059342133 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059732473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064321029 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067355393 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070715131 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059338562 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067578174 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058620627 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074492609 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069148389 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063780962 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062095648 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059810343 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071660237 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066648238 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06944974 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059100724 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060289992 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05968092 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07060727 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069576725 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061238782 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067848187 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064358937 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.05999525 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059629789 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060535012 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063486641 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062682102 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060048497 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067733271 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068747039 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073853009 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066727441 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068918129 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06145564 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058952473 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061211406 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058800111 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064389216 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069096959 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075616159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071713742 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081196784 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059645538 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069781245 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060848694 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076856095 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073199733 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060480083 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064127402 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058465144 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061031625 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069496952 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071556022 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074063271 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075289886 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064754503 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064764155 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059463533 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07559139 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060155345 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069846344 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070774684 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067469409 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061042905 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062741009 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070726373 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066006298 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061822581 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.077453304 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06930871 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061114438 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076624388 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061817383 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.073172803 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061086338 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065591202 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067215855 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063836483 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.231459683 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075278288 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057793115 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059206044 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07477286 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060111695 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059736648 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066890409 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073990508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063327169 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066581567 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069357895 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068876535 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063275928 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068603126 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059051074 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067952081 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060939156 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070355104 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058265765 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076595404 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057098646 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073794823 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058491261 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069549642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058834401 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068036716 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059036463 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07545483 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05964507 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058886887 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070047123 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05702544 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067752975 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057668173 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063752745 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065097764 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067829701 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059802724 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068121665 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059783044 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067827397 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063388646 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066912748 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067987218 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063616002 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.05838704 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067888005 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070576558 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067843205 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060542776 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060549084 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059673091 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069128844 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06090704 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060622609 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06818738 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064546323 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065681629 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060843548 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06114472 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060905329 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068439788 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069402358 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078181571 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068517045 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067284359 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069043752 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058972727 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075674805 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059509747 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067384987 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058312896 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066556086 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069339626 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059642267 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07955853 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061057409 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068056989 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072547803 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06870691 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063770768 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078146464 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062770194 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068434923 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068016638 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064487766 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066760891 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061377731 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068531938 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069778922 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070692805 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060781744 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067838746 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069371334 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061668742 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069344468 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061744202 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068829385 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062763059 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059997487 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066058469 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073196688 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066312287 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066754955 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061545641 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060015951 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061499035 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070086387 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066744739 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070859722 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078014865 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060447525 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.065629903 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061186342 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065719915 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.241955387 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069545754 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067338219 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063789414 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057695455 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059897266 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060063871 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058551684 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061176723 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057329635 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05782559 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069214046 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059773301 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063184874 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058457796 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059233397 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068680705 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062406502 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058760444 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065305031 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057951932 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06386607 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057315228 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059558051 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063274373 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057706703 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06243397 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069125541 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075207002 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065379972 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067698925 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.05945691 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06762029 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074163775 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065819182 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059295648 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067989255 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057397835 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07728167 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068053949 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067408927 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068513848 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059429385 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075593989 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063433973 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068732672 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074921909 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060491043 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067164894 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.05895774 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075627771 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064343229 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058793654 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067837998 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067650708 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065438229 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071398036 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060087135 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068163125 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064767673 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063400411 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061188882 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061094067 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069129013 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076397159 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060336674 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065015166 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068052807 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068369828 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064431362 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072301528 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068177108 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060840435 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061255929 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063630965 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060341172 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071973349 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060068302 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064644415 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064736944 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059163966 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066840411 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076792172 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06963267 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069710423 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059326674 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058777545 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078313299 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064262581 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063326709 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068761264 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070554028 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072933664 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069889194 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077813095 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060943033 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066557271 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073161423 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061089529 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060021207 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064436617 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062932781 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071140708 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071863372 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069342312 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063626122 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068764038 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075599996 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06287124 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066427148 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068642343 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062808678 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073083751 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070509162 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071100076 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063554685 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061609238 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.224008658 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068815562 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067105722 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068439467 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059675919 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065762661 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072789035 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066598894 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061418031 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058082556 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061353576 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06814745 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063560093 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058036717 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0637524 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06271326 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065698402 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068202126 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06361967 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058022527 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075869007 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067117181 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068204866 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060223698 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060332977 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059164981 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058083845 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070264456 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.332630601 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061472055 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063963581 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059998634 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076604414 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067312951 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074693797 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059219396 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063313725 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057947576 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071182265 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063488814 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058671059 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069287966 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057741072 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074302273 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.07104984 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065742375 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058747416 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064746791 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067807547 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074835569 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069162403 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068591684 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062436551 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069310983 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060851972 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070660201 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058906046 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058038803 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069764802 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068473367 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072431169 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058992832 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069990441 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061304194 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068066886 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067993662 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061118966 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061093169 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061285947 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069482597 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064516851 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069241129 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064608038 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077029171 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060384507 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071051515 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069132038 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071123902 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074336919 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072827163 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068405545 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06043395 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06766232 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068380914 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060888863 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065261958 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063070784 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082460063 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061520766 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061081645 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074691548 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067604028 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059935275 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067659652 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065274005 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070752625 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060952088 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070811742 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066795145 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061863192 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066133424 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066158042 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060008612 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060738174 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061043627 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0715843 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065569884 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061506939 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081973342 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063514565 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070820792 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073578731 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068978764 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.220835673 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058402799 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059659374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072595664 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074511242 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062231514 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06751007 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059737323 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068171132 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057299264 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06747288 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066788039 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067257394 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057717965 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058386581 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073637277 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074265685 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063509633 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074568678 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067818533 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059450302 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080297742 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068064193 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059463638 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069573271 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060234497 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057592149 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057532092 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059710061 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070069584 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057885875 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060491793 seconds)
  done (took 41.934356433 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102575101 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059520791 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058135265 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057968806 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065116357 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059511829 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058332252 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059556866 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059495693 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060536728 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058371089 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058423149 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.064246724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0737335 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06628661 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062324163 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058536675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059723497 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058501056 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059920634 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065269864 seconds)
  done (took 2.705916106 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064731656 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062314982 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061766327 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061875844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061105129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058269659 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062041305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058520377 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062480057 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059007861 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062540621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058566072 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.05903261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.058917062 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059028337 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060057022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.062628779 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064604017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.058672189 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062176645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060258335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062532605 seconds)
  done (took 2.705584226 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062917796 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059094054 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067620688 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057600942 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057467951 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060821743 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057565009 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063123554 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063088944 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063065814 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067988013 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058936401 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057876507 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064539147 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057944768 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059106068 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103136058 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059894958 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059429962 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058033699 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.061003431 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067998919 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058211679 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058631423 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063482769 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06173053 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058420635 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061238265 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059286532 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063400163 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059702277 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.05833769 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068223007 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06757618 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063580089 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063561419 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.0603221 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059589979 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058454362 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058470656 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067669874 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060083806 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058756484 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06015317 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068122433 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058521181 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058282651 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068279263 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058426464 seconds)
  done (took 4.415469026 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07352105 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116698266 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064342453 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.099387251 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070651515 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063745901 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064204467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.102487775 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059452954 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059795665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071354822 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071414416 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0609786 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062017385 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064274356 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060808212 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061994413 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060856454 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063864942 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061119691 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063789023 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065849232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071253888 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071518354 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062276349 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0605982 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060907828 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062517498 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071233683 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064224162 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062815945 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063160658 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0717362 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066522229 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061064049 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061270919 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072623633 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062077218 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061808265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06029614 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06144515 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063437171 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066376938 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073054988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061943539 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066731058 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061827645 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059703207 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072040701 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061694933 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065365186 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073069796 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062739429 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062093225 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063226089 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072361085 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062192205 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060849451 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062264205 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072047794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060362172 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062945283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073017394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061780234 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06519412 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073106449 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067044997 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063034074 seconds)
  done (took 6.036080246 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070889633 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093774407 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072701767 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072754162 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068453381 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068671189 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069073891 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068637831 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068386018 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071343581 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068638277 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131114409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065739622 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07035191 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068840838 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069356144 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069463183 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069416215 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069404566 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069256375 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069339197 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074018981 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069418077 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074164656 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074018203 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065947691 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069096599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069288142 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074302086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069296193 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07404643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069319536 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069374556 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077206014 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074092593 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069498388 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060188502 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069587131 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069787691 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069779875 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066217428 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074821454 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069603634 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066175464 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069802672 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06964365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074861776 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074619521 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07148697 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072738213 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.06990066 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075106342 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06986133 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070143799 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075247795 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078330034 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075265183 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075151711 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070145802 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075118506 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075184883 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078168476 seconds)
  done (took 5.892194139 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07630676 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064157223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077425575 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.057918513 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057959979 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067758102 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058228312 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05824595 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064398528 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06424081 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06583835 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067737759 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069556125 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065795374 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067639461 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069481924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067647978 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068236974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065087608 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068335255 seconds)
  done (took 2.729708452 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.063098843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063361927 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.05874272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074022674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.058718462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06610544 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.058993526 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059001718 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05904156 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05908521 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064163714 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063528628 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.05939704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066900135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06251901 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066530518 seconds)
  done (took 2.384258428 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064168988 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066331435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.09191668 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.05954658 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061139168 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058955029 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059655865 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058644232 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060918111 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07293089 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059942677 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.061662867 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059638113 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058770801 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058882341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.061562876 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060722938 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059656353 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059531092 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.093537287 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068301674 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060639067 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0624231 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060776358 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.061819806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068162501 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061513143 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061769251 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059986294 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062230673 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.061825652 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070934182 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06192889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060740917 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059108958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059746612 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060160506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062414893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062310015 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060185216 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059040142 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061716085 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060181689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060601819 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061553725 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062402483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061516501 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070469167 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060541515 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062355027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060597056 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062031912 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061226571 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071982247 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062992275 seconds)
  done (took 4.854584108 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079139889 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063753916 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057901664 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0578909 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063230856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063962772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06365344 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06393475 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064453185 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058214095 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064304534 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063363317 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064349696 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064652838 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064408675 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06401245 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058155447 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06409075 seconds)
  done (took 2.548710551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071400963 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063627154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.063773208 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059822724 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.059644059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064262305 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058477752 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059691302 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059777578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060105904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060116955 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.059801866 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059829398 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.059801851 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063655396 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059997238 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.059626941 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058603436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.060041233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058472947 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064745986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058949106 seconds)
  done (took 2.731984135 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.117041966 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082318755 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.156959679 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078264141 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089024721 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07033437 seconds)
  done (took 1.989414398 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094887892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095964131 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063640814 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06360042 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067908722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066139611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066326014 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066547033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069849813 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072247453 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066504287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069920721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070176848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071817427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068921808 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069061883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06748771 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06863632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064474413 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075730491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067566904 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071182583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067757895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067461246 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067840515 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077000885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072547627 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073600238 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067428402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070757012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068957955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067264286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070712654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073189391 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064258521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070365274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067257543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075325087 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069388604 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072864809 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064726191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069729555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071115069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070599748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071055961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06777188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071225413 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067913217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067828833 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079660669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069944558 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072996798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069712459 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071448596 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071551948 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080543646 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074449757 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073106283 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069913482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074970158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073369621 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069943087 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073248475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074784474 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070185687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073444662 seconds)
  done (took 6.102794235 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10498829 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064057371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066214374 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071741008 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071005202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066695049 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067822268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068139717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067214865 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065195207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103192157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067504564 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07165298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071920813 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069518814 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070434763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069956177 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076620615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069388241 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081986689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069112929 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073101901 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072491257 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074547562 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075566183 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070249821 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068663533 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067912901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067519312 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067806807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071168184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068131924 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072916663 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065100212 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072616533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068232225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068267334 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070678772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067724936 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069791029 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073292553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076623392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068412592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068513095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075135963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06879099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068977761 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066148159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068619409 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065730653 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07549196 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08052673 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076191747 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074499613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070404254 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073082673 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070908903 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071289529 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07086088 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074046088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075805022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070618182 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082671502 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070864057 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070033235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099307817 seconds)
  done (took 6.213231955 seconds)
done (took 126.978195279 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.253892539 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.219158085 seconds)
  done (took 1.878221844 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.104251701 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.103007043 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.124831549 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.070828103 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.129794421 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.222235879 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.174110663 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.073951351 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.07146982 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.074501057 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.071755973 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.073436365 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.077342844 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.076248105 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.1406653 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.077939719 seconds)
  done (took 3.099444243 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.121745278 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.209035864 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.106141977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069353434 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.152206749 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076223423 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.071029266 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074865453 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075969741 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.068941123 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117335886 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.082967283 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.073655119 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.074848631 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.071006568 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073447639 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07451558 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075743072 seconds)
  done (took 3.130543771 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.137237204 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.080231132 seconds)
  done (took 1.630095794 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161409917 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108476751 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14667125 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352647755 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.140771927 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.143037515 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14875394 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146021543 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116283942 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142003552 seconds)
  done (took 3.009048685 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.1152933 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116142307 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.353442792 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.109240795 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.091822778 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083087663 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081629273 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087936123 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080974929 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.082586245 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.133799857 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080983299 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079141706 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.133757111 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107847388 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116595869 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.078395074 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.086099184 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.086773113 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.078631866 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082283122 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086796626 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.191282921 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.085467036 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109029924 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.081721192 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084256433 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080621784 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081305742 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084883243 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085481613 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112500524 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.088917905 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.094218075 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.086519266 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.109140209 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.081238668 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111293895 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085553337 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08177024 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084511305 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.089725623 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.082211095 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.088629652 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.085028278 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087960363 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.091156436 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08039402 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.084545306 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.082127576 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.079415411 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.082922133 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.085056596 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.08365408 seconds)
  done (took 6.819030566 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.132315182 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.121882863 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076328893 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.12799819 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120550848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0756236 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136476767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110377652 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.128572684 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073537587 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073875581 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073155984 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081248888 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084806544 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.127325708 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.120897661 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075654461 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073927804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120196255 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120625652 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073098154 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132747248 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123283313 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.119485377 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070799106 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070892595 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070233221 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070367194 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079364342 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079163557 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070320853 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080364202 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081849946 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079862417 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070755255 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070968862 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071587296 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080337323 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085117661 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082142789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078289131 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070645988 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071341936 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071841202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072587874 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070200401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081826371 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080283039 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081549912 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072864038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072440657 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071553783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073005254 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080032763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079348155 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080468939 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08344222 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073004259 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072004542 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073614477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083587622 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080411592 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079757284 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07270532 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081677966 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071523442 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082226483 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084976374 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071762077 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071839894 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071557831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07136964 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072584637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079555239 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079552939 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072384089 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073145228 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072067924 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080326296 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078643359 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071120649 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081414281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070699326 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070920937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0715857 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072318058 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083151205 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081182408 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072388416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072417437 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071223621 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072276831 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070705699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235310018 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077574052 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076868671 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079094104 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070059133 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079246668 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077684748 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069776691 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075659589 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0696558 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069572462 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069691356 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076178649 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076020453 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077818182 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069586193 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06937401 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077666423 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079561405 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069309036 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07516932 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079461322 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076136632 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0684659 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078451281 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069090183 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078143055 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069462071 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078133142 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068879411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075862425 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069031675 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068303361 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069191186 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079085614 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06997275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069507004 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070136516 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069717422 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076980523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080883054 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070457355 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077685429 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07833208 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070636142 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079857304 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070046078 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080035566 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070483091 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070466321 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069351657 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081552312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069977289 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071013268 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069941713 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079820979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070223519 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079485277 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077274849 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069710509 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080745246 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079901854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076207805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080067207 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070984212 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070292628 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069534962 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070341272 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079991245 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081434839 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071582994 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069950212 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077176073 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080339737 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069681088 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077474822 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077449035 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077560548 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070116312 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070086187 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080863408 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082792723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078349961 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081549914 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080396083 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071261141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079052836 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082912963 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071443478 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085482453 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072292999 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083993943 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084189023 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07933028 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.239513069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079443101 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078304729 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077786503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079452587 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068328763 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068824954 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075468042 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068940863 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0719373 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074904989 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069405476 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07115761 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082270462 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069669108 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078889731 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068613928 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076356382 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068709287 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069653968 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080339275 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069096546 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069598126 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076548228 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068934861 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075504424 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078406668 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075638882 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068603658 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069307661 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079022989 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078617737 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068305478 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068231486 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069210646 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077871429 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077726593 seconds)
  done (took 19.429242266 seconds)
done (took 40.47599176 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.19982098 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.117800876 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.208222341 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.138757071 seconds)
  done (took 2.104253311 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.102089259 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.064462227 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.107798599 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.118743164 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.065353231 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.104656665 seconds)
  done (took 2.028557306 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.270519222 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.197048069 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.202732471 seconds)
  done (took 2.17497421 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.201733312 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.352073169 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.636864229 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.200456076 seconds)
  done (took 3.092032596 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.165712976 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149186779 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.086635183 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157669589 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.093962749 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.071000278 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158089938 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.075982754 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.106048862 seconds)
  done (took 2.847764785 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145839604 seconds)
done (took 13.895240578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.313688791 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.107686976 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.077295685 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.070854688 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.191903818 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.157942616 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.248073444 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.074018666 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.248918715 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.338688566 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.208427483 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.092999781 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.123399448 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.087836118 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.284257966 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.075667077 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.073250957 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.068717604 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.189524838 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.173503773 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.205984964 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.073091999 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.137550692 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.074770004 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.149853074 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.12391763 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.227154036 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.328825421 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.299331504 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.075328456 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.173833427 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.092514017 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.165042124 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.192123539 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.159604042 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.098837085 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.065306508 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.26710247 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.149447683 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.330088931 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.198645713 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.071652048 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.188603154 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.069782731 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.127980029 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.110740252 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.077782199 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.071167725 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.088849424 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.071030423 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086120341 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.071475349 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.201528846 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.06819497 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.138361294 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.162367537 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.209638537 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.20661579 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.070740156 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083184589 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.074210411 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.213312488 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.090310743 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.070666155 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.077883793 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.066922001 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.326739756 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.083791113 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.065508656 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.073911972 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.072057678 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.150048913 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.114143031 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.107686088 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.074907329 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.162464394 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.139307537 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.089850305 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.095206273 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.072344641 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.063631482 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.208762439 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.06794008 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.081180075 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.068833877 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.099355759 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.064022542 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.083658428 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.196267017 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.192814932 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.120724164 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.065002166 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.265945503 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.065148913 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.092526235 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.127429858 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.064493246 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.207424319 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.064361643 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.064359366 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.072525906 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.071338693 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.065905924 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.194486363 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.14844392 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.071728901 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.070463352 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.0646231 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.070080151 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.067150947 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.064655266 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.064450068 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.143382204 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.084970224 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.06506793 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.151906247 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.172315833 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075188716 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.082520126 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.12333234 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.066928727 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.072914585 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.071449765 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.17098001 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.072928012 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.18087353 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.067328335 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.087841586 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.1641862 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.139754013 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.151759309 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.065845251 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.203255882 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.075497418 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.06561673 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.072265263 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.093367151 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.074474106 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.080406538 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.07318439 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.206734599 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077382604 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.072996351 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.16624268 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.066575633 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.158627632 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.14238164 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.182274585 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.073696875 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077899962 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.204154061 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.090272538 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.096164917 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.089850601 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.07055587 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.066543875 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.067030487 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.081404749 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.066560011 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.067298261 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.08195 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.248579878 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.066206835 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.207262854 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.07443174 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.068025237 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.226430735 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.076368844 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.132837792 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.085896676 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.065403189 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.148653472 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.06560373 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.083545494 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.200395883 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.064478872 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.140147436 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.065403208 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.064646986 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.070928352 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.066164959 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.071988404 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.076379785 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.065146314 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.076942927 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.070813178 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.063544887 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.147577007 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.066258588 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.225122839 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.146577431 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.150458678 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.064408845 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.082649645 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.064613902 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.177807372 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.065015069 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.112278679 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.158441425 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.080071114 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.084216561 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.065128132 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.138508327 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.079044564 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.06399602 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.14545587 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.174366063 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.131967731 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.071912572 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.209240753 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.07372459 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.064787595 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.071715699 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.07224998 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.065083075 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.140763924 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.068794731 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.064915531 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.0652564 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.06670752 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.064383077 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.089767205 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.064640319 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.071307605 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.063999487 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.066524575 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.066893608 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.064641419 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.071878612 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.141251094 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.175147276 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.070045243 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.083974993 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077119758 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075259075 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.186786399 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.071186696 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.18717829 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.064948355 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.073551611 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.086466067 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.065476597 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.069233069 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.064769494 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.083627975 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.067774043 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.066205437 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.075965791 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.06597537 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.064980488 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.06568868 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.065805797 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.072995492 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.067327018 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.065217521 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.0652386 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.064721242 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.069550704 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.069724653 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.075075663 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.086328043 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.223301281 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.068051895 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.069319417 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.066851788 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.248409833 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.067572096 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.066508595 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.064664723 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.066228257 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.064774203 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.064130138 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.09127363 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.068139254 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.064149724 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.08494924 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.063483956 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.07248766 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.171819291 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.081047512 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.067972361 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.063715554 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.226362517 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.14627561 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.085257102 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.08352059 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.063825022 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.073145705 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.063668285 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.065118427 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.06596874 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.089906784 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.068205807 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.063825729 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.064062432 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.064122662 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.184754195 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.071101318 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.064022378 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.070681135 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.064296477 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.064016165 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.089813315 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.064024028 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.063989136 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.081833186 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.075423273 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.140480721 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.075131482 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.066001245 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.187582495 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.064149708 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.064661049 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.064124868 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.155959939 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076425897 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.06627568 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.064770731 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.070955339 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.072480135 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.246749449 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.069838077 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.067172823 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.071369158 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.064373741 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.06446727 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.089044527 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.092445647 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.066800792 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.067400245 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.064801543 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.064322441 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.136837388 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.071448273 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.068620944 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.149691765 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.067472003 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.071683205 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.064775329 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.218231193 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.069825282 seconds)
  done (took 37.629270128 seconds)
done (took 39.165068968 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128009676 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.077956569 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075290016 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072394926 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075863261 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076109253 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076031921 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073624054 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076208899 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075098669 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.10583367 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063510047 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071253295 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.078662659 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072402625 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0793974 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075999739 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078739396 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064187625 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07902391 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.089022613 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.077019214 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072859597 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07892367 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06460484 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073089167 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119374583 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084150554 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068905158 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073909742 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071527579 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079921625 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071511388 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070973336 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081309833 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069123442 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.07480124 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070513092 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119563996 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069312294 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064488945 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076794691 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071125794 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071956388 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072627841 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076227381 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069290317 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.077845959 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063688673 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075245413 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119613425 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06961812 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.068851387 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072650906 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069322153 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073782718 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068831832 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075826763 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069139683 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.075812787 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073518035 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072089428 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064050043 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072802626 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074190255 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071600691 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062981206 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069386439 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06424722 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064529714 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063675673 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073333965 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071419535 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069343786 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063573522 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064306668 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063855054 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07625276 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071500112 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073416843 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064997136 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070477756 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069504957 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065011525 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069706527 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076094717 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.063767984 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06480447 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063477518 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079192188 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070926516 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06432156 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07654662 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069909044 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069898235 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064715911 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064249673 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07153658 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075101844 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.065907534 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063915509 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070420509 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07002828 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073948338 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.065183549 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0712539 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07189997 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064960955 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075354187 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07330259 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.075765638 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079690273 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075734544 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.077998809 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.066961775 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065281989 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.238066545 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.06477209 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069180277 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071377557 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068780687 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071512826 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.063967258 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062569979 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068591078 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06897795 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063653193 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.063612424 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063580071 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072100201 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070839756 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062360125 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063281226 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072023999 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071986933 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062683774 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06243989 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071908647 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.063725844 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069035756 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068377907 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072260278 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.06279 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.063452068 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062323716 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062803865 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06229613 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068228459 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068399865 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.06366525 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071843278 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070334153 seconds)
done (took 12.715545447 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068218983 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.107069813 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.114879598 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107815616 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077405124 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065285086 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068021688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.084058116 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067518162 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.089655435 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089523038 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086390792 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129090406 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064191931 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064865548 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065218049 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062611367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076585457 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.113262835 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088422545 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107751492 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064530041 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.078794912 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.084976725 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077784771 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08425671 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065878552 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065271353 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067519288 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082380846 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090648486 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064495368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065625187 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08386771 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081050747 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073638466 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065511305 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071762696 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06545588 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064357559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066437043 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083499087 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071764411 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072130416 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065650643 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065907904 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065645746 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072600162 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079158752 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071105224 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.077446907 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.08201053 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066319504 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064653868 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063084942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.072691629 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064790131 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065677142 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065540936 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064708508 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065387684 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067639924 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.076573538 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079597085 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071541912 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.073134497 seconds)
  done (took 6.549331219 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083874512 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092795895 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079471146 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082137327 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063825161 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064210506 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064471198 seconds)
  done (took 2.107049568 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068155402 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103941437 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110963676 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111072464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.120425439 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109275387 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065351461 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097636364 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064097118 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.105576728 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.118755393 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11380555 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067848174 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07691275 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065300277 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.113790734 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065805468 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072141594 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.109844983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115400085 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069631893 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095644883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07883681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065962208 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.113989341 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106135734 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.072005415 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069129516 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07062432 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069403756 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06738736 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.092572364 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108135183 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08213462 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069860678 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066475376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.105470068 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06697084 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.106148769 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074890763 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105635023 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068459714 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06875153 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066166743 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06741978 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.110674637 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068790886 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06737848 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068328401 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110266584 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068340123 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112240599 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071815599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071531738 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072588773 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072133202 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073145449 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066408867 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109742394 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075696605 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067433936 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119336083 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.117836044 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105046095 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117979348 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.074921654 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108827097 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105571237 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065892028 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065636864 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066374835 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118856943 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.069525755 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068433727 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070870505 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.075119502 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.116298144 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139506152 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136035344 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086967744 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.074002494 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070269135 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.238143169 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.122830962 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075683613 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072599311 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069197001 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068343032 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072071053 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071044417 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073363261 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066635833 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.077173332 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070259987 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071207773 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119780419 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068874406 seconds)
  done (took 10.054727383 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069382655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066911907 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065420719 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065317637 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065657017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065841514 seconds)
  done (took 2.025818755 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095556703 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070189774 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080925391 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072320346 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098676251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11525128 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112674448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071139272 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085987731 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081569643 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.112194151 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.113373782 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.110528309 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067057896 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106948443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066913422 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108254776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069355705 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077000049 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067655583 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080256598 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067548971 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069736028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.119736753 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070002952 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067949716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067133969 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079497307 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079213278 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.068733955 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067638275 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068537823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075314636 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.068629398 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.11214237 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076195604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066771006 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070851944 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070204101 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068726585 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112099364 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067880796 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070754536 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070869077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.06744246 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075131169 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071025176 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070509304 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110075325 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070810986 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070682316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069655818 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068206705 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070478668 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074975187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067282012 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070628218 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110412295 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067677951 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075718869 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066735081 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069048163 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067962787 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068464433 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071850639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071079616 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075527142 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067920677 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067940295 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066705046 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071102273 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06673101 seconds)
  done (took 7.296865886 seconds)
done (took 29.590769153 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541014771 seconds)
  done (took 2.098759094 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.953324027 seconds)
  done (took 2.553661357 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.224636356 seconds)
  done (took 11.835623562 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392549757 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476675803 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.770251433 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136388153 seconds)
  done (took 3.415322036 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.877460561 seconds)
  done (took 2.484268606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239486789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225541968 seconds)
  done (took 2.092985159 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.459573094 seconds)
  done (took 2.058626142 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.265141731 seconds)
  done (took 2.868306745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236093154 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160850261 seconds)
  done (took 2.006154791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.640304337 seconds)
  done (took 2.241488383 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.779237569 seconds)
  done (took 6.417121373 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258975469 seconds)
  done (took 1.928538613 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240621256 seconds)
  done (took 1.846621811 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.622751545 seconds)
  done (took 4.225497415 seconds)
done (took 49.692054801 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086561457 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083938858 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083731516 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079516531 seconds)
  done (took 1.911539043 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075504771 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06859437 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071105024 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074883578 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071868558 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073058127 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.075569623 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071125783 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071937005 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070779736 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070648074 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070966213 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.073330186 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070010484 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072920429 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.074933992 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070925857 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071523509 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07439856 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.071090987 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.074006232 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070963895 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.070870604 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072571013 seconds)
  done (took 3.335301849 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080563855 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072306535 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075250224 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070929015 seconds)
  done (took 1.966551265 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.07877904 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.07685218 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085443638 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09068339 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076986824 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077082311 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.084315112 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084930014 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090995601 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087972755 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068625321 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067959765 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067025315 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086344325 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083627196 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062217686 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06358193 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077336382 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076463172 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079403871 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070138237 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065551561 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076643348 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.077727747 seconds)
  done (took 3.523708349 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084069139 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065236597 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083397337 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093621033 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095870176 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06564062 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080964514 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093409628 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132347836 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067134616 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072680418 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066356568 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107766827 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066866464 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08204695 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.114022002 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115591269 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070658146 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101636188 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066791536 seconds)
  done (took 3.418329061 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080787815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071764851 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071298207 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067605838 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077940549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076165361 seconds)
  done (took 2.156094355 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07220787 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.070869122 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068402351 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074211633 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.071294716 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.069294276 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.06853696 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.066687812 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067624658 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.069264428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068544502 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.071862704 seconds)
  done (took 2.588501568 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.217368396 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071280913 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06884614 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064165156 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.065642443 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064451008 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078917222 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067187677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082106895 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065098733 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065017949 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067067425 seconds)
  done (took 2.674594771 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.106709582 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110026977 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.150131807 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124181667 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.123916873 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103010742 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.176040993 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.102189776 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.176401218 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.149381817 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124552762 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09725064 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097294857 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.078268791 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106967324 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127167355 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.146447058 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080966754 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118746202 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.217693148 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141306728 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142164827 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.152936241 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122239143 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096927543 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.157790789 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10669964 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114467489 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.135042383 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132150151 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121800062 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.099995368 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.073047081 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071895943 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154555674 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.111456368 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125641661 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.098092195 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.112314612 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.094568338 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114271294 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.073065341 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087680461 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.118074003 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092113714 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139464473 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.096228657 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121366005 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084560439 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.318720343 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130900314 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.138750731 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.09011028 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107418639 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139680131 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114211816 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.137393464 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.109780762 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087166367 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.120764987 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.106898155 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100904166 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110480006 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080888775 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.181949856 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090399689 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113589821 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116280362 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098768235 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100748818 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.109510503 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.141509161 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.132860079 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13254921 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146784492 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.100911467 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127557535 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.107195739 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.134939581 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108366977 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.075092979 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.127440546 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133996913 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10589771 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105138161 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138038367 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095969348 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078738046 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105661677 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.124912215 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08317466 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119951112 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084925514 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.115695619 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.144583541 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104370491 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11913639 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.304026483 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078243538 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153934302 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10825685 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072575794 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.116386862 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112443549 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157830129 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096498872 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.077252203 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101612866 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108946382 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.161013362 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114788976 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085246682 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116560255 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147836017 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102989509 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.222751758 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103952245 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.150472704 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117248917 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092647189 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080289566 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.09756731 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12226169 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116090924 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120288227 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102520473 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.091770918 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092405737 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123091875 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100147114 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086845039 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.124477137 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.111612478 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081775862 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094638323 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.081978186 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.153808444 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.086500504 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147780532 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134474142 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.08231302 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115804512 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.10561744 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.121931372 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.105457405 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.128273723 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1541846 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.206049522 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.100530996 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105816299 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119003221 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162040876 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.314800689 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097669136 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.082815057 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10903225 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120040981 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.10555777 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.13392636 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101356599 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113522156 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105648046 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.144205043 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.148833315 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100880845 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10268293 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110693918 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.128212658 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078884746 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.162635636 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106146099 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.117226275 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.085650687 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.140719647 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111917322 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089899793 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092964071 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11439404 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121993004 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121733168 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.165338658 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.111133949 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.084383548 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103419812 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.158218822 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08356079 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118405741 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.098628283 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.104215871 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.132771823 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103387483 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088379079 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.074814677 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139321534 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.173717143 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.076744572 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.123887283 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11979939 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112937442 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134933819 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.078129543 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133166679 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.155292788 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131497629 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.333418124 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.176244783 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127026874 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.13030498 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120482334 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112497998 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084258507 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.133226302 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.142567998 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101862269 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097290699 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14363693 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.125770468 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143447212 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123136639 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125371961 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112129876 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.11325696 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111413525 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.114625744 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.154884733 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132124185 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.134897961 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.090249951 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113917722 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.128920785 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151140425 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092353737 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.157345681 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094685127 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130724493 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086389147 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135118694 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.086360447 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.188456842 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088269732 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.109955882 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.076173917 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.083630648 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.158210748 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.123947546 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11915835 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113046277 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151639368 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.150145643 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.086547005 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.120842343 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.127975372 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113175844 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.3149685 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.122115155 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.100448919 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104986729 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.118849216 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093738714 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087119588 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122042525 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099789299 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132605829 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09020151 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082848387 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148463169 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111894709 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102514477 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084154848 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118423184 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.134208058 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100610978 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094100832 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125125204 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111503057 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.150529699 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.098430069 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.105526881 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131857526 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085813898 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.098369088 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.074327533 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.094013484 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.082588886 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141016219 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082405674 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127089737 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.074270739 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.142029921 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095865504 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.102574981 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110664323 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118995843 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137633993 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103382927 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.15258825 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099061638 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.130553067 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11884612 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10394814 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09662679 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.116259469 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.1112877 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.133896452 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.105340255 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135176132 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157996611 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113151214 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.161166833 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104671824 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.319586559 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117475263 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.133574195 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119329444 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.176549456 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146379812 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118814127 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.116732323 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080034071 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10447755 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111046141 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.119729052 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.184466776 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133612892 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.077302764 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.111681117 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101040168 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.116440892 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111235371 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087170098 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153883259 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110659396 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.095209476 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121292813 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100092485 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.113696297 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083536807 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.109551013 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115607219 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106357216 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106359971 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.126877881 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.141590529 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123237378 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.157276855 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.108921907 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.10066782 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.128556625 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120131851 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121298798 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093178903 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0937963 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148413005 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128479912 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.135393495 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.105996457 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114531439 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.117064186 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103704912 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131405023 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117145056 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.305797908 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083216214 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087317333 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.079141638 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.080184407 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.136391806 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123140695 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126904985 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113271743 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.085057186 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.119362227 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120965644 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084613368 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102587459 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10802711 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.113673821 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110397587 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124015877 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.13043899 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.112939715 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.119033158 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113508177 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.165451977 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.116131045 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102199417 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.165517408 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.169583558 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101592383 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108945319 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.085547691 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092910958 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130968463 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.170083505 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.170181965 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0888173 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097956568 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.095029657 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093376985 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.075292107 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.092660734 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.089204362 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111463809 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104972707 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.116375718 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106893656 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07587339 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103893268 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101221277 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09425847 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.110153695 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125466933 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.131643435 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.147587843 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126429648 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128474687 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088201567 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088989008 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084064786 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.26557244 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107758962 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.085854189 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083581559 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.153633141 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.096598335 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108900119 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110500005 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08818049 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073983372 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132147883 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068148119 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132649019 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.0693134 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079642672 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079933413 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076623268 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092586212 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139293127 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108507312 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110026608 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105543874 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102277658 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.159219334 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.167382095 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090021216 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.149985438 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080690115 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082546912 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079714007 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114802541 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090102008 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.120520905 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153626586 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104927928 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116165573 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088886627 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.160093006 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.116068186 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120299154 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097310392 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.086770257 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.159169467 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100176221 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088115265 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097692721 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.122368821 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.07989822 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112036362 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.091031538 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087899577 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.180233939 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.721200092 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100769883 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084203352 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106329857 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.159829854 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.329353856 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105842998 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119802341 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.130179271 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.112275165 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.102324634 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116080466 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.20064778 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080498143 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101486553 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.111581098 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105153148 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109022779 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.107306843 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.096252794 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.104373893 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.094621616 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086497155 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115266435 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095481768 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105320496 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.118087606 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.091805103 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096877221 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.14114002 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111547926 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09220723 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097323759 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.113359426 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096151889 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112291487 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.07637453 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.123623559 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.097540092 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12966468 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.107391338 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.117869437 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.136643131 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105532351 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.147535496 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11735459 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133923453 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096710714 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086577331 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138371946 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099837302 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086298069 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.162148012 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107232619 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.115631633 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114817026 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.107972274 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.128334174 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135028621 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.129643747 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.295551632 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08835302 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111371491 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.116133011 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096286752 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088327352 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082794987 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.085689074 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119001481 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093765326 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096342467 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.123904362 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096859764 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.110475965 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110006143 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.134250511 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095260196 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.109189377 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119823656 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098889376 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118479519 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.110085236 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.139480369 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.186800332 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134119436 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.143502258 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.142463606 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082432837 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079601034 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.07233128 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.120185443 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083969619 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.098022783 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084834087 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.142393301 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.087454889 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119530942 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.25167223 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084904828 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105213442 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107353215 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.072910736 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.088100653 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114051394 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092036605 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084791233 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126350398 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.086395428 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.137964788 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119516568 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107194823 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.10345353 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08664438 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1232572 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.110844829 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.140029845 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10164116 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080937457 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135490807 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.114260241 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.330952535 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.07879121 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085259312 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.13637912 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109731879 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137194935 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083997074 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15399253 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.148274452 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.105610298 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141264452 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075043448 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.657480721 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097922754 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.13698192 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09068891 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119399087 seconds)
  done (took 74.351212596 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.186215349 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.181452758 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.126442491 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.139474851 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.29456425 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.303675244 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.15631451 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.12791405 seconds)
  done (took 3.442118464 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.072969652 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.086349539 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084999808 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.253313608 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.103714633 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.069970389 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.075642084 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.084904913 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076360592 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.069768778 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.109109673 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.06977513 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.075360595 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.561580309 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.073131616 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.078367003 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.075808299 seconds)
  done (took 3.916350963 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36617511 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.652000663 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.423897778 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.816025152 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.176132551 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.736096178 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.086455194 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.096419789 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.958756 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.425325839 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.170795713 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.100756918 seconds)
  done (took 21.982914367 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.084800596 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.129064654 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.129711169 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.081438999 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.07989346 seconds)
  done (took 2.544427535 seconds)
done (took 129.444912642 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.086224749 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.195608311 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.07327702 seconds)
  done (took 2.323233289 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.135694166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135498921 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.133372462 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.13389697 seconds)
  done (took 2.64251781 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.086892399 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.089347894 seconds)
  done (took 2.31397187 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.256950034 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.23747305 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.106528631 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.095174476 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.092057324 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.094029735 seconds)
  done (took 2.372894062 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081666835 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080074647 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.082782949 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078810107 seconds)
  done (took 2.3747496 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174586853 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077228006 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.080175173 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082982592 seconds)
  done (took 2.213539774 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.091891577 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.091990808 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.122931232 seconds)
  done (took 2.281488185 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089822206 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089596679 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083665427 seconds)
  done (took 2.20154026 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.122240593 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.106530101 seconds)
  done (took 2.228903273 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089401139 seconds)
  done (took 2.108030954 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095205626 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100123072 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.184492891 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.147787403 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.185212013 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.169733276 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07543483 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075907294 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071499727 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070389624 seconds)
  done (took 3.019828985 seconds)
done (took 28.615626896 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.091562786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.201219021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.323389126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093290879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.659822571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.319179033 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.740332942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094460187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10110328 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067397416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083264341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.633138004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.752906673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.165653478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.719401898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.13731848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.571443424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075390493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078311479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079678906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.731294872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074422102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073661821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074372822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.565531594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.338098965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076033627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.143107933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075727555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07897187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.321400851 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078031922 seconds)
  done (took 14.501853898 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07763053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129647494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07470618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086138989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071285076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071231796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072964881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070134314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11348525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06978956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087382459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069151739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074350519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071176026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09061103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069430712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071992415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070050325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069331179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070076181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089648248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069367489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069864894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070272661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071083435 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084237373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070869612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069506218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069914702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07383358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075101161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07130992 seconds)
  done (took 4.443997555 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13812325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.217601767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079045888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11620607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127890731 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075261296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.164451407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097447389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123211648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074178621 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092108806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07321613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109816053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076421339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095953266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072402661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076577941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070941812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072811644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072346412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093183248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072729751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073665148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073987654 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073964679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089342056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074447316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072954633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073850312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077087306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080232203 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073367891 seconds)
  done (took 4.797781853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073094673 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072602085 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081242159 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082949014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068157153 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069571563 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070235187 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067698264 seconds)
  done (took 2.514866354 seconds)
done (took 28.062192662 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080164131 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072693485 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075090183 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.096239073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082186334 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.122042698 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072439858 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08273944 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079405697 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079022436 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082238521 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075112379 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07895545 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073343647 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081782871 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075061909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.122574454 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079097215 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.122091002 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.123155927 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076333227 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079458995 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082558866 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.121938818 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.122281888 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.122758766 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084195397 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.080685398 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074620556 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077030346 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.185008213 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.201632409 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083699853 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.128778365 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073828491 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072928755 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078297528 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075968616 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.124583957 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.083215266 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074885905 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084080077 seconds)
  done (took 5.734627188 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.193646757 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.19919757 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.191083583 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08208946 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093734023 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080514334 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.197142008 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078775787 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076530233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.19602774 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07290437 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076691297 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079351098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070347147 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076990396 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07314686 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078274975 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070779596 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076538993 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07588124 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.194997546 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069769292 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081666229 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077830696 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073911507 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078813821 seconds)
  done (took 4.67484556 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075817889 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088609092 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090791147 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145101562 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109118171 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081342207 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081706001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092291513 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102501649 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067873825 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089957512 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095507189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09540596 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073484765 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106242568 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084602497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078636356 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068141069 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073364329 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101038678 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089347434 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084994468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.148409689 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087133047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066092814 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075936338 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07399288 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083109315 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074996731 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079237824 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070682407 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07021611 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067096701 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078055652 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070921057 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064478532 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089434535 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079778682 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08169233 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107003326 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077323083 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068695686 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094447336 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131876164 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066584375 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069224107 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070811666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079586492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068209972 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097508123 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082568135 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066622222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085959727 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068469521 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068320815 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085647213 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068478918 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068697162 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078610828 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07292495 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08772048 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072232604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087869787 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066720618 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078348214 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068287784 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06851283 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065459322 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101742672 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075131094 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117563338 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068083006 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0646917 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079252994 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078223525 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073758194 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066734224 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086451042 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079509989 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07087419 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077954641 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069670345 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070200825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103549758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065867893 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064790508 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065120254 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069267234 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070618071 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068541646 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080921806 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067048538 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071456576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082554819 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069498339 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068491076 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069676081 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068329821 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066458236 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077697846 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072503432 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072624692 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081252798 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068925773 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070859996 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08283511 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077143016 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067775444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070096266 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071075716 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071978102 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074181221 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07254907 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071246118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074418673 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07721728 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075898064 seconds)
  done (took 11.093531486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.208736008 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193296871 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06750368 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.190035228 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075393182 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123292791 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.191611764 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.195406395 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067742228 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068188797 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066507027 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.138279287 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131851044 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142453845 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.123558238 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069528363 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093934024 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144588221 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.19658163 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.191740164 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093253023 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075163818 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069728246 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068735664 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069533221 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076779429 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082932916 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076140433 seconds)
  done (took 5.153767269 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076047253 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110678818 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070433919 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090740452 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083823427 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066516775 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068670568 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068181572 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083898771 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072610579 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066554685 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07155932 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070491292 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067619923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067510256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073169576 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073166192 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074091374 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075801405 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071193284 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077694592 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154823997 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071676069 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068869871 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070694148 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067030819 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073416174 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075109726 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066596281 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.072343606 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063975405 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071246676 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08142648 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067760756 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067001293 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067698098 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066879447 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067056296 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06762922 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065104103 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06523761 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073134411 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065817076 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072310202 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081648949 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070414925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068499173 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069600033 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0694325 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064307577 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071060282 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070704754 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07029509 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.0760646 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070921831 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069430103 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068728537 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09801851 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073276069 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066911614 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067020241 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065448987 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068751971 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075200596 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083980782 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068998613 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065915274 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06731607 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077788895 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081747534 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066657505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072733186 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064174172 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067367812 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069441987 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070286244 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068683444 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065590917 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067269603 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067319299 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068253254 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066966196 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067779315 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070185601 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065025601 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065870183 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068278695 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068987998 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073295536 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066066049 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070150918 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069111327 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066355281 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070428981 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073675429 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070928278 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088358988 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076113713 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068220232 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065445056 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082601169 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070154765 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070183716 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072242689 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072989824 seconds)
  done (took 9.450213402 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.105053392 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079304036 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.098588378 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.108439142 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078888248 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072262888 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08070819 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066872252 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088449794 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065741196 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077482647 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067725684 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082805866 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077275153 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068212664 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077147878 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069054544 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087838338 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081986095 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065666463 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07626707 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079773358 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079901894 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085670836 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084895792 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085416308 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078698546 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068712598 seconds)
  done (took 4.099680452 seconds)
done (took 42.036764885 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.859476911 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.06812596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.875603611 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.390382791 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.954115642 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.99051462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.964288132 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.867178107 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.707624718 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.064331209 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.806808871 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.752455364 seconds)
done (took 69.17425768 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.215719285 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.151538269 seconds)
    (2/2) benchmarking "String"...
    done (took 2.338877441 seconds)
  done (took 6.44014719 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.585935409 seconds)
    (2/3) benchmarking "different length"...
    done (took 2.16146444 seconds)
    (3/3) benchmarking "different"...
    done (took 2.201682462 seconds)
  done (took 9.030807128 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.455039094 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 7.019041355 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.350955242 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.864175271 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 7.148191279 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.352616757 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.045637385 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.502774088 seconds)
  done (took 34.383260139 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.866596956 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.247093155 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.231568424 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.309678352 seconds)
  done (took 21.536668263 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.305774291 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.280238139 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.279286182 seconds)
    (4/4) benchmarking "different"...
    done (took 2.555454001 seconds)
  done (took 11.314812713 seconds)
done (took 95.562994876 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.864597324 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.205971409 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.884524224 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.036301314 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.872413965 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.961847069 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.876880572 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.8944483 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.866219094 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.872161411 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.873158705 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.876311497 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.863452455 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.90862971 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.865823704 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.921515526 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.151219635 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.886411838 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.890187922 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.63166661 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.058107427 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.878567366 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.866600649 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.922322045 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.349875606 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 7.164193741 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.366324407 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 7.056773502 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.734527747 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.977983295 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 7.106291269 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.022150284 seconds)
  done (took 208.509637711 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 7.108115268 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.853980392 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.700620155 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.974523827 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.206566369 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.212959507 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.713161405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.343256129 seconds)
    (9/36) benchmarking "syr!"...
    done (took 7.091208293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.896602858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.973460612 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.966694388 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.928161747 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.611868697 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.908162045 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.088437628 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.908019594 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.628497202 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.938610812 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.781487068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.896515756 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.370120205 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.320222384 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.652042765 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.900793693 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.930358235 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.034694602 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.875702961 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.431877923 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.685527923 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.884084382 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.88100928 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.365980931 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.096218865 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.871589019 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.895723219 seconds)
  done (took 182.823440591 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.103937839 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.889424533 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.910002498 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.976521804 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.845025322 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.667983265 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.867709985 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.866354063 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.863862146 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.870316424 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.865193986 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.934140589 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.86739159 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.581755769 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.8903026 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.867199357 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.865293113 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.932021971 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.87880915 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.864228918 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.86442005 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.970546077 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.208867078 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.978226501 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.867866274 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.879548622 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.976916731 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.876728432 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.866549482 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.863875949 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.972456098 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.868605088 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.99943012 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.978643783 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.880047487 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.92292974 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.875261472 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.05430909 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.87149743 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.864655003 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.867689927 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.912836838 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.867196718 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.929185667 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.970162871 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.873582197 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.885489263 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.316486486 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.435276276 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.87081631 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.864864945 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.865601589 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.876272709 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.881522457 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.390649177 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.8714325 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.900371674 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.287918063 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.869034189 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.865837159 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.866958977 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.865056514 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.865697882 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.871700148 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.907002514 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.480385855 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.596011651 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.243101429 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.523851504 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.86855668 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.865379148 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.864635587 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.044368233 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.930438044 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.874358348 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.900999965 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.067039802 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.875624286 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.865067612 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.796114796 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.820340367 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.870386695 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.973096353 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.87000708 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.865507272 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.128750182 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.09123349 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.873867638 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.884637371 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.92776421 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.870513944 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.866026459 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.872503144 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.803398869 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.870926233 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.882042622 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.022323941 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.871155082 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.865576968 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.145173153 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.23260757 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.870203228 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.953766347 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.265845406 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.626611666 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.876053555 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.866685051 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.88477263 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.868649891 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.880609851 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.886712292 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.869271899 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.869702391 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.872236442 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.867307784 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.867109273 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.870040895 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.885221687 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.868912112 seconds)
  done (took 417.108062598 seconds)
done (took 812.488950035 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.535953223 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.608317468 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.435670053 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.498570759 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.450435582 seconds)
  done (took 14.331505421 seconds)
done (took 16.134578117 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 2.114305847 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.977921475 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.956509288 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.255666773 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 2.069881224 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 2.03621708 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.067727053 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.155090327 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.090627535 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 2.027020045 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.09047384 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 2.04174596 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 2.148166334 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.119315209 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.17021551 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 2.162036749 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 2.07437295 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 3.565044761 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 2.109945055 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 2.042359552 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 2.064760654 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.042746947 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 2.026525582 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 2.104895897 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.129236472 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 2.066784035 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 2.262933586 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.106054286 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 2.082973493 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.119996264 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.134768411 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 2.14449967 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.076106786 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.116140677 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.141923785 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.141425745 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.067256141 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.136507949 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 2.051000179 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.079471422 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 2.095733678 seconds)
  done (took 95.271922837 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 3.108187107 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.049881894 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.165161599 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.160064984 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.925560319 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.161036017 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.248166045 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.062562216 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.042159892 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.159751187 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.169626348 seconds)
  done (took 27.087035782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.960814774 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.045275235 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.163101566 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.181212372 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.278478198 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.152247172 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.217040462 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.033533852 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.049421808 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.167338961 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.175307662 seconds)
  done (took 26.246233175 seconds)
done (took 150.412159063 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.423414471 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.928897382 seconds)
  done (took 6.157946148 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.894987525 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.874009711 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.874191375 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.875860974 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.874039607 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.874922457 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 2.054093618 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.876380378 seconds)
  done (took 17.004781409 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.874321008 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.874175563 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.874569983 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.873570257 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.874051562 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.873607375 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.873983448 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.874231781 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.873848409 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.874662586 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.874201488 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.8742721 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.874886834 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.874774315 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.874553225 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.873451671 seconds)
  done (took 31.794507006 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.873661502 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.874513952 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.874644967 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.874103772 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.874231695 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.874653891 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.875279069 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.883082331 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.875203377 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.875884896 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.874467843 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.875392221 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.874661635 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.875273292 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.875149135 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.874803664 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.877341843 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.875484829 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.8753245 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.875375757 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.875524229 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.876345285 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.875659536 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.878468432 seconds)
  done (took 46.822449142 seconds)
done (took 103.601971561 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.470385385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.875160086 seconds)
  done (took 9.153548331 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.879869076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.875183744 seconds)
  done (took 5.658584821 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.875601615 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.875570567 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.875408071 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.876074732 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.875232122 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.875999335 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.875968698 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.875582649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.875114039 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.876510483 seconds)
  done (took 20.565694566 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.87551635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.875717332 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.876162136 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.876194166 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.875445035 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.875633372 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.876342858 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.875925652 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.876083827 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.876541208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.876643479 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.066077862 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.876561125 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.100584659 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.87645779 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.876665558 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.876508047 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.876141163 seconds)
  done (took 35.995380503 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.876885457 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.876865995 seconds)
  done (took 5.563553339 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.876875223 seconds)
    (2/7) benchmarking "second"...
    done (took 1.876744711 seconds)
    (3/7) benchmarking "month"...
    done (took 1.879352559 seconds)
    (4/7) benchmarking "year"...
    done (took 1.877558668 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.882515943 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.876475239 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.877479413 seconds)
  done (took 14.957496964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.339306983 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.041425371 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.095614688 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.370436535 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.535295233 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.817400182 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.536660296 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.814673848 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.686350904 seconds)
  done (took 24.047915033 seconds)
done (took 117.750904047 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.505866416 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.879950404 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.48623692 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.061806153 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.921162115 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.252375014 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.884810433 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.415094925 seconds)
done (took 44.23976859 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.973081373 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.874330975 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.914728913 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.914364188 seconds)
  done (took 22.514145091 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.941921478 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.566384939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.922738413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.906944052 seconds)
  done (took 23.251565058 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.43419776 seconds)
    (2/2) benchmarking "read"...
    done (took 2.444042797 seconds)
  done (took 6.714911652 seconds)
done (took 61.265878186 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8844606 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 2.060764629 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 2.008943664 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.911050218 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.90048763 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.927595117 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.895591889 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.915046126 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.885858939 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.891738127 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.915627688 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.97273921 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.959197661 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.97992713 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.98671922 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.998359439 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 2.031085117 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.997478175 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.005936106 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.01341607 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 2.015164016 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.986910746 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 2.002587719 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.973998554 seconds)
  done (took 48.949772618 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 2.091006223 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 2.089766987 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 2.062718477 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 2.062392882 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 2.086248352 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 2.095609301 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 2.096070991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 2.067803664 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 2.234432216 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 2.070447978 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.097276714 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 2.177039726 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 2.061703319 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 2.118720169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.126652752 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 2.105593993 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 2.132374208 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.173159226 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.026268862 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 2.01423753 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.974145245 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.977409363 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.984764011 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.01960667 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 2.047410267 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.07581391 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 2.067333911 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 2.059511863 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.99098244 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 2.10912435 seconds)
  done (took 64.220218404 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 2.30415418 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 2.022621113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 2.036711788 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.981656874 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.897236586 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.907292114 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.894388225 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.895291179 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.899787205 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.897816662 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.894888405 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.936515775 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.903972591 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.900102385 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.906362891 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.928246874 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 2.048248017 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 2.201327577 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.93632667 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.920488667 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.999464629 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.882021165 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.882435574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.885152206 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.882625622 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.88625942 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.882008626 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.8831243 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.886037878 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.889682847 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.934211826 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.927464391 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.921547851 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.921871815 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 2.072628312 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 2.040337191 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.993562738 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 3.483976394 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 4.177836855 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 2.013307959 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.989610987 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.980461728 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.979018408 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.98497391 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 2.023756793 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.894813134 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.936689314 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.907163569 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.947896685 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.996871177 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.990648362 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.992893053 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 2.009838429 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.994107117 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.967469827 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.929632014 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.906380711 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.99692376 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.99359417 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.988863983 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.929677691 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 2.023018178 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.90908626 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.911458655 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.303973408 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.991100441 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 2.058456852 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.993938314 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 2.004791784 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.20185 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.981367447 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 2.177921727 seconds)
  done (took 147.838272545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.975187228 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.976084039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.05533708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.059295134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.974435306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.983586014 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.984524392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.98133838 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.639270521 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.979851564 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.982043679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.974046775 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.629957702 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.968160407 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.966746629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.046843638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.989989532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.996342809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.970068736 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.966934791 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.965242713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.972274692 seconds)
  done (took 46.947684829 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.013357461 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.976009161 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 2.001605443 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.97636231 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.976241082 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.977354527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.000134191 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.926937393 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.008750749 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.020081498 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.015265868 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.016486085 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.986901488 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.010596589 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.019397685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.063863586 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.016355644 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.063336498 seconds)
  done (took 37.968779557 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.143725655 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 2.134809717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 2.047183139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.010313596 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.226256578 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.222234931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.084835659 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.137051836 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 2.009701158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 2.131161431 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 2.117718545 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.023438828 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.203925582 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.02125322 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.02090093 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.232470947 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 2.058813527 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.023358419 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.059277051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.09213709 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.164830827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.101799932 seconds)
  done (took 48.17005001 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.024603177 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.042515363 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.056060732 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.056956994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.993199226 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.904968208 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.968737777 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.99790801 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 2.008859347 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 2.021787299 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.039561327 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.98007268 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 2.098475588 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.048940282 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 2.105277976 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.033876301 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.034877497 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.050570087 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.023423783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.980402294 seconds)
  done (took 42.39304494 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.000925612 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.984996406 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.987341924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.981902574 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.983555317 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.985263228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.985805891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.985117342 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.984604861 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.271359625 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.005290677 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.999831198 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.011163677 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.001183469 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.994066176 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.009397295 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.002241899 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.99265759 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.010373353 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.992430045 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.24335045 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.020320826 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.019225628 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.982583254 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.970300696 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.982965083 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.992038276 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.960129211 seconds)
  done (took 58.267749642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.002661113 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.984333902 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.947118524 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.06265442 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.066229082 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.979912578 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.018632256 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 2.059363103 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.986882704 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.960401053 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.9984341 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.969201792 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.022782504 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 2.016273666 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.010488696 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 2.03934495 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.991832613 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.05447489 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.976731569 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.969336813 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 2.064014033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.026691154 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 2.096367115 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.049780908 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.075202269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 2.100169788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.087378886 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.173479595 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.075152403 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.05273463 seconds)
  done (took 62.794322092 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.033799605 seconds)
    (2/2) benchmarking "in"...
    done (took 2.03724788 seconds)
  done (took 6.020220577 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 2.013867009 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.106724677 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 2.017715344 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.208828918 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.179225732 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.189477337 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.174472834 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.102699977 seconds)
  done (took 18.938766407 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 2.017871961 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 5.541647102 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 2.019826702 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 2.012201016 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 2.014723682 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.559538065 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.948953992 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.941897909 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.799004511 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.907526456 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 3.242830417 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 3.679546273 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 4.069212183 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 3.351051597 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.126454051 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.86486585 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 4.241233923 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.582778956 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 4.077504363 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.12941546 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.752933762 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.099871999 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 2.013650258 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 2.016195719 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 2.014375429 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.968474909 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.94700042 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 3.462787685 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.246758019 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.190867088 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 4.862773485 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 2.140782229 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 2.078905907 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.342462 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.01646462 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.956117883 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 4.135744551 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.115043621 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 2.017270471 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 2.014592778 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.819289762 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 5.704039329 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 3.258864206 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 4.243169313 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.099257494 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 2.018450159 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 2.01901816 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 2.018358996 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 3.267491502 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 3.667955177 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 4.066243397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 3.017332642 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.153588237 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 2.017232549 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 5.598909579 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.15859119 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 2.01637648 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.954562652 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 6.737822982 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 4.236226406 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 3.389520362 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 5.272078028 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 4.150047887 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.137776982 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 2.018768286 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.24494218 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.913081506 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.857082644 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.763530258 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.122343183 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.593472746 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 2.027520051 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 2.017357642 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 2.018084745 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.007325737 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.39808192 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 2.051985941 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.948755025 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.975752769 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.962662368 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.229718069 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.016354388 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.741428299 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.046245063 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.186389929 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 5.467625149 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.018877154 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.899212335 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 4.570628195 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.769909506 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 3.07253735 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 5.602034504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 3.089637292 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.038396452 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.899480537 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 3.186709017 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 2.010945146 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.953174802 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.806410776 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 4.46703107 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.063737165 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.94841854 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.285088952 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 4.061366149 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.043463809 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.978480598 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 3.644981722 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.088453336 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 4.101260411 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.973140158 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.922685258 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.947457364 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.554915853 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 3.126442501 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.989184516 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.457072857 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 4.001941107 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.431263397 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 5.325359493 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 3.138248725 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 4.369371043 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.944493978 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.214437472 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.908880155 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.99226287 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 4.327298682 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.958881729 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 4.659882571 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 4.226701587 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.084760183 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.808507587 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.990848552 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.913448566 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 5.069498022 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.060225386 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.992218201 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.969300415 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.965637991 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.967229782 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.916304115 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 3.028767386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 4.381280275 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.718015495 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.164678737 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 3.25940887 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.143330871 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.905688735 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 4.230743995 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.705886849 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.165520981 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 2.02566565 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.653853786 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 5.427717161 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 3.722155004 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.147588191 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 2.028019932 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 2.025858751 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 4.137395936 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.037149144 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.114497067 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 2.038098258 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.683554722 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 3.207834725 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.063836238 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 2.027412458 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 3.498684702 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.163626708 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 2.028580447 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 4.132533971 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.807299887 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.76403227 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.170650432 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 3.332258658 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.140658929 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 2.027523894 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 2.025562997 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.030089752 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.809827397 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 3.694816985 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 7.290700037 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 3.658009345 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.839199714 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.16288506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 4.240991991 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.171456378 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 4.382656415 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 3.304108594 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.227299834 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 2.087696411 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.97858441 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.915680662 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 3.481955867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.996503489 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 6.017448798 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 5.04356725 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 3.064093437 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 4.09678649 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 3.200693275 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.911846151 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.035027241 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.762711069 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 5.003029622 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.123452496 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 2.030416856 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.025689609 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 3.172977623 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 3.197102885 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.166629467 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 4.460304242 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.177566635 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.025051343 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 3.710023161 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.147934039 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 4.722601755 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.127590495 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.862019904 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 4.114687495 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.147354034 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 4.274096334 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 5.709000353 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.134859677 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.029217804 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 5.770545739 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.154883466 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 2.032431163 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 4.09556957 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 4.579109939 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.959706011 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.765469884 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.556704393 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 4.098124491 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 3.546332361 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 3.223499277 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.094905011 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 5.296110835 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.091999589 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 3.238806008 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 4.07982814 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 5.610036224 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.918399773 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 3.826536613 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.994935452 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.611535339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.152262122 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.980959052 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.105783123 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 4.468076109 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.114215788 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.988252277 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 4.170495523 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.087371989 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 3.662396547 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.115684879 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 3.106203138 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 5.31690691 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 5.382597574 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.095717647 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.262152324 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 4.11467942 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.947905339 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.963261972 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 3.27016581 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.828194506 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.930730208 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 3.074678262 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.708566293 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.088892362 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 4.250944009 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.046616534 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.911577885 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.909759646 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 5.108008994 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.992790561 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.910373493 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 4.23615441 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.874842595 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.98196727 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 3.083548801 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.944811439 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.91026578 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.129526771 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.062054261 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 5.200892339 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.389322548 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 3.495267925 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.720228361 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.030522417 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.568909339 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.021880868 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.625956045 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 3.086126961 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.94487668 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 3.588874226 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.031187894 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 4.207935849 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.06599582 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 3.013467959 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.636443574 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.045315395 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 3.180589797 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 4.071434619 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.029384752 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.675979073 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 3.44663504 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 3.149104003 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 5.307749155 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.933646022 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 3.481552151 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 7.545475796 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 3.48501359 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.98582498 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.677115062 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 5.068201637 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.963722569 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.912667089 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.922135031 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 3.477942109 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.954699332 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.948252243 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.689894363 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.493469153 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.975405249 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.668223478 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 3.094242574 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.947499239 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.913711269 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.913487048 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.897336572 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 5.114404812 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 5.254816586 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.035078709 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.925467351 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.912982496 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.875339191 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 5.25605783 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.718003603 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.782513205 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 4.143062914 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.051204874 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.916148013 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.914754949 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.914524397 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.914609924 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.912910809 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.914262362 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.284176778 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.074532878 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.54375367 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.096447439 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.949413788 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 4.213431761 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.970171111 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.917855404 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 5.115694922 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.981550434 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 3.020707185 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.981214252 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.917199351 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 3.314661946 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.053688675 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.914746217 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 5.295727826 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 4.193481557 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 3.177170901 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 5.44112829 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.939191968 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 3.330854589 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.248104937 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.761145273 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.952613221 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.854633584 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 3.084673132 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 4.772586127 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.916558707 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.474465337 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.516768874 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.980896347 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 4.225469439 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.806314303 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 3.327876712 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 6.469714994 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.97625713 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.917259659 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.91696385 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.98955029 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 3.13780498 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.959401593 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 5.204507181 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 3.093833303 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.969537363 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 5.310372866 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.006109106 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 5.154683851 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.932666903 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.932809191 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.918948829 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.917715939 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 4.358464813 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.806699044 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.991740337 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.91910721 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.852173747 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 4.893954363 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.810050928 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.571234565 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.916851401 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.055688549 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.920602902 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 3.10757811 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.967986458 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 5.778135153 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.928294678 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.691625876 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 3.233230859 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.962174047 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 5.112581606 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.328911119 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 5.736614596 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.317789455 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.028097997 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.91900708 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 4.282857402 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.899584604 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.061721864 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.831316452 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 4.241925313 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.482677614 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 5.456438722 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 6.301744644 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.03022853 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.848334129 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.566868829 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.983753527 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.957302162 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.755191734 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.062633147 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 5.235656077 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.886141927 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 3.162443809 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.060926877 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.587172526 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 4.71928802 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.059827386 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 3.519197911 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.061395303 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.921351588 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.583137512 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 3.000668416 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 5.200305289 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.035235402 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.920669721 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.935541117 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 3.594919275 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 3.501485349 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 5.597404454 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.989289581 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.921868599 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 5.780938356 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.647192142 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 3.098429184 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.956666051 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.922026947 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 5.372133969 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.943379096 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.922555541 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 3.33118758 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 3.529129205 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.061181555 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 3.444542961 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 5.134140513 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.063617135 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 4.201193436 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 5.289133266 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 3.103192326 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.982978174 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.92329705 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.924132732 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.92257457 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.335464316 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.076702255 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.923349463 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 3.512217861 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.062769702 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 3.707903117 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.83466198 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.476166155 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.984265824 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 3.343261914 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.062889266 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.438618069 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.901377749 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 3.092557858 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 3.23966984 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 4.04715703 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.065890911 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 4.668233518 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.021138664 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.923960802 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.872019466 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 5.255602454 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 4.258788802 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.316518498 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 5.229219238 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.003042393 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.604409242 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.028115861 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 5.609407946 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.118653986 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.924091934 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 3.435220886 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 6.164082815 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 4.36336577 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.068412054 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 4.404936055 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.034285908 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 3.276528635 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 5.255580967 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.01731228 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.926185359 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.926518203 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.922011001 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.981738474 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 4.575609364 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.918636739 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 4.390389456 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.050822232 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.812722827 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 6.544217427 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.606511123 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.277453614 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 6.20339213 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 5.365981415 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.943848466 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.891960667 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 5.291163572 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.992849356 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 3.082422596 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.019792094 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 4.722910724 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.981545382 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.927241612 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.348612231 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.08003043 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.927735261 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.928263663 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.890395092 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 5.818783193 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.024286596 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 4.123639693 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.015823527 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.927790537 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 3.522383768 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 3.189504194 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.960528031 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.927374278 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.927695709 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.819152652 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.029108859 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.929058759 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 4.285471374 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.073495894 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 4.250889524 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.776483233 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 3.455451487 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.01891628 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.9281873 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.92945819 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 3.660288644 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 5.402837706 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.137618082 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.304016293 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 4.034059825 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 3.49728109 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.978718434 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 4.435750605 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 3.441358501 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.916654569 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.043367683 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.930038024 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.978794842 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.838656745 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.991186434 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.696347979 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 6.466587562 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.012380993 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 4.724979527 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.893294598 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.982247807 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 5.097674764 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.982573297 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.929563665 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.930993743 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.930236726 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 3.44675773 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.987607507 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.968049379 seconds)
  done (took 1950.245234033 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.196997117 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.929879734 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.929877569 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.930570523 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.929967779 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.929503008 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930093755 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.930525196 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.930495433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.929751417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.930779144 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930237655 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.930443238 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.203453007 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930615456 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.930403055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.931054265 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.931006566 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930833158 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.931122726 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.930584952 seconds)
  done (took 42.940695745 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.93112426 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.931163938 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.931075993 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.930814619 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.930185352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.931152856 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.930714374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.931119241 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.931129661 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930952476 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.931422793 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.931071741 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.930889501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.933538809 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930968387 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.931190308 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.93089121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931888208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.93154236 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.931632353 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931505424 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.931934745 seconds)
  done (took 44.351184853 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.932426138 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.932802759 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.673918692 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.046879431 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.932295334 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.933309922 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.932821193 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 3.118523034 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.938278805 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.848787425 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 4.436691179 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 4.039635159 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.969938443 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 3.107586094 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.026259309 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.934200101 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.052577623 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.934215407 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.934306027 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.933022154 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.934008152 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 4.156021174 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.060663036 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.934134719 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.770600767 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.073668226 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.934315206 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.933393712 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.934041254 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.938726238 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 3.099602813 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.969360205 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.781265664 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.677233755 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 3.235484158 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.853140117 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 3.111865797 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.970883952 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.934482323 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.933527082 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 3.169697931 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 3.782557707 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.971113511 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.935061132 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 4.225807861 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.041838453 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.934692751 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 3.322347184 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 4.042755974 seconds)
  done (took 130.185803445 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.97316492 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.06262477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.992805817 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.934391986 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.058595555 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.934917465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.990647033 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.935068747 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.935598402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.935599031 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.070958749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.082622255 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.935106372 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.934832728 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.004103147 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.935048204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.935734565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.935456469 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.935582397 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.93605542 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.935641024 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.992338987 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.049114977 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.094464374 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.93595942 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.935729515 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.935869026 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.935720413 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.080761743 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.936210367 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.936200036 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.935764235 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.069308522 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.045285557 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.936195411 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.937806493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.063642685 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.936833056 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.936527343 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.936673039 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.937178936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.936383133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.990600136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.072481075 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.937257037 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.043572388 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.937670153 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.937344298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.087191903 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.937640198 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.937575881 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.093244289 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.937730528 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.93780528 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.937709874 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.061740275 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.938107141 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.937435811 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.938024833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.07643351 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.93721305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.937692564 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.085490393 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.938025986 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.937634736 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.099143862 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.042047492 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.938402385 seconds)
  done (took 136.426313496 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.938753636 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.074701988 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.113461344 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.114387656 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.074790206 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.07195969 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.077599899 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.074498949 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.074352782 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.077383883 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.075123614 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.021631067 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.045441916 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.022115984 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.078206479 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.06321083 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.063467351 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.061928586 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.078010089 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.07825432 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.063956565 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.114141591 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.075778059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.115623327 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.295184581 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.046154773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.075468844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.079120756 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.117625353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.07618411 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.295015402 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.078668071 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.076140835 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.118438176 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.29229969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.072657008 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.941007754 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.076155006 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.079288071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.075900505 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.046769987 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.117888926 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.073526275 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.046945148 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.070751712 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.07338933 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.116709557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.2939522 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.024238922 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.084159548 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.10108055 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.140646272 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.118323649 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.10767511 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.164511771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.049297735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.127693288 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.158128276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.134798986 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.138457208 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.149365557 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.052456274 seconds)
  done (took 131.705927903 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.986450026 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.998001727 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.038027177 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.940531605 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.940897911 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.024221351 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.94094951 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.940305649 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.94036951 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.940398018 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.958209676 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.079575679 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 3.311256091 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.941327977 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.022974448 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 3.303509677 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.022885468 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.023366824 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.990151967 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.056253884 seconds)
  done (took 44.29053094 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.940465276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.941784002 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.941676971 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.103301988 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.941343513 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.076016639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.941204156 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.94146468 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.940829137 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.942009463 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.941745223 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.941438944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941962853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.102861897 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.942014323 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.075235457 seconds)
  done (took 33.52870823 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.942270709 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.942292199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.943255202 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.942678339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.942629216 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.942102208 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.94267221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.942944292 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.94200573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.401750547 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.942247905 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.943451634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.943576391 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.943521397 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.942978067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.942816068 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.942647545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.943007784 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.942904805 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.94404939 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.513396626 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.943013096 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.943266022 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.943097137 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.943375525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.51268866 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.943281597 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.942747672 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.943559515 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.943591695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.944088725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.416587244 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.943887949 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.943815188 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.944634769 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.943678485 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.94398186 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.94380249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.944680692 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.943925368 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.944192699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.944060511 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.944296404 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.944420114 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.944010624 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.944330251 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.944403134 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.400677477 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.944681065 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.944378124 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.94452773 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.944612046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.944286527 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.421020529 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.945007143 seconds)
  done (took 111.775198029 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.988536551 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.995295702 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.944477708 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.94443735 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.998973028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.982885824 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.988651926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.959708555 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.986358182 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.944916006 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.014628474 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.960523824 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.984403857 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.999139403 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.010362729 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.988718578 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.945963213 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.009835788 seconds)
  done (took 37.523580405 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.945648128 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.945992493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.945197379 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.945005238 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.945515637 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.945780566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.945521255 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.945883289 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.946293927 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.946416497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.945923877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.946091655 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.947088935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.94547266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.946037271 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.946330134 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.946532924 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.9465119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.946652607 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.946764116 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.94657736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.946400559 seconds)
  done (took 44.690767435 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.59015221 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.574486326 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.707196053 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 3.12770161 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.186801684 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.736247078 seconds)
  done (took 17.800748368 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.028423859 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.009089326 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.989299486 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.995144159 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.012286974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.024047936 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.024234912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.034130885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.012653412 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.246879142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.030983351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.012931658 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.007438555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.077016156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.009824574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.013548938 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.03892296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.030572405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.992944981 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.030172499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.036652825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.012916525 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.039948283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.024927403 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.036930482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.077441712 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.007128901 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.249365838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.025963727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.014037387 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.010337111 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.043194405 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.014420749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.239411604 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.996887083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.01007888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.032620796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.031349274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.008377674 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.072844087 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.989640039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.011600649 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.011681391 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.039720605 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.017359955 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.038591898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.037614132 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.048287464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.040947567 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.24491942 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.017494557 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.071876324 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.014978198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.016711128 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.014908179 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.238723443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.244998239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.072357025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.011932672 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.250300309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.075242576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.011682137 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.072075289 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.250687534 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.015160976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.075694826 seconds)
  done (took 137.421136821 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.074998363 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.989408747 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.03933001 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.254307117 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.073829223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.032965419 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.036123086 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.038984408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.039080607 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.012412931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.04080008 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.039690361 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.07388574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.079681588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.040503621 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.032982461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.036903107 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.072660522 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.013515597 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.244479398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.034080985 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.075126682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.076513969 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.075304376 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.242470848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.030597803 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.040718902 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.034978057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.033911528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.034139175 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.043541356 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.040162342 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.076271015 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.990540134 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.073527509 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.042042876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.035202718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.043923706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.034461212 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.028908298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.081082077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.042233627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.034901855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.035210499 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.244748427 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.04092241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.041687278 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.014751121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.040959332 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.014904015 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.244678895 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.244295813 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.257791521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.077481286 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.044164119 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.040455382 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.038481395 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.041407607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.044395473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.036638022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.076158116 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.036015127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.246982304 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.036200005 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.042094925 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.07922933 seconds)
  done (took 138.41356926 seconds)
done (took 3585.648162364 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.084850811 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.182844312 seconds)
  done (took 16.15247238 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.957660735 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.973035724 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 2.123267329 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.958894974 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 7.00247152 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 7.028853407 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.974475075 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.962419341 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.95888409 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 2.041894295 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.959360013 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 2.087933233 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 2.053806873 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.959495988 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 7.000226015 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.962821992 seconds)
  done (took 53.903579489 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.962336645 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 3.49513845 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 4.013792025 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 3.716595072 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.987157321 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.97176748 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 3.060578533 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 6.574488145 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.21727748 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.39939729 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.206524142 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.818590329 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.849423048 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.997622879 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.596482789 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.440955696 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.515918016 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.585154217 seconds)
  done (took 76.295952812 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.96997993 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 2.065611482 seconds)
  done (took 10.932886339 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.979360782 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.965411915 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.973726487 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.984154954 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.989278042 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.970848536 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.98552688 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.968050666 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.990997613 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.981774722 seconds)
  done (took 71.69303728 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.963667364 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 4.293237224 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.384440178 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 4.103519546 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 4.836393668 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.431492952 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.100141916 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.320713918 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.035807329 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.958545651 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 7.069229656 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.348630207 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.903200698 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 4.018812681 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.521025158 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 3.867067675 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 3.98043824 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.354930948 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.282538213 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 4.375488239 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 3.643622665 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 6.822170668 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.327849274 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.718759423 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.965976896 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 4.569248662 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 3.485393173 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.142068446 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.031394057 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.900241758 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 7.246533278 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.991047877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 6.774677767 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.094589889 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 5.356505269 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 3.626751542 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.676602278 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.172049286 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 3.46273377 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.354771126 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.378192745 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 4.813202239 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 7.062763719 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 4.7686996 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.150482904 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 4.186134915 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.819791871 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.204893845 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.044863877 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.117015504 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.577085631 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.137253422 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.133319289 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.104132148 seconds)
  done (took 207.909589429 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.959168743 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.458931438 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.127059793 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.963077745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.30309398 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174291601 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.548912468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.371220197 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.965153736 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.16468468 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123533629 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.085710007 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.964052633 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.962639949 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.965469104 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.961818522 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131765658 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.378765283 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.968625669 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.961954502 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.157343334 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.206116498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.082926271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.964698431 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.138446699 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.192808117 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.358753999 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.08383543 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.356884609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.962155584 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.362210161 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.96901599 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.961704675 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.962877764 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319672897 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.272712255 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.388808304 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.964329693 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.588890765 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.962308625 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.563641292 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166085485 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.279310359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.097283895 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.205059807 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.176114658 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.632173626 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.962139302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.67688734 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.129196244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.173770452 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.170598325 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.238758806 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.970677377 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.408987549 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.962764768 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.963513746 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.222030178 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122075801 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.083405152 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.96652619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.963958406 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.963773611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.195759838 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.967087338 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.077543193 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.966428898 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.967217181 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.078512711 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.085177497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.120008202 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.187853825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.210049832 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.180042081 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.93890917 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.170102464 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.362256227 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.226821915 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.968720297 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.9656127 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.3580044 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411550814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.113805259 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.201951293 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272757411 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.257460588 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471593059 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.964135058 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.203800011 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.134819259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.185907311 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250861229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.365405136 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.848404405 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.027570807 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.151841457 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.455057054 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311864053 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.208350886 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.549808759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.252654142 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.612091813 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.22348373 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.476586898 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10567976 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.007402463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.646782322 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.008704031 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.213516971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.30795295 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.016360689 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.034015749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.161458472 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.726320733 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.983521021 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.064368516 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.38747087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.997187886 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151212839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.990145921 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23743312 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706094207 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227314717 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.990037035 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.263714622 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.189613832 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.270447326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.993625595 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241133658 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.22361619 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.349185494 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.243952575 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.476839059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.085641724 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.243887521 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.977095041 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.047348128 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.185513834 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.056287411 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190976547 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.017432401 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.262734256 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.191341701 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42631028 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.020086354 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.210817561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.22307299 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.353298321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.970898392 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.099877625 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.970065434 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.027823946 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.129932169 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.971740732 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.970895383 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.981018591 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.039392873 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.162739815 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.239373629 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.712945835 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.378438954 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.389765669 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.994325742 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.436514151 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.200001043 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.495655743 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.514786715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.144811988 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.005574784 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.005579709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.022103039 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.229130176 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.207771937 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.060423456 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.047477582 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.812541409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.453248173 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.012541027 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.183752043 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.26790167 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.364871243 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189591864 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.044061941 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.394337496 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.019584308 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.349983978 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.594051116 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.248286919 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.092843759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.068329454 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.062320575 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.064164859 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.263997885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312573272 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.701515516 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.191230448 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.312975778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.282675165 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.379530085 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.449088736 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.9849041 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.290527755 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.030364748 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.419558309 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.029761903 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 3.236477306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27498173 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.012302251 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.205552974 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346442479 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.111798157 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.452659031 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.031214782 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.047103153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.055146203 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.233787083 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.514774437 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.078059359 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.227561382 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.439290422 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.190150158 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.270479624 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.346793804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.041477233 seconds)
  done (took 927.876772161 seconds)
done (took 1366.64923539 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.073001437 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.071671402 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 7.072834944 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.07725402 seconds)
  done (took 30.29585213 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 3.038685789 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 3.116967997 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.248701345 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.081984399 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 3.437127933 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.114112103 seconds)
  done (took 18.044408443 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.077637059 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.07726006 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.056794727 seconds)
  done (took 23.221522286 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 2.328855503 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 2.431633879 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 2.205578134 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 2.18341836 seconds)
  done (took 11.130914524 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.098183721 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.083037392 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.060239249 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.082334361 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.073301127 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.074858876 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.092928421 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.075874627 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.067276156 seconds)
  done (took 20.715096596 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.528641459 seconds)
done (took 111.942232818 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 2.342699418 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 2.363212607 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 7.069543802 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 2.349652232 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 2.208791027 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 2.450827253 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 2.172324685 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 2.074933204 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 2.354636703 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 2.473534744 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 2.577514452 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 3.209476277 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 3.593333906 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 2.488007895 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 2.283837766 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 2.093966273 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 2.087998344 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 2.133389752 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 3.824935082 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 2.242532544 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.502833972 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 2.195271095 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 7.065337873 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 2.088519739 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.93829635 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 2.272149292 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 2.411837109 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.08616425 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 4.736650069 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 2.075315809 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 2.162415594 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 2.543031194 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 3.242119763 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 2.41195879 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 2.159717164 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.96374754 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 2.483052687 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 7.071547971 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 2.320403558 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 2.429132755 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 2.337982876 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 2.184878232 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 7.154994723 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 2.218658499 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 2.443288898 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 2.074513912 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 3.063510947 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 2.243119035 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 3.699914595 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 2.185293371 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.487406655 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 2.066613113 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 2.708224215 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 2.145301765 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 2.144121083 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 7.092929735 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.897768842 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 3.470657514 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 2.130123071 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.266294532 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.990052915 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.975683928 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.941307279 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 2.077105696 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.111684658 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 4.439092244 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 2.44551905 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 2.124971055 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 2.409627006 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 2.073980095 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 2.047518534 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 2.046505491 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 2.743851775 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 2.169187606 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 7.012633637 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 7.130700347 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 2.309652154 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 3.239291 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 7.120057833 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.056247016 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 4.842355314 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 7.195784459 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 2.221093475 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 2.376404388 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 2.224037864 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 3.478410309 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 2.582817538 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 2.468972592 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 2.515684815 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.062390307 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 8.601954256 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 9.033274054 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 8.647322338 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 7.214368825 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.065451003 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 8.669073748 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.694977618 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 2.510148058 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 2.142857989 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 2.550710413 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.998221903 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 2.039148161 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 3.542185109 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 2.374367 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.844081864 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 2.047556896 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 2.187009896 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 7.024152895 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 2.27277545 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 8.195371698 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.182465835 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 2.576904104 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 7.078738409 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 2.152314329 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 2.635308396 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 7.073887912 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 2.420014739 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.518995776 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 3.190432535 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 7.089710509 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 2.327901388 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 2.076236456 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 2.199287439 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 3.591809761 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 2.454523195 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 2.282348505 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 7.059811831 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.689789641 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.987653216 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 2.181376681 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.991422227 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 2.601540462 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 2.532334356 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 2.037598473 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 2.265130728 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 2.131028336 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 7.042599496 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 2.378502521 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 2.065055042 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 2.234094744 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 2.376786199 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.343634799 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 2.168544176 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 7.009208375 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 2.365877542 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 7.049051563 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 2.295150046 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 2.421610945 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 2.207634116 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.38143872 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 2.17030722 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 2.112082232 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 3.004798422 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 2.509209504 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 2.749756212 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 2.594129515 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 2.330968411 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 2.199072237 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 2.595633298 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 2.315016073 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.874990353 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 2.184731838 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 2.111144908 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 7.069474436 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 2.069611008 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 2.13441734 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 7.052631008 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 7.062611196 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 2.26872983 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 3.308240893 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 2.480693519 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.815746482 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.704012577 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 2.259419654 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 2.177314163 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.902395573 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 2.606547875 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 7.055017788 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 2.300303434 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 2.459866174 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 3.324652321 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 2.063422401 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 7.015285457 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 7.053620372 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 2.756977952 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 2.074636969 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 2.30322288 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 3.7026729 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 3.512448053 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 2.500478032 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 3.370411094 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 2.115092687 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 2.408948258 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 2.310252582 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 2.398597107 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 2.311528483 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 2.526332125 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 2.227309036 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 3.422329421 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 3.137599994 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 2.409686218 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 7.089642527 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.604065762 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 3.411378511 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 2.523433935 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 2.416034374 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 2.336100966 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 2.239796802 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 2.383877234 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 7.075593195 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.127697252 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.916081862 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 2.381571377 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 2.13168555 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.156310143 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 8.913187907 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.661586977 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 3.021417074 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 2.183174761 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 3.521996431 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 2.156615953 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 3.162765587 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 3.497171267 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 2.000481063 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 2.313096146 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 2.144761539 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 3.155237359 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 2.250473471 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 2.017979401 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 2.121604283 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 2.212715764 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 2.154790585 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 2.223272591 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.951130845 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.382438408 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.075720624 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 4.085411622 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 7.021487688 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.952722147 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 2.009368764 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.996187512 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 2.248746931 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 2.172676035 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 2.31176827 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 3.184929566 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 2.153360606 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.986725583 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 2.138653298 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 2.393124745 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.763133601 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 3.514945528 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.95459536 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 2.007017557 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.986648592 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 2.389709537 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 2.365314777 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 2.055641031 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 2.119949483 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 2.527587206 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 2.009550747 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 2.147983625 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.998605191 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.994359909 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.917111656 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 2.10793912 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 2.229392914 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 2.48443846 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.992715585 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.710464225 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 3.108231127 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 2.434858438 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 2.468769198 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 2.03085497 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 2.117511119 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.991053962 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 6.493240873 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 2.365537416 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 2.015632755 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 2.18614218 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 2.35947733 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 2.103986646 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 2.125702145 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.9928383 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 2.018603328 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 3.592780389 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 3.407852464 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 2.559193103 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 2.084113567 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 2.409293446 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.028847086 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 3.95940314 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 2.061990272 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 2.111850991 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 2.369118423 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 2.206722022 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 2.447378324 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 7.030935122 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 2.171840505 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 2.312232454 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 2.081317382 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 7.212889976 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 2.226214964 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.19468129 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.896250826 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 4.398805225 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 3.203381686 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 3.086335698 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 2.337092344 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 7.26354384 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.936646928 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 2.255892325 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 2.225413147 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 2.750043003 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 2.542326075 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 7.084254528 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.262443198 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 7.088439613 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 2.440275424 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 2.09850302 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 2.124720299 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 2.24183243 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 2.151349364 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 7.084354775 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 4.068963666 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 2.326278675 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 2.586151846 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 3.129603845 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.910193098 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.004754649 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.775281361 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 2.145963192 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 2.305307815 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 7.001059291 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 2.008013079 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 2.137725951 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 5.565244964 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 3.269976972 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 2.106899026 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 2.312204532 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 7.046019201 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 2.589416878 seconds)
  done (took 1192.653357229 seconds)
done (took 1194.777866656 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.215798274 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 3.438870831 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.632314068 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.915319559 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.84129959 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.671772084 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.579256731 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.257915629 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.110036462 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.628147449 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 3.005045934 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.885601645 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.16917055 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.185058713 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.165199687 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.180290845 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 3.279310724 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.34907367 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.229745051 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.997882298 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.603802897 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.996855262 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.515593866 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.384636967 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 3.459095207 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.198252645 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.287018075 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.509435851 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.528452145 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 3.053393206 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 3.300172724 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.488501188 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.936509077 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 3.32541438 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.077381416 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.07703949 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.877858756 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.091584454 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.218316185 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.156810441 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 3.443408023 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.157120102 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.730758714 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 3.013195203 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.775736125 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.487803781 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.895420479 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.134183552 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.141653865 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.456944135 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.2701641 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.218689968 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.461848304 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 3.024671408 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.895079849 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.980582039 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.509615455 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.952588683 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.802214467 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.504092125 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.643789125 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.194373479 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.532414999 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.372915378 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.211400532 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.394710012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.499174653 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.302507714 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.500846528 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.706672744 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.352168067 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.319401789 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 3.199620678 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 3.288866001 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.224568297 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.647618328 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.730572886 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.770503856 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.895390507 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.191609175 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 3.03858897 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.997512043 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 3.050303968 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.07909295 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.193225163 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.847993096 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.89609714 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 3.005205379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.158645724 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.462785607 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 3.040885792 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.628252 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.570426435 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.275231418 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.378983596 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.907817916 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.877443564 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.221366073 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 3.018801174 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.439946825 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.861126844 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.23557094 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 3.069178365 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.113779109 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.139321302 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.237923703 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.245583965 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.493319082 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.319679826 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 3.231094365 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 3.473710909 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.164405358 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.288247157 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.199677801 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.177834601 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.900309494 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.396430029 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.979027027 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.291700388 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.762325326 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 3.348402069 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.176742561 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 3.472433003 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.396018209 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.277173485 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.167521244 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.171977815 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 3.039004529 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.189513797 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.178202257 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 3.282615492 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.556923816 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.487691168 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 3.026418535 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.263372484 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.677805811 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.233446568 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.222240671 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.072376799 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.935935001 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.175582919 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 3.049098642 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.359483797 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 3.401993556 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.317469342 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.360585642 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.137864687 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 3.345299598 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.238808482 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.145813174 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.260748658 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 3.179439694 seconds)
done (took 395.456939834 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.367951528 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 4.408758744 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.334790874 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.350640957 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.429821007 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.451327662 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.137515766 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.529219514 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.116369404 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.489484926 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.339566548 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.262960708 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 4.500806645 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.294237324 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.476409131 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.33145442 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.211825115 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.356115255 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.565623245 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.453891142 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.135148975 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.340633441 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.224736795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.523886274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.094182157 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.122968787 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.451486314 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.224829281 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.372948057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.109743424 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.13120082 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.338643424 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.450959258 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.261246976 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.534231909 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 3.096087952 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.361040793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.116397255 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.33652189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.337031113 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.311837994 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 4.92058191 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.105290987 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.07549092 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.17169561 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.354900452 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.142253003 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.315479144 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.079225367 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 3.039893111 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.296394869 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.121676596 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.188295392 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.390223533 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.256816421 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.192999068 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.556488936 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.581432526 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.432602403 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.387225926 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.444009633 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.521439559 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.527312891 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.304328175 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.156000899 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.401877133 seconds)
  done (took 191.213043003 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.55737854 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.420383264 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.549769767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 3.497470276 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.680782142 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.513651703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 3.630279513 seconds)
  done (took 21.908243483 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 3.193095407 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.163808445 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.401469091 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.351248267 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.163052583 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.280999251 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.221271917 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.111252612 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.345456524 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.16800044 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.447978839 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.341395313 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 3.072565678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.109868664 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.235761126 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.410721643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 3.111933818 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.222881735 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.259496373 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.408906738 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.112735093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.083863317 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.403836517 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.236014215 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.159218116 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.193385955 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.140622939 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 3.120289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.194033634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.13671768 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.160793307 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.270550583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.150538518 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.116912976 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.188672995 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.483456396 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.174096112 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.211659068 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.305736592 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.118233595 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.147587205 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.182383959 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.300297714 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.188760541 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.14208124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.340299976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.17896928 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.158801788 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.425636394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.350562844 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.648850326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.454885907 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.353444049 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 3.339995472 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.667744575 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 3.11063716 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.213481294 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.122790441 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.135497642 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.194312524 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.1399359 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.394787665 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.372427523 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.130629032 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.364960246 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.538801293 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.462474979 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.417592619 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.243172932 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.528899331 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.203959429 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.511410033 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.319925947 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.345864565 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.266844377 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.514474719 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.455414318 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.951273119 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.936395433 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 3.129423351 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 3.273924636 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.150702222 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 3.459239839 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 3.071467721 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 3.068588114 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.129346451 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.193925917 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 3.770092627 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 3.030491962 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.351643208 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.802462283 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.356273467 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.318662851 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.344277274 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.236892745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.363120593 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.548366579 seconds)
  done (took 247.552759048 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 3.594518571 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 4.917403526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.340424809 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 3.449653371 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 3.652537678 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 3.798084717 seconds)
  done (took 23.927157079 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 3.834414357 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 3.197227321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.234737902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.216905642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.28911268 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.231924885 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.168788899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 3.407818408 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 3.453433383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.392831446 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.221495302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.241842608 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.184184139 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.324098597 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.171109262 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.228226628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.151548108 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.194041246 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.171960833 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.250713499 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.323797366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.221659672 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.291739924 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 3.085236774 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 3.350520401 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.264445331 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 3.204131716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.174138056 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.222545926 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 3.578913342 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.389825852 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.26712576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 3.277540942 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 4.712936993 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 3.030394913 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 3.148155593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.437619824 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.281424973 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.218480618 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.193100663 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.244187973 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.249385793 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.173015924 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.241639366 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 3.589682572 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 4.252726094 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 3.416181537 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.47840034 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.188116994 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.180199665 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.241323051 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.225434937 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.209754853 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.187181132 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 4.994092835 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.611089946 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 3.265147581 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.197993624 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.219178276 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 3.112761474 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 3.414289803 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.274119627 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.544499963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 3.243388962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 3.151862402 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.220452136 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 3.164345369 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.456468731 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.279324181 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.190112133 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.196854943 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.21711016 seconds)
  done (took 196.072471176 seconds)
done (took 682.647929005 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.157723799 seconds)
  done (took 9.21674712 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.188356189 seconds)
  done (took 9.39161024 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.496134134 seconds)
  done (took 14.562708522 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.051386606 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.054695289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.03831656 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.023136425 seconds)
  done (took 30.130297694 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.191796736 seconds)
  done (took 9.142690462 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.0360331 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.018103012 seconds)
  done (took 16.081820844 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.112802247 seconds)
  done (took 9.068073581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.340211282 seconds)
  done (took 9.301558103 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.064861677 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.112942719 seconds)
  done (took 16.224512418 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.067374618 seconds)
  done (took 9.087405974 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.521828936 seconds)
  done (took 10.592689907 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.09133748 seconds)
  done (took 9.112456756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.139582368 seconds)
  done (took 9.169434651 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.907186662 seconds)
  done (took 9.937896007 seconds)
done (took 173.086217673 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.120234429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.110722834 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.103211589 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.107125306 seconds)
  done (took 30.48608322 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.418206677 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.435290462 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.403171841 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.465617072 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.366105778 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.381842068 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.342620815 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.339927644 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.28431158 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.407992404 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.339350849 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.490123037 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.391676593 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.31704411 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.317208468 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.396196589 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.390245621 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.340059977 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.284098997 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.318577612 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.489559487 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.491705288 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.77411525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.762935292 seconds)
  done (took 59.983985102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.225279953 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.380115192 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.184641731 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.337613194 seconds)
  done (took 11.074431229 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.048134828 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.389997655 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.373523392 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.332063882 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.372870162 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.185706584 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.374970872 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.300368535 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.275551452 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.275228578 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.695876854 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.197830642 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.239467485 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.469964769 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.251612779 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.09271719 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.071183839 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.228385873 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.427461366 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.266288661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.313156681 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.41131043 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.412177414 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.422684221 seconds)
  done (took 57.376078057 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.814115955 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 3.02427815 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 3.461324213 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 3.003488626 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.817431991 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.89306167 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 3.444080291 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.637745316 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.389416243 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 3.377823817 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.838836158 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.885615683 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.253646208 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 3.009999524 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.890354987 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.281819154 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.305828338 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.954712195 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.739029973 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 3.405313064 seconds)
  done (took 59.438794279 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.111460134 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 7.122114285 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.266497945 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.184462463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.093875649 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.088547963 seconds)
  done (took 34.915867983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 4.139690157 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.227557784 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.422586692 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.368423049 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.211904968 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.193056325 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.68608548 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.268768828 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.846011221 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.814988129 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 3.695162275 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.530961115 seconds)
  done (took 34.36658446 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.110324008 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.123340538 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.145752028 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.237099001 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.991887551 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.974554993 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.434419383 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.128414449 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 3.256480362 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.298651906 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.963505793 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.274942087 seconds)
  done (took 52.985726164 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.328938829 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.286110571 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.424945433 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.861055863 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.601509966 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.172058853 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.424779393 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.533476501 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.147178589 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.126641004 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.505482026 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.055592089 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.531105851 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.975298123 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.025240022 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.294230954 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.861276051 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.504541192 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.44798257 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.163025183 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.040825457 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.19322577 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.058443866 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.575754119 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.370495742 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.069941389 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.291039583 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.348027838 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.104568855 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.243083492 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.195176942 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.600571843 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.306531296 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.420652944 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.651556059 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.207247295 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.192361723 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.157655554 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.675016724 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.399699053 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.20329392 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.183780309 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.025439778 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 3.253104423 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347298902 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.882270216 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.084003613 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.614334136 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.05122476 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.226046681 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.905928022 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.684104364 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.379659319 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.001238151 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.205628994 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.350541636 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.22289726 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.148809152 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.388777855 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.158650519 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.296673454 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.198358924 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.342222432 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.068367821 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.615442637 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.416014838 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 4.439469349 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.402866934 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.287257843 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.305284714 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.35228387 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.134933311 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.125080713 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.151669551 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.568903237 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.999690462 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.373006274 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.025885433 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.788515019 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.600330663 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.001362882 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.180325207 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.6937643 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.029654389 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.068674801 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.231237437 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.943650802 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.041809768 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.188895037 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.143302053 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.468814444 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.256766633 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290567094 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.382967611 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.817849646 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.097630155 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.789870145 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.41286548 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.080229179 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.682923184 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.132306778 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.150956271 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.223452489 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.648206484 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.493104538 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.154782013 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.846416126 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.710048736 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.402192898 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.717067063 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.271984318 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.934396216 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.436067016 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.43952387 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.097321705 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.955590067 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.007482596 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.123614078 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.428647526 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.08125749 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.981710282 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.428650487 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.212980747 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.067122795 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.237164913 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.02980198 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 3.165730243 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.027262354 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.830867173 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.071757941 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.273401084 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.612869372 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 3.291329548 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.140163516 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.007624035 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 3.202104721 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.541561622 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.193087786 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.385026262 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.515274807 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.694846172 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.592459444 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.052492069 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.988166525 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.571760276 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.4519691 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.456774219 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.721001439 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.277801606 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.214945862 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.122612816 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259022703 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.121436536 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.645188537 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.104620575 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.775028156 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.787484056 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.332154595 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.032049847 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.069103488 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.113806406 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.258113674 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.770944365 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.139921704 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.222666147 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.325707501 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.234473234 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.066660469 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.040869842 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.464010988 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.34733108 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.606613271 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.355996455 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.77390157 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.47850157 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.606331729 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.324035359 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.486814577 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.778186546 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.337331528 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.464583735 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.672202524 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.104724322 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.118955126 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.20288487 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.512797209 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.375460821 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.857900509 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.191728039 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.865002298 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.145143645 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.011478426 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.982285345 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.231783168 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.582409317 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.116732791 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.605534236 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.129627618 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.341540105 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.327774498 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.056392113 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.359428601 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.093688537 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.391146209 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.410405498 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.337664388 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.986426504 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.45234768 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 3.543765989 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 4.507522973 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.15733801 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.335049884 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.945628454 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.048327588 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.033761285 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.374247431 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.892016821 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.736267776 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.33062559 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.828557034 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.565909899 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.235585451 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.074650836 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.081040738 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.949820241 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.203756748 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.162545612 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.223595901 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.556909859 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.356809859 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.442785043 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.138785908 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.128599161 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.390348124 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.446576436 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.398571145 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.601253117 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.714061886 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.71031369 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.131143244 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.705388833 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.245761574 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.059205482 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.67698784 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 4.346893997 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.992437505 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213869425 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.660706086 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.198752122 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 7.235124729 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.334413961 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.067251353 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.51695373 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.674553048 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.088405101 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.128571132 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.236244924 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.085333384 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.339362007 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.905707765 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.347493036 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.324054507 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.396017825 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.368174628 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.321105164 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.517655512 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.62995622 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.45611858 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.070587567 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.291167186 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.220886013 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.402849852 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.129243585 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.395940217 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.757797359 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.694685723 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.802114248 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.560951952 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.243070703 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.633858738 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.482528222 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.270583442 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.352406819 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.95641317 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.656830282 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.995055499 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.16753478 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.98737951 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.801475191 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330238948 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.398753249 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.486705082 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.071223518 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.547210029 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.391997484 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.062357431 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.156463837 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.295321261 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.036604841 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.352598248 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.036671248 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.978659515 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.407386608 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.036975971 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.43784484 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.211365207 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.355998514 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.187082855 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.682498834 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.063632835 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.152535963 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.501711064 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.214102519 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.166223839 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.370652043 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.841929623 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.161868092 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.129749206 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.518035954 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.976681044 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.487915531 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.628084572 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.803928055 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.366866481 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.77436036 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.039211597 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.228904605 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.189781924 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.659870701 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.203844234 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.428198505 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.041889163 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.238585053 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.347747127 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.132812889 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.560457328 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.993019399 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.609725294 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.079255188 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.518102172 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.563110598 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.792031923 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.515900964 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.037019795 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.554317696 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.013360024 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 3.180034051 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.321971609 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.700551464 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.734188561 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.858043968 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.823124827 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.168779734 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.433387621 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.127315553 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.751881275 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.193466951 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.275674643 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.228579881 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.166004512 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.982215811 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.564872085 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.78744989 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.302902192 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.193751768 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.218101285 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.153430195 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.16964857 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.562855491 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.341911051 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.775725056 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.488811488 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.264370602 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.990727087 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.041532547 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.295874974 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.195199336 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.123765061 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.31591943 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.458769135 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.110742501 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.041386758 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.1133279 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.564196421 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.742206779 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.73865082 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.364274684 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.549840552 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.615044261 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.040304711 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.777654235 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.230920915 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.379000932 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.432065286 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.929955654 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.405049385 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.317079081 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 3.185244206 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.99183337 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.221300869 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.043200616 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.111589246 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.790391203 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.331430408 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.096783412 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.824175482 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.630368737 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.033012933 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.066315798 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.076764012 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.257482653 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.279378037 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.041689834 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.566288106 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.428679622 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.181374558 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.998591976 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.79324936 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.99407423 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.232771506 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.18547189 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 3.297508457 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.881002431 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.116081202 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 3.744758695 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.60703952 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.235326181 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.265638579 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.045349322 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.136891374 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.071975194 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.770699923 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.892486217 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.365940372 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 3.643673168 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.324367994 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.146751296 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.456635539 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.25860969 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.454345704 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.832095156 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.61483667 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.55077709 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.50281901 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.424511589 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.889360804 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.250779619 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349311285 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.105842151 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.122095177 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.204677322 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.503252064 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.511220164 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.211479874 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.655835689 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.370997848 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.247807104 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.254348329 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.193123085 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.642000907 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.246768939 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.173154343 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.221195094 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 3.339874326 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.420963525 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.09472661 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.381703794 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.088236925 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.053050975 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.273479782 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.327605231 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.454845765 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.42296504 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 3.012165791 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.283878601 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.856570185 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.106605797 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.651787975 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.150260176 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.939291912 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.46614721 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.13290454 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.585352286 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.777604945 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.312237665 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.37845835 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.016977383 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.108707442 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.299765603 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 3.579946712 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.091211561 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.706451537 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.481460312 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.101079254 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.534286604 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.15650808 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.24626029 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.848979795 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.612545251 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.128654631 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.91045223 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.141440756 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607685722 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.748590632 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.161680487 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.278584781 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.9422285 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.074239321 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.149546066 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.182030995 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.639501138 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.129916014 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.565256858 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.166501613 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.177777657 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.048140462 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.252375784 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.138592865 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.271672665 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 3.261682665 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.322012064 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.379035007 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.28198399 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.092279248 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.618815324 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.739150334 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.253378216 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.283432545 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.186114065 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.48148349 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.946754729 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.225158275 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.707451122 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.320835834 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 3.331646418 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.566324413 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.403519041 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.16459361 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.350525076 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.143225669 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.464048954 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.269378533 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.682765318 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.390706837 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.17865393 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.281144456 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.126695604 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.576862861 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.496272553 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.912374363 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.050050259 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.429333901 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.091408762 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.122336256 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.710403672 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256164891 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.198486344 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.277018188 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.60023921 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 4.392960467 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.219493631 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.122676316 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.354617996 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 3.666678904 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.10854352 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.219018981 seconds)
    (567/608) benchmarking "2d"...
    done (took 3.010117429 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.32799225 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.470537401 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.097046264 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.317983583 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.134907619 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.082031613 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.573150909 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.050852549 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.433531295 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.089984466 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.605670962 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.011301163 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.146911086 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.228399069 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.459757625 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.088203711 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.790211383 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.283388507 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.139279126 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.139518196 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.52852068 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.237391417 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.397125623 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.600900564 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.361416014 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.436165811 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.949315662 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.235212843 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.102309806 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.43390152 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.941002953 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.650681626 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.139735115 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.591461754 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.911369741 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.050133745 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.61427581 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.367931062 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.823470654 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218500013 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.577856955 seconds)
  done (took 2527.653719893 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.091597566 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.126313283 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.147211423 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.170742933 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.230903362 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.219918993 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.223075365 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.204399962 seconds)
  done (took 59.438175098 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.159757036 seconds)
    (2/17) benchmarking "4467"...
    done (took 5.10895872 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 6.74327522 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.696700227 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.155981732 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 6.33516313 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.48415673 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 6.618398361 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.228456043 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 6.061063228 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.096997626 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 7.288444326 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.083073633 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.056408109 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.722656613 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.550039643 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.081582648 seconds)
  done (took 109.546981339 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.094523714 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.878119111 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.066614071 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.275277444 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.089428066 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.312965077 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.058280578 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.061623871 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.713780838 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.722982732 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.071749603 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.067528707 seconds)
  done (took 90.403402444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.08196781 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.082939185 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.080952587 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.084383175 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.08194045 seconds)
  done (took 12.394218978 seconds)
done (took 3142.234206416 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.272437653 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.558539874 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.594723635 seconds)
  done (took 7.133445729 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.123502337 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.177460083 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.245636472 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.191696986 seconds)
  done (took 10.74416967 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.34726144 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.54873536 seconds)
  done (took 6.876037537 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.60511566 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.152040363 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.620370252 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.058924674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.118578476 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.129109139 seconds)
  done (took 23.330448134 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.084769474 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.127556418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.112653448 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.11797162 seconds)
  done (took 10.580252416 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.100756412 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.115363843 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.115203616 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 3.094365895 seconds)
  done (took 23.448286626 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.521712759 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.342185504 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.880170585 seconds)
  done (took 9.813773985 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.976511737 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.551306592 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.954430991 seconds)
  done (took 10.569525557 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.451129165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.062032693 seconds)
  done (took 8.595699247 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.315751759 seconds)
  done (took 4.393932398 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.636928638 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.628139601 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.970443098 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.993345543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.072694223 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.3645528 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.417035643 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.448689448 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.72554532 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.633087577 seconds)
  done (took 28.975151035 seconds)
done (took 161.09119031 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.943053563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.500760066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.238717035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.765317631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.187060146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.258825744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.195105626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.583360857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.705621076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.703048351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.832709665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.275875298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.222404405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.537286694 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.213098164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.491578135 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.555635393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.953304591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.837681784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.449419421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.131343958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.679028527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.499670223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.676504243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.493319242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.270148605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.17598106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.437889755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.068852755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.190534717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.267596507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.811319901 seconds)
  done (took 184.219870882 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.17537833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.154081551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.167645821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.161918833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.051605858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.16300947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.151800941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.139540896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.973713453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.999899104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.15066334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.02437983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.151613701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.147733661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.064268287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.140485807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.026556143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.144336564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.125175676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.100668812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.094011835 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.861155924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.138665723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.904633076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.090225051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.168764798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.180623554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.159412489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.158670798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.163404026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.163692136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.187596544 seconds)
  done (took 221.578631672 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.132334101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.146839941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.160848854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.182564886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.146549294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.134198185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.133035679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.105877037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.112469418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.139009154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.072801973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.140593031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.100072285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.098823589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.117673371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.132396456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.160488939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.140120878 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.185073845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.162042282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.155467644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.163610557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.147717158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.143804847 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.067179249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.151437898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.093589498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.136487168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.134967813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.102050629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096318653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.114259349 seconds)
  done (took 230.296940716 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.430162447 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.238805318 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 3.150703741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.537069766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 3.148939512 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.188306494 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.521356546 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.475794317 seconds)
  done (took 24.757254035 seconds)
done (took 662.945673557 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.899109097 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.063028256 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.340861985 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.381764419 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.767157301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.430224985 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.381322582 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.639094651 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.974367625 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.631982014 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.693828002 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.372224259 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.092337629 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.306684692 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.251528311 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.610889165 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.58329499 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.871542647 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.316979335 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.92028312 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.343126101 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.155907345 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.569140399 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.016380173 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676137551 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.140965847 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.232598852 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.544569242 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.307144254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.400407245 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.154149244 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.534669373 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.394648634 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.394106806 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.609079316 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.623024215 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.477379515 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 3.695452037 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.309769907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.959594315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.019682343 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.828297093 seconds)
  done (took 120.016867842 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.202014936 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.196074015 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.3470708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.283946623 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.798847402 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.301147496 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.377980717 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.380523933 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.263733721 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.3986825 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.414067583 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.846882296 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.400902455 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.825771646 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.420984454 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.462259411 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.260553023 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.793752973 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.406846774 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.387399165 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.219075642 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.351461579 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.224120307 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.377749594 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.219531964 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.235681323 seconds)
  done (took 64.521817645 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.242161984 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.362652176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.494418257 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.54877732 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.402536626 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 3.234261012 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.584885105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.33638983 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 4.155038009 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 3.553304651 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.3019874 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.30343325 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.356699086 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.527542761 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 5.729337333 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.309215036 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.389277835 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.319135544 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.356200574 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.412390899 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 3.400829265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.248700716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.585254685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 4.358001885 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.84807377 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.33489575 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 3.549610897 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.769446025 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 5.702591127 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.408590345 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.468821734 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.636146316 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.593782276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.522733893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.329874542 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.201767929 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.193937559 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.352713503 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 3.113958672 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.32754508 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.579597179 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.263227297 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.625240781 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.762421889 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.20502006 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.396294874 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.605917405 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.352610961 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.326983872 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 4.754235744 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.564999745 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 5.155676329 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.357386572 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.417838037 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.289758398 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 3.585368524 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.371527818 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.472689949 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 3.305346408 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 3.754926518 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.253330425 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.577510646 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.344420275 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.116170856 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.450209793 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.312533049 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 4.376348346 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.35591225 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.563996592 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 5.432220436 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.850276688 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.224286921 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.196999847 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.259800287 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.327243864 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.659677613 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 5.211413067 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.402469209 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.595553225 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.591209494 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 3.54849216 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.78455905 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 3.274615535 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 3.432898377 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.330331546 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.22720269 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.291590576 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.561102546 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.589140231 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.689556771 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.769824573 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.479933057 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 3.64859436 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.617500886 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.470497609 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.564557033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.211626076 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.287206637 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.621471568 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.816353879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.275195283 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 4.454058766 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.838926083 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.564491743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 3.539121568 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 3.229399495 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.495006512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.095657013 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.518783327 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.136138183 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 4.357127882 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 4.457348493 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 3.460734802 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 3.459479957 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.145374303 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.674715152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.35056963 seconds)
  done (took 352.471108481 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.111959501 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.116784615 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.12089037 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.153645509 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.161927807 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.769132215 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.259355608 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.184447649 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.747627972 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.237483134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.169254769 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.176086139 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.183179457 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.186675084 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 4.749781246 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 4.719832895 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.982231644 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.182477615 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.177512152 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.180752598 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.892230448 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.190335625 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.182145362 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.184643061 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.176124062 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.179181744 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.189496921 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.198459527 seconds)
  done (took 182.823538334 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.233950284 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.720993197 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.255982927 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.321417061 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.560288767 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.238189652 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.507722537 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.293961019 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.275450241 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.212217258 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.204472162 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.506624222 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.493349786 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.677642928 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.29964023 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.789768471 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.828422342 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.37016635 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.244960504 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.23527771 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.376176163 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.472192107 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.352854113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.509676793 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.390968046 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.530066273 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.59077886 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.26217754 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.372233743 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 3.035504871 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.268114351 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 3.248035064 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.357871653 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.22928999 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.495964294 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.623792667 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.91775229 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.88401369 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.419876806 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.205023664 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.20843268 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.533797795 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.561128211 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.286210777 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.244808056 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.655583216 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.226977387 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.400207337 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.419680499 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.208442078 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.344160249 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.355941854 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.795036479 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 5.133775808 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.424893406 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.388883648 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.848695952 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.599618342 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.227422382 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.619554363 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.222976689 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 3.035559171 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.386731569 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.306121588 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.248984341 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 3.091255397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.325782565 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.649164169 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.613117491 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.242392697 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.650239073 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.430301327 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.266980654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.410985739 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.372128577 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.842261989 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.908599794 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.348942103 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.335257365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.314617439 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.445039767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.260025038 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.58839228 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.345986065 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.200840367 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.578404591 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.665947287 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.197714211 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.234669134 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.366007244 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.403292227 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.451705851 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.623629348 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.291285754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.833541151 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.41289981 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.594873199 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.243110261 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.344545356 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.21116701 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 4.37617015 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.446892514 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.219415564 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.551883561 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.75881873 seconds)
  done (took 266.061104835 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.98481 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.349282879 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.486253121 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.839117589 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.574621552 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.158262341 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.424391373 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.285628128 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.50851151 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.446077039 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.410962514 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.398348363 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 4.039228908 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 3.010129329 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.278691264 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.395640371 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.287317634 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.850089493 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.541344561 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 5.113921649 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 3.689750238 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.986852468 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.561211953 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.607364841 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.681570807 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.740711089 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.840364825 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.346109027 seconds)
  done (took 80.951009739 seconds)
done (took 1068.936762115 seconds)
SAVING RESULT...
DONE!
