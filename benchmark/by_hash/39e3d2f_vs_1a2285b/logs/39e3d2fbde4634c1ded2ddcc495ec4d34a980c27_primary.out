cset: moving following pidspec: 363415
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.77445987 seconds)
loading group "shootout"... done (took 0.814262807 seconds)
loading group "string"... done (took 0.231689684 seconds)
loading group "linalg"... done (took 3.260488698 seconds)
loading group "parallel"... done (took 0.021822859 seconds)
loading group "find"... done (took 1.1605402 seconds)
loading group "tuple"... done (took 0.712509662 seconds)
loading group "union"... done (took 3.073705767 seconds)
loading group "dates"... done (took 0.155557685 seconds)
loading group "micro"... done (took 0.057110083 seconds)
loading group "simd"... done (took 0.388758747 seconds)
loading group "io"... done (took 1.411071689 seconds)
loading group "random"... done (took 2.377591439 seconds)
loading group "problem"... done (took 1.189170007 seconds)
loading group "array"... done (took 4.681518836 seconds)
loading group "misc"... done (took 1.00683159 seconds)
loading group "scalar"... done (took 3.470305816 seconds)
loading group "sort"... done (took 0.308777 seconds)
loading group "sparse"... done (took 3.585949348 seconds)
loading group "collection"... done (took 6.095155618 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54785847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075209208 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.256836514 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076697039 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.285256476 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.083464063 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.089496522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.07115001 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.00445203 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166274145 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.217935906 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.392815729 seconds)
done (took 5.011811518 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.263804693 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033784287 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128905115 seconds)
  done (took 0.775920439 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.142246845 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015831411 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02280255 seconds)
  done (took 0.786239227 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020579432 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.096862831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.02171746 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022380838 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022135634 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021610321 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021419142 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021394066 seconds)
  done (took 0.83547097 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029664341 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023104062 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021053834 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022501861 seconds)
  done (took 0.705054353 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.02300656 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.084947104 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020469832 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020297877 seconds)
  done (took 0.751175608 seconds)
done (took 4.759726208 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.200959248 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.786674543 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.985309324 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.184039925 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.362859862 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.309300902 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.078819461 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.248564057 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.151551737 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031855581 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186864488 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040039737 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.519441759 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.461684899 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.028714344 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.144884881 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.579538489 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.040121227 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.071419151 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.233385093 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.040552502 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039843429 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.044293056 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026932999 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.138383316 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.140469801 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.58611262 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.069785975 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.026363422 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.050485406 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.029197626 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.033133901 seconds)
  done (took 9.517279668 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156616096 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.148658951 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023925095 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059663108 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050871221 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025147084 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030398523 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023128781 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043081199 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088668309 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046238119 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.164202485 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021413025 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024931286 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.141999212 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.1167541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038363052 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.03778166 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022857706 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036734615 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049578984 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035358637 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033332515 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032896636 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.069413905 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.090595283 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041889662 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.064357418 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0231017 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.035084728 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.051657232 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.064028977 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023092305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.02176038 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.06587883 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.040489934 seconds)
  done (took 2.725366355 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.710640369 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0514485 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.142604227 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.133468878 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064797221 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050710685 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.1848332 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078335227 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.055131389 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024135696 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.212003116 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.664139523 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.174548596 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.063899362 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.029056129 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.186553676 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.918809339 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.947241594 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023855235 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024098225 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.139552983 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026526481 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.180725523 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.02197931 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.135958223 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.819067626 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.02604137 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024678081 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.053378434 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.14675914 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021087112 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.096718854 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.05029908 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025334555 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.555039551 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.022038761 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.020027408 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042057611 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051378583 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022330307 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023368783 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.034350856 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021444064 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.074957532 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.036091009 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.51966194 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.02528032 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.70747088 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.836815268 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030794218 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027807038 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.057741897 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020046273 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02359011 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.597806354 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.111551254 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022890522 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.29592059 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025916272 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024650386 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024769686 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056837286 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023595914 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024875215 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026869177 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041546445 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.040635753 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033046871 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043743163 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021936435 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023039486 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021544551 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.414386556 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029961461 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025491932 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.021011434 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027328845 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023208126 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022667538 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.067829949 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049887187 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.047458987 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.144129282 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.028532794 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022407042 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.499670998 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.924239438 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025334577 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024267884 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.490421924 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020645986 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022634249 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.0242433 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.044308875 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023019286 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019918301 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.057712976 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024650372 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.130561787 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.494657561 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.079742957 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020371291 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.402774283 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024623139 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.058812934 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.077702904 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02275938 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064656496 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023046126 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020326003 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026354344 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020067284 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024311854 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021246383 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022006827 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021248062 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.02366703 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023951278 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022916015 seconds)
  done (took 19.979070195 seconds)
done (took 34.539610291 seconds)
(4/20) benchmarking "parallel"...
done (took 0.769080725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.215965034 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049029453 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019575109 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.166385605 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.044377521 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.137968221 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.178543302 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.129586557 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045797185 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.045641834 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.046103448 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.186946818 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.196612567 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.047286988 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.122713395 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.198423598 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.047778936 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020108355 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.046325095 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.047286479 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.047196634 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020131559 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.04669158 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.047144679 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.12331186 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047875478 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.020066297 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.125436122 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.049514983 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.126240983 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.048480473 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.047402395 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.04913747 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.125945134 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.050173932 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.125925888 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020352949 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.049676247 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.049847952 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.050780396 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.050436498 seconds)
  done (took 4.031315087 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046496793 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038554534 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040553995 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018316466 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028243374 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038372646 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018275128 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037973807 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041967853 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.03849547 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038313326 seconds)
  done (took 1.140677241 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041054674 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039292666 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040543803 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018216628 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029964442 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039091946 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018230925 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038676271 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041211095 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038963959 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039020313 seconds)
  done (took 1.079948925 seconds)
done (took 6.926018602 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.156223472 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.124969161 seconds)
  done (took 0.967113613 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.556516153 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.218434469 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.134637279 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.259174998 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.127743701 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.159903155 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.377728703 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.164962321 seconds)
  done (took 6.743237692 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075971168 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.14557246 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024489538 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022980509 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023213577 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023237922 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024829267 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023551335 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022831619 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025311555 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024890664 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023066722 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023722743 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024924095 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023052249 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023270122 seconds)
  done (took 1.393437742 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029201234 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.02593795 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027107337 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017305777 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027759674 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026384098 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027430118 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028231486 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027067533 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.027174222 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.02502638 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.02797117 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026449352 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025293543 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027696641 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017295169 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.02809294 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027256658 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029221093 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027989088 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.027064325 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024774323 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028757247 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02609274 seconds)
  done (took 1.342062518 seconds)
done (took 11.142689827 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142432202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029974468 seconds)
  done (took 0.873598385 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.131257771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.129530576 seconds)
  done (took 0.967476536 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029100607 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016206888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032377356 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024273552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016274689 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016119076 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031482661 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016362165 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.01621837 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016385172 seconds)
  done (took 0.925054764 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019608418 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023208656 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021257072 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019433334 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.02106009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017212116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019358904 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017516593 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023087132 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016519387 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020337571 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038410569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019748826 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038765898 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019657778 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020327622 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021700719 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019607895 seconds)
  done (took 1.105639806 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018010137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017167297 seconds)
  done (took 0.745345522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020960746 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017205423 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018887014 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018690822 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016804024 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0162177 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016746786 seconds)
  done (took 0.835544406 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390700209 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.089570122 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32059415 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024757251 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038200206 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.234611716 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0200403 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024308592 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024183115 seconds)
  done (took 1.875552003 seconds)
done (took 8.037309823 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.040782282 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.142888717 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.151659686 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454704292 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034557872 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022819239 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.0518323 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.233473342 seconds)
done (took 1.852427979 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.479855021 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.270425448 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.191092587 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024143659 seconds)
  done (took 2.201459288 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314365574 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144629567 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.030932178 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022918286 seconds)
  done (took 1.238752574 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022255761 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027866593 seconds)
  done (took 0.772648375 seconds)
done (took 5.415792454 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030466378 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017065242 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023319233 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018486157 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018139969 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017636484 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017582181 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.01842428 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016648531 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018676774 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018645544 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018648311 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.01834732 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018298185 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017841454 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018627982 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016709065 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018333348 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018332151 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018303036 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016713409 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018725316 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017936112 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018311138 seconds)
  done (took 1.160266838 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.03651085 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.02117792 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021742513 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021542958 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.022112118 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.02160423 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021549272 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020797894 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021694737 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020509513 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.022347569 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.02234419 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020583965 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.022404155 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020615229 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.022417806 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021890062 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0211155 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020625204 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.022378947 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021726516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021066619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.022318885 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02172593 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.022271442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022212257 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.020720632 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.021042665 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.021773264 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.022231496 seconds)
  done (took 1.385335115 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023395833 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015343554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015577762 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025674842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015202788 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015421928 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015859302 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.01500059 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015361123 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016213485 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.01569482 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015089464 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.01591808 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015058954 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015134157 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015688648 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020361816 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036109034 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.01550523 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015243134 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019984574 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015481189 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015214452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015288684 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015769066 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015317076 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.01514452 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015627681 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015284565 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015952515 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015277846 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019927632 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021535013 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015732587 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.02574014 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020503424 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.01574612 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019814388 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016138594 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015111359 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.01511528 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015080934 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015274408 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015251391 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025837703 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015430111 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016471357 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015733548 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015493186 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015297779 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015283205 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016700142 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021141468 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016628282 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015319656 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016612671 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015270124 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016050304 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015466766 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015250865 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015268958 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019459777 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016732869 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016059359 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037331275 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016776623 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026004815 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015482596 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015869322 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019611147 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015961413 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035224541 seconds)
  done (took 2.000106508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028045257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025901833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034575686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025207821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018758118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016036769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019059841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016082981 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025567607 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019719584 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016195105 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019318108 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025592793 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019783113 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01731401 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025490542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019761042 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018971488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016200997 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019727086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017235467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019321274 seconds)
  done (took 1.192984261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104533244 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021564647 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.065443738 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024762272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023631531 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024879725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021555543 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021544216 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021678543 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022323207 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022279146 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021746267 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023789115 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022213022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022291214 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.022131039 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021747664 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.022105222 seconds)
  done (took 1.253610682 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.03447195 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021533345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048854373 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021191467 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021252975 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020810659 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024526409 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024617144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020936242 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021475888 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024976747 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021028755 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021001962 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021476091 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021036131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021474527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021019428 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021442618 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024929764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024892515 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.02492826 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024830024 seconds)
  done (took 1.256403588 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035411577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020500216 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.036974681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.022006125 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015645484 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015658925 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.022013462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.020688439 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.021747457 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020151334 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020726387 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015638398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022910585 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.02093658 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.022975036 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020892767 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020389238 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020924978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020405776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015813367 seconds)
  done (took 1.156033939 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134662938 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017843121 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017608626 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021991885 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017441498 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017497619 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022013422 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017649621 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017614511 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042433676 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017761722 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017719145 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022271558 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020528134 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017680296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022226786 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022169502 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022130906 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.01761151 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017616934 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.042224601 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017752627 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022646956 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017911823 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017928376 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017882997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017865821 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020861167 seconds)
  done (took 1.426158576 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039891851 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015123051 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015321638 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019259818 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019120177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025072238 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.01918509 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018992937 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014866308 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015320088 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017321878 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015011431 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015031204 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024573132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.014967702 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017268917 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024594693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019323115 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02537069 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02517673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.01731144 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024466918 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017321814 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015350093 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025361421 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017281751 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019218979 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020070812 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017228413 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015404301 seconds)
  done (took 1.319049867 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030127775 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026749578 seconds)
  done (took 0.783050368 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018821998 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.033570749 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015169439 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028963256 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024150589 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019437799 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024008241 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023851884 seconds)
  done (took 0.909100176 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.129462224 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.155709782 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017261793 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017413373 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.126547007 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084224813 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.1378895 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028833802 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030797732 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019994287 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017252748 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138097428 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016718499 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.03044816 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018256796 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026592807 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024148279 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034969237 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030014536 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015848072 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029472939 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017615386 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016759787 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017710331 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017992165 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023684633 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032693628 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029383202 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025643662 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015222138 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035698206 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016032868 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016830375 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025248497 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.129823945 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016374557 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054303127 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016245907 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020776247 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015943807 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.02814061 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037115226 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030604498 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034230837 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017556169 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.018001397 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015947266 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017702792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020067124 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025243542 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016220287 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023563201 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015847895 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.01756903 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026709429 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016331703 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.021079287 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025465697 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029814463 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026752405 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028680678 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.03173849 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024951023 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024963499 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016914336 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036273492 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017772168 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029486159 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031110686 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017348931 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029260756 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016081346 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015244427 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016183793 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.050313815 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017569376 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.01707919 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016246826 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016387208 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017599977 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025735755 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021014916 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023524602 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019274634 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032244388 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025348568 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015997708 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023673344 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034701357 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020250069 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016223475 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033380217 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020228256 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016104877 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034418586 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026735986 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017781122 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016990818 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020166781 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029748078 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017619687 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015332343 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024744447 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017775764 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.132215524 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021791469 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024883078 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016525919 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.027072972 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023385394 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.01824106 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015666072 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021480242 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017514633 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015691629 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.02612018 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016663913 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031928932 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023675243 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031383265 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.03183629 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027389867 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032941752 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016477934 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015686426 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035425641 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026121544 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017893761 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.03527248 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.01653602 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027228662 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016688109 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018145183 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025997682 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015935492 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018393944 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016790476 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023331132 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018182854 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018365085 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022639036 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025124813 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029189683 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017809966 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025644414 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017113435 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.033117148 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026525133 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021750765 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020454973 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017614773 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029230958 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023881997 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.026124608 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016684767 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017669543 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016815041 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.028135206 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026465815 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018652967 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026930607 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021739145 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017672565 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016920772 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017912595 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020810628 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020502714 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017508214 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024630959 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025750824 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031702144 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024906095 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026087302 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016203704 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.01674696 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018723193 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016673217 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021666018 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026213517 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032700964 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028895171 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038752225 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017044661 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026637186 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018740843 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.035935534 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030960807 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018095772 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022255386 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016102018 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018893865 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026453634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028694832 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031529426 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032257479 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021911232 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021773095 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016813032 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032428143 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017408022 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025377417 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026241302 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023748315 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016810301 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018777179 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.026260211 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021801554 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0179999 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.033018482 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.025316162 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016818005 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031533649 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017220301 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027914954 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016844614 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020688863 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022367486 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.019065932 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.02657512 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032602498 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.016005454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017314594 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.033103989 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.019030095 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018812048 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.025110588 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.178484215 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.02126507 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024031013 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026430946 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026717699 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.020868402 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026428539 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016727341 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.0250649 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018660292 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027433219 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015889952 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033739662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015133926 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.031050504 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016424982 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026662855 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016171329 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025108643 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016455682 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032697991 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.017125703 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016469302 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.027190281 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015025071 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.024815718 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015604066 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021271837 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022780876 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024846298 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.017230796 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024955934 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017036095 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024616204 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020731058 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024223551 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024731292 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020658344 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015499811 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023964969 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026268843 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023806693 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.01706212 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016975649 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016078711 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024809796 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017046639 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016669766 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023776541 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020817852 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021885831 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016975312 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017104732 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016988219 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023960567 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024866595 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033309269 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024106487 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023053027 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024676615 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015501447 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.03099031 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015552371 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.02311025 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.01492824 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021942832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.02471728 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015837781 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034370967 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017070011 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023436222 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027237583 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02411857 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019753172 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033258812 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018490435 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023896654 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023557588 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020634919 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022662482 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017094899 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023933634 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024921053 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025914417 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.01634295 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023095445 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024558453 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017347238 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.024008036 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017412542 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024237199 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017565122 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015348347 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020969754 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.027170926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.021214809 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021434114 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016262581 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015205325 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016235515 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023319374 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.021188229 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024640251 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.03156488 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.015344274 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016887673 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.016006672 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020166465 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034372545 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025607281 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.024075533 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.021244768 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015604988 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017620033 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017891753 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.016363878 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.019477893 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015715625 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.016092915 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026743149 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017798351 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021028911 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016421946 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017305482 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.026111956 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.020566757 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016567825 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023280836 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015984691 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021651375 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015548293 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017722287 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021168879 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015941991 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020255522 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026551653 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.032857141 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023252478 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.025057427 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017083946 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024151689 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031795087 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024678783 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01719775 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025659226 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015822788 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.035916605 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.026115449 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.025194959 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026592881 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017561619 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033990336 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021701386 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026891469 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032468151 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017719501 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.025554041 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016579987 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032746319 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021650835 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01657596 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025404098 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024462587 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.023116893 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028739558 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017629937 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.025646828 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022136999 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020907879 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.018569494 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018420076 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025505924 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.033229544 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017603046 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022951472 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024878215 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.026198011 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.022047394 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029286707 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024874659 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017672797 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018509366 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020640563 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017420118 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.029084051 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01718865 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021753616 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021800415 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016757629 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.024012511 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033789424 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.026273404 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026515725 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.01679599 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016190672 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035412745 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020827362 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.0205097 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024920227 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.02677678 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029561272 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026239036 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034237481 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.017346722 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.023173593 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029237051 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.01780156 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016641055 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020771106 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018546782 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025921584 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026625482 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.024162386 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018816279 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02403912 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0306196 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018407601 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021710102 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023619577 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017796998 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027442594 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024859014 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025275365 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018426323 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016658527 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020430919 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025561379 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024232696 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025785893 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017859638 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026129148 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031486853 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024353822 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020579263 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.01673021 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020468233 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.026061711 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023870793 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016824063 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021959386 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.02063791 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026369905 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026349303 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021750743 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.01668404 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034554659 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025661085 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.026051329 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018759484 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.01889357 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017237152 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016844888 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028413455 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016839494 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018673802 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.02199031 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018848897 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035443064 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.025067216 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.033134758 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017880639 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021726525 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016824309 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026623713 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021885391 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016928558 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027544903 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.016338705 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032860772 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.029180223 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.172073212 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016059236 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021565301 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024475764 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031092883 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025444059 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024751889 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.018678566 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025291424 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.01723862 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026740247 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015690454 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015066142 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.02558463 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024231071 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027850315 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015630191 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025533809 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017229491 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.023916858 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.02403958 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017031821 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017089135 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017025026 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024873152 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020782015 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.024891545 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.02084683 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032397075 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.0164187 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026485739 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024597351 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.026357644 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029595377 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027368264 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023971083 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016010055 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023037239 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023935603 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.016490473 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021038891 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.018373717 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.037117999 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017055823 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016945356 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.029218642 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.022355251 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015663723 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.022176999 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.02073272 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.025367222 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.016345077 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.025771349 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.020196587 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.01629436 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020611015 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020671304 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.014867363 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.01549531 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.015812521 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025011302 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.02071169 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.01568836 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034198277 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.016778526 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024070749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026067258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022571506 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.016832949 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.01491123 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016314845 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.028974537 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030848947 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.019912391 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024026371 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017026024 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024603573 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.01491981 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024175419 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023459822 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023999358 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015555006 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015815799 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030406693 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030845901 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020725375 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.03238271 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024462933 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017295779 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03772678 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024864253 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016871837 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026765068 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018039177 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015586876 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015358982 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.01749664 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027373272 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015853137 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018004038 seconds)
  done (took 15.363176585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061103169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016863066 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015519863 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015504115 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022424633 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016686496 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01541054 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016668244 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016669712 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017686066 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015662171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015609891 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021141246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030811602 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023485258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019347415 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015658386 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016890289 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015686912 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016874747 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021688526 seconds)
  done (took 1.211334586 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020182217 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020013361 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019307526 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019463036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018691201 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015719296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.01901092 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01566487 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019357058 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015993906 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019692895 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015906646 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016190622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016245641 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016178564 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017274665 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019706054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018910072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015868305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019294762 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017209447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.01936276 seconds)
  done (took 1.158196975 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018492327 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016361425 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024229782 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015133539 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.01511524 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017979331 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015165656 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019928925 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019911656 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019905181 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024078838 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015914621 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015050718 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021206893 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015022358 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.01583374 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.060236153 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016144406 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016251794 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015462796 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017630239 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024433779 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015481706 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015620686 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020085337 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018131895 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015405497 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017703326 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015929934 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020109896 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016184407 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015210497 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024253938 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.02345315 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020141339 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020103678 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.01665304 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016095986 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015427759 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015439519 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023773223 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016598864 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015605082 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016532072 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024311575 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015551601 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015336644 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024381516 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015384346 seconds)
  done (took 1.692599788 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028644455 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068290859 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.021724604 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050834917 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.02728405 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020801902 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021485558 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053676536 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016598662 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028353222 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.028454445 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018070185 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.01923641 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.021544923 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017968065 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.01874419 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017465839 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020356398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018311098 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.021272647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023271116 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.02816501 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.02861348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019257102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017708779 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017946777 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019514457 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028139538 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021135895 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019659202 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020155715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028498494 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.022191678 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017872836 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018040367 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029034433 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018593104 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.01833345 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0168669 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.018010089 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019493422 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023005296 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.029146775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.01847079 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023435401 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.01840674 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016532164 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028870443 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018357046 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.02189448 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029609722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019442488 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018644619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019797623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028772243 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.01852403 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017309706 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018719654 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028417506 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016850175 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019238309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029254439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.018030314 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021476489 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029437516 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.023713663 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.01938008 seconds)
  done (took 2.470514806 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.025300801 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.052188614 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.029434832 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02937096 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.024962505 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.024989915 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.025097843 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.025207197 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.02518613 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027906764 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025313795 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170286554 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.022554583 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027240822 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025576964 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.025494232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.02550107 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025409015 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025611249 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025621186 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025713166 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.030281341 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.025688703 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.030330053 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030106216 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.022524667 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.025559543 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.025707721 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.030506938 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025653331 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.030067668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025683314 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025689081 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.03049085 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030090971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.025591582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016257211 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025593509 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.02571636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025659395 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.022435766 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.030618251 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025813541 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.022575301 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.02604322 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.025792479 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030860129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.030563087 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027771992 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028899847 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025970465 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030812104 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025933832 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.02626767 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.031197617 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.034271022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.031031317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.031347213 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026384976 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.031249646 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.031404767 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.034592934 seconds)
  done (took 2.63327916 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030775722 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021281288 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.034464692 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015297775 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015228179 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.024328894 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015143634 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015212057 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021061577 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021148526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02254551 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024700548 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026516494 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022773792 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.024805315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026512454 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02469968 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024654827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02127658 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024645701 seconds)
  done (took 1.241467789 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019276948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020910412 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016120919 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.032109078 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016124367 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023609352 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016107105 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016042404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016006218 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016029821 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020554631 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020643632 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01623643 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.024244789 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019653536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023763157 seconds)
  done (took 1.087955039 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020706488 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024516574 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130108754 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.01675702 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018494354 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015969656 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.01676289 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015826679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018155872 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.03000835 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016894489 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.01894725 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016955588 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015646287 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016174112 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018906022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018116451 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016974148 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016929997 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130865038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025387029 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.01752396 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0190433 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017612673 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.01869642 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025395332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018498091 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018887452 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017074899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019222436 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018831868 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.028227721 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018835766 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017597114 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015754154 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016706678 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017057888 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019206687 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019194039 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017160123 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015947864 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018837126 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017247053 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017517309 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018354199 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019286 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018291237 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027438553 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016974907 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018831058 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017106399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018250348 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017564326 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0284377 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.019050771 seconds)
  done (took 2.037702637 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035055046 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021223931 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015305742 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015221386 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020676378 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.021304702 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020721684 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.02096415 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02132867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015173058 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021352456 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020324319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021352273 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021015566 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021555716 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021042482 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015359167 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.021290955 seconds)
  done (took 1.149911268 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024638709 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.021514435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.02202375 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017502452 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017244973 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021170289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015663292 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016715141 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016712542 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017209714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017293984 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.01690872 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016876496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016902765 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020820527 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017283875 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016836469 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015789865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017326839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015688309 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021279394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015858302 seconds)
  done (took 1.170792994 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.191914798 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.150771856 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038736531 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033883388 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025735886 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.052005279 seconds)
  done (took 1.266333757 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053250666 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.054305492 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020858482 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02083485 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02469756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023201835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02309778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023341051 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026076537 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029013074 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023568934 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026682743 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026506207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028244135 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024995766 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025003872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023606186 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023625861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021055837 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030879679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023693677 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026945973 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023955909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023718065 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02395317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028661222 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026989764 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029640864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023755549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027055965 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025422124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023941097 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027210478 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02965841 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021140247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026910083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024017183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031431414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025416873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028695176 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020953523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025424383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026954346 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026701702 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027276774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024227651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027014774 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024176199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024265259 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035365449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025899275 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028916721 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025677308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027475745 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027272733 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035425145 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030047658 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029262833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025842161 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030312752 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029452833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026118483 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029538297 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030698652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026202262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029567593 seconds)
  done (took 2.57240384 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06167802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021267504 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023381726 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028691885 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027613184 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02319804 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023365301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02350829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023502238 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021198858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.060156261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023760784 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028152495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144502435 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024533816 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02378687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023777305 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028222905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021336695 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034230586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023809094 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028573582 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028580901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0285158 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029608804 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025585095 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023899293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023846979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023787237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023741227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026757838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023910632 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02861225 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021406456 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028765393 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024008441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023804718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026742438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023899438 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025521644 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028641731 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031461839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024002549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024037886 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029987802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024012925 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024040771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021656402 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024090681 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021682418 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030066625 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029967139 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029990032 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028993198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024221129 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024242635 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024189205 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024163918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024201758 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025811349 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029031461 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024111128 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.036047781 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024463844 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024476803 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029590223 seconds)
  done (took 2.679188108 seconds)
done (took 52.298246989 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204676713 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169986577 seconds)
  done (took 1.136847364 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.141434102 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.138473143 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.167652641 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.024729911 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081607874 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.173258674 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125276956 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026560375 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024223996 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025646954 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023861639 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025288096 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025450474 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.02378733 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086315728 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026564332 seconds)
  done (took 1.922464903 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073907463 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.276935702 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058368735 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023001937 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103668709 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029345578 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024263442 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028517008 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028965908 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023278704 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070416985 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045769767 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.028274178 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028583098 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024454129 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.028127455 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028419058 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028999258 seconds)
  done (took 1.733425538 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.081166263 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033406239 seconds)
  done (took 0.89401071 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.140807274 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.064136484 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.106297244 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.312218631 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.098856432 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.298441111 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.104725129 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.098907652 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069984042 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095931993 seconds)
  done (took 2.163461531 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.062684438 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056969646 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.28537498 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054450056 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034646397 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029696816 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030228315 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030429511 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.03053999 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.02947779 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075212416 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028022843 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024469951 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072365357 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049659356 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.05892987 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023690554 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029528562 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032762068 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.02358358 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028460166 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030427537 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135153575 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030037936 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.051331679 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.02960672 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029633816 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029613688 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.02951689 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030741889 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031320376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054136297 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029817983 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037349926 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.02903866 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.05048446 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024647832 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.050240219 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027391959 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024523548 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027984424 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031421484 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025167156 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030787885 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030867012 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030563918 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030973924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023885839 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.031123919 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027796639 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024799826 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029119201 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028818132 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.02998497 seconds)
  done (took 3.04140169 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.077690113 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.06704912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024310006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074061735 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065466414 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024353485 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079186943 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060308631 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078447611 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023779031 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023375396 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023507972 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.032382302 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.036106883 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.077059989 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069645821 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025692528 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024232911 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.06858631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069028917 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023097866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.081299449 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070699069 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.068196648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.02275242 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024300381 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022969131 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023719866 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031875082 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031615272 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023464443 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034290577 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035177486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030941201 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022813133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023110396 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022966089 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031835508 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033275271 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033216092 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030339938 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022675181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023024502 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023659059 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024124347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022559141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033190562 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031171493 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033069532 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023608915 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023672682 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.02292666 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023980344 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030817804 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029603708 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031171505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034395451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023414142 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023507086 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024893336 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035185716 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032013268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.032040345 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024571654 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033124647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023365987 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034170561 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.037245326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023285578 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023937354 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023559584 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023548419 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023859496 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.03024754 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030372075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024006247 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023796361 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023290942 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.032235178 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.03056134 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023285452 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032549827 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022922071 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023576923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024015868 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024176721 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.0335781 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.032244004 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024162998 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023494449 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023635449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023558937 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022814897 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033598258 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032935937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.033054974 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.035150213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024512604 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035851832 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033655284 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024922445 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032187573 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024079659 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024471663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024371746 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032126259 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.03171529 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033347908 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024056206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023566365 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032965494 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035075524 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023894283 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031792745 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034423553 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.03222053 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023335961 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034954192 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023895561 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034945032 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024217724 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034951585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024418025 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032773946 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024329691 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023399101 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024212191 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036531557 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024755091 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024199846 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024620502 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024191686 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032942619 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037146285 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024867993 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033144447 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032917241 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.02474119 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035231433 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024455888 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.035292763 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024355653 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024642105 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023355237 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037492733 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.024010084 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.02450685 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024118229 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034850322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024144995 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034742229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032080063 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023679582 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036262634 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0344824 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.032113245 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035173353 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025149876 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024533449 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024020554 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024344427 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035509879 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.037187675 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025338033 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024463999 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031771935 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.03587459 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.02384409 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.032265348 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.03221365 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032546315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165505251 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023877173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034421099 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034715654 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029903601 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.032140803 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030662782 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023171558 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.029247412 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032074606 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023224611 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036247508 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023139434 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032897304 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032302393 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028649008 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031893715 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.033240916 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031813829 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031437668 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033634169 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022655749 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022973925 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029494561 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022966675 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023174956 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029167222 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023562331 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023783887 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.03564932 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023242214 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032138892 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022632086 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030139368 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022498392 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023540035 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034068871 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02295908 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023501889 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029589593 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023110656 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.02909864 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032166393 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.02912716 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02287407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023427583 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032733587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031900131 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022998351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022792411 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023464661 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031777697 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.031119383 seconds)
  done (took 7.869938589 seconds)
done (took 19.549737229 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.14421301 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072553931 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.142497458 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.084113431 seconds)
  done (took 1.219076534 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.057663399 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019677387 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.144756912 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.155947374 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019877797 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.13904589 seconds)
  done (took 1.332210787 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.257352956 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.152930017 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.16114389 seconds)
  done (took 1.374771164 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.152854802 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.280068136 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.548376464 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.146485265 seconds)
  done (took 1.933102522 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.172750912 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.16699645 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031650005 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190383107 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038817218 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016371642 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.10888462 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017410491 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052952373 seconds)
  done (took 1.656301584 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.09928851 seconds)
done (took 8.413633633 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.199482526 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.141581234 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033480714 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.027946459 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.123817656 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.13550414 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.142977624 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.029699983 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133897101 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.311375795 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.18177294 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048014596 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.159279764 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.04358656 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.265660909 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031538852 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029271831 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.0249395 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.14061114 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.131964186 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.245623718 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028707671 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.096566238 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.03025495 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.100319849 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.080426305 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.188121139 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.31728481 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.280326468 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030800077 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.119560393 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042652917 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.115058275 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.124016957 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.138423613 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048509241 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020333056 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.245979942 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.109610294 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.326998986 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.16626798 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.02752532 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.140863924 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025266715 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019758652 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.147223697 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032602426 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026549249 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043162208 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027371453 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042453646 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.027542593 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.132263891 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024068066 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.092597968 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.144865076 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.18429407 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.102111179 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026348391 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039781746 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029692642 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.157872778 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038845216 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026226103 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032568794 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020400919 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.142356725 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039996097 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020734193 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030536169 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028593562 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.110914266 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.159691823 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.066684231 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032238283 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.118618315 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.094394809 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046926991 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049471394 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.030157619 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019999914 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.192294976 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025799216 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038721101 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027314739 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052530253 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020283019 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035931046 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.170862611 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.150339756 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.089389588 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021914184 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.388773595 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021473733 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.045050353 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021010884 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020044113 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.183433893 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.01990803 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020105163 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029279486 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.02823115 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.02157883 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.163543238 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.099046199 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.027457233 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.026894698 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020038642 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.025889632 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021112875 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020136096 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019986248 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094250161 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.03695758 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019479405 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.107449969 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.1165367 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031049976 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.035901615 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.084236141 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023097813 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.029003006 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.026909485 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.13429341 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026448892 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.13068432 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021407384 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.042217053 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.118895592 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.096102466 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.106516596 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019772532 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.136641633 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029739929 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019321152 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026939156 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047469405 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029312123 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.03647586 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027937137 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.136791965 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030666128 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025679304 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.119177115 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019182451 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.116346995 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098191651 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.129329084 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.025008558 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.030378858 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091944026 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.043242834 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.048049505 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042332187 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024027498 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020044758 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019731127 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.0329118 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.0193294 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020104563 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033576976 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026789208 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036010522 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.246728014 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030100129 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024377861 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.263317912 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032426007 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.097183688 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040426261 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020585393 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.102433744 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.022576561 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.041064269 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085464485 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020539234 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.094314626 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020705601 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020326949 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026293778 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021920789 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029095978 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033867446 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020820236 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033437113 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027813838 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020216773 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.100442323 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022015079 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.188039141 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.098714629 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.112250054 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020431988 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038821257 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020035451 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.132195865 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020375111 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070196157 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.110553389 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034841755 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.04026984 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021463744 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.098242931 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034475067 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.02530233 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.098637952 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.130524576 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.096495057 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026436012 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.250501923 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029495954 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.0206302 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026136852 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028484033 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.021349183 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.101366019 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025255788 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019986417 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020278977 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022197362 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019658115 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045210648 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019886769 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027736171 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.026090374 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023181245 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022362805 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019657099 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.027977894 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.100750142 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.121709904 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026525957 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040229076 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033685907 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031914221 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.068092175 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027609605 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.159556576 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019914545 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029769803 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.042901977 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020201143 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025370555 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.026014723 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038326419 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023988949 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.022029466 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.028920497 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020946757 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020991543 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020729626 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020916224 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029012628 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022265989 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020259942 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.020214728 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036596579 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025444865 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025843402 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031301635 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.040797082 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.483797527 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022576293 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022766706 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.033187258 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.026119638 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020970236 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022311561 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020547093 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022629432 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020854472 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.02024067 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.050161938 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.02567359 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.021591044 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.041574353 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.026403664 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030772145 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.121650104 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037606945 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.190065121 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.020946338 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.270493456 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.106137339 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.041096432 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039584006 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020501824 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030234464 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020418349 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020688027 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019443359 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.047289809 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024552965 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020338447 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.01939304 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019586941 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.066881646 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.027744162 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019575063 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.027709625 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019619829 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.01990591 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.047054185 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020820944 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019778406 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037058494 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031501231 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.102693108 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.031380187 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022873362 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.071273073 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019133737 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019785144 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020078005 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.116960909 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032964423 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.020976232 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019823707 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027149796 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.028349326 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073536354 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026078769 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022603787 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027475918 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.01906278 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020023312 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.044290326 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.047042997 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020735365 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023391895 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.01958527 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020000351 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.095608081 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027309087 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.024443689 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.10508736 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.021646079 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.027179217 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019125329 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.484789079 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.024281552 seconds)
  done (took 22.473731845 seconds)
done (took 23.290622254 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166511169 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.034054598 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.039573498 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028171688 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031681878 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032186248 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.041615837 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029166742 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032032582 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039065921 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144480946 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.01975939 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027249562 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034641872 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028107543 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.035839889 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032128442 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.03505961 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020247423 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.035291925 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030784777 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.030700969 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029659611 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.035631935 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020549275 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.02841984 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154469658 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.040782876 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.023927329 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029530797 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027716684 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041983685 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.02775068 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027220052 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029324283 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025302284 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029947565 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026343723 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.155056074 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.02573349 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020622558 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.03310787 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027193788 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027829024 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028615366 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031304746 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025390626 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033880608 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.020103961 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.03974732 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155045089 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.029094875 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023862454 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028339016 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025431405 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.02930725 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.023617967 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031708245 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.02522911 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039004024 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028382213 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027733808 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019748052 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028413599 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027271676 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027525813 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019141333 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02884432 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019805136 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019692944 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019301345 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028381234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026790822 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025012943 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019483367 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019799901 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019583762 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.039027278 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027109243 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028586027 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0201989 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025345129 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024904967 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.02034469 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028990647 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031248025 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028917603 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020345906 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019471741 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039096825 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026558082 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019803457 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031116543 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028801373 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028495551 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019853519 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019549499 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028763534 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027737198 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019789057 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019098951 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028762056 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025093571 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028536422 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020239082 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028756158 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028678562 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019233708 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028450616 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027169718 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028819258 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030757449 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028462465 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031153773 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020349181 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019152221 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029729129 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020204048 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028931959 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027875177 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025230521 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027648586 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020440876 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.019463719 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028846374 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025939255 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020273109 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020376138 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020267766 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028856429 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027317903 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019232886 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019890493 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028824481 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028646855 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019706066 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019517102 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028706538 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020451396 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025949476 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025340299 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028685145 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.01999309 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020301825 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019469692 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.020019067 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028857236 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025380299 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028990029 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020509658 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028630637 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027184214 seconds)
done (took 5.649236184 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.035615522 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064493767 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.180985244 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144116981 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033644369 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.021054661 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025227529 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040788 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.023921261 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045831437 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.046493176 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.042846114 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.167399955 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.019449804 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020230993 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.021219854 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0188888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.032533717 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.150096989 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.044922779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.064328738 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.02018494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.037180289 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.040762486 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033458658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039376312 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021576731 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021371869 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.023114394 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038199623 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.04718962 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.020082688 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021329594 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040662369 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037142773 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.02972973 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.021061098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027541554 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.021110144 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020211416 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.022123257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039388422 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027404634 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027618128 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021671748 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.021091348 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021012085 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028671367 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034962496 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026993015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033254814 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038011575 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.02259219 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.020896612 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019252419 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028389557 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.020866696 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020969972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021011189 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020277419 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020991613 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023181063 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.026272176 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.031340938 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024341235 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028262224 seconds)
  done (took 3.354458686 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.039867323 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.048669276 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034830065 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035176128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019907196 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020400913 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020360457 seconds)
  done (took 1.124985 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067622704 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141365779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149078461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149867372 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.160432729 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.147300495 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033372963 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050610482 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.019996701 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.161149588 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.157830689 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153126082 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024767655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033339353 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.05338437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.156107847 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033653133 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028237847 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147276244 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153679167 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025846098 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051942678 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.03285647 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021606067 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.15152108 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144607803 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024754642 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021616472 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023894762 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021109857 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021148367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.044056979 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143855978 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036063117 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022166206 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020115624 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141426113 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022458049 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144461941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028503242 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.144160432 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023759516 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023936472 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021452664 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022586137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.147577604 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022684302 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.02133654 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.02086811 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146297768 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.020541999 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144828277 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.024109153 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026655319 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028334677 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027843392 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028458472 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021798235 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148419914 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031718976 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023172737 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.156624464 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.155779283 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.145315932 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.156279969 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030475785 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148281338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.145532891 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021340232 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029365297 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022293 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.160052001 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025552715 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023934565 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.026941154 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028766007 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.164862447 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.165029255 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.164931412 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.03615463 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.024095398 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021945756 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.161854506 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.165006972 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027470558 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021779358 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.02270805 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037682916 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046705581 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023900627 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026379143 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021681934 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.03220276 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024217599 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.024358807 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.159063324 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021916339 seconds)
  done (took 7.849567685 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.029101283 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021762635 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021216091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021551534 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021764989 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021566519 seconds)
  done (took 1.142798926 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049326663 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022190155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034640804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021886018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044515145 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.145781678 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.145666242 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023072211 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038478179 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.03411872 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14643222 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.150025405 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.151300701 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023186774 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.146963113 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033993985 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147733428 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.027013906 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.03322098 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023240686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032853711 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022796127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.02301524 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.156233916 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.024243647 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033448419 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.033127422 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033395546 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.03290633 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022907437 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.02271938 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.023826844 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028533012 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.02291728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.149398816 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.02888691 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022184836 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.026069394 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.023954059 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.02371525 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.152785154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023587784 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.027073207 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.026215492 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022983309 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028682538 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.026178889 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.029753709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.15009037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.02657508 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.026153377 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022672584 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.023873354 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.025988834 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028659319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022977217 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.025972008 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.150261072 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023286631 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028962255 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022394446 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.023981986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023015789 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.023994126 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027508187 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.026170797 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028859634 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.02333901 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02335493 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022401641 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.026408367 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022397656 seconds)
  done (took 4.335652123 seconds)
done (took 18.719219542 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513302441 seconds)
  done (took 1.426141892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.024161915 seconds)
  done (took 1.970766238 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.051104811 seconds)
  done (took 0.994711269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.30563796 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.517696124 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.737706365 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.092918527 seconds)
  done (took 2.581426788 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.865298788 seconds)
  done (took 1.817188196 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214798672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.175915951 seconds)
  done (took 1.366020329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.502434309 seconds)
  done (took 1.440811462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.326116636 seconds)
  done (took 2.273546356 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.204076884 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.137231295 seconds)
  done (took 1.287599497 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.610398738 seconds)
  done (took 1.554960347 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.548742376 seconds)
  done (took 5.494006668 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.188912299 seconds)
  done (took 1.197690045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.196136783 seconds)
  done (took 1.144135086 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.702212544 seconds)
  done (took 1.648957129 seconds)
done (took 27.150828381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043816683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037423942 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037324791 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034756776 seconds)
  done (took 1.088487427 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031184661 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025297317 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027454519 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027827497 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025247859 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027025243 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027645331 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023949289 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025026467 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024405222 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022948113 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024227816 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.0268235 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023922235 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.02647113 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.02779921 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024272662 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024973856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.02641895 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.02402946 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026872559 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024299562 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024473741 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025735641 seconds)
  done (took 1.565166889 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034561947 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026012099 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027659915 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024837968 seconds)
  done (took 1.062824755 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033460884 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031198295 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039802444 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.044166276 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030741531 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031346079 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.037952772 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.03810688 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.044714053 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.040569818 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021777818 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021618079 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020718326 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039757316 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.037385144 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016109209 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017574755 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031643771 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030656889 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033374636 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023860283 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019550876 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031053442 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031417478 seconds)
  done (took 1.699801228 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.03816377 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.01979043 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036021522 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.045106576 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045206517 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019543129 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033381766 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045711544 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.082814352 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019567628 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025551188 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019562353 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057817276 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019713231 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034694073 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.065024373 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.067893986 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023827426 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050576004 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019683128 seconds)
  done (took 1.726719937 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028973234 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.02396412 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025273123 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019447639 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030465913 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026867774 seconds)
  done (took 1.112308176 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024524888 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021596638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.02135671 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025588398 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.02122606 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021600758 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.022232141 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020402177 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020113163 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.02088069 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.02087652 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021249187 seconds)
  done (took 1.213375291 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167082165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026816349 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.024466114 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019974291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021643658 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020760332 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.035787141 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.02275636 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.038757626 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020609643 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020902329 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.02300653 seconds)
  done (took 1.396434412 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060988009 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066343761 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100640503 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076045543 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077293958 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050879983 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.201975019 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033369251 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120812446 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09453015 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071541606 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046220138 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040439729 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023939562 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055988028 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073977889 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092597252 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027185182 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.068694748 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.246309293 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090950928 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094074525 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106504831 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072665887 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048323363 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106558651 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05095782 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059401448 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080390607 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084802635 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076984496 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.054905553 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025656723 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025349667 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109753372 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.064266749 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077746848 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.049122881 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061149954 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044182999 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083258708 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024215006 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037509322 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.068050495 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041805976 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091901542 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.048891488 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07458316 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037204963 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100532021 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08974658 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.182457894 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043462556 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063692147 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104707149 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074847049 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101807528 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066748762 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.189748907 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.075294735 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.060138243 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054701162 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061657745 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03465144 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133572483 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043272098 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.071197764 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069282891 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049883185 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049130118 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.060705911 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091062811 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08086373 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.080939066 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091427304 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046334642 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075856642 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.054411286 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.079308315 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058360944 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026790415 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.07916581 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084358683 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055307697 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.056039109 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092177013 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048208502 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030582795 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.056979399 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.07589837 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034883648 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.071061422 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036344433 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.08800992 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0979315 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054932174 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074364755 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075445059 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033120496 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126006215 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063672236 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027632186 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073183056 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070909627 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114722099 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055659376 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.0302217 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057903233 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063238595 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.116732342 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069173814 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037086904 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069563046 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107141506 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0538596 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.268938575 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054575542 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.259135775 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068499002 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0404582 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029471498 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.044174095 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068250528 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061905514 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067490385 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048597601 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037982972 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040055379 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07102485 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047099906 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034770844 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.067625851 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.057187875 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028761741 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042182559 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.030616689 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099355488 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.032600144 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09011392 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079064812 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029518912 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060588266 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.04986363 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059102013 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.051080656 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07191058 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093874586 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.13883697 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04473716 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.049152601 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063652234 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10321167 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084334483 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046831604 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.040316078 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056074758 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067348481 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.056291004 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.08260556 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049791203 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070556034 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059934301 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10180184 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105684003 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058600763 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056769486 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065583082 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.081054783 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029752801 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118242752 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061065795 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07567303 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042576228 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103112921 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.06807455 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067628964 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.043685136 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057826847 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.064854093 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065745489 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11017404 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052769707 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027351878 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053243298 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115704251 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034696031 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074042281 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.047771455 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.20484112 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073333973 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.048613204 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036292529 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022747709 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08173333 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112599987 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024278154 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06692239 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.061965503 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056267462 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.075992662 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023466867 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071288258 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.091207174 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070035934 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09800785 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146398991 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072185943 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072176144 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.067647957 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.059232785 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033474892 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.080892019 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091681159 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052071269 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047723061 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093854444 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074792495 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.095326983 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.076041839 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081056307 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.063878947 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063538192 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061737708 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.062740461 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106040014 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.079740106 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.083474621 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038996813 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062364909 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.075482396 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095706465 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036059429 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104920635 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.042942721 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106962122 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.034888319 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084174556 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.031361122 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.128685499 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035137257 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05880273 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.025003498 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.030286106 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106708114 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.077424574 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069885483 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062984043 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.254276252 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092469121 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032134883 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062068131 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068351102 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054599488 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070318928 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061671619 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.04328679 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049062284 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061723114 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038810231 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.035231653 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069905677 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048648977 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078490565 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.036886224 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028591319 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093344741 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05734118 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049154374 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030374482 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060553787 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.080692261 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046275289 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039941888 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069429196 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058554769 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096615632 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.044057486 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.052041639 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080665815 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.035334171 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.046964845 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024133305 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.039732395 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031123272 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087984916 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031058524 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075559126 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023512511 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089097101 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043542123 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.048133217 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057096237 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06756841 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085159608 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049641902 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101738898 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04646271 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078595203 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064818629 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072108007 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042480305 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058998274 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056236872 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080736394 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.051256685 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081593158 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105218744 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060335502 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.104220687 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048414357 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082267641 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065443203 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.087115697 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075270899 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.161072774 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10706922 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074331132 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.219575852 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029539519 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049736785 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058709331 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.066687971 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131808259 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078910676 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026243292 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058556231 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047473435 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062860625 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062835881 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03611251 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099034436 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056164662 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041095063 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065287286 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.044546223 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057630261 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029822712 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055654689 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.053887454 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048685541 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051192169 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067641813 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082642621 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066649291 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099655193 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.057422189 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046668096 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.075288697 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066139643 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072055991 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040546812 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040973651 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10041826 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.076868795 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.08349388 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054214126 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067240362 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068146433 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056883035 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082830757 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064920763 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.086872341 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035505722 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.032166727 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022987325 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026505375 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082447764 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070648899 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067973545 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062033693 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026758359 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058763065 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059902634 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026992516 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041643307 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051734442 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055851688 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.050480259 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066996993 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.071373508 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.053299701 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06329114 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064966316 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115629702 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.057675304 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048348722 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.261921994 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106169801 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042192029 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046859013 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025524683 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.032995204 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068989212 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100299696 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109177403 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.03265263 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040073873 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.039675477 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040564 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025364225 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.043045579 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.043461769 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059251172 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052374924 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.069178273 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058772769 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029573032 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.06209573 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053414839 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.046670178 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.060344235 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074162718 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08055678 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.096574169 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067484344 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061898285 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030563307 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.03529716 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030639103 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03391828 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061907391 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033392637 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030591767 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105176679 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046967852 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06038638 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070680866 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.043090444 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030348467 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093116942 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024058348 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095100541 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025444756 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037353903 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036547993 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033485977 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050869078 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099505388 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066678615 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069794636 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063284624 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060445011 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147519231 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120295407 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037973451 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102157796 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030933239 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031740588 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031097728 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068509065 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048347031 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072222396 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1105255 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04630675 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06145911 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035274193 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111374484 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.202520289 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064189511 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039834299 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033555449 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098782852 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033722515 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.03513161 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.043289709 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.064298087 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026269398 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055960567 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036955337 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033331319 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143991809 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.664797787 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05036293 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.029627379 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049667848 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09646816 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09119839 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049532384 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061851727 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.073711065 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053872494 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047519865 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06087705 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.153018051 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027880377 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048802067 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.057170165 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057142349 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054836582 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.053601336 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.048328178 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.047997021 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.040796206 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033824745 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062524038 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041584239 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052455362 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061930691 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038069844 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.043175395 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088921862 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.059046527 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.03848637 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044295615 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.059619768 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041112274 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062425391 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024170902 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067966349 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044393966 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078477365 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.055923964 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063503424 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084667031 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049936861 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09811548 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.066082349 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081580804 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041941511 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.033305199 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087062286 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.048431318 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033121739 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110614191 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.057849615 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.061061608 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068934825 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.051292847 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073776735 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08041922 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07289698 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061818038 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034802979 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063449837 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.064476116 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.046414851 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03704026 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.031135069 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030913338 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069200414 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.046701311 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042865346 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.072641565 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047297261 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.310858832 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.060687886 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085820357 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045730128 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060726063 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071370949 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051624725 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099957377 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060012742 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092987952 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146669574 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090613095 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093243247 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101144513 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.035003508 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.032696132 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.024249055 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074279529 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.036285764 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.047720025 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.034940173 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100527176 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.040599025 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074687748 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.215937909 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.036864886 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054556801 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057352831 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.025514424 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.0404698 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069310627 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.043129682 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037448229 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080997463 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038446293 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.092496146 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072841577 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059641453 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054908967 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038319002 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.076982384 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.061734338 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.091209602 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052395371 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.032227251 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088284625 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061668494 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109008667 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.030246302 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038246237 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093645972 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064868014 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098731759 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037917383 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12908118 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.107420962 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.059575881 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100949793 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026490574 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046153211 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.366900495 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.079976061 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03977191 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065116167 seconds)
  done (took 42.264254903 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.137530113 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.132203196 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078447212 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.090424272 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.247264628 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.255543423 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.112936923 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.07964501 seconds)
  done (took 2.244832382 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.029073775 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.055605792 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.036675149 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.309692019 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.058873511 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021775267 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028781347 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.037535328 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.025291223 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.021457641 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.061082402 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.021502517 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.025408559 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.482420588 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020571978 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.0259134 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.025363569 seconds)
  done (took 2.386967527 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.314617308 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.648411102 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.353835763 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.483183588 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.104958652 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564167711 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.02965457 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.035136274 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.636997306 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.368668569 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099572038 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181260284 seconds)
  done (took 17.906671624 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031440973 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.159445623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158100604 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028075864 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027619013 seconds)
  done (took 1.491530695 seconds)
done (took 78.185842845 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041347601 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.124784389 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021017939 seconds)
  done (took 1.262316565 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.162979363 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.158870091 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.157910277 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.160978699 seconds)
  done (took 1.724953386 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.031094734 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030239938 seconds)
  done (took 1.150921481 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.193654734 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.262888561 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044757819 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040313752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.035324236 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035377786 seconds)
  done (took 1.20397611 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027617998 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025189833 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025107579 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025567831 seconds)
  done (took 1.19079371 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.140466053 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019884077 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022465909 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023947853 seconds)
  done (took 1.29085783 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.041266511 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040349982 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.070788573 seconds)
  done (took 1.241818218 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040135833 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038992411 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033690232 seconds)
  done (took 1.202599467 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064681324 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050211548 seconds)
  done (took 1.202420551 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036605529 seconds)
  done (took 1.123304174 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048668016 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.05247109 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.223206356 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.190080849 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233092913 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.211381023 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034425106 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031450421 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026705435 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.036069734 seconds)
  done (took 2.169682852 seconds)
done (took 16.392127426 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036836607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.142429253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270568352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040873316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.780662079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267173111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678196333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043727809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053684923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021893985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038672222 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.758360488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.684059532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100989654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.667859233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.089713765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.516743098 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022827083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021596054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022078985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.661311981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023811014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022439255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02243787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.51388075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.288870772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022813082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.089047868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022079937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025682354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269868695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022853812 seconds)
  done (took 12.322215851 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026356636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076397952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.02667412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.03741978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023726881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.02379692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025767615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022203695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064728384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022052463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039054144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021503305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026234808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022920828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.04218492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021712523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023966939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022536006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021944319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022474859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041330044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.02182244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022536393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022577026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022426588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037091505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023243309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021869959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0221683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026003313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027164409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023326668 seconds)
  done (took 2.023521486 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079129381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077999463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027723933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061898844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073211145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024820785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105016915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043763308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067261384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02249493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039429056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022119273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.059062715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023584097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043494552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022193247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024649594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022830441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022124439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022629179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041783688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021959494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022431137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022697748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022728255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038502271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023183064 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021994149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022301099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025800204 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027572785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023477593 seconds)
  done (took 2.303560828 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026053265 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026456011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.03207988 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035299716 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020606169 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023198324 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024377242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.02062172 seconds)
  done (took 1.309379995 seconds)
done (took 19.065609903 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035982791 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022481384 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025378842 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.04639683 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028847512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.147265197 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024911969 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027429247 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025949276 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025157574 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027417049 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.01971112 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024397592 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024518912 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.02621207 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020465304 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.151445561 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.02508572 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149479896 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.150570352 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.02328904 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026340433 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029072744 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.149689064 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.150107878 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.149708807 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.030055741 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026758934 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026200737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.02364089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.147889186 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.150201276 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023542051 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.146097715 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021080084 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020851209 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025354415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022338829 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.154184623 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030241014 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023109974 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029719966 seconds)
  done (took 3.548734542 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.153072145 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.158606054 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.151925371 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033092335 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029269779 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0324544 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.158509688 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029962268 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028556234 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.158251903 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.025419573 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028541067 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030721332 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021338935 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027989133 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024652064 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030113654 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022707485 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027933975 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.02826244 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.158722865 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021878985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029280488 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029521504 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024103845 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.03014354 seconds)
  done (took 2.612577901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.03087641 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043601804 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045668418 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111472109 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063450075 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043888982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037219781 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047576792 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053514482 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.02137436 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043989478 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050513735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049899411 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028513159 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060853969 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040675917 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034697479 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023295864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028267596 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056294828 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.045139911 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.041054211 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054689447 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041547791 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.021061294 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030700044 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.026042098 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.038233919 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033328029 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.034219381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.02540321 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025154677 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.02233618 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032607012 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025163375 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019886339 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.04474256 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034343151 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036313702 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060575826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031756525 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022664546 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048257039 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081351094 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020304029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024317151 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025712876 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034293965 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022990499 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063860922 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036780891 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020912363 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040787105 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022718644 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022845156 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042506386 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023060495 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023433749 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042045049 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027840291 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043455767 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027195925 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.040207285 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020492837 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033032091 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022731314 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023154011 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020261981 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055768154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028831107 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.068952642 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022645217 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020039429 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034211057 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033298958 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028956328 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020293355 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040319135 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034354563 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025358115 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.040098708 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024391949 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024928924 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.065497751 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.02086288 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019896559 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.01981293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024232022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024705894 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022048201 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034123004 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020871607 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.02491478 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.049959568 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021740227 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022450882 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024400545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023041939 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020850046 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031422881 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024953504 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023278256 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034303745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022258603 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024910538 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036524348 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030987027 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020167988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022863683 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024045375 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023224226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023051235 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024781581 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023235085 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026752427 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028841056 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027346473 seconds)
  done (took 5.049495189 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.249502104 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235354323 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.02233984 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.231878187 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030353934 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.163175216 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.234542368 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.234964616 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022320678 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023085577 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021390521 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.17760578 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.172453059 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184220376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.164614761 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024320341 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055244317 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.184515865 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.240928274 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.235674113 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054169183 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029230631 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024271059 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023359911 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022842136 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030853369 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038288003 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030733841 seconds)
  done (took 4.2897187 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030769992 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066076745 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025638809 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046404778 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.039242774 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022217673 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023772418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022633321 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.03836715 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027514034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.021899481 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025954963 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.02550814 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024257027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022274665 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028632624 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028541038 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.02960178 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025619697 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026664739 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033254153 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046575652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026033383 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.02188396 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025386679 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021787535 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027449366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030906823 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021693425 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021767945 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019245533 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030570638 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037010808 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.02317583 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.02171235 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022594243 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022282584 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022249615 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.02220642 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020461701 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020360167 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027127036 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020803684 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027235812 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035488755 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024338294 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023910649 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024855453 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024682574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019078723 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025131628 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025278774 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024481726 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030379455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024240175 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024653466 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023462097 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036661132 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027941841 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021523117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021257574 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020576497 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024152496 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028791788 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038143023 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024154568 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.02045682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022284549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023686014 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035376261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.02148776 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028507407 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019268148 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022309674 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024490568 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024935441 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023451575 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020595691 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021814397 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021500048 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022242668 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021956116 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021436297 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024740781 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020279036 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020573763 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022727042 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.02409616 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027685866 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021123611 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024915895 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023607423 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020888838 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.02471776 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.02754702 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025015963 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040078258 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.03022658 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022849377 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020076497 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.03910349 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023965397 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021488368 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024085801 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.030708574 seconds)
  done (took 3.893977988 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052516705 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024582807 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.043018039 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.05806228 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032632316 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028068407 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035888047 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023457001 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043762907 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021394231 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031400788 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021005425 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035353306 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031021516 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024181945 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032168789 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.02502464 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042809028 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037142536 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020986414 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031041418 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034832983 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034889295 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039865689 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039302064 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040524104 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034635139 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025133187 seconds)
  done (took 2.076020785 seconds)
done (took 22.566109076 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.165670565 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.359289341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.130829984 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.887265794 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.230432324 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.129780457 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.240238636 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.11567682 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.648303197 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.209729217 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.964988668 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.793528659 seconds)
done (took 60.068991812 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.162517102 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.289996315 seconds)
    (2/2) benchmarking "String"...
    done (took 1.388170962 seconds)
  done (took 3.807752722 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.562885068 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.121449812 seconds)
    (3/3) benchmarking "different"...
    done (took 1.154800663 seconds)
  done (took 4.9490853 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.45204838 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.772872434 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.379458294 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.115350924 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.12470388 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494772595 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.277203067 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.773459139 seconds)
  done (took 27.059267988 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.124243432 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.381128571 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.450486745 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.600103032 seconds)
  done (took 17.752250656 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.567411893 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.584434779 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.591454804 seconds)
    (4/4) benchmarking "different"...
    done (took 1.816095577 seconds)
  done (took 7.795402369 seconds)
done (took 71.189918569 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.109949271 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.416733926 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.144504761 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.308808952 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.147397113 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.223238013 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.131199558 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.16363442 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.121000169 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.121290924 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.12131697 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.121031047 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.124766021 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.166696517 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.123106211 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.175019179 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.406150667 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.129506876 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.128079204 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.958061229 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.44193966 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.116321327 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.141851263 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.191394401 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.544930687 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.135236161 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.568218858 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.132034071 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.718469084 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.115739713 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.126478028 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.119423516 seconds)
  done (took 182.810400274 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.109216275 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.080688651 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.035762261 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.146962319 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.494615388 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.472872814 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.985209767 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.508018291 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.121733453 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.1216949 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.094387891 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.116931644 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.153668827 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.682401383 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.156218236 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.170513581 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.009760051 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.944143821 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.166256648 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.037153206 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.124784581 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.702771744 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.663225805 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.951599624 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.12611537 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.164287717 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.136443982 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.167261483 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.634827762 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.961430056 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.12951603 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.136735876 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.309738089 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.35846433 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.120725915 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.136243155 seconds)
  done (took 153.554398054 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.352812272 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.117467607 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.156596884 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.228745804 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.074364506 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.921625569 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.121301987 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.109012855 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.108469716 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.115133436 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.115819423 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.178617254 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.11900835 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.109876575 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.14644769 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.112507911 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.110954028 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.111869828 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.125371132 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.11140598 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.109672599 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.214787017 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.461266439 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.22385845 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.118566228 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.117062585 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.219130683 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.132579759 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.111654881 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.109705521 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.218747525 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.120895865 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.241974032 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.228123648 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.124746152 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.166528571 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.131484091 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.304283278 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.124209866 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.108787823 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.111354643 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.158618289 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.118571009 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.179914244 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.221811646 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.123130382 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.128403925 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.693384883 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.695071276 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.121908583 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.110205696 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.115223091 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.113594745 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.11191222 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.395430643 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.129899128 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.143409047 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.64415404 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.123251539 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.108891663 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.113594308 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.109837143 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.109765466 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.11552084 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.147842644 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.691165822 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.378296434 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.474770932 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.847999757 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.119011644 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.114532113 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.109521577 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.762168637 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.18002534 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.113006748 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.108976283 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.286750422 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.119366404 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.113274062 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.0306654 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.03193482 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.119896294 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.218544399 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.122663546 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.110421353 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.484902931 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.120915079 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.132241755 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.12832857 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.163972885 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.112884011 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.108709055 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.120413932 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.033325128 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.120355811 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.126680119 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.413360185 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.120528358 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.108111895 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.553302505 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485117512 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.120743308 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.191483403 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.520155738 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.007238607 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.12154785 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.112075961 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.12892605 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.110653183 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.120879613 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.124469036 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.111778046 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.109926296 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.113961895 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.108800467 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.112766156 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.109321862 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.127439835 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.110938383 seconds)
  done (took 326.917779263 seconds)
done (took 665.878964789 seconds)
(4/20) benchmarking "parallel"...
done (took 1.112003638 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.365134473 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.133939449 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.225846268 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.371129954 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.317336217 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.294228549 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.320644084 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.409340491 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.352732371 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.285145218 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.346405508 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.292833289 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.408793424 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.376185808 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.411215516 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.375586309 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.315849613 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.815566647 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.336928607 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.292353384 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.317689204 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.285753638 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.277021098 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.34526141 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.413199405 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.2903294 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.522763455 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.355775789 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.322697884 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.366868387 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.388610626 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.401440868 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.332362993 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.406412337 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.366574445 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.419850595 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.280996747 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.387866761 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.301912179 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.329917651 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.343789739 seconds)
  done (took 63.615952414 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.657217184 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.30403544 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.418268619 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.417815314 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.870890451 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.432816444 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.507971632 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.30639706 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.315754573 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.42397498 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.422163743 seconds)
  done (took 18.220131026 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.417256936 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.316171283 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.426231665 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.444921207 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.542784934 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.419207536 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.477757517 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.309278258 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.308242679 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.432731071 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.442429055 seconds)
  done (took 17.67018254 seconds)
done (took 100.615657909 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.690050986 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.191213288 seconds)
  done (took 3.990927646 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.141406531 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.128390535 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.124939648 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.12468831 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.123189261 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.122522531 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.175967415 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.134915863 seconds)
  done (took 10.186688354 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.123093334 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.122361442 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.129749956 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.122375042 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.122183992 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.121509267 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.127389456 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.122145932 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.120686101 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.12226121 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.122630523 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.12364902 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.12241345 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.122205392 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.122895722 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.124805676 seconds)
  done (took 19.085191239 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.122902451 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.122497802 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.122020436 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.125516175 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.122354116 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.122443449 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.122734272 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.137642367 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.12308562 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.12259291 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.12196263 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.122475382 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.126827209 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.121949989 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.122485291 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.122839725 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.12643872 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.125113236 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.122422409 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.122967979 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.123770527 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.122256188 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.123009512 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.125223826 seconds)
  done (took 28.084725614 seconds)
done (took 62.481464361 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.694175017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.141173038 seconds)
  done (took 6.949751627 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.127312029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.122257482 seconds)
  done (took 3.470384203 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.122088145 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.121885477 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.121815211 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.124269691 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.123159742 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.121843072 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.12423387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.125517936 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.123410652 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.122544748 seconds)
  done (took 12.343797672 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.121068369 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.125253503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.121720185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.121458578 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.120435675 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.127176995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.122474532 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.121522515 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.121485187 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.120894757 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.128934254 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.31194181 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.120904155 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.346711618 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.128786984 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.122561107 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.121042363 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.122218474 seconds)
  done (took 21.737593153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.122508736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.121719724 seconds)
  done (took 3.361930577 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.121272387 seconds)
    (2/7) benchmarking "second"...
    done (took 1.127045947 seconds)
    (3/7) benchmarking "month"...
    done (took 1.12210978 seconds)
    (4/7) benchmarking "year"...
    done (took 1.121387543 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.122235197 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.12344239 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.122154526 seconds)
  done (took 8.969827183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.559899239 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.289052985 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.339954445 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.586777509 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.753519367 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.074125423 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.752024011 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.075795429 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.950548863 seconds)
  done (took 16.492601526 seconds)
done (took 74.436077791 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.809511578 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.116976014 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.79353459 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.285902908 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.134001246 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.485802336 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.129946134 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.646767282 seconds)
done (took 37.537695533 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.354008011 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.115051553 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.155905466 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.158048151 seconds)
  done (took 19.547615726 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.11106016 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.688284678 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.156584219 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.157045452 seconds)
  done (took 19.320172999 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.624307046 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548161073 seconds)
  done (took 4.300438959 seconds)
done (took 50.639968267 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.121981917 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.125587826 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.121912187 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.123753872 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.123616042 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.126006173 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.127676179 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.123027375 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.12229903 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.122040447 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.124840141 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122113962 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.122095671 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.121483333 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.128722615 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.12268787 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.122277572 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.122361435 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.122386632 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13050573 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.124775163 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.125606323 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.123174679 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.125759605 seconds)
  done (took 28.088486912 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.197015213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.189291399 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.199683481 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204367727 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221768386 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.199545559 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193134778 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.167762064 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203046925 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.168845805 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.162001737 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218928701 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.163316852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218218084 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160767604 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221319378 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.198670638 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166440368 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160846299 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.222866767 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.193292403 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165155916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214196025 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155464958 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218417895 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.159374466 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.170554408 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.189195274 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.164404755 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211474798 seconds)
  done (took 36.791277855 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.156662921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.127993953 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.124000248 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212928669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.123562513 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.124606528 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.124435153 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.122930659 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.122456232 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.122114455 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.125403908 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.121678126 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.123479591 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.122544436 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.127025304 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.1237113 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.155921135 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.304818826 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.122212192 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.128423679 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.176575096 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.123177177 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.123149478 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.127598347 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.122765952 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.124129106 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.122288035 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.123503266 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.125107991 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.122937717 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.122578103 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.167375032 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.163213893 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.124091416 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.241217761 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.183919504 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.12642904 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.152782712 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.121946824 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.122320676 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.122884435 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.129232694 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.12316679 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.124417002 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.179680726 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.126616009 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.122913722 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.122788909 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.123052712 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.125989184 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.122717613 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.123154708 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.137742771 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.1232358 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.12850075 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.123185806 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.123935366 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.122622562 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.128851501 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.122185266 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.123734192 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.187969704 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.123118687 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.126557718 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.489437677 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.123011001 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.192056171 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.1276504 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.123459857 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.341600574 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.124917194 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.329824233 seconds)
  done (took 83.717527024 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.122039398 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.122562342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.207429336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207427639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.124454503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.121629975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.122892086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128620969 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791715591 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.123532484 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.125079829 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.124934474 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792925207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.12428161 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.125364435 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207202594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.122253288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.122572358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.122254912 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.125993902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.122565875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.123338392 seconds)
  done (took 27.42253461 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169273456 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.137084461 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.159266058 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.137549307 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.139984851 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.14019338 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.158760422 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.137795608 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158640917 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16526224 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159995191 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162819744 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.138099444 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162030566 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164689252 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.197527358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164091114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200606364 seconds)
  done (took 21.965514762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.299790257 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.288135789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.203181844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.169683339 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.385281872 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357484604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230170103 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322945154 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.165378936 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.287519201 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.324356893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165562289 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.35850648 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165102724 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167771106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.384318069 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.204968069 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16600939 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24263676 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230072479 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.300904258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239145066 seconds)
  done (took 28.770302676 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158760756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.169294245 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.201232511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196040224 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.125728897 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.12176792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.181387867 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.168549564 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.143816222 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.158745961 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16920847 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.121544185 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.215023746 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.1764744 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.213120872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168908311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173416749 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.183647494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159247249 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.122894569 seconds)
  done (took 24.442605472 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.124406172 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.12220475 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.122082311 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.122793835 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.124956426 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.12257701 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.122626555 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.12284889 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.122646199 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.381589535 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.121784624 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.123265178 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.121981907 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.12830906 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.121966548 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.121856177 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.124683698 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.122504277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.127602093 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.12297965 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.377142625 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.122312485 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.124523876 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.12251179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.12284617 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.122149961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.126370273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.123416886 seconds)
  done (took 33.078668341 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.184748093 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.122366556 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.128766193 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.12341429 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.124029873 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.19338921 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.128240695 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.123499044 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.123897346 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.122973731 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.125796232 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.12398046 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.122873012 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.181722818 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.122974846 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.12977798 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.229249085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.132646271 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190240579 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.110075036 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.132942 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.234559118 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.131554641 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.123927257 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.111896368 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.132920114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123936521 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.124862762 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.122499388 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.12364789 seconds)
  done (took 53.319420829 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.145284779 seconds)
    (2/2) benchmarking "in"...
    done (took 1.142582721 seconds)
  done (took 3.40313423 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.127890281 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225285677 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.123212729 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.322477393 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296563324 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.329217191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.31179358 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219399483 seconds)
  done (took 11.067721714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.122331575 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.443953768 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.143096917 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.123661056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.122335941 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.557417377 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.061021133 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.965776225 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.841997187 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.1462194 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.15797259 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.899617078 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.102682443 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.426844048 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.237144256 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.979711783 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.313660039 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.57229612 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.132903512 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247598494 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.802831957 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224425819 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.123121089 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.121980472 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.126437509 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.182991216 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.984886145 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.565060291 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.220125056 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.2464696 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.826663442 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.205546817 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.122649587 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.330842629 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240078829 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.128416206 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.251348613 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.230076073 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.129449998 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.123070305 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.782074043 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.773843173 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.387670157 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.323178278 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.210447135 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.123301963 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.126458519 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.122053914 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.381210374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 3.038609767 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.105510253 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.081228826 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260655525 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.12385239 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.765217844 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.140984106 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.123091124 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.184285278 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.614726743 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.343700247 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.849403289 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.241818087 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.094473572 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.250219155 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.129133146 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.665410867 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.94968491 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.855164204 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.826213451 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.239894481 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.59989023 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.14652518 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.123846061 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.122403976 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.067872872 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.440881478 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.123095158 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.122563734 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.122949471 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.125741176 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.332954403 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.240545833 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.941917214 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.260139881 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.592238264 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.536037798 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.251164831 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.123906403 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.744327008 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.09776321 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.232939355 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.679995199 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.336440492 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259714232 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.061082069 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.382763882 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.168186538 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.124602549 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.953149791 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.684887915 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.137846369 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.123801141 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.808686057 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.16704152 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.128855243 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.12328003 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.767183703 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.250715925 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.210624537 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.169715198 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.123693001 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.123267524 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.925421247 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.2325887 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.127758977 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.913241198 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.108841535 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.59982261 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.322598674 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.326398376 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.442673655 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.004169712 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.758072216 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.947270771 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.132202188 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.604873347 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.406525904 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.723888799 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.34074317 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250468057 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.876996183 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.192777501 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.123693301 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.15992019 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.204148178 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.123972435 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.126786189 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.123986368 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.124065205 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.12405712 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.239982312 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.436112808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.895324363 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.144879834 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.354590876 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241505348 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.899983469 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.312786351 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.807096238 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.259364395 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.123803317 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.783598646 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.328872992 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.786328749 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254081305 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.124129356 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.123342876 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.960021367 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.076927386 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.22329065 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.124892582 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.949081562 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.23442639 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.12729051 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.124186776 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.577019698 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258308195 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.123692178 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.179001498 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.856257892 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.914599877 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.144688923 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.420554783 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238432604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.130924164 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.123035702 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.124939434 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.89803268 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 3.04438331 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.202318392 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 3.05033751 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.794214114 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.21638868 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.240537351 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.217196501 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.354439294 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.335450702 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.2638344 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.125384992 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.12388543 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.124192334 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.907835518 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.962915666 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.078443962 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.939569631 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.290021728 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.236177227 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.221321773 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.89328955 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.143691823 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.787927693 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.074669537 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226620565 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.127882292 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.124815571 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.267602238 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.298602417 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264363609 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.634704368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.14006569 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.125299461 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.737671114 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.251171205 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.731140157 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235236452 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.937177761 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.159078642 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249177849 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.226167874 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.697520214 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251330706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.12414555 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.754644219 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.271424222 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.124014412 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.139037292 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.761722125 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.916828936 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.845604798 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.69770241 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.069642635 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.66622528 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.351567827 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.264546108 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.903569501 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.226832594 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.743170476 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.186422274 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.539776124 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.147475117 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.850994539 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.143919998 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.787285815 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.139901171 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.052824159 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.246126024 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.531925368 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.240307199 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.125531419 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.266535072 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.220393045 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.740199495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251566363 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.252225266 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.377807355 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.972909386 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.226523863 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.743108339 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.179795666 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.012916298 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.07272526 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.45267801 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.002599051 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.277825696 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.226963742 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.842364256 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.282298426 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.355468299 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.259549633 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.124750801 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.12475519 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.298323042 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.213507518 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.125221283 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.461080225 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.105010179 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.310658671 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.224672626 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.129087488 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.125052642 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.312813432 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.20127975 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.335141078 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.574897959 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.684555923 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.875422076 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250150508 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.685667899 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.257701308 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.006075348 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.230807157 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.131046594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.742993493 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.249754469 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.348302927 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267680195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.229880017 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.728385353 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.233169349 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.403126923 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.192683511 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.250354864 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.845750642 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.661060968 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.352698703 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.442456964 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.16606908 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.93632353 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.120694666 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.982594804 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.125355708 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.011863729 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.160929215 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.184877781 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.125100849 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.125343757 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.933064555 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.096386483 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.133369277 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.889169848 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.758243495 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.023841109 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.060383398 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.233157937 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.130147841 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.129377376 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.124866897 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.187590844 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.158926658 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.389861761 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258405644 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.130220586 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.127020343 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.081446239 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.375222941 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.889085074 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.952280696 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.09263022 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257960861 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.12794191 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.126461136 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.124209547 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.125018666 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.127150049 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.13123309 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.571967414 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.146129559 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.934895939 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.234251395 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.135488151 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.289391972 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.196284008 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.126734068 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.263772043 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.209088343 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.228823044 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.199111163 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.126079181 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.535169086 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267440043 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.208652939 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.360620375 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.372529953 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.350624454 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.531877993 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.179622891 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.535634829 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.707707219 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.903944718 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.128821128 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.192449413 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.223456597 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.83567394 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.260767029 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.529358128 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.022440204 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.121232584 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.336640699 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.012537381 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.870141806 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.222482947 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194927497 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.126645785 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.130439888 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.158809522 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.365328109 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.176318266 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.329527942 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.322323114 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.259682471 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.379102863 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.222663116 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.274014207 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.158925659 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.143123672 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.125587403 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.127755896 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.53075274 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.918474414 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.214661634 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.129128133 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.18600537 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.945119344 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.007892173 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.047255832 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.002414604 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25891804 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.127481636 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.329011383 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.179596881 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.818197258 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.1505168 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.897256638 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.448850914 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17578277 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.22016749 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.857083837 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.781737067 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.472340478 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247270975 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.127504237 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.439750423 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.105632736 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.262399291 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.015999533 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.408159806 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.979329827 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.856987325 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.326123949 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.239833042 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.189189762 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.990040097 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.120661334 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.129707805 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.954039335 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.262349414 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.390756313 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.040222178 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.383524179 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263477139 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.97037859 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.81822613 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.260167328 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.7337204 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.262580571 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.126642989 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.848115279 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.203221957 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.22413153 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.244393943 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.130725429 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.144758337 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.745843776 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.709450777 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.272512532 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.202872449 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.12567238 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.781046171 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.026418301 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.231598355 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.131322453 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.129193614 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.444783563 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.180238758 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.126913692 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.535059684 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.70640534 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.261278084 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.914786256 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.216398358 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.263751967 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.334886101 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.445774108 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.329110588 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.18892868 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.126508425 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.129344941 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.126304658 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.625711114 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.14209246 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.125280541 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.714185081 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.262355931 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.861997838 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.03649 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.331288827 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19741629 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.530556067 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.269227145 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.915246042 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.156639733 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.222151414 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.762023488 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.187971632 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.200178824 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.825413372 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.229006087 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.13100866 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.007468145 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.363778643 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.44978732 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.461032863 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.404652986 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.215191039 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.751200973 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.238781865 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.805030744 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.148151555 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.12658522 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.907099087 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.21022806 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.502040617 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279739417 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.518619925 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.240362542 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.792281251 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.357344358 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.216139093 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.127718177 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.129396246 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.071469627 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.30791 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.960235628 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.002383402 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.550339569 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.254974318 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.410634092 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.622875568 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.919042304 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.579958896 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.368019484 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.337745586 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.164549605 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.077741241 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.398162725 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.207824488 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.286604961 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.217506245 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.84021882 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.199246235 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.12771384 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.633499967 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.142849612 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.133050946 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.1268277 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.177950947 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.844261539 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.230153838 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.313907693 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.221637093 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.132709377 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.726357349 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.39408021 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.166411496 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.127512598 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.128136343 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.953191116 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.237763158 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.130943001 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.406802218 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.277846435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.367725244 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.94298675 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.555828169 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.216346563 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.130213359 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.126556125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.801936087 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.603943736 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.163238268 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.808925277 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.16644965 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.908027998 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.111601988 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.526064726 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.652884752 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.066438885 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248640557 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.126531605 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.157520273 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.944759249 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.030009894 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.072883263 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.515238787 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.219224846 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.840563338 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.088567371 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192962611 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.176482325 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19934505 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.127516631 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.128782415 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.129101999 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.923705363 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.119544699 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.131675139 seconds)
  done (took 1447.342704106 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.404010646 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.132897932 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.127574009 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.127424525 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.129162289 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.129271449 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1310468 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.131127686 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.127581531 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.126994913 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.131157744 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.127189084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.128310441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.410133216 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.13519272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.127071462 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.128382294 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.127775043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.127370858 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.134235324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.128098465 seconds)
  done (took 25.388925731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.13049869 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.130814385 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.128068594 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.127302796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.12828332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.127917019 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.132739556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.129159479 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.127022417 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.127499156 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.133803074 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.127864066 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.127941439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.12660751 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130265305 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.129450193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.126928564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.127450519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.127891503 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.131626378 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.127169684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.128163403 seconds)
  done (took 25.951941877 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.131705996 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.127820498 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.791288008 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25206692 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.129705016 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.126498334 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.128433616 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.323110937 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.133348213 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.138908083 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.868514892 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.170530333 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.131807744 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.294932594 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.221386379 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.128293674 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.254483447 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.133974153 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.127848104 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.126742204 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.126582398 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.318147487 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.260872975 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.130116338 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.945592978 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.264627102 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.127580381 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.129104074 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.128629437 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.213000427 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.225079142 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.130946547 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.912311922 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.816864266 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.459857437 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.141487753 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.23565383 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.131221106 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.126813437 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.127505116 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.594522913 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.901996507 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.134782271 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.128807345 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.377865262 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.243666405 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.128512574 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.804695846 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.168137079 seconds)
  done (took 90.293559429 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.134572548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263593314 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.190435657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.1272732 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.265588258 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.128335107 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.182199794 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.128789404 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.128863212 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.134717496 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.269029439 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286995246 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.128803386 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.131062015 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.190307398 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.127739312 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.12747239 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.132328046 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.128040482 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.127420664 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.127428333 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.179578525 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.254006647 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286450471 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.127268568 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.12779082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.136711053 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.127210896 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279442983 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.129757421 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.130325893 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.127810097 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.263770983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.20888189 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.130834291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.128264872 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262182414 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.128470804 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.127756965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.134558525 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.128347695 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.12716256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.186727238 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270859925 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.129165694 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.230269381 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.126913621 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.133219933 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27595287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.12714817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.126775653 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299512685 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.129396406 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.128072782 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.126822559 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.256875704 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.133862853 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.128465177 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.127041505 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272801666 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.133158036 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.128200514 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28663096 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.127074599 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.131334007 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.297212484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.23060511 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.128759301 seconds)
  done (took 80.802095523 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.127484239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263909259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302700833 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304593632 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269548595 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.263828593 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267748864 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267135341 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264892903 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268480272 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263952484 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.223459366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.235912859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.221130854 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267027406 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258875575 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259238155 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253097859 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268349171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271692058 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.258772103 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303803256 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264217401 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.309953218 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.491209224 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.234195953 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265117507 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27054867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306339493 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264189722 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.490807935 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.270854057 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264280657 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306557906 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.488464428 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.265370566 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.127967842 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264956919 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268663121 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268518851 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.235533697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307212584 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262028291 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.239227943 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257978917 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2632801 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306306076 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.493025193 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.222023963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266411179 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269793214 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306031666 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261856262 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263375527 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308780542 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.224780663 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302809349 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304858707 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273372866 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304157556 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304432825 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.225923389 seconds)
  done (took 80.434017485 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.128067819 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.128114856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.212545863 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.132981966 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.128072128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214075048 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.127904967 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.127897333 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.130981007 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.1272687 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128605013 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213422236 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.495820716 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.129134629 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213689777 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.492740695 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215854175 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213418964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129767166 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213954781 seconds)
  done (took 27.024988214 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.128543275 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.127562417 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.133334019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2841671 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.129043674 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.263265157 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.133728224 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128096094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.127995283 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128569624 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.131959591 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.128652932 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.127894428 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28313084 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.128659927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266982058 seconds)
  done (took 19.768586727 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.128978637 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.128725232 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.133799275 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.127292322 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.129292014 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.127863666 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.129680673 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.128644668 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.130031502 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.584300047 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.134382672 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.12912073 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.128335532 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.127253374 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.127397783 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.130806848 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.129760486 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.128890734 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.127604996 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.131144306 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.705495045 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.126817164 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.127568412 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.134394304 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.128052277 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.69923746 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.128853592 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.132390274 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.128979148 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.127959907 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.128093207 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.612738853 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.131687226 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.129988932 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.128527889 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.131266511 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.127482566 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.128392143 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.128140748 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.127804489 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.135083691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.130234932 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.127113755 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.128042849 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.131749898 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.128115733 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.128317646 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.582031002 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.131894859 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.129266033 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.127837579 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.12786906 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.127477355 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.603624103 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.128441741 seconds)
  done (took 66.243489643 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.1666754 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.186233086 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.129547391 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.128163853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.184122274 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.170164975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.170571057 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.146355122 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168660432 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.134384289 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191893408 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.152293654 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165034841 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.182179748 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.193873594 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164354707 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.128532454 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197941458 seconds)
  done (took 22.077532747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.128167308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.128801672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.127285629 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.134000792 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.12868672 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.127194047 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.128091369 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.127856454 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.129771674 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.129262917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129151471 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.128317344 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.131491721 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.127538921 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.129266897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128079462 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.12743613 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.132653926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.129140125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.127885001 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.127773247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134165297 seconds)
  done (took 25.965146089 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.159627868 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.173489625 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.131189614 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.128058414 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.128274707 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.150437312 seconds)
  done (took 7.988169221 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199131398 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193352481 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.166399702 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174933318 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204676707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212072856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207738787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211338342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206818651 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4327706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211886308 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20531962 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211076972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259289626 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194044031 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199709325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214359137 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211897362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185082115 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205159177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221757087 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197859497 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216387543 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206915081 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212114447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264951873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205793222 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43646329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215264587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198375894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19655226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211776357 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203993609 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435732592 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173704783 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203964153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210994257 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21114327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194531109 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254902716 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.16523684 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198041923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203641007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221059964 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197946629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227305146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220587854 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211056945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215900074 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.445682935 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199886905 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254188148 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193691233 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210382565 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205767271 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435400735 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436198357 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25862158 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194713946 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432447065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255736805 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204390316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255994914 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434021649 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196240802 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256572557 seconds)
  done (took 82.850227754 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255501554 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173485967 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221754366 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437647008 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254925146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214022738 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220717147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20671776 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206676118 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187672784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216588819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21668098 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253838264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258296791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220978385 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21293813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216097321 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253293895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185815151 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437936736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215751267 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256653283 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261289144 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25555818 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432485606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202238339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220075937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215294502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207242965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212313847 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222209117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215714041 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257175605 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.164377305 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257528432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217901002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212202467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218798664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22120624 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20035314 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259443877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209384295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215720442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210224986 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43370372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209018172 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211958294 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184573509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215057297 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182783047 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438736649 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433078453 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437616303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254752353 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226301885 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220866629 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216193501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214360735 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221060888 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199114631 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254252955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206920518 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446359876 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217293028 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21629589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254142342 seconds)
  done (took 83.429521339 seconds)
done (took 2438.740870983 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.131477356 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.179236252 seconds)
  done (took 13.428457812 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.129449805 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.130104494 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.284859465 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.135438268 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.14137509 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.17566971 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.140455199 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.138520453 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.131177898 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.214033806 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.128867238 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.26035234 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.236627602 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.128280679 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.160292876 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.139134769 seconds)
  done (took 39.820847412 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.160063287 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.643038116 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.052517698 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.876642057 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.163211827 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.966932435 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.428545167 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.761909286 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.433626455 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.578999373 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.39182086 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.895904669 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.855933304 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.352812776 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.598021206 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.672885087 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.756840265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.82446585 seconds)
  done (took 60.534231836 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.123287823 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.279774278 seconds)
  done (took 8.551389037 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.147149766 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.131098534 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.15123281 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.14538691 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.141152856 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.141554575 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.152550024 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.158635412 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.140374361 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.144849297 seconds)
  done (took 62.591592157 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.130148868 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.58202301 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.442102771 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.552160817 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.7116747 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.605294544 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.290862784 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.56291629 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.224880864 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.122334679 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.319107125 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.509515081 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.958188992 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.39720931 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.752023148 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.346427063 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.7786 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.578502246 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.457534411 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.508841643 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.377059693 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.229545201 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.557210374 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.04748632 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.140174792 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.702263905 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.383922188 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.257436653 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.213880491 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.272633515 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.420792966 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.14447553 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.389467698 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.13230855 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.172955247 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.682446676 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.793388184 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.326085102 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.500948049 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466838494 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.502348936 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.795494743 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.192306932 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.784482139 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286358082 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.4710205 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.216951872 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.360303226 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.212970931 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.260303435 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.653433452 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.316544134 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.268769065 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.246288236 seconds)
  done (took 154.748567044 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.116600311 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.525318475 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.276289138 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.120830719 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.583693169 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.339647589 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.888149374 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.693878617 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.142720489 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.335661043 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.299140621 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.259468198 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.119351121 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.127313849 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.13136731 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.127098358 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.319119187 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.706093093 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.13997526 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.126776886 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.341400285 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.369218495 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.264321168 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.121627181 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.298350281 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.36911609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.534952755 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.261162003 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.517213304 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.121685618 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.564837842 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.136337492 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.128322347 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.016238802 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.516078885 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.454153087 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.576616027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.131568453 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.862838943 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.126768109 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.824700292 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.331121699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.43964704 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.264184133 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.378048093 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.363978429 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.730413253 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.120266546 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.924665218 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.297634635 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.35006367 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.339881482 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.405741268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.126780874 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.6618033 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.126874985 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.13055597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.388750964 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.27913023 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.248432383 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.125727383 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.126646246 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.127245731 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.37707456 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.124354156 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.248628874 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.120158253 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.12688577 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.255632742 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.249023612 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.280065754 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.366922576 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.381536493 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.355640742 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.117958231 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.365244517 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.541438209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.36918625 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.119172546 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.126869853 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.547332002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.572575204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.286874752 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.370661544 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.435478075 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.421881944 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.696751872 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.119523974 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.35767728 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.293460967 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.511163917 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.394583538 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.491054413 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.022209952 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.124821932 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.126628296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.427541248 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.258455801 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.120798761 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.642810538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.418954331 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.223374401 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.314337204 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.619968158 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.236044873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.125722674 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.69228105 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.119246235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.350606117 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.416939626 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.128850964 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.126409444 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.285914081 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.067175853 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.118345191 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.522179073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.540078429 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.133411335 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.290869062 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.121265229 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.383333234 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.089929631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.365548442 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.913046331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.403182567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.318031655 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.401681313 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.121568442 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.389507299 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.399194259 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.529007079 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.449668193 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.126879286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.1269162 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.452638116 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.122315352 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.13115884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.319156048 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.02495666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.304883211 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.122025755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.547204744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.285884265 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501478259 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.121708279 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.380613232 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.37254018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.486843497 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.120567931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.270625599 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.11909834 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.188032568 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.295073385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.120116244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.128657369 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.939492006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.126811387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.308741026 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.357508963 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82094204 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.492857004 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.48390068 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.120439029 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.572163555 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.323315951 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.576334374 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.657902239 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.300935055 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.80308854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.339817397 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.127946591 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.371299641 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.421516211 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.124906837 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.129958359 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.857925906 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.241414274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.125510686 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.295737923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.384947956 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.599074798 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.340654118 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.122277659 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.491299817 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.118755709 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.346881127 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.623010077 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.381205531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.128472405 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.128368744 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.128862402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.134749489 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.353902555 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.385701292 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.813359789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.278452201 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.424834242 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.348777518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.43788645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.589714035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.132434597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.458504555 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.121261419 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.520787634 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.127678986 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.317031583 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.396676181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.121813963 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.356083122 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.478829517 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312393408 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.516517019 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.121859185 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.12833142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.882701271 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.312155855 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.538006232 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.12066094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.219266641 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.494487629 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.262032805 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.351402657 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.349036808 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.1352125 seconds)
  done (took 733.620695707 seconds)
done (took 1074.415186461 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.117011706 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.127954103 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.13100063 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.130475129 seconds)
  done (took 25.625366311 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.103284673 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.200063375 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.304475379 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.138432149 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.504861559 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.184580094 seconds)
  done (took 11.565374592 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.625411653 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.127499681 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.135585767 seconds)
  done (took 18.006259122 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.396828887 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.558437114 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.30154517 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.219017332 seconds)
  done (took 6.605996752 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.131355647 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.134853843 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.1301812 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.128220689 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.129124234 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.131228558 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.130210748 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.130714229 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.129512088 seconds)
  done (took 11.298747418 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.898595607 seconds)
done (took 79.122700675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.536840617 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.419470135 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.198076817 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.324960303 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.256565523 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.431729045 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.247401707 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.147692428 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.458608782 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.582790414 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.658152177 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.213289598 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.405746295 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.589887492 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.363274924 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.153244048 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.144221179 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.1902177 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.643917343 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.343670271 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.134327214 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.264115934 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.863511503 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.161950931 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.981087029 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.243589126 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.377750235 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.125465545 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.709275707 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.153359668 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.220274899 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.638469297 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.312902302 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.427408842 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.225994576 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.966222407 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.582663336 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.13957692 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.28934961 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.634535866 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.392136704 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.20730932 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.124105018 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.299967505 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.536958433 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.147104266 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.128283632 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.289779442 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.536310654 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.315837387 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.496259301 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.131924126 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.761712901 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.205264487 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.213412594 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.119232622 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.091429816 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.599424794 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.287715049 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.429359778 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.145081565 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.141887171 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.033860003 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.160102227 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.121801136 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.701734396 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.572199292 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.218069442 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.60936379 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.153470709 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.13765993 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.153111039 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.807457565 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.27170782 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.228315425 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.138050722 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.389409385 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.204575411 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.133089673 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.14006581 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.516760067 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.127150953 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.271075075 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.478419483 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.293294908 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.507585715 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.648907562 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.550092139 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.729188401 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.133216459 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.496266804 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.982771796 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.359001285 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.131490176 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.134379752 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.340684056 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.719851425 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.653008814 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.26468826 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.8137605 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.156362523 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.145267959 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.481722699 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.490055328 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.884266196 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.161558847 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.26016673 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.124681738 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.433943726 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.118203192 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.555770385 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.722687303 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.131540351 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.192922613 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.675800297 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.130636055 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.425761452 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.559447628 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.220668127 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.126220425 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.434055014 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.138608396 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.249417846 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.771483709 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.494409195 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.331278984 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.122865232 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.74007551 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.131976933 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.379222741 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.138231494 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.702626427 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.657528075 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.163148458 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.384683078 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.252729983 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.267820701 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.267994447 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.185397445 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.265251582 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.464207445 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.460900585 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.297332045 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.119804653 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.451240931 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.137535083 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.363827322 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.441082103 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.292059779 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.452207106 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.21433085 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.142732066 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.04965725 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.571574173 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.765547328 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.821125377 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.350139823 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.261893433 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.654939857 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.449923375 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.978532814 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.228380392 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.182108254 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.131210824 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.1465131 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.190425255 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.121724196 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.128482027 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.437584987 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.257312994 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.789864548 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.890654411 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.136002349 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.389788563 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.28278138 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.031038853 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.707610168 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.132104212 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.504451227 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.621001701 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.244647975 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.163754725 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.123781336 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.201171567 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.858710961 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.16736424 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.470074888 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.589469762 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.357754038 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.483550809 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.347072175 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.172061749 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.506008967 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.385723848 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.388784637 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.331809862 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.770534852 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.249186324 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.466342703 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.208711404 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.404720229 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.132077186 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.482603962 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.400717085 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.620633388 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.453587722 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.358772842 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.299311476 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.437338555 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.13157084 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.14321586 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.18981821 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.496793166 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.152807107 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.130514389 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 8.182873888 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.822100522 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.053696459 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.304912911 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.347740169 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.234743658 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.181104407 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.578935679 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.151517864 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.462663196 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.295232444 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.300935598 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.351886164 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.163041072 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.273107673 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.309334586 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.267679102 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.341082204 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.964573482 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.528530601 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.156609514 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.387337599 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.121775066 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.043661087 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.158708657 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.142486743 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.464590679 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.328788902 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.436217415 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.281438761 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.298674681 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.12198634 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.15779937 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.639984479 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.987780013 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.718864964 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.237726684 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.152614344 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.119105098 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.598098093 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.554086145 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.196288201 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.26489965 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.695950293 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.161016517 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.327606023 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.134470705 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.134761828 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.88288135 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.262745723 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.37677554 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.7594084 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.132934562 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.643233407 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.134483237 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.681300883 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.672518275 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.180113951 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.251399903 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.126886281 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 5.090622231 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.521127212 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.152719511 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.273430515 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.456876884 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.24870823 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.254967611 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.123234851 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.167066585 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.539602567 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.271004549 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.666057733 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.160214244 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.54346024 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.138071359 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.63790888 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.150464817 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.216328057 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.552704292 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.2562702 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.475559121 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.134942942 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.29873086 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.381587405 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.150175057 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.121145931 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.279039003 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.159546611 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.124186665 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 3.230185833 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.278950769 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.096625694 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.377960992 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.260638367 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.951071097 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.262511992 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.214663989 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.767214841 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.651956797 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.133420253 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.272138486 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.128389829 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.521970607 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.156071907 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.142926818 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.255293505 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.221482674 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.240776641 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.91066126 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.294713036 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.665317807 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.205262215 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.969003262 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.137814605 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.586189538 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.246983477 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.468949561 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.824825144 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.148104265 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.268786055 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.754280446 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.308863225 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.161859347 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.386626568 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.13143988 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.735094702 seconds)
  done (took 876.431229929 seconds)
done (took 877.714372316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.168764349 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.499238737 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.333301399 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.995322228 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.932317733 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.770073711 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.345223725 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.363300945 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.204131243 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.34494858 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.050657656 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.934097205 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.220290571 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.243366082 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.222237488 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.227932812 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.359122725 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.369529064 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.257732051 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.069233281 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.497336501 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.071818845 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.559427184 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.42569328 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.500370573 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.224943859 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.198052636 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.48073857 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.484590791 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.3143441 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.357860977 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.328007001 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.965594233 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.368509184 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.219815196 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.210329486 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.946870385 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.220437036 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.157518113 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.209500521 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.500466166 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.259611634 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.843083082 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.007002134 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.910483889 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.544262362 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.006567852 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.235359705 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.232744603 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.303613118 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.15568919 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.154784491 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.480027815 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.335778575 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.028213803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.014629439 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.481764428 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.961019859 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.860092022 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.308180473 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.498848817 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.22660393 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.304236566 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360871893 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.248234 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.423833782 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.545930857 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.159169702 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.326935535 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.353259703 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373376117 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352451896 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.24062389 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.269773127 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.248722363 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.347753593 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.994461439 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.332077929 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.917609676 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.22642213 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.073004754 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.040602258 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.087506927 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.204261426 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.169055649 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.904095265 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.954082779 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.073853312 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.253850538 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.327642331 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.039778912 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.333870385 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.58189587 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.193446418 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.169109757 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.333922249 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.960758819 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.150893394 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.298965455 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.329139134 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.913013143 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.19827266 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.123983295 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.207881396 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.231914934 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.152270992 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.191593419 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.544239579 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.355560437 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.309702651 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.500583722 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.252045762 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.351661064 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.24267575 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.207408436 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.904784035 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.414214767 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.949824392 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.156573584 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.800042045 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.402739137 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.213335229 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.502371751 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.428874403 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.169355246 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.219840068 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.229994501 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.068300122 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.229678847 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.225351539 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.31104745 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.58222822 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.305463802 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.009167398 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.354420665 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.823166008 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367053388 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.352310136 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.203370384 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.013701101 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.224654954 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.278008427 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.429977234 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.500347009 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369025224 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.428489245 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.247807067 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.430233255 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.15700689 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.258228508 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.351914067 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.235844176 seconds)
done (took 244.579162696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.471924139 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.11004949 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.420426212 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.435745537 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.530541794 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.503718092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.193096733 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.572251849 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.233250532 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.55123283 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.369242119 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.950807066 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.249926569 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349399972 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.49547106 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.375173301 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.237719667 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.392701333 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.582779833 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.487386095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.838687908 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.385918464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.274141518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.549544883 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.120411852 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.834748168 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.488951075 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.256469958 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.397847677 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.824102183 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.8966476 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.400692406 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.48337281 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.714369685 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.480147957 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.805463307 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.537478398 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.879656833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.479696077 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.473575341 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.415482394 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.906685325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.843961799 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.859498862 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.290641745 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.474442621 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.197148819 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.977124528 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.13033401 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.819159825 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.392635115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.909559368 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.976489435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.462416391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.332221335 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.782824974 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.606963228 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.621018226 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.484543316 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.433824021 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.476489135 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.548129524 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.54552846 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.316844838 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.862269329 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.422711122 seconds)
  done (took 147.846982115 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.551931097 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423111971 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.533756291 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.53545938 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.713870742 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.530933067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.625123067 seconds)
  done (took 14.041467829 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.194510383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.215491429 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420946181 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423819789 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.18381932 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.30705022 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.265999814 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.851605825 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.402026811 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.22280162 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.50173715 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420562513 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.767632377 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.87501956 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.27169968 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.417196529 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.162520124 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.246073384 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.238111489 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43440229 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.856049042 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.838209622 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.374822345 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.269658603 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.212550817 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.221452371 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.179005022 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.151254882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.213689636 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.160140974 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.18873062 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.290303353 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.213742683 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.856619711 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.197401032 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.529429711 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.183557126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.219970692 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.309678128 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.12388005 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.164918893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.185203513 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.320043177 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.183946979 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.157970902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373116164 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.163221312 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.186354432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.164614597 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.179605684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.369557908 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.176252686 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.195282328 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.783905579 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388919975 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.828377409 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.25088843 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.172060283 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.175092923 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.245186613 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.176737624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.437077406 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419522553 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.161984173 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397446811 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.484380232 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.183159626 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.157417357 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.157255661 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.420704509 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.180209782 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.395415709 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.218578564 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.224999941 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.23629544 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.312364345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368742695 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.977535519 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.946577219 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.800932836 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.152932679 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.167744933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.494375932 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.116964635 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.776379459 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.170539561 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.217897705 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.817046584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.092790614 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.176632115 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.486572872 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.162951684 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.238216529 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.225155542 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.207975374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.236288206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.400228125 seconds)
  done (took 154.174528855 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.300046987 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.759479157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.390497262 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.161078083 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.384273569 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.411572872 seconds)
  done (took 15.528765448 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.61322873 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.981503294 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.201686698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.196772914 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.232003784 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.171409877 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.173920277 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.528252914 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.306477533 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.195688348 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.175016497 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.194815561 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.174794611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.305724024 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.176259051 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.18550262 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.171091959 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.194378491 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.181378694 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.240989362 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.468347522 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.237582662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.242972842 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.231202703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.227193028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.188120661 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.169569678 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.190647033 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.186852854 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.519903786 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.372225709 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.171882081 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.143427999 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.620949716 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.938369288 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.236428629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.321288951 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.20519202 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.225357449 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.17143396 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.197054684 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.245411281 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.19037925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.194948697 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.662343658 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.152625465 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.252857611 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428563226 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.173467201 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.194710685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.201143251 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.202771494 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.170774671 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.194525112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.566229855 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.745177298 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.148218158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.175065108 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.238395428 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.231426621 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.244537428 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.178093276 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.628929558 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.120106081 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.805909825 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.198105857 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.242980065 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.304883233 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247885035 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.195178567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.196360664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.190813664 seconds)
  done (took 120.970039864 seconds)
done (took 453.688318467 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.52170955 seconds)
  done (took 7.641620581 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.163038353 seconds)
  done (took 7.447234179 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.123750262 seconds)
  done (took 7.255627109 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.139544851 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.15835668 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.14014156 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.145858818 seconds)
  done (took 25.73984707 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.348408513 seconds)
  done (took 7.479711998 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.12076038 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.139023751 seconds)
  done (took 13.484130801 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.303259905 seconds)
  done (took 7.448357902 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.440147165 seconds)
  done (took 7.575626666 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.127374821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.159896371 seconds)
  done (took 13.449159108 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.125322731 seconds)
  done (took 7.255206578 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.515145803 seconds)
  done (took 8.733657544 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.132587434 seconds)
  done (took 7.29950445 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.134230881 seconds)
  done (took 7.266199748 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.165808311 seconds)
  done (took 7.296147573 seconds)
done (took 136.49840913 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.121074646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.135869444 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.131072433 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.130409356 seconds)
  done (took 25.638513786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.456629945 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.463104011 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.437537369 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.511119721 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408664535 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40163156 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.459211266 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.45758245 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.402524494 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.608471754 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.459912058 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.613558727 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.509493582 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.43721917 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.441637662 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.504470848 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.50794227 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.457654175 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.404812193 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.435154019 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.50348489 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.51358675 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.876876526 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.874358077 seconds)
  done (took 37.278418008 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.341756163 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.578499989 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.289534541 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.550194886 seconds)
  done (took 6.888014086 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.168251916 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.513352368 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.49218888 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.550303403 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.489947932 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.307664839 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.491442439 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.344069901 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.28594496 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.270939459 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.756948752 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.283003513 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.300871482 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.548621622 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.302897611 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.13883896 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.133174517 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.271416658 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.506913376 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.354849575 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.393141357 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.490801372 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.491649089 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.492766833 seconds)
  done (took 34.502364661 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.892053495 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.067130015 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.49118422 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.049214355 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.834360073 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.933152744 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.421930101 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.632636859 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.403607702 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.384594546 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.856835444 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.873812822 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.279251048 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.02543026 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.896887736 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.310159335 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.310177465 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.993086704 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.546592917 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.433891072 seconds)
  done (took 38.760231332 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.121127551 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.386171223 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.357165964 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.298129121 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.128993733 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.132145357 seconds)
  done (took 26.552878561 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.168429283 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.27570776 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.439055573 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.413422898 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.291695343 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.265903942 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.792870357 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.361483447 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.881368221 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.931056055 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.764230814 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.588721017 seconds)
  done (took 22.306410584 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.12155666 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.16042339 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.132917041 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352715528 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.432661848 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.891726544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.146122276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.128041285 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.621983488 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.383748384 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.267558547 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.359117114 seconds)
  done (took 45.142649839 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.325917844 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.398402797 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.459927612 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.175543794 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.656114169 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.21890674 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.512436863 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 6.124515572 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.93115571 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.966884226 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.65381835 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.181345122 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.661053908 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.101781593 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.131158681 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.47089402 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.957306424 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.623774202 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.565195474 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.202771998 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.096652532 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.276736733 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.125774867 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.677602685 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450598698 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.124576262 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.337544217 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.376817051 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.122021866 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.340389954 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.123588345 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.626307826 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.311720956 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.431559958 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.65437688 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.216600657 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.233341601 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.1324698 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.743571977 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.420429763 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.272927754 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.294262295 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.121829871 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.141189337 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386264042 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.907345481 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.128641433 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.763870121 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.112595542 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.225653277 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.017001099 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.357352839 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.585481572 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.108538809 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.272761118 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.462090344 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.291054648 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.126313328 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.418566871 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.128867255 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.311041277 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.234929652 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.334049719 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.091415134 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.305758687 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.462427585 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.48224201 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.446909964 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.431673744 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.47334916 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.523314771 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.220164585 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.94588193 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.271770327 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.701413678 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.044382138 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.495851895 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.123651505 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.839793684 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.660404345 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.107420219 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.253479973 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.833336043 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.092505004 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.122258689 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.303314908 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.739214071 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.099183782 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.22783163 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.141183437 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.517059148 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.264484297 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276285852 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.370403892 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.826951808 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.13656608 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.131821996 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.441954035 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.100737195 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.687321614 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.046473772 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.149409033 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.012169676 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.721809056 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.534423253 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.173400617 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.895875739 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.823146103 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.44268562 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.732796483 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.300967085 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.962789625 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.522583067 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.451690091 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.126591122 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.820153013 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.131716901 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.144309878 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.475805186 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.127980532 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.100376729 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.554182684 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.313003531 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.122997658 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.398166077 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.130414148 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.281832349 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.122658727 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.761429493 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.551295091 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.373898565 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.651914307 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.236789426 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.213875701 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.09312494 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.277183252 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.640958525 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.187938 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.469224899 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.562491473 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.360866463 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.571634821 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.120353324 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.952759517 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.611794122 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.392841239 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.46402788 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.764070141 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.305425913 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.217574765 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.122495298 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331729652 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.138672253 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.662441188 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.025595689 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.885516075 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.911611401 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.384152508 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.12157901 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.293200483 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.131511722 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.323062726 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.775618678 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.186939995 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.294970704 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.409851655 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.401847851 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.122944988 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.102077419 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.502087073 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.384150137 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.649226654 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.383242728 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.774056252 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.470820018 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.607548154 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.331878804 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.509913027 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.844153744 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.537432519 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.475159383 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.17323318 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.1161549 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.691304467 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.168180131 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544724817 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.361391483 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.892777852 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.334305912 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.323145618 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.177082823 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.145019202 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.096647653 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275357794 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.617435776 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.159997573 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.689029986 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.219806412 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.376068753 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.407922174 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.156042584 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.47052059 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.973051835 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.566099119 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.477978386 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453723954 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.104826875 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.27301854 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.645128426 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.623503186 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.266967235 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.411965239 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.102909618 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.180144098 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.131081801 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.477394974 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.205290649 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.781186632 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.418287319 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.679308259 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.009196251 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.277085005 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.124141085 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.151707157 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.058791214 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.278173995 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.135188137 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.294330638 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.671822423 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.391849903 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.450975938 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.121785473 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.134813684 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.410997827 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.435456959 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.407009722 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.650291569 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.370312581 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.814703831 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.23126682 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.811245877 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.297995674 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.157557669 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.838082577 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.455433748 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.067011231 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.304683704 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.771635833 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.22871351 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.743887164 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.440948406 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.123411633 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.614781674 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.743940906 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.024822586 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.138659075 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.263846089 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.131374127 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.445609885 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890494052 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.394708969 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.714343952 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.41576078 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.364171648 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.30220959 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.535314389 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.655618215 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.485620929 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.102323529 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.296335521 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.20969905 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.437205439 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.130513218 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.411145843 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.753634114 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.770998391 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.941098335 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.669928388 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.328590549 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.30563061 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.596823832 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.379768592 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.445314387 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.088618025 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737199591 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.110906399 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.272720086 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.090423525 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.929247421 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452264264 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.502818307 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.610496555 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.198383958 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.659543031 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.525325645 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.134637474 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.305151225 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.388251574 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.12312473 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.373337396 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.123264495 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.473427093 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.571096511 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.1215108 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.364094671 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.32528695 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.460135131 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.29073026 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.841097967 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.166877103 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.27856989 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.888442024 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.305202442 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.260878565 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.470006931 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.962163274 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.073313913 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.173153833 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.656677746 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.767614085 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.609620839 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.74404575 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.733646108 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.51019281 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.892094618 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.127831531 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338188138 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.299441841 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.126889677 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.270069798 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.538072319 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.160002635 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.333620594 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.460167403 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.244369042 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.661562789 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.104935065 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.81541476 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.233545761 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.636022833 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.666856958 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.91059576 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.588487202 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.164770409 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.616893542 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.108835076 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.294883933 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.437672448 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.844940086 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.20506408 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992450685 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.933197223 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.264382766 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.555014218 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.202231105 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.89057393 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.293897343 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.367896495 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.328500527 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.265534174 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.092280456 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.713701094 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.90288403 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.40602107 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.296409938 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.299676104 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.241610864 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.290389718 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.671776331 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.438544943 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.889634698 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.607974715 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.367170195 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.0920895 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.130066358 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.415039452 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.482637044 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.226485846 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.47074477 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.551901005 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.185313111 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.149479365 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.230940036 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.338315771 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.857083733 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.850486939 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.467788554 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.663527253 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.731357469 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.169448811 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.892208569 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.337145938 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.491973429 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.532246709 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.054232424 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.511256193 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.443133234 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.290068743 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.106087988 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.306338399 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.139696569 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.128423868 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.94481968 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.430026162 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.182645869 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.271297083 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.756805553 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.124891132 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.167660745 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.839025952 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.405743674 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.320350727 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.122960537 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.711550457 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.487169694 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.291273069 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.107375392 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.894898297 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.102431544 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.335165872 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.126909915 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.329527242 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.958892361 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.195053084 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.785250388 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.674010872 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.203600694 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.339277485 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.096865886 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928618068 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.140987029 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.804017833 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.938904899 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.377183994 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.644034775 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.302645383 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.128537223 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.458528379 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.263203645 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.459022698 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.828811793 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.615909653 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.561676453 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.497635839 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421658137 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.606967842 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.266226735 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374147579 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.098826365 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.163054679 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.134063766 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.501996645 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.488678987 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.122637592 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.666087818 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380440514 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.254874456 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.296887284 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.211986913 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.690643788 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.334966349 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.243040867 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.287866429 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.389232076 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.482077363 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.131280127 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.34183842 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.124531516 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.163294651 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338878562 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.371801316 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.514498587 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.444890141 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.020229724 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.291146355 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.859199071 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.823523725 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.661391282 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.128070315 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.000565795 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.507823687 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.123288418 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.6178366 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.763745027 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.307085485 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.400513347 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.188355153 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.145270061 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.317012937 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.633533254 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.132237304 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.774676862 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.573049919 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.123203756 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.610462693 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.20330897 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.302085786 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.903035944 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.626818305 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.12665121 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.949680597 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.232184708 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.678007426 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.404116641 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.17945325 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.136318914 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.76416025 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.105585076 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.13224686 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.247208581 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.663205808 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.148059437 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.691486078 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.254753073 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.285819358 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.13490893 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.273103853 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.123359611 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338920865 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.32090693 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.371335144 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.400871964 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.30773486 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.128700865 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.723214424 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.822244498 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.230660447 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.359219347 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.129824903 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.484110731 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.953772207 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.131791022 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.73168496 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.409720796 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.340760368 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554721098 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388576091 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.158056865 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.324859175 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.122937414 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4464666 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.284546164 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.68677197 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.395269103 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.662297425 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.229558323 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.140236015 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.664880391 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.597579614 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009403318 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.123527893 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.444354994 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.12940038 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.94888236 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.775856287 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.322715995 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.257180287 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.115014474 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.716936786 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.454853254 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.257135666 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.134550708 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.343056872 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.632594128 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.097935611 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.942927168 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.009384873 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.338149212 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.454745551 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.09082994 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.310154383 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.139373811 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.114030853 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.626730451 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.124909556 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.498285972 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.094122978 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.721278168 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.134974165 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.226888311 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.283473689 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.473193627 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.128296694 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.115685273 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.30620051 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.124780811 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.131620541 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.526326058 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.210676676 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.375727194 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.599562352 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.357955673 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.467937388 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.013449152 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.942280207 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.142322641 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.437011523 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.125537208 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.684610407 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.200104671 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.63239122 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.94011326 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.138271363 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.666052011 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.37781735 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.853555285 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273338003 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.634900123 seconds)
  done (took 1968.210580208 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.162350227 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.199685161 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.223534383 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.177585543 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.1685496 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.206188495 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.160384988 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.226200049 seconds)
  done (took 50.650512923 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.130334211 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.167234234 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.622666838 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.303083863 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.150749913 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.331155896 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.282617324 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.624212062 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.322680964 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.142984552 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.186937529 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.183161698 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.140084274 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.161793331 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.042894729 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.212303183 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.129001714 seconds)
  done (took 93.27103822 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.157132356 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.184215242 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.134026459 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.152479425 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.199740205 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.538723352 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.139184158 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.135740173 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.498355527 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.801784227 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.139795238 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.283126961 seconds)
  done (took 81.525725292 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.161807334 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.164694969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.163384315 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.161793895 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.162031182 seconds)
  done (took 6.945236908 seconds)
done (took 2438.82076521 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.352994571 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.59501105 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.673835926 seconds)
  done (took 4.392619958 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.196976149 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.266665934 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.335208304 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.273201739 seconds)
  done (took 6.222356425 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.401821504 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.618258521 seconds)
  done (took 4.14184813 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.619298111 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.144144209 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.668577726 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.121556485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.134082389 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.137166196 seconds)
  done (took 19.532908658 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.155503962 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.155926073 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.162976482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.151052453 seconds)
  done (took 5.7586069 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.12280142 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.158929756 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.132653248 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.082771526 seconds)
  done (took 18.62114404 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.415145558 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.398451024 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.886687654 seconds)
  done (took 5.837314371 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.945830639 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.268582428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.928465516 seconds)
  done (took 6.266309137 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.07930129 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.063997573 seconds)
  done (took 5.269434127 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.284261556 seconds)
  done (took 2.408481121 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.610256671 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.615042148 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.9971157 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.996496478 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.135657385 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.434660163 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.465328607 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.401051244 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.822029595 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.703047263 seconds)
  done (took 18.309182597 seconds)
done (took 108.673027727 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.994537603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.523995509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290865538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.83019726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298588978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292339777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.74633099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.626705461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.428025649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426085592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.20392098 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.299098778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.154671781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.517704226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.159152795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.483826211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.537565921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.016903664 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.895653743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.019681565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.754287805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421642555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.920428521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426657895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.545121844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.283389742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.970886807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.47351672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.143140088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.978532482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.29026845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.257468108 seconds)
  done (took 153.338947233 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.125408398 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.138359486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.137816739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.133627863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.047941782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.139259186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.138332826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.133819459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.82745164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.820859087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.13852798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.047432654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.137988099 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.135927318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.140803466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.133546853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 4.949677202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.138621238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.136858365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.141176382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.13873044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.832603824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.137613172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.832816805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 4.95824862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.139139285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.134818365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.139931866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.138274797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.13819411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.137326474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.136096116 seconds)
  done (took 187.746233135 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.122144437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.138233897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.138006908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.133743743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.138577673 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.13843449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.135628538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.140329079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.135952048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.135333101 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.134262859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.139906006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.136885038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.133643257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.136484079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.134948046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.139127188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.137452747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.138064707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.134344714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.143441437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.134686125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.137805504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.136633825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.14014262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.138754323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.134084095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.138214411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.135795419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.13885858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.139863327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.134796872 seconds)
  done (took 197.513790257 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.43482367 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.167420126 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.080279249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.701023072 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.064891159 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.159743873 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.695569202 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.440034773 seconds)
  done (took 13.880068288 seconds)
done (took 553.620948511 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.783366141 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.039454735 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.32368776 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.352391558 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.714546785 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425606507 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.34842304 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.603476273 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.895023226 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.589169505 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.637160099 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.345855799 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.015289215 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.357280236 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.325016769 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.594191339 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.553467537 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.841490693 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.34512134 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.985286551 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.349913378 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.029690646 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.618789924 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.95401559 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.63471057 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.075303737 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.2330585 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.556963307 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.346327476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.352124271 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.090525624 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.50731772 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.389423923 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.384785733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.597380495 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.588726444 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.45869091 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.557200622 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.310389565 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.815039692 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.988900206 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.752002121 seconds)
  done (took 75.791594208 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.162821974 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.175414299 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.321593242 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.2255146 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.782914277 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.228207975 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.401362712 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.371568738 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.245284495 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.380238398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.411766872 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.806028195 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.399531921 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.77935307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.389217904 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414541888 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.231107754 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.751332942 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.384241924 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.365337479 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.198189153 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.323458345 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.195909309 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.340490006 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.190683989 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.204581341 seconds)
  done (took 36.833599825 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.204129935 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.34275346 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.419729691 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.501499512 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.400882357 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.147912775 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.498784264 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.329048172 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.094958871 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.542554534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.248341729 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.316437527 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.336172983 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.437827655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.696584045 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.323419496 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.368008096 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.325973828 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.352506983 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.404766917 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.302520873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.243165735 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.500013455 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.351274982 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.836201524 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.506293766 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.554309792 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.747836336 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.654158837 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.301676926 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.291768013 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.479776906 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.555306187 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.415002321 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.310229177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.178295576 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.189058024 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.244477012 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.225943534 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.32143769 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.492914573 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.34738706 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.547201962 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.708272045 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.186321468 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.416110351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.614692417 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.253717834 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.290630842 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.943746337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.459639264 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.099099858 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.315715075 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.354890125 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.281186335 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.569526763 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.360982079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.439180255 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.326056772 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.767755675 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.244639349 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.556604001 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.355619721 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.201416559 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.490894916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.366360675 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.383903714 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.550366802 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.546226952 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.631562218 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.721904643 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.241699684 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.202515185 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.242145029 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.34608057 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.645919392 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.562905182 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442108876 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.57362267 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.483081019 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.674421354 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.61675016 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.144947365 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.85117249 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.220773721 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.167630901 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.26116075 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488641986 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.478394012 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.64814814 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708700321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.459508398 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.651424789 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.466472513 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.57062703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.566427457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.169312026 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.179712669 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.40188385 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71125655 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.249625689 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.475756127 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.824778207 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.669333201 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.484634428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.436489853 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.556744067 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.193664636 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.584933764 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.155820965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.377831793 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.373940244 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.450918255 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.438409633 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.163325557 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.680619565 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.266257387 seconds)
  done (took 233.01395477 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.126887008 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.138282372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.133777136 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.13892762 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.13664711 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.762312498 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.204146874 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.133570294 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.775113111 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.202269445 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.133333879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.134031382 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.13451069 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.140975131 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.708436264 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.672338673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.777113698 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.126040022 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.133137605 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.138304013 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.845417528 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.13053409 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.135806717 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.13511269 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.131496927 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.133748042 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.136362878 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.181585965 seconds)
  done (took 152.810156169 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.184348403 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.553390239 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.221946107 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.282250095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.232035508 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.198513643 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.687531194 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.325982939 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.260021428 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.203717695 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.191993373 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.415031108 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.426073161 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.773460233 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.320978547 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.283945238 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.869254057 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.340989071 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.197967107 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.19417811 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.35170487 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.540872108 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.554628467 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.505339823 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.346059008 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.473175364 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.269838162 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.191189588 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.319319239 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.667951865 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.206460661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.542316105 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.337268202 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.196485596 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.685058705 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.57038953 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.759860284 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.734579639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.38114532 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.152011399 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.156066567 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419191791 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.495913559 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.245445255 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.190399094 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.819553183 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.211282963 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.594374443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.223546274 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.150750106 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.276464879 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.298841181 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.431576434 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.17361392 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.370014295 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.375506679 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.685434098 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.174411115 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.267622645 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.491747561 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.167097916 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.672628034 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.139289546 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.257438656 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.200228585 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.344633057 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.285719106 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.70357628 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.803150543 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.237600995 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.532697068 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.401685469 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.167081991 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.457163095 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363713693 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.675619351 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.773982561 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.331497122 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.292315438 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.27617007 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.462094171 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.179089643 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.727125196 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.293664741 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.167674532 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.672990887 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.582697642 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.169331166 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.184931158 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.301023638 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.348326298 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.394227389 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.477596393 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.262897927 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.080827051 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.470449135 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.461141689 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.212173088 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.316633092 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.180959071 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.639135941 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.369690008 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.173090022 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.492891926 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.628986201 seconds)
  done (took 159.471583963 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.880460939 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.240944417 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.38163989 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.7533144 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.51222857 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.688871817 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.460725127 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.268355495 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.472686142 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.398333643 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.403319601 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.278599675 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.147621005 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946043474 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.24121766 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.363446521 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.257924416 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.808594553 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.488069551 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.196105577 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.442538563 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.931425938 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.496462587 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.581182904 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.627682249 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.67965829 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.832221536 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.305602288 seconds)
  done (took 49.223263803 seconds)
done (took 708.26656448 seconds)
SAVING RESULT...
DONE!
