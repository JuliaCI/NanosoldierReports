cset: moving following pidspec: 364252
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.775675482 seconds)
loading group "shootout"... done (took 0.816597527 seconds)
loading group "string"... done (took 0.230837177 seconds)
loading group "linalg"... done (took 3.20227842 seconds)
loading group "parallel"... done (took 0.021727217 seconds)
loading group "find"... done (took 1.197283904 seconds)
loading group "tuple"... done (took 0.711960797 seconds)
loading group "union"... done (took 3.071962193 seconds)
loading group "dates"... done (took 0.15472835 seconds)
loading group "micro"... done (took 0.056742247 seconds)
loading group "simd"... done (took 0.364451712 seconds)
loading group "io"... done (took 1.420265971 seconds)
loading group "random"... done (took 2.369850405 seconds)
loading group "problem"... done (took 1.192872355 seconds)
loading group "array"... done (took 4.637306801 seconds)
loading group "misc"... done (took 0.979970238 seconds)
loading group "scalar"... done (took 3.466477046 seconds)
loading group "sort"... done (took 0.307327256 seconds)
loading group "sparse"... done (took 3.555537957 seconds)
loading group "collection"... done (took 6.094877518 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546541349 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.074925677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.25584052 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.077850282 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.284938501 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084003017 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.09061702 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.071217146 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010394419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165390821 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.217524818 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.390954788 seconds)
done (took 5.013826517 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.264727848 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033727077 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128476168 seconds)
  done (took 0.77608296 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.141771051 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015719044 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022809734 seconds)
  done (took 0.788779727 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020514736 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.096941445 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021648525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.02223921 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022210868 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021610465 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021382146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021417649 seconds)
  done (took 0.834090977 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029515589 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023008953 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021060559 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022461174 seconds)
  done (took 0.702665123 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.02290629 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.084874982 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020393837 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020230314 seconds)
  done (took 0.751305836 seconds)
done (took 4.759225618 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.200167593 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.786174574 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.985037113 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.183529336 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.36066863 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.306177376 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.077049542 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.247676047 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150748426 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031644305 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.184729647 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040086705 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.521677755 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.456646552 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.028677799 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.14461571 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.577166372 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039633687 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070328863 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.22350444 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.040300027 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039412665 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.044278626 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027163059 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.172468423 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.137707583 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.588750572 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.066263918 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.026279358 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.050319519 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.114270476 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.030531771 seconds)
  done (took 9.599022918 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.153431283 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.148309681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023732733 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059415195 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050559629 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024954577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030267645 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023039339 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042758723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088396375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0459971 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163448963 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021387348 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.02484113 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.141159903 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.116864198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.03839667 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.03758287 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022739954 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036576257 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049552634 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035332597 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033348597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.033031144 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.069958115 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.090808121 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041690996 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.064171196 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022956234 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.03502527 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.051626359 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.064150644 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023131678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.022031457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.066402128 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.040322463 seconds)
  done (took 2.674425642 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.707563505 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051266266 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.1420096 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.13263344 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064054522 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050678025 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.184201522 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077993408 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.055204517 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024027502 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.211552732 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.661194359 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.173582261 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.067474609 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028426234 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.185101949 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.909486774 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.943146417 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.02382097 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024069818 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.138685405 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026461434 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.179107276 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.023037621 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.135934236 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.823990446 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026024124 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024437148 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0531038 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.145942645 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021082287 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.096487815 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.050099871 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025199172 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.555170796 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021918588 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019971108 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042103712 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051200333 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022271729 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023222253 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.034205082 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021303254 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.074622267 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.036115694 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.517601646 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025214399 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.704219541 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.831456052 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030720964 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.02780448 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.057478911 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019973312 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023462315 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.602683706 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.111260424 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022752397 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.294379269 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.026083286 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024650522 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024599197 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056553907 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023553027 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024811348 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026794437 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.04151667 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.040443646 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032992431 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043486388 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021860779 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022906835 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021484929 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.408190684 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029655488 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025383163 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020964628 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027427056 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023140218 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022561013 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.068042712 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049937105 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.047349152 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026374015 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023357183 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022605548 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.663118335 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.932119515 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025328118 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024319942 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.494719976 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020626513 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022560261 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024081309 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.044197239 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022804202 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019830534 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.057936741 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024568993 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.130549683 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.538707929 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.025679663 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.02038669 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.452738431 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024444797 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.054217942 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076321435 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023289016 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.060387139 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022905072 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020153614 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.02617407 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019981667 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024203947 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021097413 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021916838 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021139556 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022880113 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023827813 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022779713 seconds)
  done (took 20.021514604 seconds)
done (took 34.609262227 seconds)
(4/20) benchmarking "parallel"...
done (took 0.767843352 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.215890651 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049050918 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.01953007 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.165860065 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.045285645 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.138970219 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.178055312 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.129296858 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045848775 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.045558133 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.045772671 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.186269733 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.196354338 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.047044872 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.122226014 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.19741142 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.047403976 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020051136 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.046211639 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.046944901 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.047201922 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020029816 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.046284022 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.047391675 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.123456961 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047639108 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019986127 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.124306217 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.048610974 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.125364463 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.048365658 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.047133707 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.048538973 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.125475312 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.049974569 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.12549223 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020274149 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.049623204 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.04963564 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.05085361 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.05087585 seconds)
  done (took 4.023158673 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046329998 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038435728 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040470298 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018233167 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028197117 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038367331 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018299583 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037887518 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041872192 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038337666 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038312182 seconds)
  done (took 1.139409136 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041030384 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039120727 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.04034726 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018283533 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029938107 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038846633 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018119469 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038493195 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041082569 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038855065 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039116387 seconds)
  done (took 1.078478194 seconds)
done (took 6.915516139 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.155499614 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.124435917 seconds)
  done (took 0.965810976 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.555565901 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.22234551 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.133454272 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.256860303 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.126874266 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.158960452 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.250842201 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.163868381 seconds)
  done (took 6.608851314 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075780379 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.144621506 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024405862 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022851385 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023087698 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023204447 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024618891 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023429533 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022669375 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.02519466 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024762389 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.02288026 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023670709 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024782281 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022999087 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023092414 seconds)
  done (took 1.388737839 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029014553 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025834067 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027011852 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017219797 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027596145 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026219211 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027382654 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028094546 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026953884 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026704339 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024658784 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027738575 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026322913 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025114921 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027706342 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017140799 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027637823 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026918918 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028991587 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027854283 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026980994 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024599704 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028573387 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025908796 seconds)
  done (took 1.342350557 seconds)
done (took 11.003681128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.141315755 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029544211 seconds)
  done (took 0.867734871 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.13039675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.129134015 seconds)
  done (took 0.967014948 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.028935086 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016170731 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032269928 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024213386 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016218449 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016109586 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.03132729 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016280313 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016089036 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016253122 seconds)
  done (took 0.923309075 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019519824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023128632 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021109414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019345515 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.02092527 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017161192 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019403228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017434998 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022839448 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016489931 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020175982 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038217168 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019661426 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038530063 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019523589 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020198052 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021576869 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019399525 seconds)
  done (took 1.105748548 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017982744 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017078132 seconds)
  done (took 0.745330299 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.02084078 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017121101 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018818932 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018597556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016680263 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016126995 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016640496 seconds)
  done (took 0.829164249 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390293458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.089612983 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320771505 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024618904 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038087329 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.233853907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019880575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.02418018 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024074392 seconds)
  done (took 1.873811567 seconds)
done (took 8.020914343 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.040621681 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.142764504 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.152152711 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.453301028 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034535946 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0227326 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.051814332 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.231972449 seconds)
done (took 1.849756737 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.481490241 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.267703378 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.190324128 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024043254 seconds)
  done (took 2.197425265 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313239662 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1439592 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.030869211 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022871096 seconds)
  done (took 1.239450132 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02210343 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027747428 seconds)
  done (took 0.772832014 seconds)
done (took 5.415966813 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030254831 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017031821 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023247554 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018464925 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018058953 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017590116 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017584493 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018292911 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016654004 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018581196 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018549176 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01859921 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018265294 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018245235 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017771338 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018554164 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016646081 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018246832 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018258917 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018269361 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016571337 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018576147 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017820091 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018274397 seconds)
  done (took 1.157574574 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.036385445 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.021118859 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021691731 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021537588 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.022139085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.021497866 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021520721 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020774217 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021505766 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020425657 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.022220362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.022223887 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020502212 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.022311188 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020609474 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.022409662 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021813267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021020208 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020620084 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.022354713 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021748412 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021090793 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.022264427 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.021726871 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.022220714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022163531 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.020568583 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.021095015 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.021684017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.022179676 seconds)
  done (took 1.38425245 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.02327717 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015340073 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015518917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025671919 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015143291 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015354614 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015812692 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014967897 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.01532979 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016151953 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015672894 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.01503044 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.01585837 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015017976 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015115938 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.01563965 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020341895 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0361732 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015428867 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015161616 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019937739 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015392884 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.01518949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015210807 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015679376 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.01526609 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.01503352 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015544595 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015270429 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015777129 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015186922 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019829501 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021477785 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015687455 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025598303 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020350882 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015673414 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019740267 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016081546 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015126215 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015043071 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015082009 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015223595 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015199337 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025697394 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015401061 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016311249 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015702936 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015379931 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015152459 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015182205 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016666435 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020967107 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016477727 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015206793 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016490183 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015212966 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015969397 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015369472 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015242394 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015161723 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019393031 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016700229 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015994113 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.036974956 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016686522 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025945082 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015379129 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015789069 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019538136 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015888693 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035148072 seconds)
  done (took 1.999577747 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027967867 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025738829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034326576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.02509347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018607707 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016027036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019011891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01613312 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025436609 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019691416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01616168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01926601 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025479786 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019686872 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017213811 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025369417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019692467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.01892101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016190992 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019607069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017171176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019172411 seconds)
  done (took 1.189585363 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103950505 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021498304 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.06519312 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024565452 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023574129 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024848583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021492202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021463436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02160169 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022242038 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022187491 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021617811 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023655659 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022213966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022150916 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.022056212 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021737756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.022110896 seconds)
  done (took 1.25207353 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.034253983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021412845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048636537 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021014482 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021173214 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.02071757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024381177 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024497825 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021039498 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.022565154 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025512807 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021207171 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021135165 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021517935 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021015236 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021433876 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020907079 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021404693 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024843597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024895591 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024845908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.02480022 seconds)
  done (took 1.258385941 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035152161 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020500753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.037002058 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021902572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015563653 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015563626 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.021927922 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.020604603 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.02169635 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020060608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020646267 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015640572 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022774086 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020874316 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.022974626 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020819436 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020363913 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0208741 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02029667 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015723017 seconds)
  done (took 1.155950652 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13381561 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017710553 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017514812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021853147 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017375992 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017452778 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021896552 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017581975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017573688 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042039518 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017556903 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017577147 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022116809 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020389054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017604139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02211373 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022033583 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022051771 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017571346 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017634483 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.042193717 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017648668 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022501476 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017800525 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017772548 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017757468 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017796664 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02079581 seconds)
  done (took 1.420220125 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03970573 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0151505 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015291216 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.01911761 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019064802 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024947538 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019046657 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018831917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014779635 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015276607 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017247734 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014979908 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014946199 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024464585 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.014916984 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017225809 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024461755 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019160413 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025262539 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02512172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017208316 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024360324 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017204331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015255214 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025147086 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017229901 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019079655 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0199391 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017216342 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.01532367 seconds)
  done (took 1.3160052 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.02995986 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026652977 seconds)
  done (took 0.784007979 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018830498 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.03352541 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015079491 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028538741 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.023920222 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019330098 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.02442867 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023819071 seconds)
  done (took 0.912989241 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.129323629 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.152108606 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017082572 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017251345 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.125941535 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08412908 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.137042298 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028783793 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.0311836 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.01996422 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017153314 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137565944 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016677916 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030473203 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018248814 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026534154 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024135175 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034778373 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029878679 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015807453 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02954892 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017553055 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016663635 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017609995 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017802586 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023650477 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032657235 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029433659 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025043621 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015151891 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035585015 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016045027 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016640138 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025132562 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.128687886 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016319249 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054071972 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016209728 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020569448 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015850923 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.02801361 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037020187 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030348771 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034016213 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017526541 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017938828 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015862176 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017678677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020034476 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025148254 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016202209 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023453951 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015764257 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017545117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026654325 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016204859 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020879312 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025290669 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029648843 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.02658625 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028473303 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031508743 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024824035 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024783285 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016815399 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036190467 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.01774031 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029340305 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031047415 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017271606 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029097391 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015993957 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015233316 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016189096 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.050191584 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017491824 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016957816 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016149936 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016308806 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017509594 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025641888 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020977931 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023448862 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019204231 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032031119 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.02527941 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016032104 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023664959 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034544984 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.02017238 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016234912 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033352066 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020147267 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015961831 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034164695 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026676806 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017686951 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016876088 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020022475 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029630426 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017509031 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015231398 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024502284 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017652596 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.130841124 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021780602 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02479302 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016422343 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026925305 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023242773 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018209601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015732952 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.022070581 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.018226424 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.01589424 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026276579 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016667212 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031802831 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023566936 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031318123 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.03166683 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027240155 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032812683 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016405957 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015575311 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035327217 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026035863 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017959747 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035131946 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016391118 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027200023 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016641597 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018073035 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025912035 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015874714 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018263593 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016765957 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023139122 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018133359 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018395633 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022599391 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025086395 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028956153 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017621314 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025434745 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017067049 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032946565 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026515855 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021697127 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.02038292 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017631942 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029150624 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023738293 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.026093808 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016596398 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017554406 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016723756 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027949545 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026469509 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018588582 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026819673 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021692906 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.01763386 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016780206 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017864674 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020683229 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.02040517 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017381012 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024489171 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025575217 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031483306 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024875282 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025953045 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016272396 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016669087 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018754474 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016675748 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021586493 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026112441 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032545434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028833583 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038535051 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016962815 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026524002 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018674423 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.03433837 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030377296 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017901468 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022109906 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015962654 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018816651 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026355869 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028380204 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031519076 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032093906 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021836623 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021619886 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016708965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032257312 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017281528 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025235413 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026095939 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023647387 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016705918 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018726285 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.026024589 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021685752 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017901279 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032826848 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.025149466 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016750404 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031346955 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017160767 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.02779276 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016766497 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020637923 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022384524 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.019087684 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.02656554 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032564819 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.016023829 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017232119 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032950502 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018902178 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018758064 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024891007 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032395447 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021796384 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.171610594 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026604333 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026889072 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.020938009 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026468889 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016736917 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025073786 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018601943 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027490993 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015849978 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03379172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015091526 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.03095904 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016426841 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026724116 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016132616 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025034976 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016434144 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032684227 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.017089815 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016445515 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.027192318 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015020448 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.024770732 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015549974 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021212856 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022683184 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024855017 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.017263586 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024952573 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017066425 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024569762 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020782878 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024220701 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024746763 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020603601 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015427428 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023840669 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026160234 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.02363594 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016927057 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016871123 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.015996014 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024695191 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016971531 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016450272 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023556888 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020619479 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021723667 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016912809 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016988621 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016901838 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023791116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024760621 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033253121 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023945398 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022862571 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024620805 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015501223 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030845804 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015452633 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022888777 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014892266 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021716872 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024477632 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015744625 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034240667 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016913836 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023274474 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027260477 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02401058 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019726163 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.03328446 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018427256 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023809997 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023319195 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020555335 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022612656 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017114807 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023905564 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024925687 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025895101 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016292466 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022968346 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024389461 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017017415 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023562075 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017105385 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023989956 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017397927 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015345576 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020929151 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.027061927 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.021105246 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021308583 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.01613692 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015122439 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016109804 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023129813 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02152363 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.025430321 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031758873 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.015436667 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016810079 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015909834 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020093728 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034152786 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025514248 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.02385518 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.021100444 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015462378 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.01740488 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017636209 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.01616621 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.019190489 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.01553334 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.01594508 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026637096 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017686304 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020868592 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016288902 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017096215 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.02592091 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.020466229 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016496545 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023181241 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015947146 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021658057 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015562607 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017663983 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021083732 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.01585189 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020169846 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026418372 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.032694145 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023208395 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024898257 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017023746 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023990589 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031647472 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024596657 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017087582 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025450194 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.01572785 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.035037898 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025470223 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024782729 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026357455 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.01757974 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033796624 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021444744 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026676956 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032213397 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.01758299 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.025399919 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.01648834 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03252894 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021426559 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.016420629 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025246895 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024389395 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022968204 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.02854453 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017537067 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.025288095 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021972838 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020791874 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.018369586 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018365491 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025332145 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.033152804 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.01761147 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022638991 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024665872 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024965382 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021554472 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029018385 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024710223 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017548115 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018349914 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0204746 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017383231 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028879421 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016953502 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021431965 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021576526 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016698365 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023886067 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033658021 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.026124821 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026356822 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016685335 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.01605782 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035279014 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020701184 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.02038213 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024864497 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026586841 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029233959 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026204696 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034177183 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.017176937 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.02300597 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029138683 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017704114 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.01653662 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020617996 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018448816 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025843897 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.02658127 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.024073212 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018716192 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023937789 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.03044036 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018260757 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021904313 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023493923 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.0176788 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027423618 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024728799 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025288735 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018351895 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016603375 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020490831 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.02548338 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024127806 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025686117 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017871356 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025962086 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031280355 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024163913 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020420023 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.01666053 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020390313 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025900808 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023738524 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016637273 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021819877 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020614556 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026337905 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026244766 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021621063 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.01667985 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034454614 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025607211 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025997826 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018654187 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018759573 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017147377 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016741426 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028245274 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016774426 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018667836 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.022070981 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018828265 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035363319 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.025001504 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.033316359 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017891393 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021635245 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016711251 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026570599 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021794783 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016827314 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027446291 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.016211201 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03262545 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.029105676 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.02506662 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016853556 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022255457 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.174135241 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031167696 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025357909 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024617758 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.01863048 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025138698 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017141616 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026489562 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015679624 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.014927919 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025526015 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024172933 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027570253 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015563149 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025533384 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017184221 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.023835254 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.024056674 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017014065 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017010213 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.016916851 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024841171 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020626811 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.024760893 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020729503 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032304798 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.016344787 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026416584 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024560541 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.026286413 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029406487 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027405254 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023937302 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.015990218 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023015859 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023862823 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.01646772 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.020947235 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.018355195 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036922277 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.016960687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016928592 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030560165 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.022804462 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015750052 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.022033527 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.020661632 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.025339703 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.016315933 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.025700955 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.020089631 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.016248791 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020568626 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020599716 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015005954 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.015423485 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.015744809 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.024903661 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.020627627 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.015626491 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034092344 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.016713197 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024021178 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026116213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022495262 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.016784752 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.014822922 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016323988 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.028763969 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030780343 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.019876139 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023961293 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017029489 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024521863 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.01488462 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024116646 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023444271 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023942782 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015518808 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015815114 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030369793 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030771401 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020585564 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032317225 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024349229 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016920736 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036966594 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024458273 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016690015 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026481694 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017930757 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015471793 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015223516 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017425408 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027197952 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015801315 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017934515 seconds)
  done (took 15.303891274 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061008895 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016879279 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015406771 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015416589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022272786 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016672213 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015427817 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016592802 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016578098 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017657842 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015597134 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015592544 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.02091059 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030591219 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023195776 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019222092 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015619999 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016830869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015619111 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016758186 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021534342 seconds)
  done (took 1.206770558 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020038347 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019903227 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019204355 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019421655 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018624864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015623352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018893663 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015615257 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019222255 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015997548 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019603023 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015828639 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016151808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016149835 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016136693 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017189079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019648318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018900255 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015850022 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019236988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017211573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019273858 seconds)
  done (took 1.157131972 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018456516 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016322957 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024184147 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.01518419 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015106912 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017766552 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015079219 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019931872 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019897222 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019838495 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024003794 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015882297 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015046438 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021113723 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015010447 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015754595 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.059988697 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016090837 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016135966 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015298195 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017462753 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024317343 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.01538493 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015533467 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019953697 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018037067 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.01533085 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.01755852 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015890881 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020010915 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016093562 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015150659 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024044228 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.02333506 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020089913 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020070944 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016547919 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016262317 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0162036 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.01575692 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023728821 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016524361 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015645257 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016496222 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024265416 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015604381 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015257584 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024331189 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015334627 seconds)
  done (took 1.69022492 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028526028 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068114189 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.02160269 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050616036 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027115377 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020620071 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021366389 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.05331194 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016529538 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016959645 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028174394 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.028345082 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017965473 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019148964 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022564625 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017927562 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018552705 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0172929 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020230005 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.01762228 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020280622 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022842519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.02768098 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028287655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019090241 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017589912 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017804493 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019325428 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028068142 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0208749 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019487394 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020014946 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028265453 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.022137955 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017839697 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017977864 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028867678 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.01842834 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018158424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016688873 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017959346 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.01933221 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022897944 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028963952 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018365202 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023416952 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018219715 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016449269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028646378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018240103 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021780675 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029490769 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019375347 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018638539 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019661808 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028631148 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018404941 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017217699 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018528494 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028319628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016731642 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019126535 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.02909539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017918597 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021361396 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029243905 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.023548349 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019227636 seconds)
  done (took 2.460753497 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.025268585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.051780586 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.029221811 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.029160315 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.024826951 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.02486276 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.025137882 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.025147539 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.025036563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027792015 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025281483 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.169168588 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.022424476 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026954338 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025345494 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.025410042 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.025341667 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025327475 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025557891 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025530737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025586372 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.030138733 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.025594885 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.030171792 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029847857 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.022381924 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.025465567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.025626514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.030407311 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025576917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029913564 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025585235 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025580674 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.030323026 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030010524 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.025465621 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.01617383 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025491195 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.025622592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025498653 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.022361018 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.030443094 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025682819 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.02252268 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025883953 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.025672562 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030759874 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.03046326 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027762268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028813921 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.026159006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.032023173 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.026001594 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.026120439 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.031122436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.034161511 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030818364 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030977788 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026146032 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030985255 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.031113384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.034306806 seconds)
  done (took 2.627218154 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030529331 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021153534 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.034226719 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015303318 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015223882 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0241943 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015159477 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015165236 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021067657 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.02099034 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022416304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024500798 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026308544 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022588968 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.024608364 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026372019 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024497794 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024533675 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021102655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024489542 seconds)
  done (took 1.239090203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019178888 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020702042 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016078161 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.031747623 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015970904 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023403055 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016002412 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01596852 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015922519 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015929481 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020501874 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020522306 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016135176 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.024051207 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019552533 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023616471 seconds)
  done (took 1.085055785 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020505437 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024369947 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128920237 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016626558 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018400082 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015901554 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016758805 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015730953 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017994634 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029814729 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016781395 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018855356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016881264 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015569052 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016107407 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018835467 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.01800065 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016909022 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016861106 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130269488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025261014 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017441885 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018937997 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017537438 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018768537 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025291799 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.01836883 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018707081 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016943032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019175652 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018754183 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.028105896 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018742399 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017481213 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.01573097 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016583055 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.01708948 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019153076 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019126283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017082166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015921399 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018725874 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017051622 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017405224 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018283493 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019132786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018178003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027215616 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016882835 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018675942 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017004478 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018071815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017381641 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.02826852 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018969996 seconds)
  done (took 2.03090854 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034809859 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021010093 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015230159 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015120025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020507195 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.021200644 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020665993 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020782434 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021274582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015141982 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021231785 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020179319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021297957 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020930596 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021444353 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020920021 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015207877 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.021089901 seconds)
  done (took 1.151218529 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024458453 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020835359 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021021396 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017102569 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017115321 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020847655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015501117 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016603167 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016617869 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017188849 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017174176 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016769139 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016820938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016795141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020709093 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017161397 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016767697 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015731362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.01719588 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015608852 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021144038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015755254 seconds)
  done (took 1.16610841 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.192327358 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.151027634 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.039839745 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.035178914 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.027010451 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.05194076 seconds)
  done (took 1.269591388 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053154984 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.054101269 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020776231 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020646473 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024653191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023077052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023068376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023176195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026020671 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028883393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023485433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026661185 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026392517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028126407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02495955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024974188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023588047 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023482908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020932255 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030569406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023606489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026829242 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023907713 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023565461 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023747627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028481865 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026802306 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029488902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023621677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026916896 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025258833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023777976 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027014372 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029444898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021026315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026771233 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023888597 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032849136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025770447 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028774839 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021052055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025534763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027075145 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02689155 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027270008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024317498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027013565 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0241706 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024212428 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035356106 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025819892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028982699 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025755425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027533276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027158436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035326232 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029885053 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028995078 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025691796 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029962186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029269097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025939187 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029176178 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030375557 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025931261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029320268 seconds)
  done (took 2.568401955 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061187305 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021202644 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02329365 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02863357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02749491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023080291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023405492 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023461518 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023521678 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021215185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059942395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023624608 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027963378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027991652 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023543799 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023380541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023523325 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028000223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021288283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.033970275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023638982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028397519 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028424155 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028324747 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029779694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025473653 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023893586 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023844977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023732815 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023769113 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143320112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024675664 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028868871 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021448661 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028544967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023962247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023775134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026619106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023775216 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025384862 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028482081 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031336265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023890001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023968938 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029935328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024072209 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024055798 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021577479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024063763 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021565023 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029889096 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029889626 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02988236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02899041 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024275909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024158662 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024177718 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024072581 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02415472 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025722075 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02883722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024041884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035557024 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024335125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024410333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029304458 seconds)
  done (took 2.673149778 seconds)
done (took 52.177909174 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214101838 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169991032 seconds)
  done (took 1.149383721 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.140446154 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.137892143 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.166774202 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023817924 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081538602 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174043571 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125617005 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026397568 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024115129 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025499069 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023665859 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025162453 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025326971 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023585796 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.08599037 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026369248 seconds)
  done (took 1.919644503 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.07346012 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.276329892 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058224784 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022843501 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103291586 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028975469 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024356184 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028258378 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028734007 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023490018 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070381039 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.035760165 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.0274399 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028313105 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024325953 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.02732184 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028198922 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.02868957 seconds)
  done (took 1.719624454 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.066119374 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033221685 seconds)
  done (took 0.87973341 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.137927614 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063930616 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.105420255 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.307967248 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.095192796 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294414678 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.103621592 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.097633084 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.067609778 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095095566 seconds)
  done (took 2.146116774 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.062080267 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056717062 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.284917396 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054541393 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.03445594 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029698736 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030116687 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030303038 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030387626 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029329406 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07497675 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027936006 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024358217 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.071906066 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.050628643 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.058723933 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.024100982 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029625395 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032739639 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023550367 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028207765 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030330231 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134907606 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.029796848 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.051077972 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027927126 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029460893 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029512476 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.02943197 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030627166 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031168796 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054037355 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029605444 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.03750484 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028872129 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.05009248 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024517663 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.049835573 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027293162 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024404227 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027815893 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031313625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025067893 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030606163 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030766005 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030877699 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030986336 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023799819 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.031094559 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.02783562 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.025557893 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029747701 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.029021256 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.02987635 seconds)
  done (took 3.037254049 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.077376533 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066416781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024118882 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073607597 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065445069 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024257788 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079076331 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06008695 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078169786 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023754158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023426342 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023374347 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031115712 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035282223 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076388919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069162781 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025587632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024081568 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068418165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.068704146 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022960026 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080845009 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070541955 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067648226 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022657291 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024224337 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022885395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023577075 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031614565 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031137007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023330321 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034137734 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035186504 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030854618 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022646283 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022982774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022864734 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031677035 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033125695 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032909845 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030138141 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022700312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022955192 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023615341 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024074392 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02244752 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.03306005 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031022329 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032952451 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023545728 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023520806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022857918 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023880582 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030688968 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.02956909 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031015841 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034044078 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023374878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023365996 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024787858 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035116971 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031770792 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031689648 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024384912 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032837687 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023265103 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033807585 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036858418 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023173426 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023750851 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023489779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023410593 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023803813 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030138247 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030127742 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023846626 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023760947 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023070336 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031639019 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030267202 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023161843 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.03234624 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022804949 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023399228 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023821037 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024085029 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.033470303 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031773594 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024059007 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023458051 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023528041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023592928 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022859262 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033069329 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032657585 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032703395 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034808793 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024375839 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035560389 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033053825 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02452944 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031984708 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024017227 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024400711 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024354377 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032047654 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031620791 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033217178 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02396416 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023569889 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.033122181 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035673546 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023751567 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031464005 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033614223 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.03200612 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023259789 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.03490527 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023851629 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034845514 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024149879 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034804942 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024359767 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032819638 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.02530246 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023662795 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024255616 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036328377 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024994064 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024130238 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024561249 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024055385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032683206 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036976066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024767239 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033032144 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032964097 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024701708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035024679 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024356014 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.035184517 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024305793 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024532254 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023269002 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037327782 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023947455 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024392213 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024109433 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.03454701 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024006039 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034569233 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031941477 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023585413 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036052356 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034498993 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031933671 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035039493 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024934965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02433257 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023928365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024267754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035191214 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.03693572 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025180824 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024337996 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031677176 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.035511773 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023667753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.032003666 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031835826 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032383706 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024398959 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.166960051 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.03304673 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034081535 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029514149 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031883258 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030404232 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023047585 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.029041248 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031776733 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022995945 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03580639 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022934266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032728362 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032068295 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.02848061 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031687025 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.032993767 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.030903926 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031246268 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033373217 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022551392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022819279 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029365541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022826371 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023149725 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028998407 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023409148 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023631903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035864769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023085941 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.03199457 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022501717 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029944966 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022419887 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023373842 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034330161 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022841493 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023389709 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029899665 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023134546 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028916222 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031665692 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028893543 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022781804 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023311543 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032547389 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031692931 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022663778 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022660523 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023312686 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031368731 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.030815217 seconds)
  done (took 7.831982692 seconds)
done (took 19.470998429 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.143823905 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072159355 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.143047628 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.083712855 seconds)
  done (took 1.218380452 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.057388624 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019519202 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.143896755 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.155122771 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019820878 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.138068643 seconds)
  done (took 1.332277502 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.257125269 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.152606157 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.160842946 seconds)
  done (took 1.368777947 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.151941238 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.279202444 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.548637266 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.14559059 seconds)
  done (took 1.931519601 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.172148049 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166706856 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031548553 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184334749 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038776729 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016415642 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.108423853 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017276761 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052648526 seconds)
  done (took 1.649811272 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.099117463 seconds)
done (took 8.398175302 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.184958547 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.142095434 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033373408 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.027934178 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.133335972 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.139184025 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.142853899 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.029638289 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.13363541 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.295686714 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.163987142 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.047760065 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.157915245 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043315173 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.264907011 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031376248 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029131129 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.025433966 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.141564453 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.132338171 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.245138472 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028582826 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.096216297 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030120946 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.099945378 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.080258929 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.170299515 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.296939532 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.276793484 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030454002 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.128019037 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042381769 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.114813122 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.132585495 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.137483675 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048208394 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020211941 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.24513489 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.10911806 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.312673554 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.151471739 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027347495 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.140463591 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025180128 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019665222 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.146471565 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032521528 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026459437 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042433522 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.026973794 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042324454 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.027488499 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.141922227 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024047564 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.092591004 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.143874311 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.165247365 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.096609292 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026186617 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039682289 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029648997 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.157723448 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038784959 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026102432 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.03221958 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020246598 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.141181969 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039886602 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020620585 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030435284 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028556561 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.112146112 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.159062046 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.066519018 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032129739 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.118559866 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.094267013 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046810599 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049530977 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029910997 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019870402 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.17280724 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025574152 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.03861935 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027171895 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052636668 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020320982 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035748056 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.156333279 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.149212054 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087978327 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.02132809 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.235812349 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022365313 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.199284871 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021303992 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020127399 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.166260349 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019865877 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020092524 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029359233 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.028168067 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021575341 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.149293381 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.09915233 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.027335365 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.026816276 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020034662 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.025911544 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.020961524 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020102754 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020042588 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094310971 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.038207131 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019420794 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.107437975 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.126747035 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031294974 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036043431 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.084310936 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023064769 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.029041208 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.026885106 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.124248374 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.02775456 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.134499309 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021129019 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.04211778 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119128206 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.093100026 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.106749053 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019766948 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.155329388 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.02984935 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019456577 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026916572 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047532562 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029348339 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.037991001 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027887403 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.155536611 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0307534 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025510082 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.11890917 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.0192094 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.11620112 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.093255161 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.129219972 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.025587798 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.03152325 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.093082589 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.043379774 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.048162133 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.04232291 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024027666 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019997233 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019700855 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.034229231 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019084068 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019906602 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033225045 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026591163 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.01944709 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.244330749 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029899973 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024324548 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.261061401 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032177591 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.09724537 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040255886 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020428907 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.100971913 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021818052 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040438061 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085073485 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020476567 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.093751637 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020581808 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020265852 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.027458979 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021751497 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029020881 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033483928 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020750456 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033201672 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027849863 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020138483 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.100386079 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021972435 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.170928408 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.098538717 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.112347988 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.02030646 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.03866104 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020047121 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.135553402 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020293039 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070060173 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.110118467 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034751726 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040212733 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021210228 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.092944347 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034277525 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.019783289 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.098512097 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.130763589 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.096312351 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027650566 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.249451665 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029017908 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020529943 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.027255891 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028212278 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020685819 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.09519973 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024904845 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019645792 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019928167 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021747806 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019300611 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.044295861 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019593953 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027585082 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.020069069 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023007875 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022163135 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019691882 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.027866738 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.095700253 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.131026672 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026529535 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040127741 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033664093 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031760133 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.067527193 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027499204 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.144812884 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019794497 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029523599 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.042326773 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020065831 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025151043 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.020217444 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038170973 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.024814999 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.022673244 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029092234 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020853473 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020746859 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.02051471 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020737512 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028609408 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022057399 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020054629 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019998097 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.020268274 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025175218 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025817762 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.03134633 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.040715975 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.482562834 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022474436 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.02273238 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.020507073 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.020366005 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020871833 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022055531 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020440224 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022404051 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020752683 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.020132678 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.049743814 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025482441 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.02120861 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.041447572 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.02040217 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029891923 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.129869683 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037382913 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025505604 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019958566 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.270639113 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.107633411 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.207432195 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.040209528 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020517143 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030270903 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020302568 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020692254 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019421986 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.047273296 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024547678 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020332796 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019391209 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019625862 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067044691 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.027922088 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019691833 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.027806434 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019752674 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020000079 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.04726413 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020832364 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019764141 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037132517 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031483974 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.102392911 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.031236196 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022827013 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.071228889 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019197233 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019728999 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020038706 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.116725626 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032830377 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.020905512 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019720206 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.026932706 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.028207628 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073338446 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.025968628 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022262314 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.02746469 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019053867 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.019985959 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.044086508 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.046846539 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020776048 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023296534 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019522047 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.019851691 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.095287191 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027263171 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.024356722 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.104690942 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.021569992 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.02714003 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019013276 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.483173458 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.024202068 seconds)
  done (took 22.206872297 seconds)
done (took 23.02130482 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.172248581 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.034137046 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.032878153 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028200772 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031809774 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032120525 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.033237022 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.028890647 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.031921428 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.031299602 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14408396 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019748893 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027161895 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034677075 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028055856 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.035731692 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032148608 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.035289049 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020257842 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.035265594 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030769926 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.032869484 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028453586 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.035082722 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020208155 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028076426 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.158836156 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.04012442 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.023801818 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029375927 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027647152 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.033449185 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.02764771 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027080788 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029147592 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025218681 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029879273 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026260534 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159347425 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025490748 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020306068 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.032771526 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027132477 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027530424 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028403347 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.03112868 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025224 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033617491 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.019887954 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.032676211 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159334077 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.02440997 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023870484 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028373951 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025377807 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029174222 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.023628677 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031607802 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025158416 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.032020571 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028405688 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027661294 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019709222 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028374417 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027271051 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027542405 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.01902016 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024352417 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019745067 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019735901 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019304818 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028237965 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026700576 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024766245 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019365822 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019678458 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019477095 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.032152013 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027012354 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028524546 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020168316 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025304683 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024823372 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020303981 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024534235 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.03132355 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.019465309 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020279806 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019456376 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.031333358 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026347125 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.01975981 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031072537 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024332829 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.02413953 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019803186 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019563533 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024257811 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027765207 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019898025 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019040316 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024327882 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024968436 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028449254 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.02012237 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024258857 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024056478 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019094257 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028366682 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027182965 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028744161 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.032791196 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028413705 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031071898 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020274044 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019010051 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029533202 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020113856 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024429241 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027802527 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025204215 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.02754081 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020264584 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.019374792 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024264416 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025750862 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0201617 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020286474 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020186352 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028724623 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027248554 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019177334 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019817503 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028650406 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028580011 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019602936 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019416663 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028562597 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020387905 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025807952 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025252314 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028583209 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.019865748 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0201352 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019400145 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.019857281 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.019493865 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025286232 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024466527 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020425117 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028577464 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027212317 seconds)
done (took 5.529206248 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.033874582 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064350559 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.180168187 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14287197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033249359 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.020986781 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025074583 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040672325 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.023772731 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045800335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.046285035 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.04252664 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.166286584 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.019273562 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020096365 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.021121544 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.018709108 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.032319927 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149199955 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.044668108 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.063786497 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.020132115 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036998664 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.040604366 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033205327 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039188079 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021411934 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021214868 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.023021136 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037837269 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046856621 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.019997538 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021198745 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040278036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036795296 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.029447609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020887602 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027340645 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.020970792 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020099454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.022030751 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039040169 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027163992 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027412996 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021651029 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.020920758 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020965498 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028490754 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034770798 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.0269659 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033025402 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.037537064 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022257344 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.02083944 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019240299 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028143092 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.020671193 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020921078 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.02099459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020178829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020997123 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023160956 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.026187059 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.031163659 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.02433712 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028046092 seconds)
  done (took 3.333438105 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.040501301 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.048397763 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034599327 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034908584 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019746074 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020300855 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020277533 seconds)
  done (took 1.126478554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067418898 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140623126 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.147737179 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148222306 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.159405272 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.146627066 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033311305 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050330982 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.01988869 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.160370698 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.157160342 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152252754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024608496 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033139784 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053272834 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.154926341 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033600951 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028158427 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146756424 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152673506 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025794517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051883108 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.032745619 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.02149303 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.150030313 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143341569 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024555154 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021598216 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023852099 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021057673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021073226 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043919879 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142890366 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036204088 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022164559 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020127161 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140935369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022362155 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.143357156 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028479999 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143424354 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023640271 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023752237 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02124078 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022448953 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.146590323 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022434646 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021161639 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020732439 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145543337 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.020356024 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.145961773 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.024172833 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0264613 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028262615 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027665201 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028321447 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021649708 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147585725 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031658372 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023083703 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155711462 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.154544411 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.144063678 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.155107085 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.03023022 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145210953 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.143672687 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021231966 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029099582 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021769476 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.156957933 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025197001 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023734449 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.026920828 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028636949 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.162636605 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.162832803 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.163713936 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035940346 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023920813 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021808369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.16074356 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.164042045 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027328649 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021706491 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.022626623 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037419482 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046534687 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023810523 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026307428 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021639017 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032139661 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023948144 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.024124126 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.157175959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021936597 seconds)
  done (took 7.799442468 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.026847529 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021742859 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021134662 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.02158836 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021667524 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021465743 seconds)
  done (took 1.139034079 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049085061 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.02215247 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034618868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021784865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044275035 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.144910078 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144859553 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022953367 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038276854 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034012617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.145201163 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.149032848 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148046102 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023153344 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14616759 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033789391 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146981735 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026844058 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033163126 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023210448 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.035513416 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022768017 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023000838 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.155569739 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.024054349 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033447547 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030768597 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033269733 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032737203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022717902 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022638312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0237044 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028491894 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022684627 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.148325663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028919011 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022215193 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.026033836 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.023914271 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.023712007 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.15177834 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023445292 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.02682915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.026083277 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022841855 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028542076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.026058081 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.025663078 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.149090602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.02633384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.0264493 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022867794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.024004375 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.02605041 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028723625 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022884297 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.025945 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.149566568 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023202679 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028985567 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022408941 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.024037828 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022990845 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.023940804 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027242852 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.026014054 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028860233 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023333826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023306671 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022280287 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.026362443 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022361301 seconds)
  done (took 4.320555113 seconds)
done (took 18.635619474 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.504361972 seconds)
  done (took 1.423081895 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.029085065 seconds)
  done (took 1.974726045 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.053014087 seconds)
  done (took 0.995566444 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.303246816 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.537225448 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730495135 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.092932213 seconds)
  done (took 2.592387452 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.851765264 seconds)
  done (took 1.804607758 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213408346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.176272181 seconds)
  done (took 1.367546619 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.500399163 seconds)
  done (took 1.443489446 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.318419393 seconds)
  done (took 2.267033428 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.20316186 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.136401952 seconds)
  done (took 1.286812086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.607076817 seconds)
  done (took 1.555270654 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.619315566 seconds)
  done (took 5.564946286 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.189061494 seconds)
  done (took 1.199616947 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.195603844 seconds)
  done (took 1.143765703 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.709218023 seconds)
  done (took 1.655873009 seconds)
done (took 27.227428745 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043421343 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.03942929 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.039175301 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034561483 seconds)
  done (took 1.091667352 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030986449 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.02516714 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027361607 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027796612 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025147081 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.02681332 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027516953 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023862174 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024937414 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024220064 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022769944 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024119379 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026755882 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023892328 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026383123 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027702998 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024318794 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024916507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026229468 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023942643 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026752336 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024255592 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024266281 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025717352 seconds)
  done (took 1.564764959 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.03449295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025925568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.029206164 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024806566 seconds)
  done (took 1.072250895 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033436946 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031128837 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039513495 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.044134038 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030813405 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031355793 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.037699273 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.037992834 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.044530783 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.040468641 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021770156 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021494383 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020746372 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039622422 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.037316098 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016076723 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017515905 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031576531 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030625862 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033471483 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023836985 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019491661 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.030947338 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031410276 seconds)
  done (took 1.694962445 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037881921 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.01963621 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035776979 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044862851 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.04511799 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019493892 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.03342532 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045628542 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.082586532 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019399117 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.02543327 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019505726 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057828067 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.01950421 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034571407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.064895264 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.068459868 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023711352 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050324018 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019545607 seconds)
  done (took 1.723683118 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028759842 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.023867032 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025162785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019388509 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.031611129 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.027285944 seconds)
  done (took 1.113833365 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.02441319 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021440169 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021209275 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025569915 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021087215 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021014331 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021155924 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019896114 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019931174 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020672072 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020630698 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021076821 seconds)
  done (took 1.212548029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165629151 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026583764 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.024445966 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019871863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021609473 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020727283 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.035712398 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022730803 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.038745215 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020540664 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020897196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.02296904 seconds)
  done (took 1.393429528 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060848357 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065705129 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100076663 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0701425 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069929899 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050552078 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.200663477 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033037863 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120150457 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093012601 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072273134 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04619805 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040402274 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.02379435 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055634861 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073362272 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092455716 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027116967 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069268249 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.247333762 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089871649 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.093418563 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105223604 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07339626 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047929079 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105648707 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050852956 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05902331 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.079691695 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084033461 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07573958 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.054198276 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025438608 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025162495 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110185244 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.063928297 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077089203 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047961863 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060774177 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043912242 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.082853556 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024153326 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037244329 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.067664155 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041519069 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091247804 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.048613207 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072978339 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036883416 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100131768 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089002754 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.181804519 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043027855 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063365401 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103629421 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074123181 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100497371 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066005158 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040100168 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.225969659 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.060012723 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054704762 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061345051 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034464687 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132915978 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042870866 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.07186046 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068818204 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049663353 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.048867671 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061451719 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090682804 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080168757 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.080159524 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090615118 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046079301 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076693784 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.054083557 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.079025203 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057715884 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026643601 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078288076 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083788529 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05472073 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.05580604 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091262455 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048027102 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031078525 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.057529847 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.075897217 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034638368 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.070487865 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035956524 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.086679567 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096431459 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054393886 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067159581 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074610606 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032999107 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124748876 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063192077 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027469226 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072870549 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069819891 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112815963 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052910415 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029863765 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057416697 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062291751 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.116040579 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068325859 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.036661239 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070288331 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106158394 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052942112 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.266607711 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054119656 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1073316 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.225437703 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.04055025 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0294351 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.045108046 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067751992 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060807115 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068567041 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04846523 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037914457 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040000547 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070859543 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047059777 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034683618 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.068356672 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.057054243 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.02861081 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041896962 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.030638467 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100351241 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.032448258 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089577491 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07999046 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029459264 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060185791 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049688995 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059084112 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.051772742 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071626867 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09304 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.138069491 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04423071 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.048410665 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061805861 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102728932 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083850905 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046722173 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.031832783 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055853082 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066918261 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.055682274 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081577117 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049382669 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064374475 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06002052 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101539189 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10521236 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057760095 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057282163 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065593526 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.080634328 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029630478 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117646573 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060502458 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076269954 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.04241879 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102032552 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.06794053 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065265074 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.04237962 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057785545 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.063892632 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06509857 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109312499 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.052343105 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027261548 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052750655 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114502912 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034318141 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074320699 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.047452093 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.049995786 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.233369104 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.048591 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036279804 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022674482 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080782711 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112056681 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.02419727 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067520997 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.061537931 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055979662 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.075137678 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023329103 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071673442 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.090684064 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070677776 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096950603 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145959862 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071452144 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071658651 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.068575055 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.059963134 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033191214 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.080378806 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089477403 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050709065 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04680336 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092169733 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074407192 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.094772287 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.075555782 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080332797 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.063385079 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063387151 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061173045 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.0622325 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105172857 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.079071499 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.083018485 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038937626 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062941737 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074749491 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094848181 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035913686 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103226638 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.042722642 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106267412 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.034597813 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085045493 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.031298989 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.127783829 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034782571 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057638597 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024678371 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.029594652 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106110553 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.078194022 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06893425 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061457578 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.103562653 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100528582 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.033055881 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068285335 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.07526388 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060491832 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08009658 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.067033203 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.046808372 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055822565 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06682294 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.042307405 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.03946188 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081128687 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055435925 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090826199 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.039433662 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.03024611 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105489618 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06496293 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0556804 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032084143 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069170977 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.084228273 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.049472786 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042572994 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076471646 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064669035 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108270564 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.04695729 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.056423567 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087991971 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03796921 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.050662244 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.025206073 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.043093155 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.032214175 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095609444 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032225939 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081743226 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.024037227 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094338781 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047789546 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.051091428 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061091592 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072138546 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090606347 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.051507957 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106944957 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049181439 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.0827739 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068175935 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.076846588 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044730985 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061690743 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059473183 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08442997 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.053004307 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086599021 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111759761 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063666168 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.107615749 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050180952 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083659149 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066536692 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.087246036 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075563104 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.16113294 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106300638 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072696254 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069553296 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030913951 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054411281 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0657406 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073576675 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145460434 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09050381 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.02810118 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066320577 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.050481788 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070500703 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064199451 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039239311 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111244808 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0644243 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.043637791 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074428566 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.053143654 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063060563 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03272752 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060773721 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.061359092 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053342324 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055335309 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.075160762 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092083628 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074213548 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.108612809 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.059488656 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.048582479 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.080868734 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071758821 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070239505 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042690257 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043218011 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107687526 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081584754 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.086790055 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.056870122 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071053028 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072023816 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060254406 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08987052 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068838857 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.092573531 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036906161 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.03355812 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.023498598 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.027129736 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085808993 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068457252 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071937736 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064903218 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.027355722 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062374193 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063212649 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027657059 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043509576 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0546369 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056719441 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.051222705 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068328548 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.072637754 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.053122914 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063024092 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056342187 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115073797 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.058349551 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047722892 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110118121 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11753985 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04691669 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053053589 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.026518792 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034752294 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077782192 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111719665 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124495601 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.035754918 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.04260193 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.043941033 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045778047 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.026371567 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.04985582 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.046581475 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064906132 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056274461 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.074204458 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063941776 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031840646 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060960206 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059212422 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050283404 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.067417566 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083109066 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.090454284 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.10920641 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073175018 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06893611 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032444323 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.03857808 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032110011 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035401821 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.05956592 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.035021042 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032463902 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113105246 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.049002657 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065286589 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069230332 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045271223 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031937881 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099544854 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024806462 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100384857 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025909185 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039225519 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.037794194 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034924781 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054053456 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106238679 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07056904 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074412365 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066066326 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064795491 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15248392 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125525337 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04061258 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.105720329 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031999302 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033220284 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031981607 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071952976 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04924027 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074375433 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111355444 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046406032 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06182038 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035264123 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109929549 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.061251629 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063069887 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042832488 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.03518221 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.760432532 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035010376 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.036387628 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044670793 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.066086052 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.02724194 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057896347 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038339177 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03457199 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148130565 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.668381127 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052867186 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.031094781 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052296872 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.100905344 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094324475 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052141471 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064094454 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.077301898 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.057196259 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049845359 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065256352 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.164022063 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029592375 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05189248 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.061174233 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.054257309 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059221365 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.055803565 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.040626347 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.049463751 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.042097362 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035082981 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065537734 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042479953 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053889374 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.063378515 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.039326745 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.043881884 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09127618 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.060297253 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.039279599 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045129571 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.061618138 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042414336 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063421664 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024968312 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069117074 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045302195 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078021197 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.05417231 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065276605 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085345507 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05035333 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097296755 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.066272711 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081850515 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042463355 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.033766803 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084970033 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.046927557 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032984451 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10752706 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.054849052 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.061265069 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062064018 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.052927559 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071875972 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07617124 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070183504 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052943133 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033669101 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058479767 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.211422167 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040879255 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03386794 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.028879382 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.029887545 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061297072 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039965108 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.040666175 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068005783 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.043045929 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.057604975 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.054112643 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078393019 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043611347 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.05698034 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065874483 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047042778 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088712851 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056194367 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085418584 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.393326827 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081827857 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087175349 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092958143 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.033024685 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.030634046 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023642015 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070703255 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034577213 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.044316866 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033805435 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092775405 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.039189931 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067967963 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.218205455 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.03511049 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050570286 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053151974 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024872393 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038833906 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063900503 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041594568 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035418668 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074746193 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037256687 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.08737074 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068021567 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055239301 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.051572263 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03623979 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070689076 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.060852705 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.088057374 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.051242251 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.030564085 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082187079 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060084353 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102072647 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029447153 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036415378 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089306947 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06055437 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091594235 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036741606 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119658764 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102262976 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.05741254 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096203612 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026235916 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044717097 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045859508 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.080615516 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041116833 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068596212 seconds)
  done (took 42.652388894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.142638018 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.135879486 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078013411 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.088904052 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.246320682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.254273513 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.106637021 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078598843 seconds)
  done (took 2.33448083 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.028211114 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.038187753 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.03572348 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.292817767 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.058098264 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021446724 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.025992339 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036310016 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024816373 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020944167 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.059923112 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.021223229 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.025032905 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.458019443 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020451698 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.026322009 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.025067764 seconds)
  done (took 2.3646519 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.311479403 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.606921409 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.340722083 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.383192253 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.105338537 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565406521 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.02953937 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.036000724 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628345221 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.369407517 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099597601 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181267304 seconds)
  done (took 17.789891913 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031521903 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.158103697 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.156984909 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027917106 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027435395 seconds)
  done (took 1.530371378 seconds)
done (took 78.559803306 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040911102 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.124057685 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020942825 seconds)
  done (took 1.306292901 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.161844394 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.156122432 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.156298314 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.159272903 seconds)
  done (took 1.763443339 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030722223 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030134335 seconds)
  done (took 1.197007267 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.167862741 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.255548523 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044295998 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040155706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034527812 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035785743 seconds)
  done (took 1.250892536 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027286977 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024986157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024982229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025400765 seconds)
  done (took 1.232698829 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.139775399 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019948565 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022329177 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023948855 seconds)
  done (took 1.337134698 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.041050804 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039988435 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.070101588 seconds)
  done (took 1.293788274 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039897582 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038770658 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033504716 seconds)
  done (took 1.247673093 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064262625 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.049908574 seconds)
  done (took 1.245940299 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036444364 seconds)
  done (took 1.171201458 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048553995 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052281287 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.221705071 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.188436571 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226453956 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.210143281 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.033906418 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031086791 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026737985 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.025589661 seconds)
  done (took 2.200648514 seconds)
done (took 16.894238776 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036542219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.142204868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270659215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040802971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.610357434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.268243079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.677764451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043435931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053545341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021847458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038574363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.58640017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.682372857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100343323 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.667729102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.089196878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.517775605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022744834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021477142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022045407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.66075193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021931638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021920406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022290908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.51340674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.287645585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022756665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.08847113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022164981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025566715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269298774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022778799 seconds)
  done (took 12.016584361 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026342362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076607723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026652564 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037704846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023783419 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023802459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025582554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022343682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064920957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022033214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038979422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021389644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.02611961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022893258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042255894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021940772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024010494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022548309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021913249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022391889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040793503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021642763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022324026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022388746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022206627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036737967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023050223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021863154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021979698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025800405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.02697906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023280645 seconds)
  done (took 2.073428436 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079071159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077751071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027656087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061901104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073421628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.02480067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104751628 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.04358895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.06699236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022407297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039080514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021984094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.05854457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023384674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043088734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022121008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024632984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022730667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021973147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022579578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041504092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021839199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022262203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022587602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022647112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038434925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023005028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021996896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022220767 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025754328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027474607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023449261 seconds)
  done (took 2.340132315 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025947675 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.027387423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032567286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035400778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020534849 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023021412 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024234854 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020627638 seconds)
  done (took 1.355342816 seconds)
done (took 18.934103386 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.036042755 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022448798 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025363615 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.041208488 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028631072 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.147594238 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.019341279 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027335791 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025814553 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025011328 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027283354 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.020378485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024442361 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.019096405 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026206407 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020409718 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.150660394 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024966559 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.148994646 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.150354624 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023246817 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026308767 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029066339 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.149144091 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.149072184 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.149185894 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029953802 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026623532 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.020843642 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023577121 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.147184851 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.149647036 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023433362 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.145612689 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021148856 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020655304 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025241141 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022268615 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.153871486 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030204884 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023143668 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.0298577 seconds)
  done (took 3.561444316 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.153395101 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.15827264 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.150744289 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032807971 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.02912432 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032377518 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.157167998 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029676081 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028465925 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.156510545 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024157142 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.02823336 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.03052166 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021210295 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027890896 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024578393 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030097926 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022496664 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027915588 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028237492 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.157401306 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021702928 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029062483 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029401438 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024030942 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030098402 seconds)
  done (took 2.650813277 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030841972 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.04348916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045741374 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.099316281 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.06347106 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.036373623 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037003125 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047552795 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053654796 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021452529 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043695225 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050319735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.04987237 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028384616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060651162 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040421049 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034509831 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023243367 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027918733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056199766 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044932617 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040879988 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054325922 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041402982 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020736103 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030910843 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.028887037 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037999872 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.028887387 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033909424 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025351053 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025126771 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.023389483 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032860184 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025443359 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019953961 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.045161586 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034235727 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036505781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060806232 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031691423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022915237 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.04812734 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.085959271 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.021039194 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024400861 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025680529 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034140359 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022935507 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051414883 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036598433 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0210795 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040697776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022902889 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022920278 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036761886 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.02306664 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023463739 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.03329581 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027709045 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043137431 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027122991 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041595683 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.021102591 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032982609 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022921527 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022960197 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020067648 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055250257 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028970844 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.070410326 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022751243 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020014062 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034331972 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033291711 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028924787 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.02112959 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040338885 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034339084 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025291775 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.032399198 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024309494 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024856608 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.057273866 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020835242 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019904014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019810212 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024138088 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024728207 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022144153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034063553 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020854242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024844174 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.03564608 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.024914176 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022083057 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024145562 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022864926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020835011 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031153097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.02505749 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023090479 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034065698 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022374058 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024851336 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036750348 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030932342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020745914 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022762634 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024026798 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023154381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.025910739 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024792531 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023489012 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026714109 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028843995 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027195747 seconds)
  done (took 5.02889195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245397512 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.23403757 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022209535 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.230981105 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030354005 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.163016687 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.234328452 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.236936186 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022273606 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022975618 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021240012 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.176552296 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171870176 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183802659 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.163143965 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024212165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.048197477 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183092715 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.238453842 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.234277488 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.047290621 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029091183 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024100406 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023271299 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022565715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030462839 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038119977 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.03053564 seconds)
  done (took 4.306155098 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030378877 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066130009 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025570336 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046460126 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038987056 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022248745 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023728088 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022546103 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038601622 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027351338 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.021865448 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025892418 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025353785 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024131667 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022213318 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028396255 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028463502 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.029468175 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.02561656 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026594834 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033117104 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046368269 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025946436 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.02178994 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025300977 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021785338 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027233603 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030566633 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021685184 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021646093 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019180717 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.026385588 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036896898 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023078667 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.02156391 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022565326 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022238501 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022270919 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.02208167 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020413554 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020336846 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027032766 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020681869 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026925495 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035504843 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024152224 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023742245 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024655913 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024653548 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018998575 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025077838 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025312019 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024401571 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030292452 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.025637427 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024537524 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023412029 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036616818 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027914151 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021517656 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021263417 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020506958 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024016644 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028543845 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038346909 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024020186 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020435666 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022211485 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023608418 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035605509 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021524055 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.027549606 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.01918089 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022452928 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.025643158 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025295103 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023610799 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020613806 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021659409 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021459239 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022276357 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.02194436 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021419513 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024674095 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020247671 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020562566 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022644078 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023845971 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027607822 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020993947 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024762302 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023497946 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.02076862 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024514423 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.02742126 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024939968 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.042386926 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030113114 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.02279845 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020030262 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.037151324 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023911116 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.02136924 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024060429 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.026462333 seconds)
  done (took 3.922231634 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052485061 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024298688 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041740527 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.053796156 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032347273 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.02779193 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035787278 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023418111 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043545791 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021274817 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031589958 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020686424 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035145509 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030941605 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024070117 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032056469 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0248529 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042775879 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.036948676 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020949653 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030929189 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034572102 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034846084 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039734565 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039120798 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040556016 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034426948 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025009877 seconds)
  done (took 2.114295181 seconds)
done (took 22.726179039 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.221560339 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410775306 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179309446 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.891622326 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.256221486 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.248068244 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.301845699 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.159122222 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.663651481 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.259898725 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.821736747 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.830497713 seconds)
done (took 60.491144579 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.223169959 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33543166 seconds)
    (2/2) benchmarking "String"...
    done (took 1.43349321 seconds)
  done (took 3.952660677 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.608334492 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.170145196 seconds)
    (3/3) benchmarking "different"...
    done (took 1.206005378 seconds)
  done (took 5.143456611 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.48233712 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.595412304 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.427419028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.158851011 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.173568191 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.533108762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.27788615 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.818858541 seconds)
  done (took 27.153912836 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.163059714 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.426832341 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.499222342 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.595429018 seconds)
  done (took 17.928745827 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.615111885 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.631750079 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.633898025 seconds)
    (4/4) benchmarking "different"...
    done (took 1.857717008 seconds)
  done (took 8.025572209 seconds)
done (took 72.083087048 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.159921814 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.473900246 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.183048102 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.352594377 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.249476466 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.282735453 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.178927859 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.191634214 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.173815239 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.171296391 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169048156 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.169527077 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.167239386 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.208752735 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.17396304 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.213132046 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.461175538 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.172934119 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.189807037 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.068364335 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.506936389 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.171008889 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.178299915 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.242715898 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.651578223 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.219460741 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.635702824 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.175630716 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.774271407 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.176727029 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.174786856 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.167057493 seconds)
  done (took 184.643998667 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.158561934 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.044622548 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.060503367 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.191313289 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.564894671 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.523126236 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.017998103 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.572808597 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.169792161 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.190905614 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.170827349 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.163855514 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.213542603 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.728295892 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21039432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.166778666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.09730186 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.015032212 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.218141356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.088789935 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.162029713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.74128285 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.708262745 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.019941646 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.174001118 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.220926145 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.180018235 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.181053745 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.673145388 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.051025287 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.177914577 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.179959561 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.359447009 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.40621238 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.169534556 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.167337913 seconds)
  done (took 155.30910012 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.401419103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.166091809 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.201887169 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.276523187 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.131861042 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.979580153 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.168086637 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.156227455 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.164048036 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.163091883 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.15878216 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.226796681 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.171161805 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.275122773 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.197986175 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.158053653 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.160561344 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.26291368 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.177670993 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.156812544 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.16015344 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.262390095 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.508887322 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.268808111 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.16999474 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.16675514 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.266431332 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.17570053 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.16112908 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.157767165 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.265114316 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.167011568 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.286933654 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.27733948 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.17280474 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.215046461 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.174698799 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.383378523 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.169409892 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.163900758 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.158706534 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.207730265 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.167090153 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.246852137 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.274584175 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.17102374 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.176274131 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.734910945 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.749183244 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.169817019 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.157660863 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.160040734 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.160636772 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.15838875 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.235847989 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.174605014 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.191333456 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.78368592 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.175503226 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.156418135 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.164418297 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.157364707 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.156672528 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.163004227 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.19977838 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.745006234 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.425957211 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.522255321 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.905509377 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.171477093 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.15645341 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.156728933 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.907049612 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.236999163 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.16160397 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.156428967 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.3349215 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.172937569 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.156864263 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.082403284 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.084602648 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.168329977 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.273575134 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.168761509 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.158147814 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.433477341 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.281340692 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.178584987 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.176888536 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.212409602 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.163865031 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.157415477 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.162744477 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.084080934 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.169148831 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.170244186 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.474648162 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.168805128 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.156815895 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.492152663 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.529845432 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.167187992 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.241341807 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.567433102 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.061499137 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.168787934 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.157709878 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.17687725 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.160671094 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.168887088 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.169981339 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.158703041 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.159452395 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.162200794 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.157554106 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.156881238 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.157170693 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.182162012 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.158244077 seconds)
  done (took 332.863311458 seconds)
done (took 675.506050394 seconds)
(4/20) benchmarking "parallel"...
done (took 1.155384239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.411759515 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.191030268 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.277618046 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.418400135 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.36719086 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.345509666 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.372629964 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.456568607 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.396472342 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.340367142 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.395879686 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.337577111 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.462372067 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.425923753 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.461678521 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.423404247 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.364895735 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.856050899 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.37889801 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.341518889 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.375334324 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.338297661 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.320208132 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.398967377 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.464410451 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.33871885 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.569506379 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.403574193 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.372607645 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.418356024 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.434667054 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.448832721 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.381413449 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.456442025 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.421723454 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.474793281 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.355296863 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.436190459 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.358280985 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.379281804 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.393720019 seconds)
  done (took 65.732094626 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.547135655 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.355794125 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.466324379 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.466239357 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.914313635 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.464151177 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.555291295 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.372847543 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.362322928 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.468630442 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.487003381 seconds)
  done (took 18.647245425 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.400255861 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.359173256 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.474409432 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.489881307 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.571969221 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.466838593 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.525685017 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.345447951 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.362738842 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.514004539 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.50332548 seconds)
  done (took 18.200302718 seconds)
done (took 103.735103091 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.744352994 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.238735526 seconds)
  done (took 4.141200082 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.189573908 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.182131275 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.170121184 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.175945024 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.17210324 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.173442124 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.222122491 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.18145789 seconds)
  done (took 10.625842706 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.175872211 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.172230947 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.170020505 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.170072859 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.172772679 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.169948303 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.170398333 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.170775953 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.170419174 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.173019271 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.169709355 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.169154931 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.171036858 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.173523899 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.170263814 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.170491376 seconds)
  done (took 19.899909953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.173794727 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.170156809 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.170559983 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.169176643 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.170726742 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.172778519 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.169820602 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.179741543 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.169706051 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.17193975 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.169502151 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.169267197 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.16955753 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.173811289 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.170716875 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.168419472 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.173804925 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.176368257 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.170457824 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.169354949 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.168523876 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.170132401 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.177950124 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.171745938 seconds)
  done (took 29.27814132 seconds)
done (took 65.126087005 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.746743527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.224232626 seconds)
  done (took 7.128745333 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.173172295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.1692715 seconds)
  done (took 3.611258054 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.171172072 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.170894806 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.171015357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.170844306 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.171168589 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.169462676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.170429997 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.169483768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.176075754 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.171267991 seconds)
  done (took 12.872263455 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.169221134 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.173403487 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.170785574 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.169301604 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.169937907 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.176880402 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.17010709 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.16938134 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.1696638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.170812869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.176086425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.358834472 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.171402971 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.397653067 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.174962156 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.170641364 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.170352014 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.1712871 seconds)
  done (took 22.659177793 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.170916921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.169801914 seconds)
  done (took 3.504195554 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.178295531 seconds)
    (2/7) benchmarking "second"...
    done (took 1.170462056 seconds)
    (3/7) benchmarking "month"...
    done (took 1.169946901 seconds)
    (4/7) benchmarking "year"...
    done (took 1.172434268 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.176276461 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.171364918 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.170229691 seconds)
  done (took 9.367450198 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.617188194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.338654177 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.387146617 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.632211752 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.849362637 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.095419971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.848715081 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.100067547 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.981685664 seconds)
  done (took 17.009334571 seconds)
done (took 77.309059319 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.814521555 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.169819124 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.823737324 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.330585323 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.175956166 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.535299517 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.167436224 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.716582288 seconds)
done (took 37.923613851 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.259540298 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.158504699 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.203476125 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.203852597 seconds)
  done (took 19.735073557 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.157458597 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.739732843 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210714504 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.254790404 seconds)
  done (took 19.623841096 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.664733544 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593829753 seconds)
  done (took 4.441899344 seconds)
done (took 51.219229576 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169773704 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.171534665 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.169482782 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.175641552 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.169305311 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.169557094 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.171217722 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.174351092 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.170909837 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.170373933 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.170832005 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173355013 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169263366 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16997212 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.170134468 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169660489 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.172459472 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.169535944 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170041562 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169487031 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.173595311 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170589183 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.170005475 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.169457782 seconds)
  done (took 29.265932932 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242685114 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229929443 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246242498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.25342522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.267756934 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246626834 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.242082618 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214287343 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.25149237 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217112409 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202614955 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.265315397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208263034 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.266269342 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212069564 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.268842078 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.246647157 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210593101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209321318 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.268740012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.245134 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209507269 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.261963856 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204899203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.263110266 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204608245 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218636349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230249204 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215887139 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.260372357 seconds)
  done (took 38.246264072 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.204860791 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.17332357 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.170050817 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.261379749 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.171199873 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.175092156 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.170589288 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.170049606 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.170993857 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.174451653 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.172029225 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.170782634 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.17121026 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.173832266 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.171459111 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.170658521 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.206268698 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.347635468 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.175807833 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.172145014 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214827557 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.169961662 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174496222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.172158906 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.17084403 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.17047103 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.173104648 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.17141366 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.169937925 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.171340253 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.17496178 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223815522 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.204879459 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.170006738 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.297633657 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231474468 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.171153756 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.204506888 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.171102031 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.177844961 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.170772408 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.170275984 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.172127173 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.175732301 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231080051 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.170433602 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.171262761 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.177291744 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.17017447 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.170329451 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.169721713 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.176398792 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.186448478 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.169960309 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.169594888 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.171076074 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.176604985 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.170480999 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.1697945 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.170373266 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.17752282 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.242290704 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.171035644 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.170125757 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.54936232 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.172207249 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233087116 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.169844503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.173848639 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.399825954 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.171608639 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.37681413 seconds)
  done (took 87.237763611 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.170496036 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.1691586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.250489237 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256381935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16948071 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.170079947 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.170166263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173045291 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840737095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.171247591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170789381 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.17313029 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831231496 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.171878654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.170440936 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.259373509 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.170740082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169718405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.170806759 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.17630985 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170842934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.171008721 seconds)
  done (took 28.513313228 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212639956 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186789759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206778525 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.18612016 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.186911977 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.186286532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20909656 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.185985603 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209230374 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212014732 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206162173 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205960512 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.187957692 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216159305 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212109634 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24485938 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20624239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249016397 seconds)
  done (took 22.870450068 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.3475306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.336392773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.258274366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214991586 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.431669464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.405065415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279354822 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.345708412 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.214861075 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.341731419 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.346533451 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213500356 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.406274383 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2192838 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213200528 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.434247703 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.25116816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216368553 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282888608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276675228 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347523721 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288790266 seconds)
  done (took 29.834366783 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206314545 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217136013 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252277351 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243970891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.169773333 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.170480395 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237364424 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.206816355 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.185250668 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.211929183 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214668274 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.171165907 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.259579946 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221927792 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.264591284 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21205866 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22172448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223099436 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211191856 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.17282708 seconds)
  done (took 25.434403435 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.169985605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.170211409 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.173579562 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.170767033 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.170624872 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.170160522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174135834 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.170597305 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.169874887 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.426253477 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.175495563 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.170900397 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.171222825 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.169335443 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.172095374 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171771361 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.170848271 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170769133 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.171994431 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17520395 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.4268194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171942904 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170115594 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.176885557 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.170721098 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.171052806 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.170716674 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.176956822 seconds)
  done (took 34.482222664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233635554 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.170303905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.177127511 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.170931761 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.169436609 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237824989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.176780491 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.17108134 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.171216136 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.171221204 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.170635853 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.176274837 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170883508 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231522887 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171599687 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.173706621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.303506868 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.180543128 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23896987 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.159543175 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.182246974 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.31794693 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.178635226 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17076795 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.159092106 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.181873447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172252627 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.170787409 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172725217 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17368868 seconds)
  done (took 54.86652646 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.194376835 seconds)
    (2/2) benchmarking "in"...
    done (took 1.193045783 seconds)
  done (took 3.547328513 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.171698191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27410955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.171232065 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.375484272 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33738024 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.346568682 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.33718378 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274012218 seconds)
  done (took 11.450670517 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.170295647 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.521088413 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.191716045 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.169871268 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.176860318 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.590949949 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.117702913 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.007676357 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.927914525 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.075786063 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.296547073 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.879946512 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.214551273 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.468789562 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.2869093 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.011685532 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.358988385 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.628400186 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.178588184 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.295684267 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.853922675 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273738914 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.176830889 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.170937418 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.170952115 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.106096565 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.960728038 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.582684739 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.261843244 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.298008817 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.887779918 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254659256 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.170675186 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.366804823 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.290364898 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.171523929 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.28163013 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.278707728 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.171781693 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.172620853 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.82881256 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.781363882 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.426478989 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.360066445 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258691785 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.172541353 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.172208381 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.177663125 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.427372711 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.826894387 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.218438406 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.117854496 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.308435817 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.171960638 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.807193264 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.186694583 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.175566839 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.108577248 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.585571695 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.373064662 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.561298738 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.350647087 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.131515109 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.300100931 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.172541798 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.407678479 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.055970076 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.909025915 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.866132906 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.284496424 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.632994196 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.192348623 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.172436313 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.175348034 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.116496588 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.480983367 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.178271118 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.171857642 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.172404525 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.170809926 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.38130339 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.290919554 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.002552533 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.309656775 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.384254485 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.636197576 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.302624975 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.171390301 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.786603796 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.029612862 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.20165042 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.71623764 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.380552793 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.308739246 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.131037211 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.423903531 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.211054497 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.177579928 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.996447973 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.753374743 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.187002126 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.172271659 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.53583469 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.27486695 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.179976475 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.17320128 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.817023667 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.300950322 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.255501303 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.219690509 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.171818332 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.172396432 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780271467 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.206298819 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.173407422 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.700618888 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.221091515 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.648954387 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.361083097 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.372487538 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.504207173 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.061921668 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.47141276 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.057190931 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.17735624 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.678407915 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.100400091 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.850631088 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.398178039 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.302042233 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.949859407 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24138885 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.17100274 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.265415852 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253736514 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.171435174 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.176042831 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.177369394 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.171918902 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.172555132 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.29557359 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.507061759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.959999945 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.189174866 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.396984078 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.293382444 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.909962256 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.411372289 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.87721174 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.311052482 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.171500386 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.851113335 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.391582404 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.842365857 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.303034185 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.174928422 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.173639067 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.008832396 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.137491935 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274085072 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.171633266 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.793188257 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.206399602 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.172544748 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.174626553 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.619104375 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311061739 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.17656591 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.252695549 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.904324106 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.97724593 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.187449427 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.470446815 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.291770823 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.176110551 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.172957894 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.172381516 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.956862138 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.850233855 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.330862873 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.827932626 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.907147279 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.269343679 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.294993665 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.272206234 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.397450249 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.387348813 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.312358714 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.173743907 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.173167866 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.17658682 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.705562181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.070040911 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.130424082 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.011483367 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.217011534 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.103532835 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.195671811 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.975914294 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.190717388 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.845170609 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.121071111 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27801855 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.172343635 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.171651366 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.311749744 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.335549184 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.316361427 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.712218702 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.193563455 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.172852242 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.788970074 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.308346815 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.802455483 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284188708 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.988398649 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.226462637 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.301444982 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.277815594 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.757748239 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.305991592 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.172696548 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.817269569 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.322564972 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.17273509 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.179967101 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.834002026 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.973133739 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.926664463 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.75758742 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.120874038 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.705787175 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.404364371 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.318562851 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.97685333 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.280799369 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.442009396 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.297867029 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.624152004 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.194723291 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.910491897 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.192723036 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.862938206 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.189461661 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.103214995 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.299049339 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.583939985 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.293140764 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.173388056 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.308619178 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.273227327 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.78518839 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.302534542 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.289595319 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.440191111 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.028542882 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.276673611 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.447758111 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.296932771 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.05614335 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.129824243 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.513079157 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.047981497 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.205192936 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.196733103 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.893025678 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.332691864 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.408766001 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.311083458 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.175062861 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.173349663 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.294400145 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.264024586 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.180976191 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.501864264 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.12669922 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.240904969 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.196420818 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.172581609 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.173661199 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.35404354 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.263328786 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.415746123 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.60349479 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.732618238 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.934681272 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.30662597 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.751458627 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.306540135 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.873834813 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.209469854 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.174546499 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.807409302 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.30559758 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.407446792 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.323468648 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.274184278 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.790534875 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.2554701 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.455620572 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.269131034 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.297887804 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.904640177 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.703467582 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.401936885 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.535061911 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.218692104 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.750675834 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.256972945 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.78011543 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.243557256 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.884928083 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.132036497 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.234299422 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.17336389 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.176145682 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.754787006 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.216296196 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.176403834 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.941598535 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.888001902 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.077358512 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.92052494 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.210174698 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.173735844 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.174095788 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.173487758 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.115554917 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.133119777 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.481350555 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.313317904 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.174231395 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.172786522 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.123927263 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.480031358 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.941885735 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.017438024 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.14130682 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.312921775 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.174176852 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.175723953 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.173255642 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.176740205 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.175568773 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.173813956 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.633879561 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.190299789 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.795249567 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.208362589 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.173375158 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.348065182 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.242404843 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.172960953 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.34605517 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.260584661 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.285737704 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245209369 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.17378351 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.560370941 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.3133018 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.171934082 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.44747628 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.51731155 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.40853069 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.637045122 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.227722292 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.573184133 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.52286084 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.014637207 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.17941571 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.117333762 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.20101319 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.929611938 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.201210558 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.505904091 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.833814856 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.235696561 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.390333843 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.07860573 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.581787671 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.404180191 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245145568 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.173782044 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.173907093 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.239119623 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.412518551 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.224083321 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.380902279 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.367337792 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.184949549 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.349932474 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.278921109 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.353788128 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.207510071 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.190976924 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.174073455 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.174431141 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.575215017 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.996812524 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.266646374 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.174299188 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.116870404 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.918149732 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.067881155 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.845594871 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.127870849 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310533486 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.175485648 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.368884978 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.228094024 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.904464999 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197903064 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.942889121 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.495636633 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.224158624 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.311514868 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.612148242 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.909014806 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.526057365 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.298401861 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.176277447 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.514672677 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.153558034 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.315839395 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.07669787 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.463918773 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.78052688 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.727905058 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.432864513 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.293497911 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.108910097 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.728210403 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.234035222 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.177894698 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.01435499 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.316028505 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.459393384 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.106189463 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.433810198 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316014444 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.823731243 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.798413003 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.313025438 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.768280981 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.315469924 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.175296632 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.05484201 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.126638151 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.231513057 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.296891071 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.18142213 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.189425481 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.807593185 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.747387459 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.347642068 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253845766 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.174810554 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.899679054 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.898829152 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.206332661 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.174814972 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.178024089 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.542672299 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.225787747 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.173948878 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.559861845 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.772174066 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.314454764 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.721478349 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.346833168 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.317165981 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.379457891 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.500441971 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.373278016 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.238333633 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.177383267 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.174390372 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.174099007 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.694506168 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.189974603 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.174153412 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.769611039 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.314250089 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.925558521 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.086168889 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.40704464 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24867202 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.571285953 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.313812278 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.717898552 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.147057647 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.197886054 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.469425196 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.301518061 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.269618599 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.885293123 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.284151828 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.175443098 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.0778942 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.458478785 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.512582415 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.534611263 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.540367629 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.263925341 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.829224994 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.288186495 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.917909359 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.197024029 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.175307033 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.696395222 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.356226609 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.580385538 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.325550313 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.58348339 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.29313346 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.521494276 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.47819434 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270754221 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.20211512 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.222059434 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.190025446 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.284391418 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.725798691 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.1223087 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.626175592 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.307390651 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.072549967 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.759945336 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.003596332 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.401846951 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.490939888 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.441728683 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.215240056 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.124610159 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.488256061 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.259940103 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.330730099 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.270271341 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.939815824 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251772247 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.176097556 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.709541568 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.190412285 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.173975651 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.182027593 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.10716721 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.830512804 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.282247967 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.429343734 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.274784269 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.177319058 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.75434446 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.447215994 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.21739315 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.174746412 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.176053428 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.009858127 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289848178 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.175184813 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.486990003 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.328762067 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.454117528 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.990236321 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.609647581 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.268435459 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.175212666 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.179226343 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.865625831 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.723021011 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.214683994 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.544127058 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.28545435 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.719617804 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.224860173 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.568710569 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.686464515 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.114696502 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.299578842 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176482292 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.202594177 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.055167634 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.08907979 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.934027977 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.507688523 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271742331 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.935536522 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.140710379 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246121715 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.278982452 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249344755 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.176421392 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.176062785 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.174813623 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.704273576 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.233830103 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.177895882 seconds)
  done (took 1466.344333569 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.45340298 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183212301 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.174697368 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.175519051 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17594495 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181312376 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175418268 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174582392 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.175343953 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.181177061 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.174638257 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175009866 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174209127 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.458535587 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179331164 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176155544 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177020759 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.175158955 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.181673231 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17568047 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.175246095 seconds)
  done (took 26.438105374 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.180530378 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.175569356 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.175679268 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.175053113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179765114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.175745072 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.175085697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176664818 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.181556858 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175001981 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.175466189 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174057111 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.175542349 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.18147807 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175063469 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.174332659 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.175273551 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181581889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.175209109 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174310654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17481645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181153411 seconds)
  done (took 27.053442742 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.175386549 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.178103335 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.860098549 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.301181829 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.176251123 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.181148992 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.175757644 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.368102876 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.185587788 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.0673808 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.562431314 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.28432206 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.182947764 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.349382507 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.272188388 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.181757966 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.299623481 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.175466433 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.175830514 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.179221239 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.175108818 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.373466247 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.314129542 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.175344312 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.998651835 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.316111564 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.17642227 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.174899318 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.17555128 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.178968996 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.194813284 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.178363255 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.974285701 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.909165233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.509711223 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.075341073 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.206609504 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.181945971 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.17770205 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.176334701 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.405268559 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 3.017376078 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.178809672 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.179339671 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.482499877 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.299488477 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.177533962 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.544742962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.288298223 seconds)
  done (took 91.71693668 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.175288122 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.311162117 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.231931519 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.175240296 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.294749808 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.181464143 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.22985487 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.177210794 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.175914319 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.180643297 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.312699132 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.331824584 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.175545428 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.182271226 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.261934243 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.176622081 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.175062187 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.179324841 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.174990768 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.175243012 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.174817394 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.232972262 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293848322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.333126591 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.175226836 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.178330809 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.17851139 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.176557829 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.325174899 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.174919961 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.181437674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.175381977 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302474599 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.25685038 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.179888641 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.176434469 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303210683 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.177523168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.181793612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.175413596 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.175423896 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.176042104 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.23556565 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.311558898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.176793308 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.276489798 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.181498604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.175033305 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.32273143 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.175861279 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.178836025 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.343994016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.175987318 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.174850537 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.18216524 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295755212 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.176032083 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.174710833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.178607604 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.318898617 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.17481518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.175394903 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.333163769 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.180736808 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.177429368 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.342769681 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.277702797 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.18003461 seconds)
  done (took 84.051469456 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.17565616 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312633986 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35794096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352860262 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311588429 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.310621739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316661044 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.312217419 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.312046142 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317671781 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313805145 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261281594 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.284142208 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269393811 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315245201 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302138522 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304517801 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305393431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315014237 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314637794 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304590552 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354100996 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312476126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353794588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.538921858 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287461555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.31368131 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.316398228 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361348523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.311526326 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.537036553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.318543061 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316533335 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.355470478 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.537122671 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.316650383 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.175581545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312321638 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.314839056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314826084 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283080578 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353997588 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309990705 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287794324 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302914468 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308978015 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.351859782 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.541655758 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261957231 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31507533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.311893251 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.357766187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309595668 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.309513008 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.359410493 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270872707 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352326876 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35490083 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320151247 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351656635 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35212695 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271404565 seconds)
  done (took 83.42406693 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175880939 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.175434171 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.259618758 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.178026723 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.176411051 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261807854 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.176673024 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.179033736 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.176059853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.175684785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175353701 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265224482 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.538897848 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177891204 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264587116 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.54089567 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261883267 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266575905 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175955572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260587904 seconds)
  done (took 28.032913734 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.178827349 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.177193755 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.176241959 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331295177 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.176460106 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.317098906 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.176862114 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175934257 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175189164 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180331077 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.175956386 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.176772888 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176149889 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334941891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.176317186 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310884623 seconds)
  done (took 20.5809985 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.178504136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.1759347 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.175556123 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.175364862 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.179372715 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.176646484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.176029075 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.175733398 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.178324962 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.683827697 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.355101258 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.332106623 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.321100505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287456628 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.260720035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266516748 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.280885263 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291273922 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305062258 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289277362 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.855652623 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280168206 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285776104 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285284088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282776467 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.847152227 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271947058 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276641643 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.277571008 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285430643 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.277083 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.744403529 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289023169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311865889 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.34966878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.307705538 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.324966483 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.313081591 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.30984924 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.300528876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312929044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291598387 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.311962747 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294487985 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.317825029 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293164704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.304785631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.74213062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.331343378 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307454465 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.318610684 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27817603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307623371 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.746757172 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.311036136 seconds)
  done (took 74.378208872 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352329846 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350051193 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311660224 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28553636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.373710796 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.34085185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352316602 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311615803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.34901367 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285807683 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376249846 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291042181 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355146227 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.350987165 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.380544919 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328423212 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301168309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.363790184 seconds)
  done (took 25.340491991 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287155139 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312563853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293101716 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309362368 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292965081 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313248858 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293843529 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.321957869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307776316 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315660871 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289403134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314431896 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292251951 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.317073992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293886128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317595665 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298801168 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307809974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297013655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316290453 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292996147 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315986539 seconds)
  done (took 30.008905264 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.343691997 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.356962837 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.318182748 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.284365092 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.31081721 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.312089764 seconds)
  done (took 9.21986062 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342624007 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372898303 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327428635 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356689253 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356500028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37768029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381903513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38041684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371082316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587990548 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385488173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384247382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37890855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427141413 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362340269 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363133485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400430866 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378595077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347543243 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364478813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39728764 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347861683 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40948452 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362872531 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409025003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422508829 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419618595 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.625004893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391280359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393397458 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349030261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35230401 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324219845 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550642845 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29909123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315956248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331269863 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329905741 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309675117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37088463 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294821469 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30899591 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296951114 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308925539 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291516981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309390337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313270726 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315463629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319267905 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536658448 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291984189 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344122021 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286638148 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292792892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286433537 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.523899763 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.52789743 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342386898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288001684 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.52718424 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344650495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281106325 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341452148 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.526394078 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282571255 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343992159 seconds)
  done (took 91.821068494 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340657056 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261406505 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303464761 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529596045 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34185889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300685953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302443082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296925785 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294161411 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27599483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299869484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306898623 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34818119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351297932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310020679 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295063336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302595336 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340901378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273482931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.525067327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30177176 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341665534 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345997171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343456523 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.519407828 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290983641 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305348576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29995135 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294267752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30502856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305584236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303668435 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343545588 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254570865 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342003716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312225544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300085759 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309302486 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300212228 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28814453 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345939285 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300150038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299806635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293443494 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.520061858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296603637 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293861713 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269637786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304856858 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272188008 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.520408183 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.519418656 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529151807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342798612 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306949989 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307297653 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305576717 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3028365 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306464249 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287871757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341799733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29338358 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527838185 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306508602 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302224044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343834955 seconds)
  done (took 89.260792578 seconds)
done (took 2514.582080013 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.346678122 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.292609975 seconds)
  done (took 13.845356998 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.219243343 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.2178607 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.371778217 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.217371028 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.241686977 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.323186051 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.273743448 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.220154953 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.217314591 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.299772801 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.218587655 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.348203933 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.324682597 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.215999301 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.203999019 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.221942243 seconds)
  done (took 41.35133707 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.336103251 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.730408416 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.075362883 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.962886441 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.241005886 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.913383776 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.534754963 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.94818927 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517319109 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.675108146 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.473996279 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.123335309 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.148890626 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.409685507 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.663515572 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.68963632 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.770418704 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.826487119 seconds)
  done (took 62.248094833 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.222437248 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.367464071 seconds)
  done (took 8.809870506 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.213558611 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.242553518 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.216544004 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.217156987 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.218775735 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.235154871 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.224891273 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.224173551 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.227635849 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.226813672 seconds)
  done (took 63.464864196 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.207487495 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.832402052 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.543296282 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.6319004 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.84623708 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.699426313 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.370882023 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.562330987 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303630822 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.204171659 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.464762985 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.613349382 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.063099899 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.494402761 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.870562377 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.423021825 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.905455751 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.570116273 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.534575881 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.581729157 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.44549326 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.394741572 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.636252561 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.04647954 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.203002634 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.757317555 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.371219738 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.333850738 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.289790284 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.375610538 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.55826165 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.223870213 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.584560113 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.217607458 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.417673577 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.74582263 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.937324466 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.414935159 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.663606238 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.54478287 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.606512997 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.906711916 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.276361668 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.883251379 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.366923203 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.567063519 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.206586076 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416749835 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314976199 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.338519364 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.794439273 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.391506806 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.354517671 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.326005103 seconds)
  done (took 159.849226372 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.20085421 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.651638266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.382108433 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.20451994 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.596376071 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.4209975 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.02274913 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.665933094 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.215915125 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.422277347 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.387167951 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.337537892 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.204504872 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.205486012 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.211501219 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.207647622 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.397785595 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.68221874 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.219214685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.205851522 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.42373266 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.455547611 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.342111657 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.206630245 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.376879424 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.460231806 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.629594361 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.340620641 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.594376467 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.205348779 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764264373 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310845791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.270222406 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.176507554 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.694514438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659010788 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.735617754 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.269071684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.110826196 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.28022457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.879322881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.497289618 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.634771756 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.395391143 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.421475752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.532376297 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.856006749 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.293752986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.034639442 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.450919527 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.539358284 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.504217735 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.527375184 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309094835 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.761129508 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.264996571 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.302977531 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.607741303 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.419242568 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.416896164 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.284244865 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302078006 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271971754 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.525955363 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310568662 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.399279813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.282819683 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.243512662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.341806455 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.349158842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.366453068 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.464370644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.469966302 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.161885281 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.560236901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.4538794 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.630878976 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.470237014 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.215021404 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.21073018 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.628654995 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.651224659 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.376654795 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.453745042 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.522013315 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513399586 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.785225687 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.206695403 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.441539398 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.383456303 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.442506098 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.366260841 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.580516583 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.114656076 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.20974064 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.211271478 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.540897109 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.344839417 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.208258772 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.721454021 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.482787151 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.833665477 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.385920155 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.660566627 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.320660731 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.208555901 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.776340259 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.208684764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432866657 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.501503485 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.21882645 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.211262651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.368496689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.002185302 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.207545006 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.309417957 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.594533947 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.220701665 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.372732698 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.208403375 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.468799799 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.080076855 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.446042987 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.209369074 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.485507772 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.401893308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.363979756 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.208748742 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.566524606 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.483700737 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.617413339 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.447150814 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.066223801 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.208818172 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.519444286 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.209351381 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.21095186 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.391449531 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.156621054 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.388929792 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.210188475 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.482787735 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.377408044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.666389304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.310411394 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.530822067 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.541656395 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.65392056 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.267162 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411419971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275826084 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.339476711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.451121385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.274925058 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289977841 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.181928261 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.270221951 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448167501 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.522503691 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.974464714 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686532568 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.613023729 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.284585799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700551922 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.49438443 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.776088813 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.804599803 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.469216534 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.264642584 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.269156726 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.275853299 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.53820361 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.458570782 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297177604 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.285239947 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.993638678 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.424234434 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.261087621 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.467152149 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.925848859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.71152667 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.487904195 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278011092 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619459984 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.258479928 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.493303487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.801605109 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.584792729 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.291795458 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.293799104 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.262906769 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.268585297 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.478994189 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.548784635 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.832303595 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.411633157 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.603457202 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.484472818 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.562823185 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.748770475 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.302849178 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.549602235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.252531466 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.704201813 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.252222667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.475929313 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.542277769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290518947 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.573963941 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.612067494 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.397640941 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.706905657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.247976789 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.288031764 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.260684539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.459358848 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718355106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.297314933 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.435822851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.655730245 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.399987434 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468361864 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.500728516 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.316582008 seconds)
  done (took 759.992130554 seconds)
done (took 1110.763810183 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.247895715 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.294434237 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.224034919 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.213063587 seconds)
  done (took 26.274851062 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.183745229 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.282541656 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.39363151 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.222137187 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.572650077 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.274099103 seconds)
  done (took 12.141658234 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.725491175 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.21459225 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.213040156 seconds)
  done (took 18.366255097 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.494627087 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.685808939 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.399223024 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.322939661 seconds)
  done (took 7.114871062 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.220408781 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.219354379 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.219646473 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.222306948 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.219239298 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.220916399 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.227907447 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.226288033 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.221213685 seconds)
  done (took 12.214651541 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.945046786 seconds)
done (took 82.347247958 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.512226169 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.520261135 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.319606968 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.403233727 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.36434445 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.536057583 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.331987635 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.242480982 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.567404227 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.642450908 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.729394952 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.312203924 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.493960355 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.675897328 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.458035158 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.242004638 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.236367468 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.281488096 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.718888149 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.429889332 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.217610656 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.346846676 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.96113922 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.243856753 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.072077103 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.32931325 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.471179649 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.220198952 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.418529909 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.238067109 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.296106795 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.729327926 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.399047286 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.516047492 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.311882922 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.015610995 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.666602493 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.333744421 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.376097002 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.652369035 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.503926096 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.347016692 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.208629802 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.381966635 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.640296979 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.231689965 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.239129786 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.371583487 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.640797841 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.405281927 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.611664475 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.223361272 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.856586725 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.291961125 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.305596978 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.208491669 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.185524225 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.766820341 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.373977296 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.521656914 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.237392252 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.280658856 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.128020799 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.246513003 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.547854769 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.527948475 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.623633671 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.308135073 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.706392826 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.245897287 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.233719325 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.24665429 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.914746804 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.343074174 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.363573055 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.217859103 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.482995444 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.285286966 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.210566427 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.562368218 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.43854622 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.210299557 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.357304004 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.575113224 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.376847243 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.571853634 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.723276028 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.596715575 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.649298041 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.276732024 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.957159005 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.283119142 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.316239428 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.214950073 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.217663222 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.944148105 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.196446161 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.747651188 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.348657983 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.812963927 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.241825284 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.236243572 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.550445449 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.60521257 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.993269148 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.246315864 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.35731668 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.212179468 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.521764546 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.185074141 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.314110584 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.837586332 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.21432547 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.276809909 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.764375842 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.215084289 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.515026314 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.661294848 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.309199894 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.213247976 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.520820018 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.223476052 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.341896102 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.808252615 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.614096081 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.444312669 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.212301944 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.365816665 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.216763473 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.412596391 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.218277138 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.794121375 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.750595965 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.251790864 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.471584888 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.34815274 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.372210404 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.361528487 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.275053508 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.346802309 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.548988154 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.517380644 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.344145607 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.205722698 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.56297667 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.211535193 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.426739319 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.528956504 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.376535628 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.534982473 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.301505836 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.233419809 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.12407757 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.65275167 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.796149831 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.835117704 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.453268015 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.344227909 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.763383915 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.564776527 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.072070675 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.315343193 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.267135751 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.21296247 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.227392346 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.284877277 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.207870262 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.209957052 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.521147875 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.349774769 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.74831823 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.958733803 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.93671981 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.479231509 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.363760288 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.169994032 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.799398092 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.217599288 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.616200032 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.706129395 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.351647495 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.24698341 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.207129628 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.278973749 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.943458822 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.250537603 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.552268013 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.678354948 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.449120481 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.617382424 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.425582635 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.249122174 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.594102652 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.478298503 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.463535982 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.471192048 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.640424441 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.332865128 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.540544172 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.29515459 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.465389809 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.217506776 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.145018285 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.554995288 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.779007934 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.631722013 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.498045246 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.442675588 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.609499759 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.299965831 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.654382943 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.384430737 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.647977961 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.282339914 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.6684694 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.412112551 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.603569824 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.169234182 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.413116155 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.539385435 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.372105944 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.418057366 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.720048031 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.277906781 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.631239942 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.423399177 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.490061071 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.455554634 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.336819218 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.391140551 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.464612575 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.42867407 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.512191685 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.123028103 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.705667023 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.992605905 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.392977899 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.280069379 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.644388627 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.319285628 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.319471254 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.58948514 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.472852377 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.593714429 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.446438231 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.421862896 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.318250038 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.281152533 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.72216629 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.215232202 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.880362166 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.420323154 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.326293684 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.279170694 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.662654756 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.649051142 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.281869308 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.355616881 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.80634022 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.250530973 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.420028648 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.220328165 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.216568252 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.999306753 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.346308009 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.456711775 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.767208687 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.21608646 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.19647634 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.247647726 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.641018718 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.762642118 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.26533376 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.34259649 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.605564876 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.126791664 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.591074672 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.2359467 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.364233399 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.585850212 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.337033697 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.324389053 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.21182176 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.248017334 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.643070675 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.386247688 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.736759874 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.244775715 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.593821283 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.382569669 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.433555541 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.238736967 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.30971235 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.640375095 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.412796379 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.61690153 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.216331249 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.389514019 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.47058608 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.244707999 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.206503841 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.363242633 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.901971812 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.752358814 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.533792634 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.375360355 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.176097642 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.457772138 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.212252701 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.669777367 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.345927046 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.317036285 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.805320948 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.727080002 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.213809722 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.383776136 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.212290912 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.565620737 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.243520857 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.233039985 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.371692833 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.309961944 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.209499895 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.623044251 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.382815887 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.735523406 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.314220382 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.049108754 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.430904149 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.39204876 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.330240729 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.527454682 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.899504459 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.232057501 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.357141874 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.882149281 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.399523216 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.248481329 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.488188807 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.217716634 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.824151109 seconds)
  done (took 907.482239835 seconds)
done (took 908.8555846 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403363947 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.58893566 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.458336709 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.088220943 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.020183953 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.857022073 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.471476905 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.449668435 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.289760317 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.47024021 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.138286437 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.013462063 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.310771692 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.334488107 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.309943274 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348347713 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.433896706 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.456349085 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.330400393 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.156021378 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.581101461 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.160181399 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.636218696 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.510141 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.588568064 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.321776984 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418374029 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.567583762 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.57113714 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.401511201 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.412168215 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.43915352 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.050364419 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.448188952 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.310457239 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.295737427 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.092595357 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.311755954 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410294614 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.300943868 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.590499463 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.342696558 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.94559742 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.056188043 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.993620743 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.633159205 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.096993486 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.320444328 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337108128 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.419000753 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409335959 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414855135 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.567226361 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.42455541 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.108568805 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.08332525 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.570396735 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.095005368 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.94644694 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.425937726 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.586090954 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.311704418 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.425244442 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.448749068 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331656095 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.502017252 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.634781095 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41101205 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.437512987 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.480202074 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.4597292 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.437876495 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.328592307 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.352616256 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.354648287 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.474448297 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.056441817 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.457179712 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.007599698 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.318807172 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.108381497 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.089220808 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.16881562 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.295230118 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404090023 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.006369393 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.065570998 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.109588343 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33361288 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.438284138 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.140736442 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.455678482 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.671123376 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.418830846 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404716466 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.458362862 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.062094332 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40448997 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.388088192 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.438353652 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.997994019 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.42536959 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.212636987 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.304561682 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.319411061 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415311599 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416820926 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.641703962 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.439192935 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.373971798 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.593413345 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.355429503 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.438443148 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.332199234 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.289250974 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.002306672 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.494138991 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.095845006 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40434035 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.890268514 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.511162656 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.306015702 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.594410772 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.510506037 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406190513 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.307054832 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.316565574 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.135786231 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.323794322 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.310396037 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.394022938 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.669938468 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.420984164 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.091641796 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.441846967 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.137788753 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.456431293 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.438979019 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.291422875 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.067662432 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.311392155 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.364713447 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.515177096 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.591414385 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.456182802 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.516571438 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.333446727 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.486497836 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406946343 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.331119808 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.439663852 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.349246055 seconds)
done (took 261.120700799 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.558782827 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.203767121 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.513450547 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.494706734 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.584965497 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.585632203 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.29185343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.660410955 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.332772259 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.631512516 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.463314106 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.056752672 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.239955656 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.437053823 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.573523115 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.455064074 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338220057 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.476072043 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.701540674 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.624300868 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.914956676 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.465731454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.363142027 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.634855041 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.209281525 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.908434881 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.619710036 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331660748 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.481548679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.928361123 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.9209779 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.486533692 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.619974224 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.920025618 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.603072589 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.971008114 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.588444759 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.973842023 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.562237784 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.561364898 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.50615609 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.029396491 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.942823893 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.934598543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363870722 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.58369626 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.287535445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.158284604 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.210751841 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.962939134 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.482172345 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.026747446 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.041782898 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.55878677 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.424005762 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.773437392 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.702849047 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.725777252 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.625036393 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.523049686 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.560546175 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.632258214 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.635891096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.408607431 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.960607624 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.502144687 seconds)
  done (took 154.061204985 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.645387809 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.506228941 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.620188779 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.601301786 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.798248828 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.642066152 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.711095761 seconds)
  done (took 14.733308139 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.288557143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270348962 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.50845862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.509671859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.274915825 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.394407517 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352908214 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.923488961 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.488599455 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3059286 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.58973791 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.507178866 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.848509873 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.981619173 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.354308528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.509460753 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.244811884 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.333559051 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32770584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.524307412 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.92552621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.901753415 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.460915724 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357184659 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.272381702 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.306984138 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.264407525 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.240348971 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302206562 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.250236838 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276586795 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.377726736 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.262868165 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.954422849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285622638 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.59182666 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.2737237 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310299622 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.399991749 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.206767716 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.252920981 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.268381306 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.404154286 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.275515657 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.247560661 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.455520508 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.256786426 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.275152157 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.250634473 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.263952401 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.456177208 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.268280233 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.282148157 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.843377314 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.477867931 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.906341892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.335720422 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.259745598 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.264122169 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.322575842 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.266286709 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526131366 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.508207757 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.246870267 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.484979667 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.579544374 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.263674391 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.247870957 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.244843035 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.507428097 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.262726635 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.463241177 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.264160583 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.314106624 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.315851365 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.403226884 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.455226437 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.060756574 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.03462214 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.897924833 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.237527246 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.249797256 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.571828307 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.203143928 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.854255733 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.25166294 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.309949592 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.905225438 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.175989474 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.263999681 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.577158165 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.246307166 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.325373646 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.313665783 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.294437424 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324482804 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.485192858 seconds)
  done (took 162.451266058 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.433321691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.837685032 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.475704502 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.288436106 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.400641449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.541057696 seconds)
  done (took 16.188939904 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.581096277 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.065426048 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.280983254 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.279210382 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.31910555 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.263253634 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.258714585 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.460787879 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.389987186 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.271277376 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.260819789 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.285743276 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.262436264 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.394710232 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.258936903 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.269282624 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.258989037 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283793421 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.276203886 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331080061 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.557894678 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.319252547 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333806481 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.180535564 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.314412916 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.269968212 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.257548423 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.272183037 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.271607323 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.592532098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.454769795 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.259862043 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.130126841 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.612774688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.019969682 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.188627258 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.407332693 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.28738073 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.317597635 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.261843059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.282306905 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332481255 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.282538635 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.282196764 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.612815304 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.095977334 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.340501681 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.529168774 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.259136508 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.283999149 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.2860195 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.289603582 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.259661091 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284902737 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.824531322 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.689267592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.238139209 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.26499708 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.319463685 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.182277394 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.338250932 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.260103738 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.601137861 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.200739528 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.951518742 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.285900378 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.185754467 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.39854927 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33028874 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.281210958 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.283314289 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.289866311 seconds)
  done (took 125.971751661 seconds)
done (took 474.614676581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.610392124 seconds)
  done (took 7.821177215 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.349676096 seconds)
  done (took 7.724882873 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.212564018 seconds)
  done (took 7.426414807 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.212083097 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.248050663 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.230108718 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.229815768 seconds)
  done (took 26.166920815 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.324976977 seconds)
  done (took 7.538019987 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.20690193 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.224330346 seconds)
  done (took 13.739305622 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.288265781 seconds)
  done (took 7.514523339 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.602712488 seconds)
  done (took 7.818355736 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.2132189 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.236108962 seconds)
  done (took 13.687994827 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.20662128 seconds)
  done (took 7.417855935 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.710761983 seconds)
  done (took 9.021916991 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.221251884 seconds)
  done (took 7.46632013 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.210886991 seconds)
  done (took 7.423178797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.253951342 seconds)
  done (took 7.46604278 seconds)
done (took 139.440575022 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.206945097 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.216342255 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.212139249 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.209256774 seconds)
  done (took 26.05220673 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.543546328 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.541968986 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.519818187 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.592950265 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.488189467 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.485095517 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.541769662 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.543139904 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.48652938 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.691322311 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.544765442 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.692524831 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.59287404 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.525325859 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.51947155 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.587413388 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.596306963 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.541765644 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.48489092 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.518794083 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.587371836 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.59187399 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.960567764 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.961593485 seconds)
  done (took 39.349038104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.423918783 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.664897946 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.370800463 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.632907857 seconds)
  done (took 7.30035946 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.250380371 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.590328774 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.574598311 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.635641009 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.574320179 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.387264125 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.576791932 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.430150276 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.366026093 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.359678733 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.831388834 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.373969135 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.381439101 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.638442042 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.388507756 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.217756157 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.220936698 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.355162741 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.594482497 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.431740061 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.4810383 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.574512256 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.573797565 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.579288612 seconds)
  done (took 36.596900472 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.034701091 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.147888047 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.574432521 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.130629725 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.923248929 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.054799026 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.501805505 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.723884881 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.487295863 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.459576036 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.030214498 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.95750795 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.365932003 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.104788347 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.982571355 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.395000839 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.397036306 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.065489455 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.632503117 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.520763263 seconds)
  done (took 40.697684121 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.204053157 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.472141366 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.470122097 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.384175566 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.205336076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.209250135 seconds)
  done (took 27.1519064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.273329109 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.359157032 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.542997797 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.493117404 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.367278272 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.347965056 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.915669721 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.436234796 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.028299722 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.997061923 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.844963829 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.669902836 seconds)
  done (took 23.488776494 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.204391775 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.246619346 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.20981079 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.436987675 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.538003161 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.97273897 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.226311759 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.207327464 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.743657403 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.472182618 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.354050058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.446255324 seconds)
  done (took 46.278727491 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.421071959 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.438274384 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.528113462 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.251867109 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.724863843 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.299871099 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.593762129 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.175018757 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 4.037959029 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.082287688 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.736306733 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.262277036 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.742422981 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.190015949 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.208314665 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.532614895 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028052564 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.704476243 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.651499186 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.282364897 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.171726037 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.365126267 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.210299688 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.757938764 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53446378 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.209991957 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.401772015 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.45887419 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.206332178 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.444670971 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.206783032 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.751607656 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.402163848 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.51591746 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.739799578 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.297393693 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.298719001 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.769342548 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.806928951 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.504751868 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.354190234 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.372416223 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.455762177 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.221015795 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47059988 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991454564 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.215128607 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.83483175 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.188788464 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.348054714 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.129574932 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.093481415 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.53767214 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.939931626 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.353209496 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.526153457 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.374051199 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.2065843 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.479621 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.280393429 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.40820261 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.304155629 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.422343623 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.182629952 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.43911149 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.547669388 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.552111007 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.528935128 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.550853201 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.520579862 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.563045957 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.337567164 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.03750203 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350500981 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.739246335 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.122554905 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.56892174 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.206754057 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.922265754 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.741507776 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.185877631 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.329244917 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.845995637 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.174825291 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.21016613 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.379169818 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.451716267 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.178280969 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.305485229 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.308038484 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.587221576 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349008621 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369169323 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.450373065 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.919411949 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.221354337 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.209897791 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.508039207 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.18019817 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.772692626 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.20889119 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.188718164 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.228788477 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.760152337 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.596762231 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.248351635 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.979811116 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.867995078 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.523946452 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.813878695 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.372132933 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.046011734 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.570174842 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.53646834 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.207926872 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.964667448 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.211659656 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.285913308 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.561992519 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.210329388 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.183879954 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.618269116 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.401395879 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.205287504 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.506072759 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.206652524 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.359675991 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.21233577 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.819019811 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.181019492 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.457235723 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.738211416 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.315070128 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.29424147 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.181297592 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.354187516 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.723625003 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.296379311 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.55978363 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.648210906 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.437995907 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.996630297 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.200226456 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.062104158 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.690706103 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.471606209 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.545069471 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.83740414 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.375301646 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.304906356 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.204190094 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40101883 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.213058054 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.782300579 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.207368803 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.902439692 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.98004342 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.466279154 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.206857504 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.370355609 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.209200315 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.442304447 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.884603913 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.265770908 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.37453874 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.478095319 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.442117631 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.207060479 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.181919722 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.564711778 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.445445311 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.743372111 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.46654034 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.877618086 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.570497457 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.696656322 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.396314426 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.548765382 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.940045442 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.44030112 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.538078786 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.830722603 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.236578123 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.248666382 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.303318215 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629931624 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.440351014 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.935968832 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.610610524 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.504728346 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.261425611 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.210759601 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.186522143 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.358108487 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.668483664 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.229219127 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.768474692 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.303107042 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.451437055 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.497543261 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.240386523 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.550710695 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.052107294 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.608503061 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.565069785 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.541683666 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.187829912 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.663796885 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.729972431 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.737169419 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.346440664 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.467363292 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.221854611 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.265797694 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209808215 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.556546218 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.146367794 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.866217952 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.507342106 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.750095502 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.108794046 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.36404746 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.20761934 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.226264197 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.168806789 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.356240056 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.274498155 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.381159741 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.751211567 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.476316766 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.535158366 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.206385062 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.214753515 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.496746728 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.520054492 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.499758668 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.731734995 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.45316462 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.907613945 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.312124845 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.865562888 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.377488129 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.242269071 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.951662605 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.536359584 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.152013089 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.398361656 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.866120054 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.366009872 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.910062833 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.505110033 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.206770693 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.696240052 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.824438891 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.212882143 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.228800184 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.353263266 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.210149292 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.450168849 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.11089422 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.478635206 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.804777809 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.495526457 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.451496784 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.395060688 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.599030739 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.729437574 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.563984692 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.181296013 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.370368885 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.300708093 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.518203926 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.206284388 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.505530779 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.880240943 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.895079939 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.025257258 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.758768021 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.459194796 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.387061126 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.678554201 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.455787065 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.525754573 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.184009637 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822626389 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.192557263 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350966334 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.183298464 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.034009075 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528977144 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.58750334 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.689891849 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.274852715 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.738688705 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.603549718 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.278377556 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.39155913 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.465783598 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.205763306 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.49041132 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.214120092 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.020873859 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.616421608 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.211753459 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.951337441 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.40012705 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.540926529 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.37594703 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.951647665 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.245501044 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.356242604 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.97893499 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.384777064 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350877307 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.551431197 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.072473712 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.303780881 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.22941807 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.305141246 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.849128467 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.687710844 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.82562786 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.783058179 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.524769571 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.98070762 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.209287982 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.40530742 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.374368479 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.207620004 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.405075901 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.591361599 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.235541999 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.421453529 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.526540306 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.352881092 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.745278728 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.264054015 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.90389149 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.348061304 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.72316524 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.751297853 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.992677339 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.701814955 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.289969603 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.696423936 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.178550929 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.377363296 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.478931198 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.943491834 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.281442712 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054048158 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.006330235 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.387635192 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.639663647 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.366349554 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.997122837 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.37849048 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.449841286 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.398017877 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350274116 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.176644569 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.797045365 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.988058933 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.561826238 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.375383803 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.395586225 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.376232284 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.377466702 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.738479669 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.523605696 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.982569825 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.689044538 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.449356448 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.184249172 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.213162056 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.486505388 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.574994258 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.307046536 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.519721126 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.615890682 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.255102053 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.225185251 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.236344302 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.477838579 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.9668568 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.936085415 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.534564869 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.712422162 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.807521051 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.247571472 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.980889527 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.400744574 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.577541076 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.597499161 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.118408944 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.604782344 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.519388042 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.369539941 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.182419232 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.401635202 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.214251897 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.346996184 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.924581544 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.511271637 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.294153304 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.081407586 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.83473652 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.21041998 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.218795474 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.635087535 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.433388629 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.40643884 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.208995632 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.79751618 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.575190878 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.375065929 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.192992804 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.972250559 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.186419262 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.402473382 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.207343595 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.390178526 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.057685281 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.340910663 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.870125906 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.764119403 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.285780524 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.39476659 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.183735533 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.031451992 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.22818246 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.905056136 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.024610201 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.45951721 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.731749441 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.397167937 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.214348327 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.539903356 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.348461208 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.52711454 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.670980541 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.702889046 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.642224773 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.562689413 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496061698 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.681447537 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.358335341 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450646006 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.188259696 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209087497 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.279456126 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.590707212 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.570104915 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.207331312 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.742485633 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460301342 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.363617342 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.380001737 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.364759048 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.764695639 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.419857182 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.362636882 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.371380479 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.449151833 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.567944905 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.274167839 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.397639383 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.210765812 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.229297219 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.403846425 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.456979864 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.589068767 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.522450555 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.8114382 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.369084528 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.66135576 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.915096204 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.742638219 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.210467067 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.052938132 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.572128013 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.209125376 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.698267052 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.861208767 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.405945994 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.911948354 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.290571978 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.222370505 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.375734847 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.710442352 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.223451907 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.847531139 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.619585569 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.20755617 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.687024629 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.28104671 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.385484569 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.967307755 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.713762105 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.207980467 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.040212241 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.331598732 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.765065576 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.486420387 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.211971257 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.214446175 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.835010959 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.187838241 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.210895587 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.310281098 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.744056296 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.218559599 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.776055537 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.368261586 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.372312115 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.218509082 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.352319737 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.212533607 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.401956113 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.814317229 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.454899354 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.483958775 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.400753531 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.208518403 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.797536792 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.914507071 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.31270746 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.384986848 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.284297239 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.532401999 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.006158552 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.219324526 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.744377389 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.44659593 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.422475074 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640082788 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47496946 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.250291175 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.417729796 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.211167461 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549103765 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.372176373 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.772888631 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.466075898 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.876027214 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.358276749 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.230547917 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.750895988 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.684649073 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.091001091 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.209525619 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.522852683 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.209085132 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.052085527 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.823926177 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.3982666 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.378502665 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.227959604 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.799805862 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.556988798 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.337970753 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.209858132 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.424498739 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.725366195 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.182444076 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.044571899 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.092183598 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.409180863 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.541157555 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.181246461 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.401978876 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.227199906 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.188416291 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.713265969 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.208947264 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.529497275 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.184912127 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.750265843 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.218712487 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.336824 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.369039708 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.579647405 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.211076454 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.930047674 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.381147982 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.207982773 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.217565071 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.55974065 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.295397677 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.457720203 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.686190307 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.459131112 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.552869111 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.118098431 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.043622223 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.220600191 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.545485635 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.235917367 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.78588636 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.370763631 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.735573765 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.060747402 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.225400699 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.749309481 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.458067624 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.942205159 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354884915 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.713795087 seconds)
  done (took 2011.650596771 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.233599522 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.279643515 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.280135421 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.279712176 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.284690524 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.294887548 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.276806548 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.242224113 seconds)
  done (took 51.38379547 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.206505938 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.190391101 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.687235262 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.394872696 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.232530097 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.420046564 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.368320484 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.728739587 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.414775093 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.296590567 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.268754574 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.276815436 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.215661158 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.250440216 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.114989301 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.294588074 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.211603466 seconds)
  done (took 92.836886263 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.253038283 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.468692098 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.233167966 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.147095121 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.302504122 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.626427621 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.220255488 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.212889485 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.559757954 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.887391272 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.224668023 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.364033725 seconds)
  done (took 82.749247466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.250840885 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.250347543 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.247550561 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.247728073 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.247195482 seconds)
  done (took 7.455264773 seconds)
done (took 2494.224185698 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.436059306 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.737117294 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.766042033 seconds)
  done (took 4.711161891 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.281086761 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.355893125 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.423329582 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.357208804 seconds)
  done (took 6.646435593 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.518930303 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.706572524 seconds)
  done (took 4.433080336 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.602718813 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.222272339 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.752105425 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.210823043 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.214129702 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.21717845 seconds)
  done (took 19.86124554 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.242659248 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.245029591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.2375083 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.236264082 seconds)
  done (took 6.174699982 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.210302361 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.234498059 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.214190516 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.190380731 seconds)
  done (took 19.056127096 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.65963191 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.298026571 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.960713038 seconds)
  done (took 6.135564618 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.026061175 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.349757894 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.014912125 seconds)
  done (took 6.604537829 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.157590765 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.246983532 seconds)
  done (took 5.6158622 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.373894099 seconds)
  done (took 2.586001017 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.71625271 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.699660087 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.080486011 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.065389609 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.238327161 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.522641307 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.591115953 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.522093473 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.895896611 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.786029201 seconds)
  done (took 19.327030759 seconds)
done (took 113.37789447 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.07964426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.607837228 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.371949748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.902670015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.306214093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.37131806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.822755756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.717514452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.50722801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.509578406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.279816743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.304424899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.235916953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.603464013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.243887627 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.552690653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.617875149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.095806206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.495553402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.365457216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.832422597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.795656721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.012153472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.801813722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.624351914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.356052142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.048106531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.558371121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.72670226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.05418184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366845818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.606312079 seconds)
  done (took 155.986942886 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.207453355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.217902139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.21938589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.211965562 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.178848687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.216723472 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.214317595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.215438002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.906090226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.907619277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.217201587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.171755565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.219652827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.213577171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.221408576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.212666558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.038906653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.217475985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.216081911 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.216557195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.218084907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.055122304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.218759363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.07289017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.042564634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.217432204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.212467494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.217198051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.217785399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.216553455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.219371846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.214183375 seconds)
  done (took 190.782160853 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.20847345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.215707686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.219960217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.213984869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.216781275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.217900179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.215348096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.211923134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.214939931 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.215281627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.216259634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.216143562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.222628909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.214302562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.22133608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.21145713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.215212727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.216204219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.219981725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.21672523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.218163881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.212456147 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.220275314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.216082278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.216149225 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.217882386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.215013051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.215058551 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.215487144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.216426482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.218297082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.212844439 seconds)
  done (took 200.133700318 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.51579828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.255141025 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.156269339 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.783972506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.139566871 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.243077505 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.781023955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.524126145 seconds)
  done (took 14.616939328 seconds)
done (took 562.739015786 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.897415424 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.143862631 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.391938357 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.440063802 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.853806782 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.509908064 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435378628 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.690950089 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.947021291 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675191617 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.711133707 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.426947417 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.051205118 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.437777083 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.398225792 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.669064471 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.611874359 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.900751715 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.407581658 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.082909255 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.438081661 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.066013219 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.692195559 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.010497373 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.722057847 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.110642383 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.306623969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.612644212 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.429974503 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.39812314 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.221891919 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.601910022 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.463462292 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.463636688 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.666950019 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.684069648 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.559732091 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.676853552 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.390393765 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.872004328 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.085590369 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.819844379 seconds)
  done (took 79.184647875 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.238452646 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.254997448 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.403823202 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.309680523 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.897361893 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.314124122 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.474188736 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.444467972 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.330007697 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.452256398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.477006738 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.915645984 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.475540563 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.913595343 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.460160321 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.489564535 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.314580392 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.899285808 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.465233299 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.441842665 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.276172452 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.400309018 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.275214303 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.426215922 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.268357435 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.294003603 seconds)
  done (took 39.144069432 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.28820829 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.401112514 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.500379409 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.579240024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.47010136 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.237765999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.582501347 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.402346972 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.227697051 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.69372495 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.353239381 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.368479591 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420892418 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.522095052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.767632565 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.402341967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.407478123 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415100361 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.410416099 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.449699456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.388608437 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334310861 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.589996771 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.39388838 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.925357127 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.55430492 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.668223818 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.84507359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.779409108 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.405775019 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.376222138 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.563486376 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.634134825 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.505632678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.381217651 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.259911349 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.266937355 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.351144347 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.121593016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410424248 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.577714385 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.358762859 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.630369303 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.789412284 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.264108742 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.492618526 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.706797915 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.364435767 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.374164791 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.014045889 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.543754064 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.186823957 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.398590665 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.438142839 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.380641327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.683904742 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444907212 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.566037945 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.425625829 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.843479911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.332436471 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.641020802 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41561722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.272721467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.549995752 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.45307737 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.404264767 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.611044143 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.630175427 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.696485045 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.804998178 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.335301863 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.286894708 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.348695216 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.404777303 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.74061957 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.62462745 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.488177059 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.65765349 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568928368 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.758166622 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.703388838 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.295980673 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.954234087 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.297859477 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.251092878 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.340982713 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.573016384 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.562043326 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.732734865 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.796677282 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.577334139 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.740369963 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.639119168 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.622321446 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.684923758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.246643836 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.263341479 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.486285624 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.806369875 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.335004116 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.470482265 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.912095641 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.598055181 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.557117543 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.554315054 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.641821843 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.264528073 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.674322965 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.245449966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.469894166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.485319191 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.544640573 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.523787359 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.241352525 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.773648368 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.379470464 seconds)
  done (took 240.630145608 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.206811535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.219038271 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.214746595 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.219099363 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.213171274 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.823178051 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.279681267 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.212912344 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.822021587 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.283167434 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.211978657 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.214839334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.2123544 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.217833651 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.780964726 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.750912785 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.85383426 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.214451546 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.213298126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.213660863 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.051628622 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.215516324 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.215332782 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.215096537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.214254695 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.211796998 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.222334463 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.264528171 seconds)
  done (took 155.203046297 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.268384436 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.637075456 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.302716695 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.361287399 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.307717837 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.297472705 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.776002134 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.405013149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.33904557 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.288300936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.282697612 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.500860791 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.507986247 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.853689239 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.395495658 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.362974481 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.930882713 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.41183155 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.284402663 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.275055529 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.434818292 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.603599272 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.528782371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.538243089 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.431364311 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.548355213 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.339443036 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.276681224 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.400128019 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.754206668 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.286251586 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.639387865 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.424221835 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.272359594 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.76267029 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.621974411 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.841804342 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.814245965 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.461843735 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.240915524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.237123699 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.501087469 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.578132447 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.323358016 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.27166881 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.909237884 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.289803376 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.68217237 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.314716705 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.237427401 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.377741658 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.379448842 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.514424357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.272192047 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.458322404 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.418085759 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.767849318 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.254145594 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.336506415 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.576312309 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.24667385 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.758406107 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.755118661 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.330043622 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.286381634 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.13640543 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.360021688 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.78009877 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.880472035 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.313085887 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.620153269 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.450767848 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.247232948 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.536961325 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442787709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.725199514 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.850110436 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.407158805 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.371173233 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.342919573 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.542849532 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.260030819 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.811584058 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.38153554 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.248199599 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.758291624 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.661788975 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.246279816 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.277638368 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.383004543 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.440276101 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.473239532 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.545555783 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.351538873 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.154674903 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.52972482 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.564706145 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.286422695 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.400104082 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.259542963 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.640296547 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.450718255 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.255773476 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.588996822 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.660836927 seconds)
  done (took 166.943093405 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.024856264 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.323390767 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.542608488 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.825133842 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.609022175 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.721930984 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535232725 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.338789169 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.551095503 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.485804739 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.48523494 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.358516578 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.232012784 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.020445615 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.320981344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.444893463 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.338945799 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.907087773 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.561325467 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.326699628 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.594259442 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.048916014 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.582303608 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.658199335 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.706847374 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.790049805 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.916918331 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.407254874 seconds)
  done (took 51.877186332 seconds)
done (took 734.189820893 seconds)
SAVING RESULT...
DONE!
