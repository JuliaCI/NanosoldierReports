cset: moving following pidspec: 894645
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.271109166 seconds)
loading group "string"... done (took 0.2787575 seconds)
loading group "linalg"... done (took 4.128646101 seconds)
loading group "parallel"... done (took 0.025632115 seconds)
loading group "find"... done (took 1.52622446 seconds)
loading group "tuple"... done (took 0.988736377 seconds)
loading group "dates"... done (took 0.248107876 seconds)
loading group "micro"... done (took 0.063159834 seconds)
loading group "io"... done (took 1.361469709 seconds)
loading group "frontend"... done (took 0.011783635 seconds)
loading group "scalar"... done (took 5.019819696 seconds)
loading group "sparse"... done (took 3.451907473 seconds)
loading group "alloc"... done (took 0.015381674 seconds)
loading group "broadcast"... done (took 0.368208346 seconds)
loading group "union"... done (took 3.722825068 seconds)
loading group "simd"... done (took 2.946172644 seconds)
loading group "random"... done (took 3.274367779 seconds)
loading group "inference"... done (took 2.074876792 seconds)
loading group "problem"... done (took 1.235842782 seconds)
loading group "array"... done (took 4.893244497 seconds)
loading group "misc"... done (took 0.894065363 seconds)
loading group "sort"... done (took 0.356418243 seconds)
loading group "collection"... done (took 6.404604056 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.390435769 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.177399371 seconds)
    (2/2) benchmarking "String"...
    done (took 0.120313981 seconds)
  done (took 0.975031818 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.140537336 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020644689 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020598191 seconds)
  done (took 0.85489007 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020871758 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.080930566 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022314627 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.02302871 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022659183 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022537076 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022109986 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022011286 seconds)
  done (took 0.890280025 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031591724 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019529379 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.02070222 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019671092 seconds)
  done (took 0.76434133 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.026171605 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.082984452 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019327985 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019462035 seconds)
  done (took 0.818708032 seconds)
done (took 5.509317179 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.381534973 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.13394548 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033097794 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.165194648 seconds)
  done (took 1.413567586 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02009977 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025171484 seconds)
  done (took 0.724896072 seconds)
done (took 2.811284108 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.703772055 seconds)
  done (took 4.37197386 seconds)
done (took 5.045442245 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15887358 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020056329 seconds)
  done (took 0.85614967 seconds)
done (took 1.549465421 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.758327739 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.827032462 seconds)
    (2/2) benchmarking "String"...
    done (took 0.905044604 seconds)
  done (took 2.425431525 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.98593821 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.720920598 seconds)
    (3/3) benchmarking "different"...
    done (took 0.736360768 seconds)
  done (took 3.122066311 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.708845306 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.250518815 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.999281471 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.679585128 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.689827492 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.188643891 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.736876805 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.045408915 seconds)
  done (took 23.269960074 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.956880354 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.950910657 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.942387026 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.955585873 seconds)
  done (took 8.528639901 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.985851312 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.951070494 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.953268537 seconds)
    (4/4) benchmarking "different"...
    done (took 0.772296994 seconds)
  done (took 4.370077045 seconds)
done (took 49.93012572 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.553190781 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.736263064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.713186427 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333998847 seconds)
  done (took 16.015476343 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.913213715 seconds)
    (2/2) benchmarking "read"...
    done (took 1.035541574 seconds)
  done (took 2.639831273 seconds)
done (took 19.336107132 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.917140627 seconds)
  done (took 7.596617335 seconds)
done (took 8.275734972 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.798979393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.030894452 seconds)
  done (took 4.508468303 seconds)
done (took 5.215447477 seconds)
SAVING RESULT...
DONE!
