cset: moving following pidspec: 893022
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.262497211 seconds)
loading group "string"... done (took 0.281820251 seconds)
loading group "linalg"... done (took 3.718922061 seconds)
loading group "parallel"... done (took 0.026154904 seconds)
loading group "find"... done (took 1.379583097 seconds)
loading group "tuple"... done (took 0.990557134 seconds)
loading group "dates"... done (took 0.25027079 seconds)
loading group "micro"... done (took 0.062740609 seconds)
loading group "io"... done (took 1.347268773 seconds)
loading group "frontend"... done (took 0.011701069 seconds)
loading group "scalar"... done (took 4.87844984 seconds)
loading group "sparse"... done (took 3.378592393 seconds)
loading group "alloc"... done (took 0.015244205 seconds)
loading group "broadcast"... done (took 0.369818921 seconds)
loading group "union"... done (took 3.756389687 seconds)
loading group "simd"... done (took 2.851088761 seconds)
loading group "random"... done (took 3.132511479 seconds)
loading group "inference"... done (took 2.091197765 seconds)
loading group "problem"... done (took 1.210983152 seconds)
loading group "array"... done (took 4.750641337 seconds)
loading group "misc"... done (took 0.89449488 seconds)
loading group "sort"... done (took 0.35910633 seconds)
loading group "collection"... done (took 6.395862208 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.382668495 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.172052479 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114684655 seconds)
  done (took 0.943120058 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.130148522 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020639951 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020568953 seconds)
  done (took 0.82273072 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020996531 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081514055 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022388635 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022818854 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022587934 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022211434 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022164813 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022001874 seconds)
  done (took 0.868575049 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031500744 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019546115 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020558581 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020232854 seconds)
  done (took 0.743313589 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.025725592 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.07483393 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.01932025 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019650387 seconds)
  done (took 0.789418889 seconds)
done (took 5.344369777 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37631879 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125886894 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034074213 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.157089505 seconds)
  done (took 1.372702687 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020061821 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025399492 seconds)
  done (took 0.705067245 seconds)
done (took 2.729193689 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.36630673 seconds)
  done (took 4.015307537 seconds)
done (took 4.671511798 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1697972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.02092396 seconds)
  done (took 0.843687714 seconds)
done (took 1.545530984 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.764685757 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.798401349 seconds)
    (2/2) benchmarking "String"...
    done (took 0.882310667 seconds)
  done (took 2.3736639 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.962403072 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.697644864 seconds)
    (3/3) benchmarking "different"...
    done (took 0.723384823 seconds)
  done (took 3.037711854 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.677841942 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.185838089 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.934800327 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.65609279 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.666282622 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.16561167 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.328782794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.00240829 seconds)
  done (took 22.596072186 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.920682203 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.924436323 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.883042978 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.930409934 seconds)
  done (took 8.355975157 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.962198824 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.925910912 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.926224321 seconds)
    (4/4) benchmarking "different"...
    done (took 0.747758051 seconds)
  done (took 4.276978787 seconds)
done (took 48.811520841 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.65459816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.757613459 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.684397357 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325882293 seconds)
  done (took 16.075187495 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.888093815 seconds)
    (2/2) benchmarking "read"...
    done (took 1.011364851 seconds)
  done (took 2.56653875 seconds)
done (took 19.298146236 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.873656178 seconds)
  done (took 7.526240612 seconds)
done (took 8.181818537 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.784629963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.014745051 seconds)
  done (took 4.452051482 seconds)
done (took 5.113355449 seconds)
SAVING RESULT...
DONE!
