cset: moving following pidspec: 1009093
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.203848523 seconds)
loading group "string"... done (took 0.265338918 seconds)
loading group "linalg"... done (took 3.591602718 seconds)
loading group "parallel"... done (took 0.025854134 seconds)
loading group "find"... done (took 1.357567544 seconds)
loading group "tuple"... done (took 0.928480053 seconds)
loading group "dates"... done (took 0.246940464 seconds)
loading group "micro"... done (took 0.062076945 seconds)
loading group "io"... done (took 1.362359516 seconds)
loading group "frontend"... done (took 0.011815649 seconds)
loading group "scalar"... done (took 4.823015683 seconds)
loading group "sparse"... done (took 3.323878944 seconds)
loading group "alloc"... done (took 0.015262972 seconds)
loading group "broadcast"... done (took 0.370305922 seconds)
loading group "union"... done (took 3.619363626 seconds)
loading group "simd"... done (took 2.819435164 seconds)
loading group "random"... done (took 3.095752597 seconds)
loading group "inference"... done (took 2.052571046 seconds)
loading group "problem"... done (took 1.048813365 seconds)
loading group "array"... done (took 4.689802518 seconds)
loading group "misc"... done (took 0.900547971 seconds)
loading group "sort"... done (took 0.356710552 seconds)
loading group "collection"... done (took 6.108350195 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.373038383 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.171099469 seconds)
    (2/2) benchmarking "String"...
    done (took 0.114396531 seconds)
  done (took 0.92955171 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.12973271 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020704645 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020452879 seconds)
  done (took 0.811103979 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021039562 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.082837683 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.02208868 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.023237593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.023356595 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023382676 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022655893 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022683679 seconds)
  done (took 0.860886968 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031535978 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.01953833 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020494194 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020513799 seconds)
  done (took 0.730613204 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.020140256 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.073372466 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019091945 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019205224 seconds)
  done (took 0.770207752 seconds)
done (took 5.26052909 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384455918 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128425847 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034380777 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.145881132 seconds)
  done (took 1.35768005 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022021727 seconds)
    (2/2) benchmarking "read"...
    done (took 0.02500733 seconds)
  done (took 0.694531415 seconds)
done (took 2.693046035 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.32701813 seconds)
  done (took 3.962360952 seconds)
done (took 4.604362042 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157868549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020818125 seconds)
  done (took 0.822472586 seconds)
done (took 1.513363662 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.698276943 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.782783262 seconds)
    (2/2) benchmarking "String"...
    done (took 0.852378323 seconds)
  done (took 2.302805964 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.950167083 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.682247519 seconds)
    (3/3) benchmarking "different"...
    done (took 0.700614706 seconds)
  done (took 2.976178145 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.781328069 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.18182243 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.932078127 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.644217781 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.653282058 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.155105855 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.321303671 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.990521432 seconds)
  done (took 22.525694478 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.950958612 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.881310475 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.895243121 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.913788395 seconds)
  done (took 8.328396547 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.950030082 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.033597992 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.033766256 seconds)
    (4/4) benchmarking "different"...
    done (took 5.645230039 seconds)
  done (took 9.350815438 seconds)
done (took 53.679527861 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.642783867 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.722722531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.67552108 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.351837633 seconds)
  done (took 16.034988949 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.871960722 seconds)
    (2/2) benchmarking "read"...
    done (took 1.000520824 seconds)
  done (took 2.529781755 seconds)
done (took 19.208266037 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.819062943 seconds)
  done (took 7.461991841 seconds)
done (took 8.104933081 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.805832287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.020896891 seconds)
  done (took 4.470001845 seconds)
done (took 5.158610502 seconds)
SAVING RESULT...
DONE!
