cset: moving following pidspec: 2810383
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.491877381 seconds)
loading group "shootout"... done (took 1.1814611 seconds)
loading group "string"... done (took 0.743848938 seconds)
loading group "linalg"... done (took 9.733869091 seconds)
loading group "parallel"... done (took 0.251150552 seconds)
loading group "find"... done (took 4.003819187 seconds)
loading group "tuple"... done (took 2.506755332 seconds)
loading group "union"... done (took 15.141177465 seconds)
loading group "dates"... done (took 1.968079167 seconds)
loading group "micro"... done (took 0.266179569 seconds)
loading group "simd"... done (took 7.258490071 seconds)
loading group "io"... done (took 1.498057821 seconds)
loading group "random"... done (took 13.946665094 seconds)
loading group "problem"... done (took 1.899712212 seconds)
loading group "array"... done (took 36.886185041 seconds)
loading group "misc"... done (took 2.133455609 seconds)
loading group "scalar"... done (took 75.154194234 seconds)
loading group "sort"... done (took 6.105528973 seconds)
loading group "sparse"... done (took 21.566030486 seconds)
loading group "collection"... done (took 27.072131112 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.453083069 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.282404282 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166027959 seconds)
  done (took 1.586004723 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.092057918 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.06026433 seconds)
    (3/3) benchmarking "different"...
    done (took 0.067342266 seconds)
  done (took 1.323179462 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.068428665 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142010473 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06599589 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065539503 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065263616 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065567318 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066615658 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066591982 seconds)
  done (took 1.641010092 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07330018 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06786365 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065752463 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066668652 seconds)
  done (took 1.375979423 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.065691814 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.12080362 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.06455877 seconds)
    (4/4) benchmarking "different"...
    done (took 0.064743622 seconds)
  done (took 1.415878817 seconds)
done (took 9.295321803 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.494489164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163481328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075601554 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093805335 seconds)
  done (took 1.962501846 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065767527 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074402023 seconds)
  done (took 1.252854347 seconds)
done (took 4.319057047 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.861553512 seconds)
  done (took 5.949695116 seconds)
done (took 7.043726069 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.190018874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076657948 seconds)
  done (took 1.368169463 seconds)
done (took 2.553437349 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.186477332 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.299991691 seconds)
    (2/2) benchmarking "String"...
    done (took 1.357339207 seconds)
  done (took 3.825873958 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.561861238 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.146738078 seconds)
    (3/3) benchmarking "different"...
    done (took 1.168170257 seconds)
  done (took 4.947241006 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.408439748 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.916051429 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.396274752 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.118909368 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.12430175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.605969516 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.273945746 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.772884708 seconds)
  done (took 27.288873275 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.1154952 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.398995451 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.381795806 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.469226539 seconds)
  done (took 17.525521999 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.554921502 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.440901881 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.445792982 seconds)
    (4/4) benchmarking "different"...
    done (took 1.5876955 seconds)
  done (took 7.224891587 seconds)
done (took 70.583828926 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.114580983 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.758817384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.161402698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.14484083 seconds)
  done (took 19.250890004 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.634371844 seconds)
    (2/2) benchmarking "read"...
    done (took 1.643800236 seconds)
  done (took 4.362873248 seconds)
done (took 24.770431044 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.438973724 seconds)
  done (took 8.509746408 seconds)
done (took 9.578883616 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.716595175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.148019336 seconds)
  done (took 6.934760994 seconds)
done (took 8.08930594 seconds)
SAVING RESULT...
DONE!
